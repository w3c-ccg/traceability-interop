{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "32ed15e1-3baf-4581-b981-87ee78078580",
        "name": "Clear Cache",
        "item": [
          {
            "id": "798cbe32-f8be-43e3-8891-b3fd258f52db",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5aca6e04-9614-4734-8f85-5d64ec54cb87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d289991c-1a79-4f92-8fb8-dcb42f93d4fb"
                }
              }
            ]
          },
          {
            "id": "6ed48a6d-9f69-4691-b733-464037fede32",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e789f8b8-a829-4530-90f6-c651d8c1fed7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f19b19d-02f0-46f0-a4d0-dc14abd461f8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8b43bbe8-86ca-47d9-88ff-a4f38fb3fdbf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0425aacb-62ac-45f1-a54e-e98466a989c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d320a500-4aac-4d18-855c-96b391baefd1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0c8858b-a4f6-422a-89e1-4ba2c3c07b66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb431e4e-2def-4cd6-bd4a-1fb7e43956a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e323231e-8f0f-4716-a19c-b14be66e1fdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b6b48e1-4e68-4ba3-8933-6882bcf46369"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0531e416-ce31-43a8-a667-2979df60816a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc8f8271-2807-41a9-ab11-6a6287109504"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47f51b8a-7052-4ac3-bdf1-a50f0217f6b0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "58481a97-19fe-4094-9cbe-305626214b67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8178f2f7-ac04-4f46-94d4-3225e1bacd60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b4a3682-30fe-4b42-b2b8-6101de08b3bf"
            }
          }
        ]
      },
      {
        "id": "f09abbeb-550d-4257-bd6b-681171331534",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f7910f15-727c-4c79-baea-7d0690ad3641",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b08a028-bded-430a-aa23-c029a0042e19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b719ce8-1b44-4662-a263-4a113aa25515",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f53a829-2f21-447b-adbb-68d443d29e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ca9a779-2cf9-4c38-8c96-4f14f81c5150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3c53db-3451-4dbb-af7e-999fcef588d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f22d6c2-075d-4fd9-8221-511588ea227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7fb48aa-3272-40dd-b46b-09927047e719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b29da2-1194-42b3-9a3c-d4642d7fbfc8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c11389-7c54-43a8-beb7-a3aa3b9a496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "978995d7-219a-4e14-a00f-b1f937343425"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfabf90e-5090-4c2c-b21c-3c71134abcad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e92de9d-5376-448b-9171-53f0608edf9a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33142d12-21cc-4234-86cf-523b8b8ef1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46880521-cc5e-4d22-b532-b22011494ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f469a0-0c32-40c4-bd87-62e88240f037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17d02a7-4c6f-45a1-9944-c96c2c4f0f1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0803b56-7af9-4834-a4c8-abc8e9f9177d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68b6ca5a-4aa5-4080-a4b6-44b2f7a1da2c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8605ec8-f899-413d-b867-1a71f6f415da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1cd89428-574f-45d1-96d2-c9ce1b4b79c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19de27e5-0367-4a8f-a20b-c08505c293be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f9e8b975-6094-4ca7-9ae9-6aa195a86d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa7f7c28-1a04-476d-995e-30a02d77d4fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a609548-b9c9-427c-a72f-252d61ff53ca"
            }
          }
        ]
      },
      {
        "id": "d2a19a1f-3b23-495c-8666-2e01c4aed3d0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0c5d782c-37f7-45f4-a635-b74e85e1733f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29710cf5-32b9-4703-afb5-87cf4066b9b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "be7e01df-f637-4b6a-9edf-fa7f330b2227",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dd0efa-f327-42f7-8b21-45877fa0d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f33585-edf1-4454-b871-c7ad2e49a2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a10494-b932-4186-9bd2-6968ef87790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9575dfcb-7dbe-4b83-8917-2313dd1fe29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec0134d-8d4e-4fa1-bbe6-3c20f765e56e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d94e47-dda4-4eca-9c88-ed1b3394aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2adff3f-c1e1-4b3e-985b-13b3159ed9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7cfe62-e9b0-4c69-bd4d-4efefd05c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b552b547-3209-44d9-aa0a-d5459bf2f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aaa89b4-2988-43d6-89b2-11239c36238e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c44e01a-c1eb-4adf-8173-36532dab608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3371ac3c-24e5-4e1d-a914-cfb39b590b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56497bd-0a65-4fa0-aa64-9a7c8aebe35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "836af062-0d18-4a37-b86a-511196ebd4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad96e9ad-a25b-4178-8957-112ded8e13cf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c0f497-ff23-40ba-8a41-6446f843be66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa55bcda-e1d2-4ec9-ad08-ec6189ba7541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa8c2e8-569d-4e7e-80bb-fa41047e8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a1d993-2211-4aa2-a4a9-2d63f874a83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59877ea9-8c01-4616-b8a5-7888755b5c7c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9835004-24e1-4201-813b-b5094e375798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d20c4a-7b82-4fea-88c9-4106f59822fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94702ab-88c3-4184-9398-fa3478150f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd25b8ac-d86a-4652-94b1-398d895e2697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644f7173-8647-4e84-8820-880f45e88623",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f195151-317e-430a-86d8-d0e9092ca24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ab2bf3-56a5-44de-8f57-6901f7d970eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83b8032-e34b-439f-b6f5-33333d52b401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "651e833e-55f6-49d9-a3ae-da47c998196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff65dea-4bff-43be-b061-fc9bc5ba3a73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da99e9d0-b4e4-43f8-b4b1-eba6cc8a8cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5d8135-878d-4878-b8c9-fd595899e8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a6dfdf-3261-4b8f-9815-70cac647becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4e8ac83-90ac-425e-b480-7b851f9896e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2791fb31-b5c8-4f4b-a7ad-ba37185b4d29",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e89867-ea26-4e5c-9d57-ff88f93ccd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5e5ebb-0dae-4b8c-b032-0bc2ceac16fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c5225f-1980-48a5-8cf8-d88e44e26e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fc53d23-f6e0-43b0-8b90-771fc4fae077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06400a0-a490-4387-a4a7-39d9372e9960",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b450d6-bcae-427a-ae6a-c3708ff07833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e297f4-a788-4111-920f-2409f60f749b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f8d6ad-247a-4c0c-b8ef-1955d523d16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883dd7b7-e1e6-4080-8cb6-85e27bd31087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b8cdf-2786-47f7-a9e0-45d58dd7bc37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d48dcc2-ca79-45ae-ae65-565326fbea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1b0ae5-1530-462b-8f80-ac451750d27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3815cf61-3c41-4fe4-9b05-61f4f861d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da3bbfd3-bd56-4e22-91c3-73ceabe37451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29c9c56-6edb-49ad-8c9f-8a5b4f42b692",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33a64da-9503-456e-9df4-7605f3dfc77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c496dd5-ffb9-4956-bfec-52b9b6d1526b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee1abd2-9233-4b53-9d84-771bc73a3289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b46a3cc1-d909-4f4f-8e7b-a55918d491d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9877500-f19e-4193-8ec1-498a580fb74a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d7b45-9033-4aad-9dd1-4f0f7fd9fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf5250c-a252-45f3-82bc-f757cd366da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376fc272-707b-4f79-afc0-c828632a034c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0780946-907c-413c-a104-12ec6d0d443f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0439c6ed-67b4-490c-a427-218d7a905b82",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d9196f-3f49-4c94-9199-79ef2ca5327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b358ec-34f1-475e-be1c-7cdb63e8bc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f077a6-240d-40eb-8056-2c61c1eba1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6fc1eda-bed9-4d09-a513-ee8da8c3634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba780d73-22bd-4a82-b9c1-21f5c59f40d9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974d6914-b9a2-4cec-b9c5-634ab4c485c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb53e17e-9680-4bee-a369-2407851d2cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f88b95-9ec4-4d07-ac6c-f98547136635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7beca21e-3f18-4785-99b1-221ca8be1f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5896237-51cc-452f-93a7-b8983ef3429c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda2cdab-85cd-4f01-a216-e743bf12349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de2d9bd-155c-4828-b5c8-d49dbc2108e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ccf16f-bb19-4899-a051-a87ec5248443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48aa80c6-db59-45b9-a290-7bf83fbedc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f95ae2-2add-41ac-a2e7-7f6082dc87a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517b85a-35eb-48d8-b83d-d72c0c444719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df09a936-1832-454f-98fb-04e36757ed0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8133ac42-90e6-4a65-8fca-614e6233c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f9269e-0175-45f0-ab83-dc812cd8e874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d001078-b472-4c9f-8fab-84c8166f06d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3821f83f-ce82-428d-99ed-988035da182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc9455-0924-4b59-bc7b-18ba5cae5a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25792a9f-cf79-4c4f-9676-b99475b05b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4e04770-82ef-487b-9a8a-16571ee66347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5f92e9-ddcb-45b4-bf0a-e3944019cd42",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a99f40-bb18-4f4f-8562-b9e410f524c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92544519-ca61-4fd2-9fdb-a3be4ae9857a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c72fa9-bdb0-40cd-9f69-afb46d5fbe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce67f9b5-e9c1-4ab2-9611-7e54d9f52bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae68e64-3bab-4a22-bbcf-9c95f4f92995",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa3f234-4a91-4e7c-aec1-3ba4a324c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7dd6830-2ba8-46cb-b002-713cbfa06415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9d3d3f-96fa-4b97-9835-050d28351b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29510e26-f8ed-40c2-803a-a4bebe5b7516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a25ce78-f28d-4bf5-8073-f1d96abdd507",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d30d68c-d369-4bad-8dd7-575f954747ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2fbb48-0d99-4e1e-9328-179cf84a1b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe032f-93b4-4d00-a34b-4dd4b5127972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5dfe0b-9270-4035-90d4-e1db669b8fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae556c9a-9cf9-414b-92a7-26ee8ec79436",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee46dbf-f457-4d84-9288-278bbfa0be9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc493cbe-12de-4232-8427-c2a0927a2d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e13cf28-317c-4b89-baaf-6d701548cc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b362f3c-1495-48cd-b723-d175c86025ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ed5c23-68eb-469f-b6f7-ed81c80a856b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137adf50-c4ad-46d1-bd70-e02afc4dae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa44f80-c995-4f18-812a-8583d17d62fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482681c1-9d0f-42f4-a86f-ba86ec43baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e7544a-8595-4d23-a275-6e821e1ac1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985e9869-81b7-4ce9-8db5-cfc52c65549c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac085633-4e90-4cea-aea8-b915d6ab4626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4a194a-f360-4abc-85b2-8e4588667fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15815bba-b655-4c9a-9c22-4b61a1798236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0124a117-09be-484b-bcc1-2dd33fdb7f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1eb24-f4d9-486a-916f-98dd281c314e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eefd26a-d468-491f-accc-ed7e826169b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3062c-050b-45c8-a9b3-36435ffa4f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9280189-dd15-4552-ad5a-a528de6c592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "68144428-5904-4e7b-af72-3ca6e4513ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf023d17-56a2-45f3-b06e-43fd665f1969",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174d4ad-af9a-436e-a60f-ea00711d3ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad64c22-a3c5-4726-a730-8ca989d851ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9934fe2-b607-4204-86a1-39eaffb541ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fe7766-5626-46c0-abd5-632b3f8bf9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fe815d-87ba-4e45-b549-281b233f789b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8845e5ef-b387-451a-ba10-3309da3c984f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad41649-d515-4999-b208-8c9239b11a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf8fb02-fed8-4570-8bb4-26d82cec5883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7017bebc-a945-47e8-b4e3-f9f110d663b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a85ebd8-b7d8-4a4b-afd1-59f58452b4f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58e7274-5c87-4abd-9c8f-2e89c0261f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7b1baa-b340-4d96-97f0-76e4379dd6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4c9af-8d9f-4526-9bd7-443599b9214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d65ad08-0a54-4ec9-8499-ac5cc347d9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da215f-2b3c-4d45-be9d-b24a1bebaf2b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f61722-0e93-4f00-b47f-1eceb1209997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c143f217-43e9-4bd9-8711-9125656341a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7f93c-3ddb-47f3-b115-548950c2fad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4008eb1-82a1-428a-a202-2a63ca6063d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c5c9c9-cf6e-48ea-b35d-ffcf5029bb97",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cef91e-6b00-4542-959e-954014a66075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e689b70c-133b-4bb9-85ac-38465ecf438c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8b3b16-9e1f-4e88-ba48-2fcac48f0a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c706956-a169-4fc6-99ef-9a81af1e13e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c579b5-5af4-4168-a91b-a5edaa9b64e3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dabf7a-f42b-4fcd-8fce-0aeb41380dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d949f16e-7869-4028-a07a-e0adb940ae68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6bdc6-dc3d-47dc-baab-8dc93d6c74af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "28428ac0-d1aa-497a-8535-8a5c2e168adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177b9d4b-d067-4bc5-8ba8-e82a7da76123",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e9bfd-e6c4-4832-aef4-8f68d35c39c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70971267-9f93-420e-a151-d7017dc6432c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054b5089-f4d3-4bde-bd44-641ee4e10c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2587f129-c8bf-429f-96d9-a4bdae448882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d322115e-4035-433a-8024-f6a7602a1e7a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a26767-569c-4019-a2e2-a2cd280c80b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff10bb6-5cd3-4faf-b488-81cbd78443b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd5d036-796d-4bb9-b1f6-bdc84b77e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae6be66-6ddc-4456-8ecd-3f64a0e205e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654e93d8-25de-439c-b835-abfda3d8ff65",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5578af84-f95f-4590-8a22-0a6dc9dedaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6813e620-f219-45c0-9dd9-7e8a7e2a9bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13ab1a6-c021-481c-9dca-5ab476ba31b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdb6bde-7d8b-4672-bf48-da27cc1d88ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814a27a-8e79-4724-b1a2-c1cbd7130ea0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf65141a-e272-440c-b502-b350c8efc094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15ccc15-bbb2-4f0e-b2c4-4d3c61b97f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e004018d-0340-4111-ad3e-42e713aa69a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e65e5bfe-e677-4505-a8ab-aa4a61ed2f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e1ef94-b494-4176-a9ac-88ea6bbd8c13",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec82a32-39e9-41fd-8341-18cf2535d799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77d996d-0b7d-42d4-94f0-b8dfb442ba58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f06c1a0-e42c-4b90-91dd-e9f58dad59ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a30cba55-7a79-4d3e-9c9a-577b674e6710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60fe96e-9161-46ab-ad96-d7fed791ca0c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fe9643-b8de-4d3c-8d08-4603deae6a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "084220e9-80bf-48a3-a30f-bb7f7d7ec189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccd3994-5487-4ec2-9ba2-556d0d0aeec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e0081-83e4-4b4f-9ef7-e7f2524e0e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69598353-b7a7-4204-a8aa-753837f30b97",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67960068-739c-497a-816f-06373661eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e700fe6-a77d-4223-9e40-d92d09ec4d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e297c0-024d-49d5-a937-5d2fae2460b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b790764e-088b-4657-8ff1-60aa3b8f0b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3367451-e4e3-4386-a745-249569c585a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057cff4a-5d12-4214-9d42-5e7a4359f5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987fe3c3-0dd1-4945-8c25-467e3bb26382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b877f2-2a3d-47a2-91ae-bd3b5c0faa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d4a8b8-0b52-4150-b0c3-186680823dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f746c-acbe-49f5-b533-e7b2284e6a36",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b0f57f-c739-4660-9688-87abb20fbb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119e1bcf-3088-4ca5-a095-334ecc5a470e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a5100c-9f4e-4ed7-90d2-25630a5f5543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cad86ad-4571-43d6-ad78-a7f5fec5b4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e34762-4af1-4a90-a12c-a22424a31d38",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014988f0-b1e5-4b86-b1bf-ba1afbc8f539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c71b2d0-66d5-48c3-b8dd-9cd72c10b732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0db76d8-1537-4874-b266-68ca8aae98b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11987e6e-6655-4cb9-a3a3-a0400f71ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675f6b09-ca96-49bb-a677-c0d45e471934",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147cc425-69ad-4bfc-b5f9-354df6dd7f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa466b92-3c1b-407f-a5d5-c1317ad835fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c693eca-e5a3-49ae-9451-0cc6565755c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9decbda6-8215-4c6d-ac10-5dc2f9a77150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5038d3-5874-4bfb-a7a3-2ca861559873",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b90e1d6-5252-460f-b179-ded2c07c1f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806fe88d-98dd-4ce4-afe7-b45dd5b110dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7ec55a-29e7-4514-8c94-c7784f00549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "073bcd59-ead6-4787-945d-c2ef5ce5f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47750b13-22d1-4818-b93c-1360e86e4af9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e860f-4691-475b-ac3c-2a1f1fbab343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981215dc-f52f-4aa7-8e10-5edfd1e643c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8208cdcd-a6e5-49b8-89b4-d6e58aa71cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51f3c80e-f03f-4eea-b69d-0e5fa746f1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a11f2-3894-4872-b17c-54418f4181fb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5d0b0c-123f-42e5-ac89-f4b52964e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b1b9dc-9860-4b2b-9c82-71f979c0730f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2e956e-37b3-445c-98b9-359c00207492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e14952-f3df-4f26-a2ba-008ff3621172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27997090-e256-4e9c-ac93-7bb4648fd5e1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb85fb-3fbb-4599-a29b-a4accef8b010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd8efcd-d095-41c0-8c2f-eb3d52a26e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08f3222-a46d-4c4f-97a8-804a282fa500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d334cf-0cad-462b-aefe-ff452ce53414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c90cd1-e7cb-4ee5-a9d8-1002d4509796",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690516fd-865d-44d8-9683-b7d895488cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41b3fbb-0484-434b-ae78-a0aeede17073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46d174-2217-4ccc-940e-a8317e047fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28514117-3c82-42dd-a612-756fb2dfa7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308e06b8-704a-48b0-bdea-2c58118362be",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8a7571-040d-48cb-b392-96732e3928f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d11870d-c542-4153-826b-1402fba41f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed52b2ba-441a-4e52-83d0-5bacd8bab8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e34126-ecff-4f10-a800-40731158b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9e0e86-ab78-4d42-8bef-574d4264ec12",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4f83c3-c5ac-4973-90ed-c3de8b2afe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e7a1dc-0bd5-4e41-81a2-7727df16af1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d8cf27-646f-49d5-ba5f-7b317cf0ccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfccb069-a647-43d8-b5fc-6e26ca461881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd209a09-1a7c-4d31-b456-304a35abdda3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de153033-3cc0-4591-b444-9acf79e48273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c29a8e-0e9f-4bd5-bba0-cf0dcaa77c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323085c5-7db6-4b9a-b85a-d5f613c4f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a01adfe3-a343-4575-997d-8ffbe52807e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a28831f-ee34-4aa3-8a11-b4c75224adaa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caae22e6-4975-43ef-aa27-16301ee761b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b142aac7-e508-428f-9eae-73ee115e9a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a58667-f591-4a5e-8947-ad11d171e966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8e2d23-1e5c-42e8-b810-1bdcdae7dc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d5c923-fbe9-4a51-b31c-88b5eb6af060",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e393de2-472d-43d9-9f65-e441e9a9b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5513aead-b31c-41dd-ab1f-991173515b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfdbae7-c6a4-476a-9f2a-50e1ccff54a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9d1457-99c2-4708-b4ed-fa2f0b6d9e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3253d256-f37a-449b-a99a-5ab06fe8f667",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6079b0f0-d388-46f6-9af9-f257dceef837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab31ace-b1e6-45d6-ad73-2e77853c4cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b69086-d8f1-43e1-afe7-6abe37d72214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80221e7e-8054-44f6-a869-305c92d46bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46fba5-9b84-46fc-9057-006ad526a5e6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23653c5f-5830-46be-bc10-49b75df60e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97a9c14-5354-4018-8256-6ce6a29c645b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30647778-511e-4c5f-a083-7cb50d4082af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e824869-7c75-4783-84ff-2517275663df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2db37f-75e7-4116-b178-17673cded013",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27c9437-ee7e-4e85-a914-c9b665c38253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc7e05c-14f4-4922-a77b-8dc1de8b72e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e36ba6-f6e2-4cf3-a9e9-dd4d4823b52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a95c92-e62d-4421-b10c-fd07e9175344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cab82c-b71c-4147-a6b9-eebb7f39b883",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc100dbe-44e7-41cf-89ff-9c0203f8f395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3783b93e-23a0-4436-81fe-8663f77be4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb35906d-4bc8-466f-993c-bc1cf110cb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0049af29-9940-498d-b5c8-cf5dbfdf75bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0187951-3871-4e01-956a-5242aed2ae73",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652fe434-29e0-4af3-bdb2-2b2c438a0c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d40a0c4-c191-4235-bbee-c5a966f00a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89e577c-ba60-40ee-baf5-52b641e851b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc3c1d6-5953-4675-9245-cfb5d40e892e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd3d22c-d087-4d23-9a2d-07a9c86713c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea13ca5-5adf-44b7-a1d1-a4772d29ff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd87c9e-5854-4786-9ad7-4884b5c0810d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb372459-7339-4d0c-999a-b34da441a4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abcf943e-86d1-4b1f-bb72-cdd1c2c5737a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db322ac9-e5d6-420b-abd4-edc59392e672",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5d0a7-655b-47a2-b735-bc26e36dff1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eb29ea-8529-449b-9c99-98fa2fba2fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e94d5-7d2b-4d65-ae7d-e149ecbf9159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "103cc960-7583-4e99-9a19-f74b96d57ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381c9403-143c-4710-8808-bcd3931d04c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf2a707-83df-4605-9009-3f6ed0e42df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7aea1e-90dd-41d5-b7a6-6107d22902d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e948b62b-e580-4982-aecd-feaaa4bf3b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cf0988-c7ee-4f01-956b-d95fe3946424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4d1ef6-be12-4a34-a3fc-798ec4cc15b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e1ac52-b4ad-48ad-b2c6-62323bdf638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f182cd77-d651-46bf-bb11-c2982f2dc345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e2a51c-ff6a-4fab-a2ac-9b014d4fbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95c8a571-1dfe-4b31-9dc2-aff4195f0b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268922a8-8b80-48d0-bdf2-dcd8684c5aec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd9c89-0de8-478a-9e7e-94d22e9b8c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690178a1-3dc1-49c6-aa5b-c4fe5ccd7f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c84de4-0dd7-4eb4-8e5b-5e7625e8cd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1f4cfd-cdba-464c-8fd0-9267ada2f48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa0d50-1e66-4726-86f3-6915ea7eb235",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63694a53-109c-4c62-900d-a958c5ce220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b49011-3ce6-4f8a-9489-157737792988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323d8824-229e-413a-a8e9-f5f82b2758a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b33980-b21b-4e27-afab-4dbed8bfae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225a6540-4ce4-4312-843e-4ab20a9af040",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f2dbe4-11d2-4008-a1b6-c00d3646108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62658e1-b482-4d26-ae7d-b813b443bd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa03e34-e1a3-467d-be7f-ff086f9e64ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e05ea8f-9260-49fb-becf-4a4c15564fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2720454-0664-484e-9774-e52533921309",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9fc29d-aee1-41f7-bb41-e525cde34dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a2a972-8d04-4305-92a9-6ff28e1f6808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51e6afb-994f-434c-88c1-9c0a457ccac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b44af74-55f1-4f11-93e6-061a59151dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1128bcd8-cc93-4cda-8fd0-cfd57325cf46",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8d0942-122f-4c95-9bfc-a4ee4502d19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c723e0-b963-4ba3-93da-0563dc673712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadc2645-1f0f-4c07-95a9-e4531053d3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc86cd3-d82f-440d-9a55-06fee6606b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ad8496-ca3b-4123-9c58-9dd39d2438fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c446904-aacf-4fab-ad32-7742b70af3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c61916-287b-49d2-a43b-b3591bf6d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267958c6-1ee2-48d5-8a09-a0146dacc202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c82cc3f-90c3-4842-9944-14b0d2f4dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6288fd6a-c6be-4af7-a2f6-314b4c487e2e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a4ee8-aabe-4c43-87e5-7ac1cf1322a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc06b80-48be-4708-99f6-70abaae59c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec667621-e635-4b68-86a5-75d338886b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6831a12c-e4b2-432e-9548-51073b6b8e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0ce35d-09b7-41f1-92f0-fdff2d4983f8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00156f30-2732-4a1f-b50f-3859b7da0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c50171-639b-4f20-97b3-acc577405521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1385e1-584d-43dd-9c07-ae79f5b59c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eeab3b0-8541-4c53-9409-9be3afacb908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1158fd-fbb4-4acc-b05a-7bb33e2c7f13",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d052f0e8-f508-4a1a-b314-0f76909fdff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8cd8ec-f2f0-429f-8545-77f59c0f08d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197de5aa-3e18-4309-a1fa-37d8d3244f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a23a05-e00b-4025-b102-b85b4a20ca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090f2e3f-ebc7-422a-89fd-a36aeb5420ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b01a65-ebec-4b3b-904e-e4ba8ce49e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293b5882-8399-45e6-ac3b-ebbbab036fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5053e60d-1394-4f05-b16f-67658c044ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31d99d6-0ce9-491c-a0a3-b4c6d756579e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25317fd4-fcf0-4c7f-8987-14bf98170469",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa52aba-9a44-4ae8-8c62-7086b3344062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23d55ab-74df-4834-bac8-536ab6e98b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d9424f-d1d1-4f88-bd41-e47d6138b76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42d03ff1-b5e2-4f3c-8006-e6ff0736fce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d868acc3-aaf0-4aac-86d7-8f48eab14813",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd49ba90-105b-422c-84ca-6f97d8dfc26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc20724b-1f68-4709-87ea-fbeff335224d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68bebe9-4a81-4415-92cb-a38947944c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19317f9b-0422-4dc6-8837-9a1b8bb0ff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b993b1-b275-4def-a6b4-51856658b063",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d74d78-986a-4872-8b3a-1eea4c24bfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ee9a76-ea68-4de9-bc97-bdc154cb67d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d24b785-5bc1-4c8b-81e5-47689d5719ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e52efd0b-1b03-42c9-a3bf-932f51d46336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733c518-18b9-40e8-8610-6873bbfe06b8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df64180-5cc7-4d22-95d4-f85a8a821c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac465ec-2cac-496e-932b-612f9b22ff37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b2ce54-7285-4d96-bb1a-862a51228e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e659ebee-69bf-4f4b-ab16-d2d89deb7aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b59120-4b2c-467f-af87-0914e0860404",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c725bc-b149-4c10-a421-ee614835165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788d9afa-25a9-4831-9f3e-ef90679a6a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390fa132-49bc-4dc4-b347-acef3f7ce69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf77dda-f6a1-4e1d-887c-21fd963a0416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca42267-09be-4d44-846b-9ac7b554caf0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738e53f-6848-4f04-9e83-a1cfa6b557cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f135a58-23e8-462b-8c79-2bb79913ca91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac7048-6453-4f0d-a20a-3c7e2254999c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3142b1-8ee6-4bf1-83b0-6b21a567347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a108e88-7dd1-4674-b404-cafbb3636347",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77d55ad-7f45-4a92-969e-bcd4863952e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773d5266-b7bc-4b76-9b8f-28979609aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d817494-7038-40de-959f-e12cd58a64ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbcf248-5bea-4c4d-9275-18ed5ba58549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5b3eeb-5d90-4d27-8e17-9294ce7d719c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d50632-5a41-4883-a832-de9f3eacd0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d422466-7718-4b6a-8098-62a8f31002b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6786f7-bc41-4e24-9f29-f601df17baf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c34a603-5546-43d2-8a2e-e39c67fdfeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5a3efd-26f3-4719-a74d-9becd7b4ea9c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a59fa2-06dc-4cf1-b0f1-1891a01aeb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b25b03-e5ee-4bd6-9898-18b0b1d30647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3a6c87-f2a0-4e3c-aa0f-f115945a8a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbd42e8-8867-4dd8-8e58-bf4bdd78d5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a371005-9483-4bb7-9e89-dcb386d5a9ba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d46d3f-fcd4-4123-b359-42a58f275055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d127d5-75f5-45eb-a3b7-3d1468160b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319e0d60-538c-444a-8b62-ecddfa02ed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe693de-a4a8-482b-8ecb-e888d38794a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c975a380-f3f1-4ba6-8e3b-b5946cddd962",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbac846-f68c-430e-8db4-0571197551f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43eb288-d7b3-4c2a-9a84-d3eb240b9206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5fe6ec-a42c-4448-a21b-e70846a8d572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42df985-7e86-409d-acc1-88fc5ac92445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f478f0-9d36-4da1-9a3b-c71ac277775e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27328a58-3b43-44ca-967d-a3406b629f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a1931c-da16-4002-9983-6e5228bf8383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4c0c5b-d137-466b-85d9-83d3976c2b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25025e1a-32d1-44c7-9aa1-0ade614ec548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a53d48-4e5f-4c12-abff-211ecdad7af4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918dbecd-236c-464b-8047-7f7c3c133ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42cf28c-b538-4c0b-b9aa-59a5fccad5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96381a41-c31d-480e-a993-ca5f50719b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "262a2a56-e3b8-49a3-84ff-6443f0897617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a428c38-388f-4c77-a877-fde7d1466d4f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7ef341-7055-4d87-9fea-c100370bc1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb7d6ac-08c3-48cc-b1a5-b6edc277e23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d979cc3f-420d-4691-8e65-c7681510ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab352b4-419b-40b9-8b91-1b39394fe4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b576a58-c170-4cec-b367-0746c7e81c04",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b084b3-7bf5-4a28-a8f2-eb44657ebe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce05f9b0-8f92-441e-8c81-6c0d640a5460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced4c3e0-16e6-408e-b97a-3240d36ac6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "105b6bf6-3e70-4060-baff-1a10a1704eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f49c218-cf45-4b96-bd6d-a9ea94bc6412",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807542cf-af6f-4a56-bf57-d3e36d07653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b990e4a2-5d6a-41a3-ad0e-e97039f4159c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fea916-b5ac-43ab-9886-bb637e941425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2c786f-bfa1-4fdf-b949-ee3098b92306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd21c7-882c-4216-a66d-348569bdc03c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbc075e-0360-4444-8c3c-01b5289a1564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa4aa28-2ffb-46aa-a694-47db7b2e07ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c147a552-fdb8-49fe-a65f-be2276987622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65f4872c-ea24-43e7-8485-f030b44b0843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f6cf76-d1be-4e80-be51-da0c6d9467c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b21a263-8bb4-448a-8435-d8f07583b23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b4ec57-2a48-43a0-b7b1-08393f434c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9b164-087b-4d87-a9a1-a4c840628f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4987211-3270-43c0-978d-1f3478d8ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89bf2d1-1deb-4fd5-ba47-5b660b488c66",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34f12bf-994d-4a40-a19f-b75187a00ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bebfb10-6516-40f3-9971-8a298d7a4b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7655c98-cb3b-46ec-991c-a20137e529e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b95e9d26-7430-4d26-942b-7a2bf5fecd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753c90ab-4b63-4ec0-a61e-bd2b2fbeea4a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb73855-fe95-464b-8b38-34f48469e4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad9c4d1-a373-43ee-aece-84ca31322a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6813b82d-495b-4e22-84ea-1abcb6170fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d4b9f2-d007-497e-a945-d5335d808b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db7957-0fc8-497a-8576-e5d3de0c1d8d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009a6c02-1021-4b88-9ba4-16890e64f28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60dfb6f-af24-4eb5-af5a-1e9440106599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db57ea-8d4f-46c8-b06d-74e4cb4f6177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "07c38df4-c5f0-4298-a57f-b4eac992028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527107b4-be53-43c7-a061-591eb5f98191",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90fb0ea-3da9-4fe2-ae31-180288e62272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcc2247d-2dc5-412f-a3a3-89b3a2e01d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f63c7ba-c734-4c9f-a93c-52334c397c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d5a670-d4df-4bb7-85bc-b05d8b3c1edf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2f68338-262f-43bb-80b5-43d97f9ff73e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b200bd94-d52b-436d-a877-3e4568e1c824",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd70e91b-4842-43c9-9ec9-56aa83afa026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "423f9392-c9a4-424d-a83c-e2cf31ea3e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4932f612-083e-485a-a51c-fc0f32f7d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a52a442-4e3d-4fac-bd03-52a077a90c68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f13e67fa-8521-4ada-8bbc-01d0428f5398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2e8b460-b15f-4cf1-ae38-231a35a9f9ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc0f98b4-c1fb-4a52-99f1-0f5d73bb1f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d68f53-b0ce-4dde-93d3-a57b5c09b63e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2550f418-c2a1-464b-ae80-41ce5fb30672",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72412635-c237-4f7d-abbd-694cd6785397"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d71cc4b-0042-48b0-9ab1-41e1f74f9f3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65ffbda0-597f-44c6-bf7b-716801a0a19b"
                }
              }
            ]
          },
          {
            "id": "9a20f182-41be-4a69-b7fe-2c6fd7383ec4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d65b818-76da-4150-a8a4-76f00e102cd6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8e993f5a-9fed-43d8-b248-ec5cc9819a2f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f396fe42-ba4f-4e07-95a5-953d8f447ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "80f4d55d-6e8a-4a5e-bf30-848c2ee717a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3da608-2b93-4ecc-8236-627bd0ff4bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b35a648-83db-4a00-9872-a8293d409da2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6608593e-6c3e-40e4-ae29-e4fcb0f8f4d3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f546a3e2-13e5-4e5a-9643-acbae8f864ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "babd247c-df2c-4724-90d9-05376ee24a3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "811dc13a-749d-4114-ae4f-a2ce0f9de992",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d0ef3fd-fcd3-43fc-9c3b-1cd77ead95ce"
                    }
                  }
                ]
              },
              {
                "id": "0c0560b1-f928-4d86-986d-5bbbe7b73c4e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b55285-935c-4351-8273-4e2812937b92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c577731-0baa-45fa-b9e0-ecf7ae18030d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4b75a3f-ba71-4b35-aae5-4b5cae63d6db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86096ca4-7e37-48a4-b5a3-c2900f137978"
                    }
                  }
                ]
              },
              {
                "id": "25df7195-259e-41c0-af6b-7374933be969",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "432275ab-ccb8-45b2-94c4-ccf0295e06ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19888812-0f24-44e9-9083-ed013071badc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad1f13a4-74a4-4d81-acea-f0e143bdb28d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9f8cf85-1463-42df-9151-d3dd76b032a1"
                    }
                  }
                ]
              },
              {
                "id": "54c4ad74-805f-4fbb-bf2d-0c058bba1b56",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "200d303b-a4ce-4711-95a9-582ab96daaba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc7dfd81-18c4-438f-96c1-9ca183c5487b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bb7d9e5-5125-41de-9008-0b8549c589ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1788d6ce-7e53-4fce-bb9e-d0aafd4bb0a3"
                    }
                  }
                ]
              },
              {
                "id": "ad0f0cf4-b95e-46a1-9e96-7e937ea63134",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "031a51bf-33f1-46ce-b082-f5e9f678c2b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "945aed75-88c7-4940-be27-4e0ec6434cfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846cfef2-b76f-49f9-914a-a704cc8b75b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "abe1f77b-0405-45df-8965-acb871e29183"
                    }
                  }
                ]
              },
              {
                "id": "11731aab-4865-4f1d-b1f0-9166cba697e3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9889094c-d96b-44e0-9fac-e208d1352d11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fb58835-9148-40b1-8f51-19ce2dd4b23c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e30d71e3-76d8-4fba-a589-695e4d62c539",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c97fa50c-1835-45b3-b9bd-037f3d9495f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3fddd00-1aac-4cae-9555-133cdbe48b31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36ee40e6-2565-4b9e-93fa-adf3020fb64a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a2595ae-dd90-41f5-ad5b-ad3fc7b872b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cea4ffe-f8ea-4e7a-8a65-945a213e95bf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d804e2e-9040-4bff-b7e8-0e162ca5af61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "decb2c71-8f26-47be-b21f-90bf7ccecc0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3e4a9a9-6bdd-4631-8240-cacd79698241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3162748-a539-49e7-aa1a-57dee0e4c072"
            }
          }
        ]
      },
      {
        "id": "469da37a-423f-4ec1-89cd-bc4e34bde1eb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a3407b66-a510-4d16-9e35-80f00aceaa0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "914ba760-3595-4984-ad4f-396f4d4b4c3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27611a33-57ad-476e-9010-0778ad3dda85",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c718292a-f461-4bf3-b99c-e2fd306bcb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8514396e-fb16-421c-8234-20aa7bb29377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47515e4-e7df-4670-9b90-831faecb7b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3421590-8828-4d1f-9700-6d3ff1db5ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6082d60b-fbcd-4faf-8712-f848f3c3f5f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05d7dde-7e5d-48f0-b137-90cfd72fabff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82969554-9b45-4c40-b797-87ad7ab43b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da60ec1-7cac-44e0-9f6b-5598f93ae96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d8ff26-926b-456d-9f81-01faadd9a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3b201f-1d08-49b5-b43f-3c40f509f262",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e61141-8434-4939-bd6a-6c6e78b5401f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3199022-26a2-4487-a5bc-eba4d79a2563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da842ae2-75b7-4ddc-a293-1656581b67d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab4b0f7-763d-4e94-9a47-05735b690249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306bcb89-6913-407d-ba1a-f996ba6fa6c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b89903-ff90-4391-ae74-18befde3b038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cc310a-2c3f-4404-b4c8-f829fbc123ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984511b-078e-4d70-9f5f-c8742bdb565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4cc8d2-87d5-4fc2-88b6-058b411e4175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85504de-cd3c-4846-878a-37b7e93e2cb3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab0003d-e0ec-4fd1-a97a-cc34faa3e688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a298591d-18fe-4dd1-ba24-41d15cb19f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e181fd77-db09-475a-a952-429e0af0b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "558bfa46-65a4-4517-b1dd-81f3a32c3992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422e6e22-ad6e-4c0c-a8fa-eb3f063a4c0a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3794ef9d-9df1-40cd-b21d-942df27c6bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a8fbd9-0d89-4ac0-94c8-d21e79109708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98366077-e0fa-45d6-b45d-7317e64ccb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ed7367-f552-4eed-877c-16b87b8c22dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c710f-02b5-4a4e-902f-d84ba78b21e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a759b6-edb8-48c9-9402-153542a1e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9efe58e-96c0-4847-acdd-71acd95992ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2bd6d2-2be1-4ba3-b940-16d65358a6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "62666bf4-10ca-4f7f-aa9a-0f6294889925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59df50f1-79d5-46b6-b0f4-2b591bcc4731",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47487df2-1d3b-4372-ae2c-ea4ef8c1581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ede1f6b-2020-4440-8dc8-492f40ea15a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a02350b-87a1-4f40-b4e2-7558732e24c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b1fa18-1d4f-416c-aead-7cfbc9797c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326b3142-0e00-49c6-85d7-fa442b83958e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f58811f-e270-4945-bb4b-05ab25908487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732fcfad-c257-43a9-9317-26e8ed1f9041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87b0ebd-9eea-432a-94d9-b933b6468c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6173b846-d965-40ef-8880-7602c0fb699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df38bc9-b6fd-4bcd-82e4-4eb48a117995",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4bb3d4-f1f0-4a4f-80dc-2f6ba15c17a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238ca826-5b93-42c1-842d-312883dc5c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27b454e-51f3-441c-90b6-eec42ca780d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a2f2f1-54ff-4ff9-83fd-608042e35f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f08e93-19f6-408f-bb67-72258a9e6649",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292a5378-cb52-47f2-9368-814b00b40ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc681a22-17b3-4627-bbb2-c6540a00cc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c1f8e-02be-4d5a-86c1-03d5141cc17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7be6dddf-537a-4498-b323-3bf3d0ed7dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0287dae8-530c-440e-b124-c64a4b7debba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7a1fef-520b-44ed-82bf-88413be2d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e8beb2-097d-41a6-9118-e58b82136960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e78324-68e3-4f07-9808-c3f217a74fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89a29cdb-7e64-4147-b34c-afc3f10c3b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3e5875-67b3-4743-af4b-163089288cc7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655ec1dc-7157-4868-9934-5a87516b236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190e7864-086d-4295-ae1a-aa082baff3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6732926-1265-4987-85e9-e4bbbec4565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fafc77fc-1e23-4a9a-855b-c1aedbefa822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2467dcb7-b630-4f49-8388-4335f9321834",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15b6397-a4ae-4060-934e-947d6be2cb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b97203-46c6-4b1c-a624-ca818d0d97c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d51fe-2c00-4a84-ade1-74490b8825fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ffa892-7311-49ab-b398-4fa9a4cba947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf1432a-d825-419b-9fa1-522c56fbac22",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930a4d2-d434-4098-9e47-9393dcd2b201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7483709c-4607-4fb4-8f11-e79a1a987be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077ea9e3-3d69-4b2c-86e7-5373833d7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5248aa04-103e-4b07-b9c8-d47082495e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1c8a4b-af95-44a3-9ad0-a5b958ce0072",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e18d301-e87a-482b-b764-67b941b9c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9727e8d-546d-47d3-bc77-d4c1b2f3cf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5c6d84-d60c-4195-a480-1a2c033a39df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "73842e11-1316-4037-9568-50867806a3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f1feb5-e924-4377-814d-39304e7a4c85",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f10130-9ea0-44c3-9842-3be2577b2463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549f0023-16c6-4da5-9857-999785a27f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c796e63-b88a-440c-860a-0ceb649879fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1501bcee-1225-4d32-956d-8a4e8a59435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1084b5-97c7-40c6-8db7-19e067f53214",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6148e75-8c38-41ee-9cfe-37fdb2e7772b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aae5cf9-4722-4464-8a6a-a0643a2cb591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4226b5-5cc8-4c63-9cff-cbe3459ec39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e304f4-0f3e-411e-b328-9c590ab9e464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d05098a-aa3e-4583-b162-094da7f65d05",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe8066-f4e8-4336-a0cb-b955e1a250db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f04be0-a222-47ba-a10c-ea28ceb4853f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1291d6a4-f368-45cb-876c-8d2cc731a8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c94297d-d658-4149-9b1c-48675c3225de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468ca033-9c30-4066-84f1-05f0ef686800",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cec724a-0982-48e6-86cb-65fe67b5ec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f57124-4155-406c-b1f1-40f0552df843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274513e0-7013-4d20-b803-8f7b7cd5f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0814d5f-7601-4b6c-9fc5-44533f74b3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c2686-394c-4c5d-8d31-a10dc7e1da03",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841f0559-4621-4293-bcf6-8530b5baa32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c842c42d-e43e-44c4-9d7b-4b718e7ad6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7a9f2c-f977-4d80-9651-3bea2d53f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc94463-1580-46fc-b2cc-1610bff94965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db17e2-e751-4203-85ea-c3478fdd2992",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0640bf2-bde4-4a46-a96e-a0e9338df96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc9e0c0-4cef-420f-be49-38422f822370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b600743-84f1-4e93-b02a-3cd8bb8689a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f33930-e2cd-4c4f-b043-cb5d0d613cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f13471-d480-4389-bd18-69dcf98c752e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4332bada-385f-4b29-bf91-202ff27200c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd5cb33-8a34-4c34-ab28-35cc3d721f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7c3ac-5b0e-4bef-9189-1e5b9edcae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6608f1-a219-4a52-ae27-5b918ddd1b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3c1e96-a0ba-48ba-9d25-076de18753a3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e270cd-0fe9-46bf-a71d-54b7d1a7110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb16b3c1-a3b6-4ff5-8355-91ded0b30db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776316bc-935e-4165-a8f1-d9306dc7d3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2831b61f-2231-41f6-9ee5-5c3666906bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a771456-7a85-4d6b-bcf6-a5579598d609",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304fd96f-c3a3-43dd-961e-bf1091e66cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c640ef88-0f1d-4fc4-91d7-4a310c531cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eedf3bc-f2d8-4c99-bede-13dea428826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec830ac-f447-4c1b-92c8-20f89e921690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb1a6ca-c985-4459-8089-16a9eebf31b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7e2875-9881-4e19-a7f6-b22d37cd485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a06af95-2dbb-47a9-a551-e48d37ba9254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d8e123-c8a7-413e-b1c0-4db60ecaf98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5bad3b-582b-45fd-8c87-a61e3816c454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eef318-67ea-4a35-8577-da535746b243",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2498d800-203f-46de-b414-cc166f29e8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0a37d3-a31d-41ea-9e7e-3a7f842c4bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a28906e-57b7-428c-9a5f-51af1b01822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a363b5-9c4b-4db6-acab-416fe3ccfecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6b0c6c-6fa1-4a1e-8937-cb3169604f13",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cd14be-6018-47d7-b507-7b5b4b86965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7f3f59-8ec0-435a-bda9-eb8038822bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29b4337-f019-4c05-ae8e-9bd3484f081a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "743422f1-09f0-4c51-aa40-2206f4d2c121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a4c11e-406d-4467-b6ae-56adba317bac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f7f8b5-3f92-41a1-a093-b62875215c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4d558-29f5-4a8b-b4df-454b410ac6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5c7e87-568e-4725-88cc-6445bb4ef9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cd6d97-356b-4616-a776-af8d33d522ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e07b96-449c-4ca9-8264-964b877fbbc5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ad04f6-28df-4a53-8967-048c1119e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9884f68d-8972-47f8-a15e-259bfd038c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b383a7-0343-4c9e-8dea-1927675c8563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15226c4f-0400-43d0-ab93-50743512940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4a8ffa-bd9c-4069-a173-837cbd0a9598",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46d8ad2-c8e0-4a9e-a9d7-5574f40f30d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5da490-6ca0-4aad-9c0d-c05a2f2063e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bed899-c9dc-4b20-bbc1-0fab42edc04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51727cf3-2b6b-486e-b501-c1fd198f85e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5350f909-0252-445f-94e6-17a3925cb153",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b17bd96-a657-4774-8e08-8a254cb53748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08accfaa-98a6-4cc3-b1c7-26e34cd38f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b072b55-f302-4079-a71a-1d4a748dc7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb8bd4d-b2ec-4de6-a076-d2ba4d71fe80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28884ef1-ec7e-4d7c-a199-a9493fb3b0b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81c74923-01bd-4654-bcb8-3ee35e48a53d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c916e39-4b91-4698-ad5e-566b7a56fd08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "87242211-78fa-4531-b2ce-c14033e63399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffacb56-7861-43ae-8bb1-5a7be21a431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a5ab981-1949-4c85-aeb5-65c6f521ee97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5b3988-50cc-420d-89ee-0e67cd503e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b734c6a2-3098-4a6a-87bc-caf10d45f728"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86107538-015b-44b0-90d5-189e63f4de95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c90f5038-0c25-4ba9-8f7e-1980e9d47ef0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f062db8-7aa8-4e8f-89a4-956a651fb375",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ba57265-a9e8-47e6-964c-a0efb3317370"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "813b3cbd-ab58-4050-8d24-1344d91e9ffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb813408-5d0c-4d00-bd45-f1961aaa2a8e"
            }
          }
        ]
      },
      {
        "id": "99bed8dd-65c9-464d-a0d5-bcd717b05386",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f9c89f1e-6cc2-4aaa-b6ee-8deac520a0ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "933b9920-cb26-47c6-a3fa-204f891eface",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aaf0b4b8-ea18-48f4-b149-d52dc91e5b90",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4197f48-98d9-4b28-a036-ce8ab8092036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf87c055-9239-4ce8-ba3a-5d9e65407b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e291fd9-699f-47d8-9bb3-67fef146de5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "977380be-b892-4d18-9433-4c15b32790a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211999f5-b8e3-4fdc-a457-61ad6ca9a091",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375d5523-90fa-4e19-a344-8307bc8c701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca5ab90-03cc-4ef8-97f4-c12f6d5e113f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d4b0b6-3c2f-4550-bf19-48b54d07056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0510a776-d8e9-4973-b4e7-e0a46efd0e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630b3466-7533-48e8-97af-3215b5204c6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecb2be3-4c5d-452e-accb-ef936296ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ba8d35-b341-47eb-b2b7-a1a2b6e65198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293de9f0-56e6-4f10-917c-c586956dae5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8bdae-590e-42b1-bce7-2d129700aaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429d73a-9927-4d80-9090-34b7bb467079",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8d6080-a18a-40eb-9fd6-eb5df660950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bab1cd-8256-4453-8503-28e648bb765e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77456ee-58fc-4c37-91d9-22da1a804e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d63ada-1bfc-450c-b900-c855b5ef949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a919b-ad2b-4c42-8348-4201d723e7b8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c620ba1-ff16-479e-a31e-46899f8db4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42dce0a-426e-40d8-ae8e-dda0e734d168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a68c27-1c19-42cf-9a38-e3e6acf8d3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "762bcd0b-1220-4561-a1de-e856bc656237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e2e1ee-4e8f-43cb-ae62-adfc98022067",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3869b1-3e54-41da-9176-09499fe8fdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5b63d4-2aa2-4b12-9404-4512f38686a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0e43d9-de19-42d8-a558-71ab8e7f7bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1aa731-6df0-4e2d-bbeb-062b9d884d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c5a003-8975-4cdc-ad90-a0dd872d4180",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30399a5-9fc5-49f5-bcd9-1b2c90b3f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe585a9-73fb-4238-95a5-06b2acbc60a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a06885-b7b6-4c2a-b30c-5110c20cad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c6c48f-6c25-44f2-b8cf-af69d1219fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ce289-a0d6-44fc-8c49-e843eb34c4a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e3428f-7c35-4b77-94c5-45b33536edf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030e72ca-93b7-414e-adfb-ff76738b2147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23144be0-2a11-477a-95fe-b5b9041a93d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9be7c5-7369-4f4d-b442-cd0a8aa1aa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b09d432-e90d-4c70-8478-372009b9fd22",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a748f802-64ca-4489-9179-36aa31ea957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83464a50-5598-43c3-bfee-487470d3423c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac4ca5-242f-4472-80b0-ff2046d617e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03edf21a-d975-4dda-9516-8dfc82ac01a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524f724a-7588-4931-8404-432b7b7ebf1a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae61e219-110a-4b63-974e-303e825bb6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efdc2af-a8aa-481c-8713-7c7022d016b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b1fdcc-ff84-49ae-aac5-6ae83b894190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99330c0c-f08c-49bf-9575-00d35fdce66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daadbcd-f42a-443d-9978-d1b2056657e0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3520f3e5-ab2d-487f-95ea-8c4e757c996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d082aead-fc35-4f1c-b1fa-db8e0d738341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396e567c-7b3e-4c78-bf28-1ab57d08a562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85b252fa-dfc5-4582-a804-83c23267c0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f743f1-4e02-4ab6-bbcd-b32f62838d5a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae74d1e-d7c0-4637-973b-261020cad626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b1246-f5db-4321-8785-68b1c0b7e7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f41d116-8d0e-4f61-854c-298c3af78594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd32e24e-aa4d-416d-a503-996daeafced5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253d65bb-8684-4837-8843-abecd27df8ae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a816c24-0d3e-4892-a0e5-2c1ec9df3420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff542bd-3b73-407f-b43a-1d0e6087f1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44291fdf-5e67-4065-ace7-c8d56638153d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e253c3d-d5d8-4e19-9007-393ce4f1dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976e2fa-06a2-471a-b4f6-4e96784989b0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e101572-2106-402c-ae4a-486ee309bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f0edef-d808-4f15-831a-9e892997ca07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db3b32-f970-461e-bb52-11c906a80e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bc9621-faee-4594-b80c-b4cb89a51dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d64b59-a069-4a26-81fc-4117da5af555",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112582c0-9531-4786-87e0-15dbd094c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c0b106-161d-4611-bacb-81389a63447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05798a1e-72a9-4818-9f26-25f23b47cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd4e657-84f5-4154-9439-eaf0096b2ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39678937-0fd0-4598-9181-1cae57157c9e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaf20c0-f1ca-4aa2-9f32-b26237d6a2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0473824-80ba-4e97-a875-9dcfeeea849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15bbe4b-5624-43eb-a544-b8a9de370f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "201f9820-46ca-4cb0-837c-ecbf8825a7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfa6012-46a7-4ece-af42-b53ad3815b74",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab2472-a988-4932-accd-81c8f45bc691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c59145-ce01-4102-b400-0a9037a7cc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f61c48-ebe6-4b46-b156-976d951d0434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a9c8cb-21c0-4b41-91db-87fda9cac84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8fb9db-5ecf-449e-bc5d-ee8aacb645a9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b5d327-5415-4627-9bfd-902af9610b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fec260-e0ef-44db-9510-b683497578fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb769fb-80ce-4598-95c5-0dfac9dc10d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cf31e8-697b-4c64-a8eb-5bd1a8c7c7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9bbf27-6ef8-4eae-b254-4b497938502c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2c8c6-53c6-4cd2-93b0-6ac25d5266d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3d2603-f4e5-48b3-afb1-2bfbfc4fb17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6029684a-1aec-4ce2-8f6c-ca27ebe8bf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6daec2-42f6-4867-94ea-ce25ddb4b90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afa751d-ad26-4964-879a-d6e2ad44f55e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948dea2-f233-4f89-a54f-59de363f21c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbdf946-1d48-4800-9c0d-caf54178847f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae80a323-b922-47db-8a55-b711b8b453b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5977050-1c30-4c48-832e-3e82799b659f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d0870c-790e-4d41-a70b-feb23f72cd66",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975c08d9-8d29-4aec-b6e0-fdef8d6188c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab4f28e-3f75-40bb-9bc3-1e23f594041d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d3c286-9c1c-4d69-a99b-800fd7440b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d544918-4d3d-48b3-84b0-68831260a366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ca3371-8b26-4c80-a49b-87d1b67b69a9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e051a0-65b4-4e7b-89d0-16c5f219d01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30d8d8f-ae5c-4093-8ee1-c146ac174fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcd300e-9ce3-402e-bbd8-8f9207a4a23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b90c63b-6421-4875-b664-9d0665716b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3ea6c1-2c91-45cd-b417-c9e5e98e3083",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed406af-d093-4d94-9303-6bbb3e62264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2352e8-5ec4-48a0-a9ec-a6878c77206c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bdc35b-fc34-4dd4-a46c-012301a36798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1654fd2d-8beb-4110-a19a-8bb27893e61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0120e0-1148-4716-be5c-64a275dd6bd5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea976a50-0a1d-4f2b-ad85-55c7978db9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16fb930-7c7a-45ce-aaf8-16cd2fb5e36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bdb4ea-238c-46e9-ae87-20ae9625b65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a609a3-9b6c-4163-8cde-1ba1e6dde0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfafab5-8b0c-4cd1-a4aa-de0c9eb3cac8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2009b4a-88b1-4384-9828-c4267a6d73f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fd755e-99ce-4a7b-8727-72a9721f10c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90033caa-2ad3-4d2f-a66a-eac76066c0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f7c1b4-caca-4f61-94f4-ad1c73714692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0141e9e1-4dc9-4921-b8c6-32bc4b476d3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4165b1-715c-40cb-a50a-84303a47f03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1146e486-19a4-41a3-9950-7a44b8d447bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546153a6-4fc1-4dc2-83cf-d551a2d08caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e71581-6401-4519-8de0-88b015c07f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdb2ec1-807b-44e1-b616-e303d9c41694",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb737a35-72f9-4eb9-a211-58f4add8fbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09c5e86-6856-4256-9bfe-136aef8fd559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9231d368-93e2-48c6-ab64-4dfe3899b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca8996a-888a-46c6-b752-7a4cb14fb58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8d7902-022b-434c-a576-91c674a0bbaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cc08d0-cfb6-446b-9ecd-04ed1d251972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1e87c7-5cd3-4cce-ace9-55331815dea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6517cd5-cf95-4e33-b5bf-71a676370fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2a93ef-556f-4e99-b97a-41a708693ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc23d8-6d63-442f-aa29-a30c8ca399c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb03a838-a9b8-475d-8841-718f85f5ce08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39209870-84b0-4ec0-8241-69ed1e4ac2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d236e-0d91-4564-b14d-ded86a9b5a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c78cc01-eb91-41e6-9953-0d9211dbf415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed33b578-fbec-4204-aab2-6e75347834a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0c860a-06a3-4160-8587-5d3ab21a899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1483a657-93e6-44b5-9fa7-e91a6c017825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257944f2-2582-44c3-9d7b-b83ac368676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6bf11c-a6ba-4234-99ca-8e527ebff9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc74b70-b568-41c8-bda0-3262bd3f0970",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aeea51-29e2-4efe-b0ae-27149347d642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f477d-17fc-4e33-81f5-9d3c68f3a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be33a2da-4a68-4b37-a5e2-2c0d46a25f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45314ad5-d92a-4d81-8abe-7c9f26dba492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fffdca4-0224-4248-94cd-d10f294babde",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e2a802-2a60-4a4e-ba14-6c4f02cf1fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4652d2-f86d-4a31-9de0-884baddbd454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bac6a1-eebe-4c69-9584-2480bc9b4340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77d3dff-06f7-4966-88ec-5fa801d24d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88743ea-4382-4058-8469-36ffd33327de",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78cdab0-dba9-4695-9836-56122d08c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a6e653-b6a4-43cf-ab2a-2666f65fd092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e637a0c-3e43-49e5-ab3c-fb7b70da0e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b911e9f1-78a6-4f60-a80d-af7fbba45258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f524212c-9d43-4172-b117-cfa3768cb418",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a8cc7-ff57-4180-961a-4d7362860217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f1862b-afcf-4805-9a4c-9474f104dff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289ead6d-7670-4ac1-9bd8-f2e343bae36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "968c87c5-f47d-40cb-bb9f-bd7f1d914a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e096f51-4fbd-4edc-8c82-fb1f2f80c624",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5629b6d1-a79c-4e7d-a9e7-6a36c6896ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d33c5ca-6c75-44ec-b8dd-b3d8b260389e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c3639-dcbb-42e9-adda-0f90773d6273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e28c1c-671d-4667-8f31-15de155665be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae8ab83-1ab1-4399-87d8-09a459877c01",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1d414d-185e-4e64-a6e4-13efeb12b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9567839-7552-4951-b16b-bc33108265b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c620e5-aa52-48a7-8334-f856c56fe3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1ea631-952b-4abf-9ae4-6c080f25ddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f117d38-8144-4c53-8dc4-9bfe413ac42f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f12a36-80e8-41fd-8de3-f3fd4681d859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1c06cd-2ea4-4d79-8303-dfa070fdd47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f884a-6b62-4895-a559-b0c3e1be81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab03df3-2c2f-4e62-8dfe-8eadfbf5db24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40048e5e-0ea2-4a7b-928d-81117c555a0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eaea8ab-e717-4472-bea3-b4938c03c2c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7612a3be-31f6-4fbc-8d3d-2c38af135272",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bb94ecfe-2802-44c5-bb8b-04586e22dcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49314b7b-bbf5-43c8-a215-37e200150f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6640c680-0897-47db-9690-2ad28cfd56e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06985dbb-ca22-4e41-bce1-0a2b2db62129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37f136e-7d1c-4209-a764-5a237d50f835"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a256964d-1a06-42a3-9396-8c646c665e8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e85dd2e0-cbab-43ea-a370-137cbe74a370"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d56bee88-20d1-4804-9336-8aa1c8e959bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1faa1674-48f1-4da2-9faf-1323996e40a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5941f96-6a3c-4531-9f5f-b88cb23f8c58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22c8a8a0-b62a-4b6f-954f-125272968267"
            }
          }
        ]
      },
      {
        "id": "5e00aa28-469c-4f1e-bc72-6e8d1f95ab51",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2faefa7f-707c-4d60-b0b1-ef684fea2307",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4b0b3ea-b4de-41e8-a5ba-a06db0b90344",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b09917f9-da95-4e78-bf10-49ad6aeef0c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e9f85d-d3b3-4dc0-866b-16f829101b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b0b62b-4949-4f65-b9fd-ccab54a843d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ccfd84-ca51-4145-8d9f-d008fc04516a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0739b058-95d5-4284-a04c-59a0c38cd6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f190481-3500-478a-a63a-97406c16a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef8dda4-7c10-41fc-9ae0-ff38202b3fdc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7669a6b5-3bbc-451e-99ab-10e3cb4349f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ee652f-d7ec-4e1c-ae47-1e3d5887ea7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3abb56-dd12-4f23-acc2-06e4b049e2a9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b868cc-cde6-4400-b081-1269c3821c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6997121-ba3f-4540-8479-a81352c26480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c5b50-2b5f-48a7-ac2d-e6570988f358",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2437a084-d5bb-4122-a359-00223496f62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb2a2f6-7680-4fd5-b368-5eaed2df2a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16272b-e029-44e6-a4f7-02721987fdc9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c730ae-2ba4-4e3c-a52d-3993e70c2afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e762a79b-2421-41fd-a0db-ac87317d0ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f85880-02bd-4b86-8508-606be19fa24b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6722e21-c117-4d39-a292-ca23c9f507fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2a1277-32b6-454d-84b5-3c191e9cb3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62aac611-bd7c-446c-aeff-22f0fb4e585e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab4101b-676b-4e6c-ba51-f8f4ef1ba605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999abf3f-6074-4de3-9eaa-8ba80fbda122",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3800d2c8-5330-4722-92a4-2f5c20756b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0d8b4f-3d8b-44a3-8f27-a2c397e420f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532dc54c-ad2d-4513-b0ad-6b86a095bbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fe5f7e-0058-4e83-aefc-adb01812eb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678dafa8-4f3d-4cdb-968f-307602868da9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaab25f-868e-45bf-ad25-59b4c34f594c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a8c494-cbcb-46cc-ba82-ab8eb198cc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5368fb19-01e1-40fc-be1b-85ce3a2ab6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed2e16b-3c01-4b9a-a505-ab8812cc95f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a54de4-7683-4037-b309-478108f898c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c83b5-517d-45cb-bd7d-9c710eb3480c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aadc1130-cc99-4eac-9da1-9ec22d195238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74c35d-a5d0-45b6-b5d6-f9f79253fea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac742a3-5659-47bb-b784-be7e477f3bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c58a096-f7e2-4b85-b734-82631e29a179",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912a227-3a74-4789-8d05-ec759c170c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d55029-257a-4286-93ae-8b767decb50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc4dec9-1676-44e7-93a2-69b0d72e6e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c559ca-3e4c-44c8-9517-d1bb644abf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f3a83-83ef-4483-83c2-216cd9a3dad7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc2640-72ec-480f-9292-7f07d9008937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00cdc31-900c-4b13-9540-358a17396971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed603d7f-babd-447a-b77a-3df47891b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a657fcc-b208-47f0-8be6-e24d478572a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffea9271-fc21-4276-9f8c-fa8f167aea41",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aaf0bb-048d-4dc9-ba2f-116bf3bf4e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cf2bdf-ba32-423f-a1c1-66411af3aa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc17f9c-f96d-435c-afa9-16f30416f685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d04799-9244-4147-b187-4e9798c8daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a92180-3a94-4aed-b80a-665f2da18f8a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4561ac7-f464-498b-8feb-157ac5d2d7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59feef75-b5f6-4315-9b75-9e61d7aee945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fd6a4d-5410-47e9-b60f-1baf41c71f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f164b218-45b9-4f34-95ef-81b2036eebbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e38a41b-c83c-4d17-970b-56d10d2a29bc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041e857e-2c24-4952-8756-7940dbf2b75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7bf9c8-07f6-46d1-a778-0001e3033bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68de98ac-28cd-4458-977a-52e12a5876ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08ad4c1-9ab8-4dcf-a0b9-967a5363e7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b57f79a-8ad3-4c0e-9263-5e8bd7a60e86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da32745-01d8-4cfd-baf7-964f5142c796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0a32af-8b5c-4fdb-80e7-53d380692037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb24b2-280a-413e-8d6b-5b1d91725db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba43570-db78-4d48-9edc-6a02de8147ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae56e48-4cb6-47a1-9db7-1b286b7801dc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0808c1-ac74-4859-b968-4f1c3ab106b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2665b56f-55de-4770-816b-e928c2b63a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16200484-5cd1-470a-a13a-19ceac8bdcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795cd7d2-92b7-4a17-8694-c436449d7f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c83b65-972b-4ed6-bd20-2c76bda35ca9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5d7674-51a1-4269-9b17-d8e24f3f373b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40fd1f5-9c7e-4e6c-a535-00e55f9ac701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab684e2-dd92-458b-af42-193c55d3a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ae3aa5-bcae-460f-bf9f-4ff20e66e78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5121161e-4d8d-4163-ad27-b799ab5712cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd749ae-c10e-486d-9ee3-40673b0f2e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca649ee-1ff2-47bd-9e4a-a61179b2d738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90c0ddb-d48b-443a-97fc-f26432df916c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8ddbef-f946-42a9-9194-0da2d4782419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7959147-7bdf-4bc9-9132-9a4277d8a29d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964ff85-c411-4868-89f9-be0df6ab36e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61a4375-f7cc-49c1-bd43-c147e22ccc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20093fdd-8638-4570-b884-e78e73333929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bae25df-0d54-4794-aa9c-928588c46b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b3470a-e7cb-4a52-a77d-20e339b21178",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c35465-cf8e-4adc-ab84-a07b566b6e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3fd3ca-c674-49d7-8089-24046782b7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b053801-5a56-4626-86df-fd24291f83a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e1cc2a-cde3-470c-b4ef-eb740cfa7d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b86edc-6f01-4a4d-b88c-6094423be8df",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15caa2fd-2c39-498f-927d-14babaaa16f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b4605e-c52a-4c14-b319-61c5fec37abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be62bf76-b526-4158-bad4-3791e695cedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a0a62c-0f24-4e4c-aee0-7b5e122d7593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2247eaa7-959e-483b-8118-0d3d05f67ca5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a96d5ce-9afe-4cd1-a62e-6f7d9a369506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabe25ee-892c-4f34-9d50-5cfb6bbe8a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924ea828-3751-4480-a651-924feb7d19ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1507994-a103-4480-830f-8a75042795d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6646a3cb-97c0-43ca-b8fa-520653a3415b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74db6ee-3efa-453d-960c-cd9f1d545876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b411da7-0ba3-4f29-9963-5ab03298957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ef5938-130e-4856-846d-3d6bb8bd4b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe129896-7eb2-40d5-a690-8df7f05e0dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cba1fd-9a37-4540-a115-f9af7d64374e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2ba7c1-47cf-4008-afca-bd98bbf36cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c732f03-315b-436a-ab9d-10f894e1d9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1543fa-503c-4e37-b35b-e8d62a8ab830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70206d6-5bad-4adc-853f-b43e2ea720a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d38076-f4e5-4631-9d0c-72d800e8479d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac78d48-0ef9-492a-9d92-f853bf77471d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b9c5b6-9d16-496a-838c-f507814809ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd56cb6-f90c-4caf-ba8c-4ef63a11947f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34e1d03-b702-4bad-b18a-410512474590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d922b995-80b9-4811-921d-42b9bc0d33e5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c08890-8a1a-412d-9d6a-e9790037275f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33d8cf8-5ecb-4d56-a54a-0dcbebb8fb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462476c3-d32a-435c-82aa-b1916f677963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26181c8e-cd1e-446c-9df1-2c94efa95534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c0d8d-d3c4-456b-be5f-117a026593d4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f690aa22-f2e2-481f-8213-2c4dadc58ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f019409a-d5f3-47e2-89c2-af542e90f395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14b73b9-a49b-4599-b718-965addc1d0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6145ca5-6927-4562-ad46-fb6e5352dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7749af42-562b-4a1e-9102-d13c556aa581",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9a59f-bfb6-4279-a30b-418f139f8cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105dbf02-437b-4be6-b0e0-a4967b44510d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e87bcb3-230a-49ce-94ad-fb79e3b4871e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade5ac72-92c0-494e-b888-fb18f54e1bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c516463-3c6f-42cb-bec6-76aa272fcef7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093b1abf-3df8-4dc3-a284-9c4527d4720b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3fccc7-c889-4910-809f-0d475731a40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c66b4c9-74a2-4156-b1a8-be03c31fafa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbb03ad-f70f-4876-a1a4-2197a75d4686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37826447-73da-40b9-881b-0db1f099e439",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2c3a4-043a-44c4-a2d5-5b673f6fd57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ed5247-537a-4e9b-a76f-326c4e144da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae43a8d-96d4-4a19-a77a-93298bbc89f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f078e326-2a04-49d5-b493-364143bf8e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46b004f-42ec-4fa4-8a0e-43ac24cf0359",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fa7e4e-94d5-4e59-a769-16a43aed5488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e472b1e7-12bf-494a-b431-1ad5b475de77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79051888-cd4c-448b-98d0-4259488f34e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfc9558-e248-4240-bad4-58bfc1df3068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46779a24-635f-4d0d-9351-b450eed86ad3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2d10af-68c2-4ce4-a23a-568013814c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef633a85-4e56-476c-adbf-e78d226f9cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe8c59b-f790-4d11-b8ca-0276e5952a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece26520-5a62-46be-8faf-4f3201376d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9ae80c-acf5-4513-9587-650717be3a88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78faa03-d324-4269-8435-903a931b38ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3dfb39a-2c30-446f-8d30-4bd0e85d4425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257bb6d1-b484-415b-a62c-aa51b3ea5882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f8c60d-a97b-421e-ad47-2da4f3b10bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e145b-eea0-4975-a359-a0a93abbd4fd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6055ccaf-846c-41e0-9b44-c26629450591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c277bac1-4844-477a-a2bc-5d31c3b3bed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700702b-1693-4a01-83b0-90012a03bfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adabbda-42e4-42fc-88c5-2c8913582048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d22f2e-777f-45c2-86ce-eff59361ae67",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde6548d-dbdb-4d7f-b820-a2b32acba009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a48b74-0b94-4627-89fa-88a8d63044c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5d9efa-5d6d-42df-b98c-70815b68a708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99e85a9-7c6a-4da7-8afe-95f766dd359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5f363a-adbe-4f27-8953-4f415e31c125",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ba043c-0a9c-4202-ae3d-101a57aeb36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a8af81-e786-4191-9430-338d29b0b725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa89926-e036-42ee-a52a-7050a9c19747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2011367-34c1-44d1-8686-ae30a1754f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2846216c-580e-41c9-9ee6-757a694a243f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2760b186-cb26-424c-982e-82ce1a9eb168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360904d4-542b-4547-823f-80354ae5d8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575e41f3-e0b6-43b2-9558-6f98b6e09e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2aa003-f813-40bd-9a57-8ccf344bade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e0cae-ff92-4437-a1cd-0a6045848d31",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2175f1-e432-4aa3-8e84-293a14d44914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935a0fbb-0c59-40f0-b06f-3d9d2af4e694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492b10b-c4d3-4816-8ed3-1633f684c167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64e4e4f-2266-4b1d-aee5-e35e75e19239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4350e0ac-6460-4b3f-878a-9cf31fb951b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62de88d-e66f-49fa-8fa2-cd8b79ba3056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b628e5ed-07e6-48dd-989e-6faafe5a7fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3212c35-1d8a-482e-9e7f-e30873ddaa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1505a9d-ba75-41e9-967c-6525e593c20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab457df-996d-4247-a49c-90dac6f0d2d9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aed7ec1-a135-44c3-9116-c9ee4327b2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a08751-95c0-48c1-a72d-2332cbf61861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8250ee46-15c7-40f3-b7e9-25c87642ebb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130f887a-f1c3-4ee6-a173-c18121bc681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fd49d4-ba49-4297-b46b-f7da61b9e5c9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d8a21-e613-479d-8284-1d1968f51b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9cea80-25f8-469f-9662-6d7f0563566d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc90e78-b860-49ca-b304-3ab402ffac4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944b0bfe-b0e0-4e2b-b6f8-76050866e071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62528ff9-d18f-4767-afd7-a34b77b9a822",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765dc065-6228-4739-bcca-0238a3d816a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a6720a-2c92-463c-b9f1-796e7251dcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9ddd4-356c-416e-952f-f888e62c9674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e08056-ea84-4840-9b7e-b42c0ee60c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeff063-8305-4b03-b0b6-c8f203edb434",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9071e9-19bb-4d25-b596-a4d9aa6ecdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9549dee3-3377-4e56-b491-d13ac3f05f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3283bd8-7553-4d58-b4ed-87ff37e770a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc342fb-f3f3-46d1-8076-4bc3e18138ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51367d4c-e3f5-42a4-861b-75330b4e0764",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9f5204-9d58-48fd-b2bf-c9b9ddca3126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da696c7-e4f2-4db8-a957-bbdb457f1823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1bbebb-d352-47a4-a496-6c302e4df3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3ca02a-6939-4ccf-abf3-d87fc9958785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d87822-1b0e-4c60-a2e2-db2894d1a332",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900aef96-deef-493e-a0aa-0b75870fb1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0664e3-f741-441b-84b6-bec9e67bc62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46e4641-c64b-4fc5-9143-34bea5ecfdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bea5ded-9b29-4b34-81d6-72718807f3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a2391f-44f4-4bf8-8494-c061661e6173",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f072111b-771f-402a-a015-024890a2e8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4110a310-f661-4f73-b5c4-35249c377622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a666e-3266-457a-836f-242ae123991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73960f3a-cac1-490e-b0d9-ff1b6e36b34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc1e670-41bc-40da-b919-f5c29f60f94b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce36e50-e392-47e4-8825-3358d532f662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a887d604-1ef6-4eee-8e36-6ab9b0a1700c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7851e5-92f7-4320-a798-4ae9bd361ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64493872-8e4c-4311-8718-6b6b23a422ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72788862-061d-4caa-8bfe-2a54a6ad186f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c5cd6-9569-4e22-af88-46e2401e7803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044986c2-d2d6-4ff6-adc9-2c412e226018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986884dd-016f-4acb-95f9-dfc686fbdd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e86008-dfca-4d05-a468-0f5864a1743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3b9542-68ec-4aec-9404-188a7aac4794",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae6558f-343b-4734-a08f-5a46ea797f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ad3f9d-a943-4168-b0ee-f5802763c2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b0f9c1-077d-499a-9f88-51fa895237fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8224ff48-bf25-47f3-9ab2-44ba280292e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4babc119-9806-4873-aaf5-6d72768e2226",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5d77e-75b4-4350-9aef-92e1efde2319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f6577-d48d-4125-89fe-dd099fa90fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b2973c-44d7-474a-b423-d761d5d72f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f442f8-553a-4f2a-863a-40e40e630988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab63962-914b-4ab4-9fbf-291a0c6dbece",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddb7d84-e208-430c-b69d-c533850ce810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f5b0fa-e34f-4442-b20c-04687910ca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eef0a6-53f3-4772-8431-48f8f612c93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3156b641-2611-453b-93d9-b5b8113f65ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d427b1-2e2b-4b89-a2da-32f75c60fb7d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99637d5b-2902-4c33-8377-4b73b9456f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c77ac14-0305-4735-bdc9-fa23051b0f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e57b3be-f475-485b-b566-8e39dadc73e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2536856f-3df0-46a5-992a-d532e9b0545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3accb33c-5e13-4dc8-88a3-22fb27ebed3e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f705b1e2-cd3f-49f2-8d8e-8e46805a8dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b49b67f-c4dd-4b56-bfa6-1c5aa5ecadc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07443fa6-db1b-4cc1-8444-e2cdc64cda67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa36fde-2b1b-4c61-b571-2e395769699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5ebd65-d50c-4dc6-b22f-1747f807a8cc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41abd863-fc2d-40c7-a1e0-018db5aa3336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1f229e-318b-4381-9259-d2356bc1be7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ebf07c-b750-4b3f-973f-9cdbef034576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e81961-0d67-4b4a-b6a8-3cd864e7039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be8c5b6-b1ef-4ea5-aaf3-2b749f1954de",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a3ddbf-7233-4afc-a3f6-b829da6fa767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ff6d11-402f-4877-b516-8e92384dc5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b13c12c-d3d5-41e0-90c3-3ab4004b6ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3772d1fc-1953-4cc6-a133-0c259ab51972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7ef4cd-3a01-441e-a5d1-1558059f60bb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1079e6-031d-4f98-bdd4-bec3cf8041bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb40190-c01d-49a6-9eed-914ab6116b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8443e3a8-0e8b-4bfc-96ff-794c864fb403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b177c1d-18a8-45de-ad29-c3b83229eca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49409d47-39e4-434f-9f60-b3205b47cc6a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccec952-3364-43c0-b46a-0d640e1dceb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dc2007-022f-42cd-9f51-ab952dda39fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e63bd7-27c9-4ef3-a1b8-c78116fe0aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1876d49-767f-4735-bc6c-0684392097a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b30a480-735f-4055-8e67-eb3966301b3e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00b94c-690b-4182-89aa-93ca1badc3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c2127a-05f2-488f-84c2-80d921ee05f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0a4b70-567c-4967-9e94-8eaae0947df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c30c085-468e-4c22-ae19-34f932122a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b605ffab-fa15-415e-b4cd-5b4afd08930a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fcfd16-4a26-4816-b723-5f76ac2a990f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8657fcb9-c98a-4eb5-9b43-3905b9ee4a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2b9034-ce4a-4a2a-898d-7f31925fc634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba44f30b-f520-4616-88c4-5b748f267bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d988942-6079-41ea-a7d3-511e092e45cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8368a1a-bced-4254-8408-8ff7d0504e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4b049b-ff0c-47a7-a832-3dcafd65070d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae5a9dc-496f-4850-9708-aa7f1cc15d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee17d3c-f9f7-4cc2-8f3b-e2d71e68f779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a7c7b-9591-4f52-a73c-b640995ba098",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782c27d9-35f0-4b27-ac06-41c2b8523c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1731d8d8-0c8a-4020-bcd5-ba462bfc30cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453aeaed-5944-4b0e-b019-57c2d5c3f281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4526d668-4424-4829-970c-802d0b6da58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b31a7a-cdc7-42cf-b990-1336c8790235",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aea78a-2881-40d2-aca3-31c6d5bd79f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c4386a-0741-47f9-a674-93eb3993bc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6318a5-d952-4e79-b28a-7d84e9d6e1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f13e2f2-b3e1-41e0-9fd8-a4f2f60b10aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c38a84-f4c8-415e-a085-91ace592bfd8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd91b647-023a-4902-b40b-15750845e32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2006c7c-83c7-456a-ac53-1e4a3252798b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d2014-4cd8-4fe2-8c6f-2a435576cd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64845c1c-6984-4ac4-923f-4740cafcb47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846f3516-feb5-4688-a768-757d2bca81fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b113a813-bc45-4500-b57d-69b68938b58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a5eb1b-5875-4e10-b797-9eb95d7efe80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f606064-9f0c-4889-95a4-4484ac1220cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c20029-283b-4bc9-9897-66951708c0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac25cd02-3dba-47f9-ac6f-3037dec72a38",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01133bbc-12f6-48d1-86d4-02c0e9e7f863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376b67ed-490d-4209-9f6e-f727fc51bf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a5a252-9d2d-440a-83f8-9f10e76a6462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5189bc-8dc2-4736-87ed-1cee82f497a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6cfabc-e0e5-4b52-abe0-820a8d7d3848",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948a8a28-44da-4f5d-917e-0d8baf2043ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533a5c6e-779b-4c55-bbec-c2a50861a25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed4aeac-e331-4f60-918a-0b1b857586db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db1b9f3-f706-443a-a38b-17cc021ae241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04162a10-8162-4af6-b0cd-54fa0af3236f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb126b9-f639-45fb-bcc3-af453a99a900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4935fd7-848a-4610-b83a-fa7605d86a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a539e8-7ebb-48a7-990c-df37dd2aa237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8858a4a-0f43-4f63-948a-9d5049e33194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2699db-94fa-40fe-a35d-51683ffac06e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b84d74e-5246-4a2d-b30e-33d43c9b4d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df48c96-5e61-4089-af49-ceef0c603b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0026f93-a31f-4db4-b502-4f57234f52d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fec507f-9ad0-4088-8e12-70a5e0cd4e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be527326-da89-47ac-93a4-85bd7f3c4dbd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f19e7b-5dc6-4743-b8e3-b81665ad99fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f5c707-0b27-4c90-b802-95f3b889d2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fe15cd-2f33-478f-95bf-74d497a8df77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde9ee60-d147-4431-b023-b202de071975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a1920b-22c3-4b51-b3d3-2e183b11c590",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd739e1-ce6c-4443-b1c1-a9fe87a2b227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46bbce3d-04f7-4f4a-94f5-19052443ea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f97548-114e-427d-90ea-b8f46dc3c351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbf1a50-13c0-4c4e-8599-5029be64b834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1f8e02-9cf1-4a80-aaec-480e51ed3967",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2860d40-33ad-4d7b-901e-9f81cb117bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0099115-6150-4d9d-9753-3a0ea4dd8893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4f6fec-5fcb-4420-b2a7-14d02e6eb705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a33072d-d6a9-4d64-9696-756f669aadcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d2ef0-bbe8-4577-88cb-a522217119fa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83896833-588a-420d-bee7-4497b1bb33f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9fce9e-6c90-4896-bdf7-6dc55c34265b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec7114-19e1-4b62-963e-8f6d6e6e32ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da1ac91-bcd3-49e3-aa8b-6cc6ba5827f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7d20cb-4797-4547-afab-dc5ea3dd3654",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674bf75e-94a7-43ac-9e8a-a91c4ea20b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a74a367-ba40-44f5-b565-504f47b136a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48188a06-5d6e-4b14-8ea4-ffb712fb1585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e004b9f6-728a-4f43-934d-82cda8b759a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b6148a-d1a3-4ac6-bb43-752e6bc0351b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9585d72e-bfab-4f06-8c82-a2c2a3418c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edeedd4a-c2a9-466d-bd08-6f84d5b2379c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8244be-b1ac-4e97-a162-160ba2aa139d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf92f8f1-485b-4c32-8e04-b5912dbcaacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed024abb-24dc-4eaf-b267-1fdee147b4ef",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485dd982-577c-4de4-a237-94068bd58167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297489a4-fda6-4718-b95a-664e998f8250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0168c937-854c-4ffd-acd8-8125126947d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0775d4-095a-49e1-909e-54e323553ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294bd77c-70f5-4972-9e9c-a320a00b6488",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369fd66a-1b0c-474d-a828-9481b6151a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f5e2ef-5282-478c-82d1-e90d39ab02be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95def29f-effa-4d48-98d4-4c15513c5d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e45ea98-7173-4407-a159-771e3b3777e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02653c13-1354-4fab-a597-6f04c35b123d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de615e3d-3dd1-4487-9e8d-48351faf7376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1336772-80ad-48c2-af20-ea04e1757bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45042169-1b7e-464d-9b91-0af4257a168a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2396cb-a09d-4197-83e0-086cff7a389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9664d846-ce33-4415-a18f-aedaf956a513",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1476d9-fc41-47b2-aa59-ccc2b6950fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785f2373-bb9c-481e-8a2b-e606900dfee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527725a5-ff38-47f0-9ab8-6a52c40e23f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36581e46-4229-4a16-a213-16710d315e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d4a572-abe5-4d54-a524-cd9386808742",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eff1b0-8024-44ff-9118-c1eb63148d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3a5ee5-f0e5-4bba-bc71-e52d7c738395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762ac50b-aeba-4d66-a8d4-f70b1a0d760e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9c5a56-5931-4fca-bb45-d8860a584e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5649e327-b340-4417-8c0a-c51fc24de51c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11aea98-ac53-4ad7-b8c4-29e7ee55be0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c4d165-eed3-468b-bcd0-5d2852c6d847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0566c30d-89dc-4a45-8675-85e8ad8357ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09110276-dc0c-49c2-a1e5-40409c1aa0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7c674d-c25e-46d0-81a2-c916e7168aa3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24d294-46b7-4e7b-9b58-f2e9f6291f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b4f4e3-9dff-403f-9dc3-3cf115999e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c650684-48b0-4e29-8f85-b9d370a2eb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a0c1e6-4aef-41b2-b5a0-497821061aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d185d7b5-f121-4fbd-b518-08ae084569f4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143420fe-247a-4a74-ba0d-413d859eddd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b28d442-5709-4063-bad0-e9e0bb0fedca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2afa7-54b5-4a64-a023-67234ec8ea2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840f3e69-9a20-44c2-a263-3dd00516de3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27196f5-e986-4550-ba63-98d020e400b6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364079b9-4273-4824-9e23-8c6f1d88cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabfdfec-a5e4-4cc8-b769-e0fb71e71940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c320f36-60b7-4cae-b5cb-4c0c5540e9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4319b76c-9243-4eb0-b6b1-cfbe105aee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edff6001-6c8a-4555-9534-c22fe6a7b262",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf080744-2f7f-4c27-a3f3-b01c00983c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c3d6cc-3229-49f4-9aab-4e6b5b1c71bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a4669-5cc1-438e-a8c2-1dc25b499dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799974a6-3a41-481d-8e66-4893d5f6d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5d1ef6-5ed2-4989-ab70-831a334d7a99",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fd4bac-9376-4865-80ef-b36676b82b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088e2c1d-aa95-4d3c-9b2b-a326d6482cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ec6d1-f873-4ad6-ab41-a861fb21659e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914dec09-6d50-4a34-87d8-b1eb8bea8fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704dec2b-0cab-44ea-a93c-665202368c2b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792bdd54-27ac-46da-bc8d-45f885148565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8248243-4ab0-4966-b77b-68cde22f62e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42def06b-7af7-45b7-82a0-1f6aab09db85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651a1b0b-b0c2-4223-a504-48ab9fcb9722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b40df85-ac78-4fb7-9994-06a9080571f4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad6b737-e2d5-4c6b-8d24-2376b593937d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f927f7a-c2a5-4281-8e8f-a02ce125cb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e2107-96e7-49fb-b845-1acb6fd5298f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba9ce0a-3b9d-43e3-bc38-97405967f3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c60b5-703c-4a40-9849-06c7124aaa46",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f05f11e-6f86-475c-829a-a9c72918e5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca5f8c3-6e6c-4476-8f8b-759fb6256c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b521c3-99ea-43eb-9c51-5545f9fa1c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32656bdb-356e-4caa-aa0a-421eb61289be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb068e5e-ebac-4321-b6bc-941ec7010ba3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d1fec5-434a-4673-b47d-e4e101a5ec53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96a981c-6c8f-4186-88e0-76bf62ffd8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285b9184-7320-4767-9c06-a8b8feb8e054",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cd6776-31f6-428d-b09b-fde65e124e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7aafdf-81b4-4e94-a96b-5f7750411722",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e453b70-d75b-440b-bfb2-981f9e26861f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c792c268-5838-4f7e-bafc-4a20899bc091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f28133-ccdc-479b-83dd-6ea838b4d9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe19b51-15ac-49cf-a5da-56b8c7b4ad5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f40c4b-58b9-42b6-a804-1cad56e77578",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c469ba-def1-4e0e-ac2a-7809f7f74631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419f1de4-d013-4952-b034-a869ea6c975c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d4a2bd-453a-4dff-a4bf-127b9d274cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822ea5ca-58c9-4974-9f7f-fa77d558c738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b434018-e84d-42d0-abfb-2bc47066c678",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77bf386-92d8-4afb-b285-4a0ef04b3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d019e12-d1cd-4ee8-9766-25a1b2e95e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b118dd8-6a7d-46a4-be93-95f135b34254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a112c5-d8b7-4250-bcf5-d01e2c54472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e0ca0-7623-42a2-ad1b-15871cbb7a58",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebae901-0a57-449f-b3d1-8c860a96e714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f43b7f9-e91a-4103-8f03-e296d2842286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d8dcda-c4b6-4664-87a6-304864eceda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977194fd-b48e-4721-8945-5138b7ad8b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308ac15f-97f8-4849-ae47-d3be4a135f3b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a57fdb-9c5c-4af1-ac9e-d79177999538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede34e4f-04e4-40eb-bf26-7b6dbd1a50bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0842239-567b-4803-9056-cfd32a104d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6231766-089d-4f62-8095-109e92268852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dcf902-1c26-4480-b172-f78ec4f010d5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f54365-f1c7-4173-9a35-a0595c3e35ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d387aa5d-daf3-45b8-860f-865ed66f7379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c53f69-8d67-4966-9d78-db158dd574b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d4edf-7062-4faa-9e54-9b4663a3e472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a979805e-e0ad-46a4-9f1e-cf0eee083ead",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adcb5f5-bc5a-44ee-9a86-4c2210808bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be97e603-b4b2-47d7-b6de-acc970cf96c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9226f80f-8c01-44ac-b861-75cc0f37d90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a66125-2e64-4f13-8fc5-5ebc7a4a5285"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc116ab6-de69-4c76-b437-a5505d214e6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "431c3063-ca36-40a0-a834-f3e3d9f0c653"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65e37c0d-774a-4411-ba1b-09ad836a373c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "500f9477-8727-4f25-aeff-5789be9a532f"
                    }
                  }
                ]
              },
              {
                "id": "bcc056ef-bea6-4a26-ad14-d0ca4432c695",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "984a03ee-0976-47aa-a8ee-d80d0b81aa1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb786b1-7e80-4d01-963b-78487e91688e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b06f2b53-c79b-4fbc-bb09-b2fe8bd6a52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777247e8-2ee9-4fef-80ba-54c1f653611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df8d39d4-391d-4ffd-82f4-6e90919075e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75591218-dbb9-4c34-9265-c2a6487e4136",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "783da668-b393-4a3a-94a1-ce5d4f85ed81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2cfbb4e-200d-497d-bbfd-ece1e30a220d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d393492d-b550-4d57-84e1-e95c77c5da3d"
                    }
                  }
                ]
              },
              {
                "id": "57d96f80-1771-46d9-99cb-4fd1a54aa9f1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8d78a59c-cd77-4b26-8427-4146da04689f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90631520-3589-4e3a-8246-531e36270af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1c8331f6-1780-47ec-b5f0-acc093f691d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f78f39-2b8c-4d25-af23-4feda86caff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32600dd-4ace-481a-9a13-9ddbec2ba7a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d70644d-0c63-40a4-ba5e-ee18bafee962",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65861819-3a48-4083-b9d2-f6c35b7bb2ff",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e8749c-39d0-45ca-a90f-4f1339bd3cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "23901596-9753-4883-be40-8f9b28c79c4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e39dc4b-9a24-4e96-b3d8-125e65736c6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8eb42f2-faac-4a81-bcc5-cee10ce3c18b"
                    }
                  }
                ]
              },
              {
                "id": "9451c25d-6532-47af-9be0-c87d0c95ab8d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0773c627-d73d-49a4-9694-fce1e6669555",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5efa7e25-0755-436f-bb0a-48694228cd62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81a478d2-b481-43c4-87a5-a51215162e39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d1bb60d-8ee1-4474-9658-dd8385dfb0e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35c85798-b451-42fb-9b72-bff48a17619e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "97223b48-30c5-40c8-bc52-d0844c47dcbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04cce885-ec32-40d1-a980-b1890ca94f26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d818af08-fa27-4edd-8f04-01283cf88906"
            }
          }
        ]
      },
      {
        "id": "5368a41b-4039-4a51-8e77-41d7f4f7996b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60025699-1666-4541-b21c-b325d4ef808a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0ce0adf-69d4-43f1-ba12-5846579cae06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e973a68b-bf54-4944-a87d-bf3cfbc3488b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e494c6c1-d454-4e46-85fa-ab528615336a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c6ad94f-7aa7-4127-829c-275e22414979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfffff8-c1f5-4b55-9d13-3fdf4300b3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0853b52-8ee0-4104-860a-1472d14e38db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c9d1a26-f20b-482b-92c3-dcd334779cc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7802c167-7ebd-496b-bdaf-0c98aa82d34f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e26796f-5b61-4e63-b621-d23d1380a352",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f16df0a5-9cbc-4bbd-adba-d4c46be0d081"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a35164a0-4398-4d62-80b5-600f4faf8ddb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ac484a9b-89ed-4e2c-848f-09c86fdef9cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8fbd77b-2a9e-4630-aefc-b0c531e09fa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74f86458-8e47-4428-b5ab-3bc90b8fc684"
            }
          }
        ]
      },
      {
        "id": "05bcf2dd-c8aa-4ef1-8071-b008d3769098",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46331101-52d8-4d83-82fa-c7e2c795c141",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40a11b48-bc3c-4793-af09-5a1e3fa05a33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c971b9e-cfd9-41bb-8ee4-1e2a84a4b81e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2ef0aa-d27b-4d38-af3d-b41f7edc649c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b985b83-949c-4959-80a0-cc8407931db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ab0f57-8ccd-4069-96af-6ee9a132b486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91c48216-ab7f-49b8-8f3e-906c5b84c8d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63c2c83-e777-4c87-a159-e6ca332359b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4132698-12f3-49a4-8988-61416d5c8b32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4031d953-e846-4279-8d1c-219c142a7109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f7f56e-0ff7-40fe-bc06-f0de2c4feca0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fab43976-eb48-4ff7-bcff-4a653daa5114",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2fdf8532-54b7-4ec3-a45c-70e097e44f07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55685e09-a0a4-460a-8938-95e55d28ecdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5b2ae19-1d80-4979-a114-ad3448280871"
            }
          }
        ]
      },
      {
        "id": "199620f5-9a16-4d1b-a654-06c3965ab968",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fcc7ef2a-7172-4c40-98b6-9abf60effd10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61bc856d-5e35-45b9-9b92-601e429b5ffd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb533dc1-6742-4191-9aef-ba0066135530",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107305ac-b02f-42fe-b473-4e8d931a44eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03e4dbe2-3715-42a1-94fc-9ba3a6f7c832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e7a9a9-c42b-4b5f-b497-447bc73126ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21f335a2-5e55-405b-8266-c7c015df0522"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a394b51b-d526-4eb1-ab69-7617f0425a15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5d39f3-9ced-4f7d-a97e-7b9214073cae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc8da8e3-a551-4c18-a331-6afc6339bb71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d112020-c712-40a1-ab02-22f8c4429fb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce7bb87e-cb68-4f12-8f40-91b54bb83c69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e30c8e98-bf93-4dd3-87f5-ee0ad05d2fc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "436917ee-b24b-4428-b288-84313e847e23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b40fe264-c56e-404b-bf24-a22db26a535e"
            }
          }
        ]
      },
      {
        "id": "5b214c09-019e-4010-97af-94ad6edff98e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd96c197-3f42-4ba9-8f77-1a5cced2876e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ab2ec26-d142-47dc-9871-6c08baa3ab66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db798ca6-3a89-44c3-b5fc-f3f5318bd0db",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a89ad14-387d-4ae2-a019-37a3c3aacba9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f084bab1-2fc8-4849-bd96-49b31aad518c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.9473684210526,
      "responseMin": 5,
      "responseMax": 438,
      "responseSd": 28.630018017306252,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699144614826,
      "completed": 1699144643163
    },
    "executions": [
      {
        "id": "798cbe32-f8be-43e3-8891-b3fd258f52db",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d108cf06-2dfd-423d-adb3-80a63757e7fd",
          "httpRequestId": "6cbb1580-92bd-4178-9ed3-35a016e67ae9"
        },
        "item": {
          "id": "798cbe32-f8be-43e3-8891-b3fd258f52db",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a50b92d4-5ed7-4d85-8c70-9ef0d7d26107",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "6ed48a6d-9f69-4691-b733-464037fede32",
        "cursor": {
          "ref": "532fe057-1883-4491-a83a-126d11447028",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "69fe2213-f916-4814-96cf-1f8b0d045083"
        },
        "item": {
          "id": "6ed48a6d-9f69-4691-b733-464037fede32",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "13a9fa88-c51b-442c-acd8-db126bd7ef28",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d320a500-4aac-4d18-855c-96b391baefd1",
        "cursor": {
          "ref": "188ae8a1-4f40-413a-b749-ef5aaf7129c1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "28c858b7-0fc6-41aa-abe9-21f83fd2bdad"
        },
        "item": {
          "id": "d320a500-4aac-4d18-855c-96b391baefd1",
          "name": "did_json"
        },
        "response": {
          "id": "ae9b90c4-b686-4264-bcc0-c6b8ed22c1e0",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b719ce8-1b44-4662-a263-4a113aa25515",
        "cursor": {
          "ref": "7294eb95-e0ec-4ca6-8ac1-22f893722fda",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62b609f5-d746-46c6-b42e-a71578ff78ee"
        },
        "item": {
          "id": "5b719ce8-1b44-4662-a263-4a113aa25515",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9877fc9-8212-4997-a9ad-00b0336df24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b719ce8-1b44-4662-a263-4a113aa25515",
        "cursor": {
          "ref": "7294eb95-e0ec-4ca6-8ac1-22f893722fda",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62b609f5-d746-46c6-b42e-a71578ff78ee"
        },
        "item": {
          "id": "5b719ce8-1b44-4662-a263-4a113aa25515",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9877fc9-8212-4997-a9ad-00b0336df24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3c53db-3451-4dbb-af7e-999fcef588d1",
        "cursor": {
          "ref": "cc2ec658-49e9-452f-85fb-c125a25947ed",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "61b3813a-4203-44ec-9bad-4e1207cdaddb"
        },
        "item": {
          "id": "de3c53db-3451-4dbb-af7e-999fcef588d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1c516898-fd28-4198-bdb0-e6b706a584fa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b29da2-1194-42b3-9a3c-d4642d7fbfc8",
        "cursor": {
          "ref": "d2c1e6a2-f254-4f87-bcd1-135f998d7f37",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab7ff717-2031-4f6f-93b2-31a92e42725b"
        },
        "item": {
          "id": "f3b29da2-1194-42b3-9a3c-d4642d7fbfc8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "814d5ff4-0d9b-4f27-9b25-a80407df2521",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e92de9d-5376-448b-9171-53f0608edf9a",
        "cursor": {
          "ref": "ab70d4dd-97fd-4eee-a76b-0fb426c2bd04",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "43b7e309-9388-4972-bb96-966cf30967ae"
        },
        "item": {
          "id": "5e92de9d-5376-448b-9171-53f0608edf9a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ce39e03a-d8ca-4cec-829c-273f52541f30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b6ca5a-4aa5-4080-a4b6-44b2f7a1da2c",
        "cursor": {
          "ref": "fdf7d0dd-b339-4adc-a906-48698b7812ca",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3aa71ac3-f1f5-45d9-a075-9a09a93c13b8"
        },
        "item": {
          "id": "68b6ca5a-4aa5-4080-a4b6-44b2f7a1da2c",
          "name": "identifiers"
        },
        "response": {
          "id": "f16910c6-a012-4ff1-9853-34011d892d91",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e01df-f637-4b6a-9edf-fa7f330b2227",
        "cursor": {
          "ref": "51c72669-f6bc-4cda-8605-8fe9c0d1a9fb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df34bb6d-6edd-4206-af46-1971cc225b20"
        },
        "item": {
          "id": "be7e01df-f637-4b6a-9edf-fa7f330b2227",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c1e3277-2928-4e86-b371-7e18cb4e57f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec0134d-8d4e-4fa1-bbe6-3c20f765e56e",
        "cursor": {
          "ref": "b21a3b0f-93ce-47c9-9959-ee14890e337d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7c70316a-8044-4057-b903-285b99fdb6b4"
        },
        "item": {
          "id": "bec0134d-8d4e-4fa1-bbe6-3c20f765e56e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a3ff8e11-52b2-4d6a-83d5-12495424fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaa89b4-2988-43d6-89b2-11239c36238e",
        "cursor": {
          "ref": "85bec111-9f70-4c9b-93d5-b84be2ab6a92",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63da8ce0-398c-45d7-97d2-c5f40d163ad1"
        },
        "item": {
          "id": "2aaa89b4-2988-43d6-89b2-11239c36238e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3926564f-76c4-4800-9391-b583edb37ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad96e9ad-a25b-4178-8957-112ded8e13cf",
        "cursor": {
          "ref": "4604a83b-8591-48c3-89ab-23c35f399a1d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "79a7daa0-cec4-4dfc-ae26-07f305f40f50"
        },
        "item": {
          "id": "ad96e9ad-a25b-4178-8957-112ded8e13cf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e54118ec-a06f-4749-8de5-3bdd3ebb88c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59877ea9-8c01-4616-b8a5-7888755b5c7c",
        "cursor": {
          "ref": "087f9cce-7e54-4f0d-97d4-c87fbc783461",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00beb7c9-40dd-4962-bb9f-69e6670616e8"
        },
        "item": {
          "id": "59877ea9-8c01-4616-b8a5-7888755b5c7c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4a981ca3-9238-4e3e-8007-a94bd698bbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644f7173-8647-4e84-8820-880f45e88623",
        "cursor": {
          "ref": "c9c88018-c627-4292-ad9a-dd6a4ba59869",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e90efe09-709d-4a37-b59b-957ac3ac0873"
        },
        "item": {
          "id": "644f7173-8647-4e84-8820-880f45e88623",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a776b2a8-e4a1-4c45-b1fe-9d8836652c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff65dea-4bff-43be-b061-fc9bc5ba3a73",
        "cursor": {
          "ref": "337457ec-9511-434d-ba9e-9c746b4f8364",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fdcd5f18-1846-4dad-9205-a8f43601cffe"
        },
        "item": {
          "id": "bff65dea-4bff-43be-b061-fc9bc5ba3a73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "51402f09-07e5-4e23-a649-4600ff50e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2791fb31-b5c8-4f4b-a7ad-ba37185b4d29",
        "cursor": {
          "ref": "39ed2d47-8988-41f2-8183-f57037e14442",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ab6d514a-80de-4706-9972-836df48a612a"
        },
        "item": {
          "id": "2791fb31-b5c8-4f4b-a7ad-ba37185b4d29",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "72dcb7dd-ee65-4496-90f1-719d904078cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06400a0-a490-4387-a4a7-39d9372e9960",
        "cursor": {
          "ref": "0664613e-d336-4aae-b923-945af9e3bcb6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fecceed7-e63f-4b52-b0a6-dfc934fb6c9c"
        },
        "item": {
          "id": "f06400a0-a490-4387-a4a7-39d9372e9960",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c381f237-7fe4-44a7-877d-588018eed195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b8cdf-2786-47f7-a9e0-45d58dd7bc37",
        "cursor": {
          "ref": "7c743b42-a08c-44ae-a869-2fca6260161c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "35b5b13b-80bd-4b70-9af5-5f0ac698698d"
        },
        "item": {
          "id": "e07b8cdf-2786-47f7-a9e0-45d58dd7bc37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2734a53-12f4-4f22-8fc7-527d504509e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29c9c56-6edb-49ad-8c9f-8a5b4f42b692",
        "cursor": {
          "ref": "6e7ab91c-74e0-4b0b-940f-81a32145cfe0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "25470f6a-a581-42dd-8941-3269309a547a"
        },
        "item": {
          "id": "f29c9c56-6edb-49ad-8c9f-8a5b4f42b692",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "649515cc-157c-4a88-a24f-8809832bb9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9877500-f19e-4193-8ec1-498a580fb74a",
        "cursor": {
          "ref": "dcb7b9d6-5d88-4f86-922b-e3175232c2f4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7c60d17e-6192-4090-8fa5-6f726f36a67b"
        },
        "item": {
          "id": "d9877500-f19e-4193-8ec1-498a580fb74a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "133231ea-1c73-4b3b-9aa8-c19b9e4865c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0439c6ed-67b4-490c-a427-218d7a905b82",
        "cursor": {
          "ref": "cd008931-9e24-4f02-86a0-76ed5ee6c097",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d1bdc94d-2854-4e64-a6b0-2c72c5dc7b78"
        },
        "item": {
          "id": "0439c6ed-67b4-490c-a427-218d7a905b82",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6e4e1261-54e1-4b6a-b1f2-e55e836e1a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba780d73-22bd-4a82-b9c1-21f5c59f40d9",
        "cursor": {
          "ref": "e5f21838-1ecd-4493-b2af-0a0318459024",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4843e551-7fe6-429c-855a-2bd64a6c9f6f"
        },
        "item": {
          "id": "ba780d73-22bd-4a82-b9c1-21f5c59f40d9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9b4e14e0-6a3d-42f7-a47e-bf5bf3498d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5896237-51cc-452f-93a7-b8983ef3429c",
        "cursor": {
          "ref": "5e6879e1-b856-4b75-977b-d84d8cc87f50",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "67a1eaa3-17cc-44a2-9316-896be8e475c5"
        },
        "item": {
          "id": "e5896237-51cc-452f-93a7-b8983ef3429c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9290bba3-0b9e-4e6c-a2a4-43899acadd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f95ae2-2add-41ac-a2e7-7f6082dc87a7",
        "cursor": {
          "ref": "82724aa5-0540-4a4f-90ca-2aaa99230725",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "00c91c95-c9a5-4ce5-b97d-409199a90afb"
        },
        "item": {
          "id": "e4f95ae2-2add-41ac-a2e7-7f6082dc87a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6b92456b-5dbe-4661-8aa2-3a745fe4dd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d001078-b472-4c9f-8fab-84c8166f06d9",
        "cursor": {
          "ref": "cd72cca2-06cc-4d17-82e4-1178c55fdc74",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e149dd15-b9a7-4e2e-bac0-a7eb997e9799"
        },
        "item": {
          "id": "5d001078-b472-4c9f-8fab-84c8166f06d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2e732d6-7fbb-4596-bb0c-5160c39723b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5f92e9-ddcb-45b4-bf0a-e3944019cd42",
        "cursor": {
          "ref": "8fb43a57-4681-4f1e-ba93-fb248f2073f3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "20ed9d70-6ff1-46e6-b73c-37570a09ffa9"
        },
        "item": {
          "id": "fc5f92e9-ddcb-45b4-bf0a-e3944019cd42",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d785e64-9e86-447f-9d9b-f0c9069b91b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae68e64-3bab-4a22-bbcf-9c95f4f92995",
        "cursor": {
          "ref": "db287688-6477-41bc-a880-69f079e552e6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1efe300d-4d0d-4bad-ab63-59b86d4f8de2"
        },
        "item": {
          "id": "aae68e64-3bab-4a22-bbcf-9c95f4f92995",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "03b31eac-2572-4d20-9f78-d7c0a043184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a25ce78-f28d-4bf5-8073-f1d96abdd507",
        "cursor": {
          "ref": "41540004-77e5-4d48-b68b-3ec745e4b57c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "311bf60d-9560-4127-8cf1-98b5df69b4a0"
        },
        "item": {
          "id": "1a25ce78-f28d-4bf5-8073-f1d96abdd507",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b87f1092-10b5-424d-a5f6-ebab9708bcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae556c9a-9cf9-414b-92a7-26ee8ec79436",
        "cursor": {
          "ref": "24032fc8-40c5-452d-bbbc-897ba7774e24",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a2661e62-6a0e-435d-b9cf-e14e4c4e25e1"
        },
        "item": {
          "id": "ae556c9a-9cf9-414b-92a7-26ee8ec79436",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a696d1cd-3643-4174-a6ca-af666b84bb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ed5c23-68eb-469f-b6f7-ed81c80a856b",
        "cursor": {
          "ref": "f654256e-6e27-4041-ade3-7f863e286f17",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6af10ac6-6ad4-4377-be87-8591195cb778"
        },
        "item": {
          "id": "98ed5c23-68eb-469f-b6f7-ed81c80a856b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b053eae2-f677-486d-a48c-fd27f02f0c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985e9869-81b7-4ce9-8db5-cfc52c65549c",
        "cursor": {
          "ref": "36af47d6-16f7-459b-9114-681a9852df32",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a78ef36-a4b7-475a-bfbd-f670421ce651"
        },
        "item": {
          "id": "985e9869-81b7-4ce9-8db5-cfc52c65549c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c93bcc79-a62d-4471-8d23-cad06f356dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1eb24-f4d9-486a-916f-98dd281c314e",
        "cursor": {
          "ref": "a92c87dd-4d03-435e-bf3a-d80dbbc036fb",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f27c101-baa9-4948-8e67-49eb6210bef9"
        },
        "item": {
          "id": "12c1eb24-f4d9-486a-916f-98dd281c314e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "11601e9e-5f58-489a-b988-7c6f47612a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf023d17-56a2-45f3-b06e-43fd665f1969",
        "cursor": {
          "ref": "40a62d21-52c0-4bd1-9e55-f92c6d3fad5e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7d894615-6bf4-4d47-9aef-4c9740e966c7"
        },
        "item": {
          "id": "bf023d17-56a2-45f3-b06e-43fd665f1969",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "90d2701b-8cd0-44c0-99f2-1b629a52cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fe815d-87ba-4e45-b549-281b233f789b",
        "cursor": {
          "ref": "55cb2a72-cd1f-4152-a78a-2a0cee70a9f2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bf63d0ed-d354-429e-9715-8aa4bcd286e6"
        },
        "item": {
          "id": "c9fe815d-87ba-4e45-b549-281b233f789b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a097e533-a02f-48a3-9090-5e2c803be1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a85ebd8-b7d8-4a4b-afd1-59f58452b4f5",
        "cursor": {
          "ref": "e39b2f8c-92e2-4475-91ac-fbb1048d2e33",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a1f4142b-c4fd-4cf8-bdf6-f0ed59b8e3ec"
        },
        "item": {
          "id": "4a85ebd8-b7d8-4a4b-afd1-59f58452b4f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5f61178-620e-4eed-86ba-0a5d2be00f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da215f-2b3c-4d45-be9d-b24a1bebaf2b",
        "cursor": {
          "ref": "6e440eff-c45d-4b04-bc02-273d09454b15",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2a0dbe73-0d4d-46a0-b4b4-ba8cce2b5686"
        },
        "item": {
          "id": "50da215f-2b3c-4d45-be9d-b24a1bebaf2b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd3dcfd1-2e9d-4394-9520-9acdea7a34ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c5c9c9-cf6e-48ea-b35d-ffcf5029bb97",
        "cursor": {
          "ref": "8610bb84-c589-4dc3-93d8-6a5947941f8b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2311ed58-829e-4380-80e5-ba126afb5453"
        },
        "item": {
          "id": "08c5c9c9-cf6e-48ea-b35d-ffcf5029bb97",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "55c76ede-408a-441d-bf2a-13daaf3672cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c579b5-5af4-4168-a91b-a5edaa9b64e3",
        "cursor": {
          "ref": "281bd162-7016-4a14-a498-a1cc57615f54",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0987267f-09f1-4096-a0a1-06a528dd7a64"
        },
        "item": {
          "id": "46c579b5-5af4-4168-a91b-a5edaa9b64e3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "abbcd970-40c9-4f6a-921c-2f800c95c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177b9d4b-d067-4bc5-8ba8-e82a7da76123",
        "cursor": {
          "ref": "d537a2a6-2425-40c0-bf4c-6bf1ccb85d10",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "09009b11-8623-41d6-a4bd-1457cd899209"
        },
        "item": {
          "id": "177b9d4b-d067-4bc5-8ba8-e82a7da76123",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "afa079a3-d431-443f-a41b-7743f711fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d322115e-4035-433a-8024-f6a7602a1e7a",
        "cursor": {
          "ref": "a357ed28-5f0d-429d-8797-d3a780483f99",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a3c727c4-17c2-4ac1-9dda-cf9d40b78d21"
        },
        "item": {
          "id": "d322115e-4035-433a-8024-f6a7602a1e7a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3057515e-3b9a-4be3-9176-3dd83966b3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654e93d8-25de-439c-b835-abfda3d8ff65",
        "cursor": {
          "ref": "b20d63f8-eeff-4344-a9a7-27a076b09734",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8ba7090b-f001-4e6b-ba8e-b3f4fc0515bd"
        },
        "item": {
          "id": "654e93d8-25de-439c-b835-abfda3d8ff65",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1642f75-c6c6-4303-96b7-06977a59dac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814a27a-8e79-4724-b1a2-c1cbd7130ea0",
        "cursor": {
          "ref": "b529d0be-fe7c-4c1a-841c-8eaf7e8dc1b0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7b1a42ce-8a3e-441d-aeed-8662a178d8bf"
        },
        "item": {
          "id": "a814a27a-8e79-4724-b1a2-c1cbd7130ea0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97be094d-4b07-48bf-9341-a26bd97df7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e1ef94-b494-4176-a9ac-88ea6bbd8c13",
        "cursor": {
          "ref": "ac88e0eb-222a-4478-8c30-287c8bc5536f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b475ac02-d400-4286-9100-fd5b73d3a6f3"
        },
        "item": {
          "id": "f6e1ef94-b494-4176-a9ac-88ea6bbd8c13",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7932b8c7-496f-4f6d-91a0-c26435578f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60fe96e-9161-46ab-ad96-d7fed791ca0c",
        "cursor": {
          "ref": "ee811f6a-b15a-45bd-886f-424428913261",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "707553e7-51b9-451b-82d6-9e82d94410a8"
        },
        "item": {
          "id": "f60fe96e-9161-46ab-ad96-d7fed791ca0c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b4f309b-3599-46ca-b1f4-1dcf13b727ae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69598353-b7a7-4204-a8aa-753837f30b97",
        "cursor": {
          "ref": "c86c9676-d751-4379-8985-fed62ceabb40",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2380876c-2e3b-44c5-b887-3c025a6e3a08"
        },
        "item": {
          "id": "69598353-b7a7-4204-a8aa-753837f30b97",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "afaaca2c-7006-4d0f-985f-4a8ba1071969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3367451-e4e3-4386-a745-249569c585a3",
        "cursor": {
          "ref": "6974bd67-5ef1-4b74-8cad-22d5c372bc6d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69681afd-2c36-43d3-9e34-94667738216c"
        },
        "item": {
          "id": "c3367451-e4e3-4386-a745-249569c585a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf4c3415-e328-4d18-93c9-b909f77de4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f746c-acbe-49f5-b533-e7b2284e6a36",
        "cursor": {
          "ref": "fda1dea9-9d9e-4b38-81a5-5c652382ba2f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1856d0ec-0caf-451b-8a65-b448051d0dfa"
        },
        "item": {
          "id": "f41f746c-acbe-49f5-b533-e7b2284e6a36",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f9f7417c-1855-45d2-a5ac-5019d07cb2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e34762-4af1-4a90-a12c-a22424a31d38",
        "cursor": {
          "ref": "9759a4e2-8f30-4ebd-94c4-9181b81f4c18",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "176f78cd-8456-4716-9e27-7d08c5f358f2"
        },
        "item": {
          "id": "d1e34762-4af1-4a90-a12c-a22424a31d38",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1212acf2-0833-4fd7-bda8-c3d8f0a91e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675f6b09-ca96-49bb-a677-c0d45e471934",
        "cursor": {
          "ref": "44403002-96e8-4e0d-a0eb-3cdfb9d25f43",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "940a376d-dc81-4e14-a8fa-4d4cb212e5c7"
        },
        "item": {
          "id": "675f6b09-ca96-49bb-a677-c0d45e471934",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0cb3d310-7e35-4e8b-b37c-f33ab9a0e4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5038d3-5874-4bfb-a7a3-2ca861559873",
        "cursor": {
          "ref": "60d2f127-3346-470c-b2b2-941c50985287",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e5532be7-0464-40cf-b8ee-d3836e508240"
        },
        "item": {
          "id": "df5038d3-5874-4bfb-a7a3-2ca861559873",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0d468c89-7149-481c-8ae5-cf67b2c5c0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47750b13-22d1-4818-b93c-1360e86e4af9",
        "cursor": {
          "ref": "abc164e5-14cf-4b66-830d-86af3f573c46",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6fec6c32-3e69-4ee5-ae5e-c399911db4f9"
        },
        "item": {
          "id": "47750b13-22d1-4818-b93c-1360e86e4af9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "07e83053-1530-4814-ac0e-956202f2b930",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a11f2-3894-4872-b17c-54418f4181fb",
        "cursor": {
          "ref": "679e5825-b712-4a2c-bbca-5b4464cda818",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c3b6ffea-af1d-436f-bc37-068bf434265f"
        },
        "item": {
          "id": "1a0a11f2-3894-4872-b17c-54418f4181fb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "97afeee2-a586-450b-9584-1b1929bdd720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27997090-e256-4e9c-ac93-7bb4648fd5e1",
        "cursor": {
          "ref": "b45aea2b-f299-498a-9e22-1090d71b4e81",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "16a5101c-bbda-4865-9421-432688ed0914"
        },
        "item": {
          "id": "27997090-e256-4e9c-ac93-7bb4648fd5e1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00ed772b-194b-4d1a-baf0-79a2da2465af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c90cd1-e7cb-4ee5-a9d8-1002d4509796",
        "cursor": {
          "ref": "b584b8fe-5cf7-4c39-8ca3-4b52be05860c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0cd2fc47-5dbc-4599-ab6f-275e1c00282e"
        },
        "item": {
          "id": "93c90cd1-e7cb-4ee5-a9d8-1002d4509796",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "defbcc61-f653-452e-8bf7-f302dde35c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308e06b8-704a-48b0-bdea-2c58118362be",
        "cursor": {
          "ref": "0f1ea4a0-c2fd-4de5-9da0-a177e390ab5e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8c10687b-4250-4aa7-a1bb-3b3537950be1"
        },
        "item": {
          "id": "308e06b8-704a-48b0-bdea-2c58118362be",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "917d0bec-c156-441f-8b61-2bd2ccb66562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9e0e86-ab78-4d42-8bef-574d4264ec12",
        "cursor": {
          "ref": "0722fd26-a5a2-4189-b7c1-85091fd5f8a5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bcf58de6-d01e-4b98-b35a-0f4aafb461d4"
        },
        "item": {
          "id": "0a9e0e86-ab78-4d42-8bef-574d4264ec12",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "20eb5022-0a18-4443-872e-9ec730250065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd209a09-1a7c-4d31-b456-304a35abdda3",
        "cursor": {
          "ref": "65dc5697-0bf0-455c-9836-4910e3d38ae6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2d5c60b0-571c-4516-9a17-55711cf70a9b"
        },
        "item": {
          "id": "dd209a09-1a7c-4d31-b456-304a35abdda3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af88f109-bbee-4194-a925-0a259e8b9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a28831f-ee34-4aa3-8a11-b4c75224adaa",
        "cursor": {
          "ref": "677c17d7-8111-4b99-9c41-6ad4a9d08c64",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "afe75f81-3a85-45c0-847b-271e9b3d1ca5"
        },
        "item": {
          "id": "1a28831f-ee34-4aa3-8a11-b4c75224adaa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ae64bd83-02a6-4a86-b3b6-bf1b03024e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d5c923-fbe9-4a51-b31c-88b5eb6af060",
        "cursor": {
          "ref": "03393d97-53fd-4c3e-b79a-e44973683915",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0c53ba12-7a83-4bb2-9f14-a407e64cd637"
        },
        "item": {
          "id": "a0d5c923-fbe9-4a51-b31c-88b5eb6af060",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cbf80d9c-5aee-4a3b-9e68-1f5add09e15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3253d256-f37a-449b-a99a-5ab06fe8f667",
        "cursor": {
          "ref": "fe70f832-e317-4231-9ae2-2b3540017583",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "89e733bb-0d9b-4ee8-bf60-5051d1a7054b"
        },
        "item": {
          "id": "3253d256-f37a-449b-a99a-5ab06fe8f667",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1849e661-70b7-48bd-af7b-442789ec5a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46fba5-9b84-46fc-9057-006ad526a5e6",
        "cursor": {
          "ref": "ffd4cc5c-84bf-454a-80d6-8e745e453126",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef3ca88b-85cc-4f33-9124-a9c1b79d3ee2"
        },
        "item": {
          "id": "dc46fba5-9b84-46fc-9057-006ad526a5e6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "34c697c6-9164-49ef-a49a-e7a7744944c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2db37f-75e7-4116-b178-17673cded013",
        "cursor": {
          "ref": "c9fe13b9-ce4a-4fe5-a615-2168b8a815c7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "79e76eef-2aa5-4d50-8a0e-fab0bab26ca8"
        },
        "item": {
          "id": "8b2db37f-75e7-4116-b178-17673cded013",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3ac9b359-b501-456e-bc40-f01c38e0e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cab82c-b71c-4147-a6b9-eebb7f39b883",
        "cursor": {
          "ref": "689a8012-66bb-4ce5-8898-c2018fcd78f5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7077fb8-484f-47d2-9050-eb0bd4036134"
        },
        "item": {
          "id": "21cab82c-b71c-4147-a6b9-eebb7f39b883",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "531f2a59-266f-44ff-9867-50394eaac01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0187951-3871-4e01-956a-5242aed2ae73",
        "cursor": {
          "ref": "12d7c80c-fc00-4ac3-8c14-fb86bd352f09",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e0de8aca-6101-4735-af57-a43f015e992a"
        },
        "item": {
          "id": "e0187951-3871-4e01-956a-5242aed2ae73",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4ad5b9ab-0860-4d86-a373-50d42821a52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd3d22c-d087-4d23-9a2d-07a9c86713c7",
        "cursor": {
          "ref": "cab77064-ec63-4d33-a09a-6e331c4c5686",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b25c77c-4640-444c-8cb6-40301f5d63e2"
        },
        "item": {
          "id": "bfd3d22c-d087-4d23-9a2d-07a9c86713c7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d3cea0df-5ade-429c-971e-0dc34be57802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db322ac9-e5d6-420b-abd4-edc59392e672",
        "cursor": {
          "ref": "c60fe290-19fd-4d04-9cc6-4c776a969bd2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a362025-80ff-42d3-818f-00567f6140c2"
        },
        "item": {
          "id": "db322ac9-e5d6-420b-abd4-edc59392e672",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "edcf9422-bb3d-40fb-8873-bed1e72d416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381c9403-143c-4710-8808-bcd3931d04c0",
        "cursor": {
          "ref": "e7558369-6a66-454c-91ae-982fc4007fb8",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c0e3b1b8-2bdb-45be-b838-5a1020734b09"
        },
        "item": {
          "id": "381c9403-143c-4710-8808-bcd3931d04c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "909d59b1-1771-4f77-b60a-d76ba14c72e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4d1ef6-be12-4a34-a3fc-798ec4cc15b3",
        "cursor": {
          "ref": "ec421ffd-43c4-46c9-9e08-0f62f1e4f2b7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "50afdd20-2635-4f5a-985d-e09c6aa0fd80"
        },
        "item": {
          "id": "8d4d1ef6-be12-4a34-a3fc-798ec4cc15b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3968112e-a30a-4328-b331-72c990cb5a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268922a8-8b80-48d0-bdf2-dcd8684c5aec",
        "cursor": {
          "ref": "67f9b648-66be-4780-a1d5-5731272d863c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f9e0af44-6477-4619-90cd-da27f9a60e46"
        },
        "item": {
          "id": "268922a8-8b80-48d0-bdf2-dcd8684c5aec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "867be1ec-d3af-4c6c-92d7-8dc89b22a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa0d50-1e66-4726-86f3-6915ea7eb235",
        "cursor": {
          "ref": "bf67fdf4-585c-4536-9152-c5e25a063bee",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "edbbcd98-8e0d-49b1-bc55-25925dfc2616"
        },
        "item": {
          "id": "57aa0d50-1e66-4726-86f3-6915ea7eb235",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "43182f67-887b-4e69-aa4a-d4911176ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225a6540-4ce4-4312-843e-4ab20a9af040",
        "cursor": {
          "ref": "a63e3ae5-c815-48bd-bc1e-75638901b4d1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4546dabc-70aa-4f93-ae41-c9feef34539b"
        },
        "item": {
          "id": "225a6540-4ce4-4312-843e-4ab20a9af040",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a78d2485-57c9-4946-8db4-b41df938f506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2720454-0664-484e-9774-e52533921309",
        "cursor": {
          "ref": "dae7ff93-6279-432d-844a-2e32693e3511",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d13c4f3-df19-4ece-8081-d5f6c11f2471"
        },
        "item": {
          "id": "e2720454-0664-484e-9774-e52533921309",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8efc6f3b-79b5-4132-804f-ef22452f470f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128bcd8-cc93-4cda-8fd0-cfd57325cf46",
        "cursor": {
          "ref": "e0844bb8-cb6d-4561-b693-426bc438eb3d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1173370d-488e-4d4f-9b39-554116e1d278"
        },
        "item": {
          "id": "1128bcd8-cc93-4cda-8fd0-cfd57325cf46",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0cd08a85-e161-414c-aaf8-2989099ac582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ad8496-ca3b-4123-9c58-9dd39d2438fa",
        "cursor": {
          "ref": "240b4663-e54d-4e8b-ad1f-c59efba596b8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9b827f36-8081-42c2-a12c-26e4ef62b2d3"
        },
        "item": {
          "id": "e7ad8496-ca3b-4123-9c58-9dd39d2438fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a81b84c5-22ca-44db-97de-46a218f04f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6288fd6a-c6be-4af7-a2f6-314b4c487e2e",
        "cursor": {
          "ref": "50de8734-851c-441b-b2dc-7bab969b05ee",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c3e7a153-7252-4d96-b310-891fce13c286"
        },
        "item": {
          "id": "6288fd6a-c6be-4af7-a2f6-314b4c487e2e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c4c5b759-21fc-4b04-980f-a70c1ff9ac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0ce35d-09b7-41f1-92f0-fdff2d4983f8",
        "cursor": {
          "ref": "109be8db-ec4f-43c0-b6bc-63d81cd6f27d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ae4458f-f415-42c3-a8a4-c46ba91ecbdf"
        },
        "item": {
          "id": "cb0ce35d-09b7-41f1-92f0-fdff2d4983f8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "94c19dbf-50f6-4f35-a66d-926752fd40f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1158fd-fbb4-4acc-b05a-7bb33e2c7f13",
        "cursor": {
          "ref": "9451b7fd-e30d-430e-8038-893751f2dc34",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "451faf50-31f7-4ac4-a15c-0c96ca54b507"
        },
        "item": {
          "id": "de1158fd-fbb4-4acc-b05a-7bb33e2c7f13",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a2e93346-1b74-450a-b00d-8f0d1f0856a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f2e3f-ebc7-422a-89fd-a36aeb5420ed",
        "cursor": {
          "ref": "d6188b69-71ca-432b-9a8c-fef3608922f6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5af2e341-37fb-4350-80fc-0586bec4ab84"
        },
        "item": {
          "id": "090f2e3f-ebc7-422a-89fd-a36aeb5420ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "48a8d6cb-c0e4-4041-9f5a-53423ad4f981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25317fd4-fcf0-4c7f-8987-14bf98170469",
        "cursor": {
          "ref": "016d5f4c-817e-48df-bc68-2d9c2f973a08",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ea9228e2-f52a-42e2-923f-b85126a11ab1"
        },
        "item": {
          "id": "25317fd4-fcf0-4c7f-8987-14bf98170469",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16597692-50e4-4776-b355-956cff90f461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d868acc3-aaf0-4aac-86d7-8f48eab14813",
        "cursor": {
          "ref": "46a6299d-9a19-4a4f-b9fa-b5299ab5a59c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "20dffb94-42a0-4aac-a4f3-09666d4b22f2"
        },
        "item": {
          "id": "d868acc3-aaf0-4aac-86d7-8f48eab14813",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "24dd8600-326e-420c-b637-4005d1306c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b993b1-b275-4def-a6b4-51856658b063",
        "cursor": {
          "ref": "dcf150e5-21d7-433c-a794-338395c446c2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d2877fde-deef-413b-a27a-6451ff3f46a6"
        },
        "item": {
          "id": "34b993b1-b275-4def-a6b4-51856658b063",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cddc8315-af3b-4f6a-969d-49991400dee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733c518-18b9-40e8-8610-6873bbfe06b8",
        "cursor": {
          "ref": "f460f804-6a4a-4db1-8335-ae3773fc8a83",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bcf3f9d3-a1d6-4ccc-a969-0829d8c59fec"
        },
        "item": {
          "id": "a733c518-18b9-40e8-8610-6873bbfe06b8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ca57223c-9911-4e8f-8650-a195c45d008c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b59120-4b2c-467f-af87-0914e0860404",
        "cursor": {
          "ref": "cd5546f4-2683-4f58-89e3-3dbf7cbd316b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6032247f-5c5c-41c3-b387-dc8490999a38"
        },
        "item": {
          "id": "c4b59120-4b2c-467f-af87-0914e0860404",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4161283e-cb56-4e45-9774-90e7df855fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca42267-09be-4d44-846b-9ac7b554caf0",
        "cursor": {
          "ref": "048cb05c-498d-49dd-8132-e05e5a68d146",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "24c601e3-8c93-4888-9ede-ffcee48dcd8c"
        },
        "item": {
          "id": "7ca42267-09be-4d44-846b-9ac7b554caf0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2b3210b7-0d3e-412f-ab49-0389ac0394a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a108e88-7dd1-4674-b404-cafbb3636347",
        "cursor": {
          "ref": "f6939b5d-4ef5-4c14-b65a-130b8032eae0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b013d3f4-6447-48e6-9cbc-3159d5b758ce"
        },
        "item": {
          "id": "5a108e88-7dd1-4674-b404-cafbb3636347",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20d3289f-04a2-4ec6-a124-39a4a7851937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5b3eeb-5d90-4d27-8e17-9294ce7d719c",
        "cursor": {
          "ref": "84526d34-1b55-45dd-8c32-0a8cd9569724",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bfac7d9a-2719-4889-bfd2-a767cb4fea8d"
        },
        "item": {
          "id": "be5b3eeb-5d90-4d27-8e17-9294ce7d719c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dd5993da-8dc1-4650-b0f6-b65e9eee12b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5a3efd-26f3-4719-a74d-9becd7b4ea9c",
        "cursor": {
          "ref": "672b162a-5771-4f8b-83d3-e49d0c608df3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "439ef996-db0c-4fce-9ba9-e624600a92dd"
        },
        "item": {
          "id": "9d5a3efd-26f3-4719-a74d-9becd7b4ea9c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c94fa08d-fcb7-4469-bc06-1fd25596bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a371005-9483-4bb7-9e89-dcb386d5a9ba",
        "cursor": {
          "ref": "17966b3e-ace3-4b67-9f6e-941adfe0e787",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "75918299-0357-4d50-acab-36a37927eb48"
        },
        "item": {
          "id": "8a371005-9483-4bb7-9e89-dcb386d5a9ba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b6afa718-d2e4-4449-89cf-b859e28ea664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c975a380-f3f1-4ba6-8e3b-b5946cddd962",
        "cursor": {
          "ref": "c7400243-6c28-4029-84d0-c6d1e4c75782",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f9162d1-282e-45e7-ba82-49069ca9a521"
        },
        "item": {
          "id": "c975a380-f3f1-4ba6-8e3b-b5946cddd962",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4cb3b53d-46f2-4773-aeef-aed3890fe11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f478f0-9d36-4da1-9a3b-c71ac277775e",
        "cursor": {
          "ref": "ea4671f1-097d-426f-a29c-ea774ae01af0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "565b6b28-412b-4d5c-baf3-ce88e4f593c8"
        },
        "item": {
          "id": "03f478f0-9d36-4da1-9a3b-c71ac277775e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "17464a85-ce80-4080-8ba0-772630381c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a53d48-4e5f-4c12-abff-211ecdad7af4",
        "cursor": {
          "ref": "bcaa975a-9257-4a8f-b696-e041b478979e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3eb66471-b0ee-43f5-b16c-81f75426f531"
        },
        "item": {
          "id": "b1a53d48-4e5f-4c12-abff-211ecdad7af4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8ea52c44-f380-4ac5-88df-e2c75eab3d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a428c38-388f-4c77-a877-fde7d1466d4f",
        "cursor": {
          "ref": "8d54e1ea-99f8-4638-bcf6-5ef898d1ac9d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8b28313f-3b90-4e7f-9b34-36b17e8d1a5b"
        },
        "item": {
          "id": "4a428c38-388f-4c77-a877-fde7d1466d4f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "807c2189-148d-4c2a-9e93-959366a392c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b576a58-c170-4cec-b367-0746c7e81c04",
        "cursor": {
          "ref": "e86b50c2-ec0e-43dd-8b03-f581bc7a269b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e1890727-5d2f-408c-883d-39131f299114"
        },
        "item": {
          "id": "6b576a58-c170-4cec-b367-0746c7e81c04",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "82021012-ebeb-49e3-80ba-4bec55877d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49c218-cf45-4b96-bd6d-a9ea94bc6412",
        "cursor": {
          "ref": "956d24d4-c4f6-4d7b-84ef-3610c9ff607d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0092e086-0cc4-4289-b36b-94df47c32f0e"
        },
        "item": {
          "id": "5f49c218-cf45-4b96-bd6d-a9ea94bc6412",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2bb97383-568e-4329-9862-509416d837ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd21c7-882c-4216-a66d-348569bdc03c",
        "cursor": {
          "ref": "427ffd43-2b4a-44f9-8ac9-ce2b12c56ce0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0d441945-6531-4cff-b5ec-0c8da1e59661"
        },
        "item": {
          "id": "0dbd21c7-882c-4216-a66d-348569bdc03c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2a44f9af-f501-4d7a-8cdc-c7b8909fa489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f6cf76-d1be-4e80-be51-da0c6d9467c8",
        "cursor": {
          "ref": "cc3c3922-4565-4f3f-8808-ec1eabcd42dc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "59369312-ac26-42eb-9980-3d7e986cb97b"
        },
        "item": {
          "id": "e9f6cf76-d1be-4e80-be51-da0c6d9467c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e7e22ea2-67c5-4f0f-9699-62421c9ae43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89bf2d1-1deb-4fd5-ba47-5b660b488c66",
        "cursor": {
          "ref": "6907aeef-8184-4f64-9ea4-85188bac196a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0cf73d25-e0d9-4b0b-adee-96e481bcbaef"
        },
        "item": {
          "id": "c89bf2d1-1deb-4fd5-ba47-5b660b488c66",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2414d20d-f969-4a53-8f49-a852add86ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753c90ab-4b63-4ec0-a61e-bd2b2fbeea4a",
        "cursor": {
          "ref": "382e8dd0-bc84-411f-9cd4-3abd793ffad4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6c4c3b1f-ee1f-4d85-a0b8-3bf54d8145e7"
        },
        "item": {
          "id": "753c90ab-4b63-4ec0-a61e-bd2b2fbeea4a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f6388a34-56b4-4ed8-8d56-d867466d49b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db7957-0fc8-497a-8576-e5d3de0c1d8d",
        "cursor": {
          "ref": "34442ac0-c120-42ce-834f-d1d5adc9dffd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d99dde2-f24e-4c18-9566-18907d28a0f9"
        },
        "item": {
          "id": "78db7957-0fc8-497a-8576-e5d3de0c1d8d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "72ae6451-c30a-40e4-b1d8-8cb96f35ab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527107b4-be53-43c7-a061-591eb5f98191",
        "cursor": {
          "ref": "ed40bf73-52d4-4fe1-be76-75fde295d463",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d5ba9cf-1ac6-408f-911b-c7051a1eaf38"
        },
        "item": {
          "id": "527107b4-be53-43c7-a061-591eb5f98191",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8da8726a-86bc-40bb-bf1d-07f0116d58da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b200bd94-d52b-436d-a877-3e4568e1c824",
        "cursor": {
          "ref": "4ac0c64e-0112-4573-8805-079d7d5897e2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5706c268-ebc7-4c1c-806c-b48eef998aef"
        },
        "item": {
          "id": "b200bd94-d52b-436d-a877-3e4568e1c824",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc795bb4-e5e8-4347-ba74-e5ddd18380a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e993f5a-9fed-43d8-b248-ec5cc9819a2f",
        "cursor": {
          "ref": "848dc612-0699-4afc-8e71-8e4c3fa8ea16",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c64b8f4b-0104-4e3b-860c-fcac71020f11"
        },
        "item": {
          "id": "8e993f5a-9fed-43d8-b248-ec5cc9819a2f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3998297a-90ac-483b-8881-b928f6225629",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6608593e-6c3e-40e4-ae29-e4fcb0f8f4d3",
        "cursor": {
          "ref": "2f35e8a4-c655-4b0e-a462-855387755e31",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3668e70a-8c7e-48b7-9109-e6c07a187aa1"
        },
        "item": {
          "id": "6608593e-6c3e-40e4-ae29-e4fcb0f8f4d3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aee14fde-4df5-4347-b22b-a5b3cf47b092",
          "status": "Created",
          "code": 201,
          "responseTime": 438,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0560b1-f928-4d86-986d-5bbbe7b73c4e",
        "cursor": {
          "ref": "f53b954a-27d3-4f32-8a97-796c1dcbafe4",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "30a0b7fd-c13c-43c7-b5f0-eecc44ab66bf"
        },
        "item": {
          "id": "0c0560b1-f928-4d86-986d-5bbbe7b73c4e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9f59c7e2-62b2-48a8-b8c4-ab4086eb2671",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "25df7195-259e-41c0-af6b-7374933be969",
        "cursor": {
          "ref": "a8dda79f-9cfe-4053-99ba-29b13540f73d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9da75eef-9542-4595-be2b-39af3a01e01f"
        },
        "item": {
          "id": "25df7195-259e-41c0-af6b-7374933be969",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b9b16ac0-a3a0-4f8f-89d5-829348545064",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c4ad74-805f-4fbb-bf2d-0c058bba1b56",
        "cursor": {
          "ref": "e03c8cb7-84d3-4613-9993-cf831af5c95f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a52edf5d-44ba-4f85-acd6-d02f226af0fc"
        },
        "item": {
          "id": "54c4ad74-805f-4fbb-bf2d-0c058bba1b56",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "57b3bd40-57ad-494b-ac1f-e60936143f11",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0f0cf4-b95e-46a1-9e96-7e937ea63134",
        "cursor": {
          "ref": "59d998fa-b02c-4288-a770-173fa4e0b89d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cb341173-fda7-4b0a-b4f5-598b26ce5710"
        },
        "item": {
          "id": "ad0f0cf4-b95e-46a1-9e96-7e937ea63134",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c491f86-5c96-4eda-8e90-7166900a2009",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "11731aab-4865-4f1d-b1f0-9166cba697e3",
        "cursor": {
          "ref": "b1e01e12-4e57-46bc-a442-fb92aeb1baf2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "641b3dec-c7d5-4316-ab40-5e501e03edca"
        },
        "item": {
          "id": "11731aab-4865-4f1d-b1f0-9166cba697e3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "93bc4063-8201-4433-8f09-031f416ae26e",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27611a33-57ad-476e-9010-0778ad3dda85",
        "cursor": {
          "ref": "d2240785-bd67-4025-a8ce-2c55c094e63a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "38777f4b-2447-41a7-943d-b6a272c23632"
        },
        "item": {
          "id": "27611a33-57ad-476e-9010-0778ad3dda85",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55541f83-f0f2-4024-b395-fb8910bd6419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6082d60b-fbcd-4faf-8712-f848f3c3f5f5",
        "cursor": {
          "ref": "6e6c7fc7-a8d5-4dd9-ba2f-5fc1cd1b664e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74fc4f78-cfc9-4769-b9b3-cbf6d97177b7"
        },
        "item": {
          "id": "6082d60b-fbcd-4faf-8712-f848f3c3f5f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "52831491-9c87-4605-b89b-fd0dd0066023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3b201f-1d08-49b5-b43f-3c40f509f262",
        "cursor": {
          "ref": "6b15e8be-2656-4590-873e-b370b3df9ca8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "23856ddb-c99a-4ec5-bac0-00b237ab86c5"
        },
        "item": {
          "id": "0c3b201f-1d08-49b5-b43f-3c40f509f262",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "90f99880-cfb2-4f05-a7ac-6364a1595de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306bcb89-6913-407d-ba1a-f996ba6fa6c7",
        "cursor": {
          "ref": "10ddc6e8-80d1-4158-bdbd-f3ec2e0d5170",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c00d174a-18f8-456e-9822-9caff6dab31c"
        },
        "item": {
          "id": "306bcb89-6913-407d-ba1a-f996ba6fa6c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6e85203-9a12-418d-81df-e3bda610e67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85504de-cd3c-4846-878a-37b7e93e2cb3",
        "cursor": {
          "ref": "a6e57570-a073-4e75-90aa-ff36b9333009",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5147d061-0205-4878-9189-16a87c08c021"
        },
        "item": {
          "id": "c85504de-cd3c-4846-878a-37b7e93e2cb3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "829c89f3-221c-4452-b400-79b4a17dc08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422e6e22-ad6e-4c0c-a8fa-eb3f063a4c0a",
        "cursor": {
          "ref": "d81bd7f4-1d5b-42e8-9d14-b4d7470305e5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e9bfee65-1b74-4642-a0a1-70fced8103af"
        },
        "item": {
          "id": "422e6e22-ad6e-4c0c-a8fa-eb3f063a4c0a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c79f8a54-bf13-4a65-b190-8d3313db1d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c710f-02b5-4a4e-902f-d84ba78b21e5",
        "cursor": {
          "ref": "74080b41-fd92-4825-9d71-3e54cde63088",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ee2438dc-c044-4b62-b924-c96eeae17d47"
        },
        "item": {
          "id": "964c710f-02b5-4a4e-902f-d84ba78b21e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de07c9b7-679b-48b6-9ceb-a283f526748a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59df50f1-79d5-46b6-b0f4-2b591bcc4731",
        "cursor": {
          "ref": "eb4f3c31-1536-4d87-b6c0-5a90c45fb21b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a002fd1a-d4a0-46bf-93f7-55a8bba2215b"
        },
        "item": {
          "id": "59df50f1-79d5-46b6-b0f4-2b591bcc4731",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "07564df8-035a-40a0-ba67-f3ec2856a6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326b3142-0e00-49c6-85d7-fa442b83958e",
        "cursor": {
          "ref": "0969fad0-63c0-4670-afd3-e57471e21e40",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8ac00b77-d12b-4865-a481-85a4e22f7f15"
        },
        "item": {
          "id": "326b3142-0e00-49c6-85d7-fa442b83958e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca713855-729e-4ea6-a224-c61ed3985b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df38bc9-b6fd-4bcd-82e4-4eb48a117995",
        "cursor": {
          "ref": "acf5a1ac-76af-4d64-8752-16a1b56ee5df",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "17d24f0e-eae2-458b-83fc-f93c60af45bb"
        },
        "item": {
          "id": "2df38bc9-b6fd-4bcd-82e4-4eb48a117995",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c68a30dc-0316-4289-8014-dede8360a736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f08e93-19f6-408f-bb67-72258a9e6649",
        "cursor": {
          "ref": "e9dab568-137e-4ef8-873f-cca66ace9348",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "72d5f453-983d-40a0-a526-336e98a6503f"
        },
        "item": {
          "id": "25f08e93-19f6-408f-bb67-72258a9e6649",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9450c9b2-685c-4060-b2bf-4133e907b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0287dae8-530c-440e-b124-c64a4b7debba",
        "cursor": {
          "ref": "14a8761e-161c-4cdb-baaf-a03c2681e7d3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6b59fef9-52bb-4d1f-8358-5d851ac2c364"
        },
        "item": {
          "id": "0287dae8-530c-440e-b124-c64a4b7debba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d3b9f8b-df5c-4d61-9120-296c6256b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3e5875-67b3-4743-af4b-163089288cc7",
        "cursor": {
          "ref": "d5fe3a9d-6c40-4e43-a29f-1d92464ea2b2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc985124-ae1a-4c67-86ff-13fed3bad632"
        },
        "item": {
          "id": "4a3e5875-67b3-4743-af4b-163089288cc7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c94946d5-bd31-48dc-bd27-f89416489147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2467dcb7-b630-4f49-8388-4335f9321834",
        "cursor": {
          "ref": "0c923886-4710-4050-9d9b-a9cbf8bf9052",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "baa8b782-d3e9-4b1d-aa8c-917e504a1fad"
        },
        "item": {
          "id": "2467dcb7-b630-4f49-8388-4335f9321834",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9621f3d1-5714-4211-b0f2-954363edbd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf1432a-d825-419b-9fa1-522c56fbac22",
        "cursor": {
          "ref": "8c63e490-7d09-42e7-be64-bad70f503e90",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e75ab1c6-3b15-46a0-bbe0-2b0e1226dbec"
        },
        "item": {
          "id": "9bf1432a-d825-419b-9fa1-522c56fbac22",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a65077b6-8fcf-412a-be39-f44cd19462a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1c8a4b-af95-44a3-9ad0-a5b958ce0072",
        "cursor": {
          "ref": "68dd7817-9341-46cc-a864-e8530810a8d7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56a1b829-14e2-42a3-a3b5-f2dca795c93c"
        },
        "item": {
          "id": "8e1c8a4b-af95-44a3-9ad0-a5b958ce0072",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e272dfeb-15a2-4d75-a779-a9a266f00164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f1feb5-e924-4377-814d-39304e7a4c85",
        "cursor": {
          "ref": "820943ba-de5a-4097-a08d-156f5ef5457f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ec05dd53-5d7e-4188-8156-d81fb4ccc4a1"
        },
        "item": {
          "id": "31f1feb5-e924-4377-814d-39304e7a4c85",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "27376195-d117-41ed-bf15-179875e26a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1084b5-97c7-40c6-8db7-19e067f53214",
        "cursor": {
          "ref": "3811fb86-0c3c-44e6-bad6-93de38c22aea",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a9016cfc-2b4e-4c7d-922b-7a8d21c3ec0b"
        },
        "item": {
          "id": "cc1084b5-97c7-40c6-8db7-19e067f53214",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "715e4a5d-bb36-46ce-87d5-07d3eaeea904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d05098a-aa3e-4583-b162-094da7f65d05",
        "cursor": {
          "ref": "03eabdb9-3d01-42aa-9f02-838b60879c79",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0ca85f5-e4d2-4bf9-b7b9-472209f111d6"
        },
        "item": {
          "id": "8d05098a-aa3e-4583-b162-094da7f65d05",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d1eadd12-e5d6-4b85-89ac-5e821c20a456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468ca033-9c30-4066-84f1-05f0ef686800",
        "cursor": {
          "ref": "a231fd04-f24e-4c79-82c9-ba192ce623d8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "84505f1d-4364-47c2-aa9c-debd731ada12"
        },
        "item": {
          "id": "468ca033-9c30-4066-84f1-05f0ef686800",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "05849434-a659-46d5-93bf-ad7e30bfbdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c2686-394c-4c5d-8d31-a10dc7e1da03",
        "cursor": {
          "ref": "daa4bd01-2d36-49bf-ac5e-8ca6ef0a72fe",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "49edb9e1-40fe-4468-ae2d-f289a7f605d8"
        },
        "item": {
          "id": "077c2686-394c-4c5d-8d31-a10dc7e1da03",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb5ff23d-93c5-426d-ae5a-8c338c6ea71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db17e2-e751-4203-85ea-c3478fdd2992",
        "cursor": {
          "ref": "fffad081-a7fc-4e41-9bc3-75b5c678fa9e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "689b20d4-6fcf-41d1-b41f-711c46da793a"
        },
        "item": {
          "id": "f1db17e2-e751-4203-85ea-c3478fdd2992",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e615bef-2e56-438e-9cc8-a5926489df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f13471-d480-4389-bd18-69dcf98c752e",
        "cursor": {
          "ref": "53c26890-02a3-461e-80ac-3a485522a300",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c768e4f-d342-45b5-8dec-43fa0fbf1f7a"
        },
        "item": {
          "id": "02f13471-d480-4389-bd18-69dcf98c752e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4763ceb6-34c3-4a3c-b34a-b30a51374c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3c1e96-a0ba-48ba-9d25-076de18753a3",
        "cursor": {
          "ref": "c3ddfc6f-7fd2-4a07-84f7-9675baf9b3f3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "450706bc-8e89-42cf-a0dc-4f97803cb831"
        },
        "item": {
          "id": "2d3c1e96-a0ba-48ba-9d25-076de18753a3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99efe96b-c428-4d4e-983e-936d4942358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a771456-7a85-4d6b-bcf6-a5579598d609",
        "cursor": {
          "ref": "adc97c47-c2e5-46e3-afc7-28d683b8efd3",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0cfe1510-3a03-4b53-8bbe-d217b76e67ad"
        },
        "item": {
          "id": "5a771456-7a85-4d6b-bcf6-a5579598d609",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19c7e05c-267c-4019-8b11-e39c18e5dc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb1a6ca-c985-4459-8089-16a9eebf31b0",
        "cursor": {
          "ref": "9e4a30d7-8116-4ed7-81a1-be2814ff4a06",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f7d8a077-4f62-4dd4-97af-1d9798453cf1"
        },
        "item": {
          "id": "0eb1a6ca-c985-4459-8089-16a9eebf31b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "56143ca6-d136-45b4-a47e-faf0c99da8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eef318-67ea-4a35-8577-da535746b243",
        "cursor": {
          "ref": "b1d52f9d-d88a-499d-a017-2fb43b3263f6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "92649a56-889e-4102-83d2-1c71243a30bb"
        },
        "item": {
          "id": "b4eef318-67ea-4a35-8577-da535746b243",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd42308b-ef0e-42b4-b3ff-95d664d60671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6b0c6c-6fa1-4a1e-8937-cb3169604f13",
        "cursor": {
          "ref": "e5857261-0603-4018-b402-e00f3f15e689",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cac98b4e-e3e4-474f-a0c3-6f64d0f96ed0"
        },
        "item": {
          "id": "2b6b0c6c-6fa1-4a1e-8937-cb3169604f13",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8cf5c3f2-6ae0-4781-8309-a16270e21f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a4c11e-406d-4467-b6ae-56adba317bac",
        "cursor": {
          "ref": "08cd5c9c-75bc-40fb-99c9-31c30660295c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c9cc01c1-80b1-404a-b42b-f15f0d2ad393"
        },
        "item": {
          "id": "44a4c11e-406d-4467-b6ae-56adba317bac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8cc6d3c4-3e3f-4dda-8fbf-a81a4a15a860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e07b96-449c-4ca9-8264-964b877fbbc5",
        "cursor": {
          "ref": "5b23be87-750a-415e-9c3f-ef2985ba269c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c171a9bb-1eee-4486-80bc-2ef9441f74a5"
        },
        "item": {
          "id": "00e07b96-449c-4ca9-8264-964b877fbbc5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a36d101d-0511-4aac-9d04-8540dbe57601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4a8ffa-bd9c-4069-a173-837cbd0a9598",
        "cursor": {
          "ref": "9fe0a038-bc6f-4716-bf89-12b9852a2f74",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "33467b47-86a9-4e49-9d1e-c6aacf6544ed"
        },
        "item": {
          "id": "6e4a8ffa-bd9c-4069-a173-837cbd0a9598",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00b48ff2-b3c3-461e-bff1-b758d8203ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5350f909-0252-445f-94e6-17a3925cb153",
        "cursor": {
          "ref": "3e715b61-ae92-4eb1-a6c0-0434d18c8fb3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6742ceca-2466-40a1-98a3-bf6e5e5787d7"
        },
        "item": {
          "id": "5350f909-0252-445f-94e6-17a3925cb153",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "48525478-a7f3-4fcc-adce-30a47d614dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c74923-01bd-4654-bcb8-3ee35e48a53d",
        "cursor": {
          "ref": "dcf72fb4-34de-4ad3-b863-54952c4e3aac",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6867e92d-623a-40d4-b28a-2a4d2c18c330"
        },
        "item": {
          "id": "81c74923-01bd-4654-bcb8-3ee35e48a53d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c215199-1c9e-45e9-8e54-5bdefbdcbcd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf0b4b8-ea18-48f4-b149-d52dc91e5b90",
        "cursor": {
          "ref": "2bc7e8d7-487c-4710-baa8-d0e23f2c69a5",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "326ec0d2-7620-42ad-8f5a-5029d290fe59"
        },
        "item": {
          "id": "aaf0b4b8-ea18-48f4-b149-d52dc91e5b90",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5606d5dc-cdff-4cfc-b98d-4d845c51d132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211999f5-b8e3-4fdc-a457-61ad6ca9a091",
        "cursor": {
          "ref": "bed9be57-44fa-482d-9c23-11aa31df373b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "28aa4be8-927b-4b30-825a-16a8edfda955"
        },
        "item": {
          "id": "211999f5-b8e3-4fdc-a457-61ad6ca9a091",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2264bde2-fed8-4272-b28f-5b10aeb88f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b3466-7533-48e8-97af-3215b5204c6d",
        "cursor": {
          "ref": "971de8ce-2bff-47be-906b-a06c0c0500a8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f4cc4eaa-5eea-4860-9b67-9b1b709b227b"
        },
        "item": {
          "id": "630b3466-7533-48e8-97af-3215b5204c6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "60f71ebc-3ab6-4bbe-a892-5119b14e1bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429d73a-9927-4d80-9090-34b7bb467079",
        "cursor": {
          "ref": "129badda-ff60-459a-a4db-82146fb7b49c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d55570c0-15bd-4d0c-b4eb-5d5046f153e6"
        },
        "item": {
          "id": "5429d73a-9927-4d80-9090-34b7bb467079",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ed68aedf-c7a1-473f-88fe-d110818a0942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a919b-ad2b-4c42-8348-4201d723e7b8",
        "cursor": {
          "ref": "524372b2-6fed-4f07-8b1f-a2950e71f04e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3fe14dd4-c1e9-4341-ac68-c8df7f9a8af1"
        },
        "item": {
          "id": "d02a919b-ad2b-4c42-8348-4201d723e7b8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f901dda5-50f3-48bd-bbd9-8f0c2b83fa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e2e1ee-4e8f-43cb-ae62-adfc98022067",
        "cursor": {
          "ref": "a0b103f8-71eb-4f77-919e-ca67077ba502",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cfb3b25c-a278-4dbe-87c0-d4fa1b166a99"
        },
        "item": {
          "id": "e2e2e1ee-4e8f-43cb-ae62-adfc98022067",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f56644cf-38bc-49e1-99af-5d6cd34570b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c5a003-8975-4cdc-ad90-a0dd872d4180",
        "cursor": {
          "ref": "91549937-f132-46ab-9468-1c2adbc163d7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9682611c-3bb9-4d10-a5d3-370089ca20d0"
        },
        "item": {
          "id": "99c5a003-8975-4cdc-ad90-a0dd872d4180",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3eaf8b5a-95b0-401e-b728-a291a0d45f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ce289-a0d6-44fc-8c49-e843eb34c4a6",
        "cursor": {
          "ref": "0d59668d-2c93-47e8-ac04-fd678765800b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "429d413f-8aba-4758-9166-9a1870375bdf"
        },
        "item": {
          "id": "0f7ce289-a0d6-44fc-8c49-e843eb34c4a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08f3fa88-cc32-4a87-ac4b-6006a8b20b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b09d432-e90d-4c70-8478-372009b9fd22",
        "cursor": {
          "ref": "70ce6085-3c96-4f90-819e-e2881031e96e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cdef447e-2955-4464-b622-bc91c8ff0d8e"
        },
        "item": {
          "id": "5b09d432-e90d-4c70-8478-372009b9fd22",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59fdeefd-71a3-42a1-bec8-6cb9136074eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524f724a-7588-4931-8404-432b7b7ebf1a",
        "cursor": {
          "ref": "ed4094f1-ab33-40eb-aafa-50c0219f328d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c48d001d-9b42-4668-a463-b6f800ab12b0"
        },
        "item": {
          "id": "524f724a-7588-4931-8404-432b7b7ebf1a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ba89f248-3317-451a-ad79-a198a245b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daadbcd-f42a-443d-9978-d1b2056657e0",
        "cursor": {
          "ref": "c951007c-8db8-4aa9-bdc2-b3836daab348",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6e8ab359-b34d-49ec-9fef-3e89e635ebf3"
        },
        "item": {
          "id": "1daadbcd-f42a-443d-9978-d1b2056657e0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed950adb-cc56-4eba-82d4-5580316b8825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f743f1-4e02-4ab6-bbcd-b32f62838d5a",
        "cursor": {
          "ref": "50abecd9-9460-43e9-9363-f873938703e9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0c94cd68-66ed-4e29-af58-c76b7b1b9632"
        },
        "item": {
          "id": "81f743f1-4e02-4ab6-bbcd-b32f62838d5a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d0d2933-ebe9-425e-a38a-ad1787fc600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253d65bb-8684-4837-8843-abecd27df8ae",
        "cursor": {
          "ref": "33d63354-41b0-4aef-a017-304e49113798",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5025572b-1938-4faf-be9c-399a7140dca7"
        },
        "item": {
          "id": "253d65bb-8684-4837-8843-abecd27df8ae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "635344ad-4dca-46b9-93b4-604fe84b0313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976e2fa-06a2-471a-b4f6-4e96784989b0",
        "cursor": {
          "ref": "55073ecf-77ec-43c1-afe2-e7fd019786ef",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ad594d2-197e-4cc2-a8dd-4ecae1ba4fd7"
        },
        "item": {
          "id": "4976e2fa-06a2-471a-b4f6-4e96784989b0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "207a5b03-53e7-4120-980f-fd96e0842fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d64b59-a069-4a26-81fc-4117da5af555",
        "cursor": {
          "ref": "0f88409f-61ee-4590-98ae-216ea4319774",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "34310d1a-c451-4211-892d-722b70da7f2b"
        },
        "item": {
          "id": "74d64b59-a069-4a26-81fc-4117da5af555",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "deac7a2c-ca07-40a8-9bcf-a746e94205a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39678937-0fd0-4598-9181-1cae57157c9e",
        "cursor": {
          "ref": "b5bac982-0292-49e9-9d8c-5c535f6778d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "70ecbe48-23a6-45ed-b5ae-4e7f4a219090"
        },
        "item": {
          "id": "39678937-0fd0-4598-9181-1cae57157c9e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59d26abd-9634-43f6-ba0c-33c2db230105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfa6012-46a7-4ece-af42-b53ad3815b74",
        "cursor": {
          "ref": "41f6b693-b864-418c-9831-ce7b8f056f16",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "90f43bb0-b8b2-4dbb-ac31-d0c0dd518fc3"
        },
        "item": {
          "id": "8cfa6012-46a7-4ece-af42-b53ad3815b74",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "478f08fd-7346-4d22-9f86-1f2768775f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8fb9db-5ecf-449e-bc5d-ee8aacb645a9",
        "cursor": {
          "ref": "e8854633-0abe-49a8-be3f-d1ebe65ce96b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5efad14-fe61-42e9-bdab-7cbce901b280"
        },
        "item": {
          "id": "2a8fb9db-5ecf-449e-bc5d-ee8aacb645a9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b9558ee7-0b58-4dd1-beac-d2346a7b7c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9bbf27-6ef8-4eae-b254-4b497938502c",
        "cursor": {
          "ref": "5bbe554f-14e0-4b4b-80f9-4cdb91e8c733",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e9928950-fe43-4d3f-86c3-a86d1e50208e"
        },
        "item": {
          "id": "1a9bbf27-6ef8-4eae-b254-4b497938502c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca8a0e10-a1e2-4977-b5fa-b3d354713104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afa751d-ad26-4964-879a-d6e2ad44f55e",
        "cursor": {
          "ref": "2b013d17-9523-4470-a257-4e460aaaa234",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c37824c-8e74-41a2-bb5e-c5382a4ad31d"
        },
        "item": {
          "id": "4afa751d-ad26-4964-879a-d6e2ad44f55e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7a1b7748-e474-4b71-a870-a79e7cf092c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d0870c-790e-4d41-a70b-feb23f72cd66",
        "cursor": {
          "ref": "6be8a499-5256-46f1-9b78-eaf3c79e6557",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d552cbc8-f70b-42ad-bf31-1256b3fb241c"
        },
        "item": {
          "id": "90d0870c-790e-4d41-a70b-feb23f72cd66",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba2a2c95-965a-4eca-be5c-fc945a98d2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ca3371-8b26-4c80-a49b-87d1b67b69a9",
        "cursor": {
          "ref": "e1d71b33-830b-4804-a900-158e1df02e05",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "38987256-30fa-4c38-921e-1d3c13917528"
        },
        "item": {
          "id": "74ca3371-8b26-4c80-a49b-87d1b67b69a9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bab3784a-8379-4f4e-9eb1-1c06cf81195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3ea6c1-2c91-45cd-b417-c9e5e98e3083",
        "cursor": {
          "ref": "cc0a64d9-8190-4d19-857d-4be3c473daac",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "76f8f649-c09c-461f-9d97-0dd223f31d0f"
        },
        "item": {
          "id": "1c3ea6c1-2c91-45cd-b417-c9e5e98e3083",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86c57483-81ea-48f4-94fa-3d6aafa964b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0120e0-1148-4716-be5c-64a275dd6bd5",
        "cursor": {
          "ref": "659f1168-75b6-4aba-a1d6-231cd83fa724",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "376c393c-e9a9-4b2c-aea6-0c61c5a8afa6"
        },
        "item": {
          "id": "9f0120e0-1148-4716-be5c-64a275dd6bd5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34ad2a2a-8c39-4cbb-9f24-bd9e4fcbaced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfafab5-8b0c-4cd1-a4aa-de0c9eb3cac8",
        "cursor": {
          "ref": "78cfe324-c163-4952-af38-a0aa6bc10561",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1c3f2adc-297a-43c8-9429-1de5090eba09"
        },
        "item": {
          "id": "5bfafab5-8b0c-4cd1-a4aa-de0c9eb3cac8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b30fd2ff-afd6-47e2-9d3a-d994827d77d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0141e9e1-4dc9-4921-b8c6-32bc4b476d3d",
        "cursor": {
          "ref": "0ac5f8bc-fe03-4146-a672-9766892ae7fe",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fb1135ee-9315-4fc8-8ac7-721e7f84edf0"
        },
        "item": {
          "id": "0141e9e1-4dc9-4921-b8c6-32bc4b476d3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b236e70e-7080-432d-9513-2148fe1b5881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdb2ec1-807b-44e1-b616-e303d9c41694",
        "cursor": {
          "ref": "af5f7df8-4867-48e7-950e-5a078eaf9bd5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac33d63b-a987-43ab-89bb-c421f13d4d60"
        },
        "item": {
          "id": "ecdb2ec1-807b-44e1-b616-e303d9c41694",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b957edc1-9ae9-4d72-b2c4-f1f76580db71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8d7902-022b-434c-a576-91c674a0bbaa",
        "cursor": {
          "ref": "3d863a45-392d-4444-993c-2e9b16a52906",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "424b5bae-1228-4b5a-acd7-8cdf1e6e9930"
        },
        "item": {
          "id": "0b8d7902-022b-434c-a576-91c674a0bbaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b2e6da7e-82cf-430f-a05d-cf20a7f976a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc23d8-6d63-442f-aa29-a30c8ca399c3",
        "cursor": {
          "ref": "3ae83694-3b3d-458c-a3a6-4c83e2631cbb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b2105adb-1c9f-4989-bfa9-24f9752f46ab"
        },
        "item": {
          "id": "f2dc23d8-6d63-442f-aa29-a30c8ca399c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f9a6ab0f-de40-4b3e-8e90-c56fd866069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed33b578-fbec-4204-aab2-6e75347834a2",
        "cursor": {
          "ref": "7dc965f5-e53b-4ed5-baeb-1036163cafc3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57d205a9-0ec7-4cce-9fcf-9939bdca2229"
        },
        "item": {
          "id": "ed33b578-fbec-4204-aab2-6e75347834a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "79396af8-7689-4e2d-8663-ea4d43b4c32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc74b70-b568-41c8-bda0-3262bd3f0970",
        "cursor": {
          "ref": "2988b571-ec3c-4edc-ae43-1194d1ea2280",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e9bc1b52-d011-4df4-9def-87dbc71ee7b8"
        },
        "item": {
          "id": "adc74b70-b568-41c8-bda0-3262bd3f0970",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a91a743-23de-4b30-ae1e-da779d98f6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fffdca4-0224-4248-94cd-d10f294babde",
        "cursor": {
          "ref": "20909384-f70a-4615-9148-6a96fe65f4be",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3c07a380-d8f4-44f5-bb5c-c485f0bb4d6d"
        },
        "item": {
          "id": "7fffdca4-0224-4248-94cd-d10f294babde",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f11c230c-449d-4b01-8a25-956e81a9f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88743ea-4382-4058-8469-36ffd33327de",
        "cursor": {
          "ref": "68743b42-9b03-4119-a4bf-2ee161561618",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dbc7faf0-aec8-4c2d-bc02-b9c864c849b8"
        },
        "item": {
          "id": "b88743ea-4382-4058-8469-36ffd33327de",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bbefb7bc-cd53-4b2d-ac82-97a3d501bac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f524212c-9d43-4172-b117-cfa3768cb418",
        "cursor": {
          "ref": "c1cd657c-3a2f-4595-96d0-268c1ae316e2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "230b3762-65ab-4233-a819-21fda4a3da6e"
        },
        "item": {
          "id": "f524212c-9d43-4172-b117-cfa3768cb418",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8c95c10a-b77c-4d22-a640-f942822d1a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e096f51-4fbd-4edc-8c82-fb1f2f80c624",
        "cursor": {
          "ref": "4d4e58bf-c361-4905-a71a-d34d72e4f118",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ab537a6a-e5f4-489e-84cb-ff134809bb72"
        },
        "item": {
          "id": "7e096f51-4fbd-4edc-8c82-fb1f2f80c624",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "470756b5-0bb8-4aed-8186-b44ef097d9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8ab83-1ab1-4399-87d8-09a459877c01",
        "cursor": {
          "ref": "3ab4b331-086f-45da-9eab-92e6d7a642e6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "58b69972-a7d7-482b-bc7e-a106992603a4"
        },
        "item": {
          "id": "fae8ab83-1ab1-4399-87d8-09a459877c01",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c10f8878-a6a2-4749-acc9-afe8e19c0b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f117d38-8144-4c53-8dc4-9bfe413ac42f",
        "cursor": {
          "ref": "9260720c-1f82-470a-808c-53cb9284b9d2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9b56ae5b-f477-4609-b367-28ac9d02fb40"
        },
        "item": {
          "id": "3f117d38-8144-4c53-8dc4-9bfe413ac42f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3b84cdd5-bf94-4853-b569-43596fd05ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaea8ab-e717-4472-bea3-b4938c03c2c2",
        "cursor": {
          "ref": "866875df-ccd8-4fa3-91f6-ecd902d09971",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b70f12b3-9d2b-413d-9077-2516dcbf353e"
        },
        "item": {
          "id": "9eaea8ab-e717-4472-bea3-b4938c03c2c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ce8889b-e4e8-4f6d-9132-613bcf0ee4d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09917f9-da95-4e78-bf10-49ad6aeef0c0",
        "cursor": {
          "ref": "0ef9ec22-42ee-4a65-99fd-484e4b5d0717",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "528c731e-c480-49c4-98f5-8689b0594a8f"
        },
        "item": {
          "id": "b09917f9-da95-4e78-bf10-49ad6aeef0c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "705c3c56-ed44-4f61-b7cb-4121b224b4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ccfd84-ca51-4145-8d9f-d008fc04516a",
        "cursor": {
          "ref": "4fc8213e-ee84-4438-91b6-ebba4b90c885",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "275c3e5d-96b7-4e18-ad5d-0ff7e54ae1ee"
        },
        "item": {
          "id": "98ccfd84-ca51-4145-8d9f-d008fc04516a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "50cb387d-f5bc-4b20-873e-c398ae3b1404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef8dda4-7c10-41fc-9ae0-ff38202b3fdc",
        "cursor": {
          "ref": "d6472dc4-56f6-4c6f-ab90-6b60a697f1c4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e6bb12a1-fa43-4ac5-8902-dbc21d72378b"
        },
        "item": {
          "id": "2ef8dda4-7c10-41fc-9ae0-ff38202b3fdc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "58f24e60-831b-4536-8eb9-ca6e72731a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3abb56-dd12-4f23-acc2-06e4b049e2a9",
        "cursor": {
          "ref": "c8308aba-fc14-4b89-bb58-26cbbebcc182",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ed9dd28-b33e-4882-8f5a-3a68169168e0"
        },
        "item": {
          "id": "3a3abb56-dd12-4f23-acc2-06e4b049e2a9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c3bdf4cb-a7a8-41ae-b694-94db1b8b3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c5b50-2b5f-48a7-ac2d-e6570988f358",
        "cursor": {
          "ref": "c4747663-e391-4b6c-8bbb-dae94a32a6d9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f994d522-70ad-4ce8-804b-e603816e1691"
        },
        "item": {
          "id": "ad1c5b50-2b5f-48a7-ac2d-e6570988f358",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f8657b3-1349-429a-a2d5-ed84a6dcc635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16272b-e029-44e6-a4f7-02721987fdc9",
        "cursor": {
          "ref": "4d317015-e582-4155-9a5f-42c0c517b84d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1cc3b7d6-0470-4619-820a-e1ea53f14762"
        },
        "item": {
          "id": "fc16272b-e029-44e6-a4f7-02721987fdc9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8e932c72-eb4f-4dcd-8f6c-093cdc08217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f85880-02bd-4b86-8508-606be19fa24b",
        "cursor": {
          "ref": "10e91e90-e024-46a6-96f3-92f560371ff6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "984af496-c45f-4a63-ba62-b9580c5515fb"
        },
        "item": {
          "id": "c4f85880-02bd-4b86-8508-606be19fa24b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "382a10b3-8629-4c4c-ae85-421c952b1664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999abf3f-6074-4de3-9eaa-8ba80fbda122",
        "cursor": {
          "ref": "f32f0698-4e44-4ee2-9dd3-a58af799298f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd123081-a462-49db-8f2e-229adaa883cb"
        },
        "item": {
          "id": "999abf3f-6074-4de3-9eaa-8ba80fbda122",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "95686efd-5233-43eb-b46a-6fc1a06e9c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678dafa8-4f3d-4cdb-968f-307602868da9",
        "cursor": {
          "ref": "da57ac59-2ee9-4c4d-8702-35657568046c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a96b98ae-9f4e-4db7-b347-d0369acbb898"
        },
        "item": {
          "id": "678dafa8-4f3d-4cdb-968f-307602868da9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b950dbc7-c6bb-4420-8a2f-ef7c214aba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a54de4-7683-4037-b309-478108f898c4",
        "cursor": {
          "ref": "7a6e7e91-4d47-4bfd-b581-395c71e6d559",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3229d5ed-5466-4631-a989-8711bff50336"
        },
        "item": {
          "id": "99a54de4-7683-4037-b309-478108f898c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ba4d0c69-27f4-4278-9565-19c6bc2b10ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c58a096-f7e2-4b85-b734-82631e29a179",
        "cursor": {
          "ref": "63c36211-d66d-4d5c-bbbf-4e0d9897fc08",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1fbfbbba-ea93-4781-aa81-1bf65c373510"
        },
        "item": {
          "id": "4c58a096-f7e2-4b85-b734-82631e29a179",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee73cbb2-f816-444d-9dd5-7aad7d4c6563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f3a83-83ef-4483-83c2-216cd9a3dad7",
        "cursor": {
          "ref": "7ae76a98-87ae-46bb-87b4-ee28b4acd7bd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d288a097-fec0-4e65-931f-1ba9d100f286"
        },
        "item": {
          "id": "7b5f3a83-83ef-4483-83c2-216cd9a3dad7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1621f4a5-4ef3-46dc-8214-c5e0f46ed24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffea9271-fc21-4276-9f8c-fa8f167aea41",
        "cursor": {
          "ref": "cc506c4f-6863-473e-80fa-564b8e771e1a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eaeed8e7-328b-4e35-938f-d5ae8ef4d42d"
        },
        "item": {
          "id": "ffea9271-fc21-4276-9f8c-fa8f167aea41",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8d531ad8-1cdd-4b1b-aace-3d99429a12f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a92180-3a94-4aed-b80a-665f2da18f8a",
        "cursor": {
          "ref": "07045e6c-bc87-48b8-8adb-fdd7da57d142",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a9342c40-a379-44fa-8f88-3e476d6bc041"
        },
        "item": {
          "id": "67a92180-3a94-4aed-b80a-665f2da18f8a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "99840be1-9f5c-40b5-adf5-ec9f45210238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e38a41b-c83c-4d17-970b-56d10d2a29bc",
        "cursor": {
          "ref": "921c6482-0a93-4834-833f-b251cbd03e5e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b60de749-b499-4fc5-b605-91cf74ef8768"
        },
        "item": {
          "id": "2e38a41b-c83c-4d17-970b-56d10d2a29bc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14724ae3-d3ac-407c-bfbd-0312ee35972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b57f79a-8ad3-4c0e-9263-5e8bd7a60e86",
        "cursor": {
          "ref": "8e3a8a8f-bffc-4033-a6ec-825072163120",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fcf9b6e2-384e-4266-a3f5-1d89d5cafae6"
        },
        "item": {
          "id": "0b57f79a-8ad3-4c0e-9263-5e8bd7a60e86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "959af14d-a0b3-4d22-9545-34eca0283894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae56e48-4cb6-47a1-9db7-1b286b7801dc",
        "cursor": {
          "ref": "cca3c7da-5ca4-4820-abcf-e98d983fd7fd",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2270f371-3ee1-4122-92d5-c96fb37bd3fb"
        },
        "item": {
          "id": "5ae56e48-4cb6-47a1-9db7-1b286b7801dc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0399602f-b92a-44b7-8b78-a708d76574da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c83b65-972b-4ed6-bd20-2c76bda35ca9",
        "cursor": {
          "ref": "44f41fdc-192a-41b2-ba03-b0ed795b2322",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "270cc6a7-e5c0-4aa7-b112-feaf33d4eaa9"
        },
        "item": {
          "id": "05c83b65-972b-4ed6-bd20-2c76bda35ca9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f79a2bf-bd3d-4f71-896b-ba6583a5b320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5121161e-4d8d-4163-ad27-b799ab5712cf",
        "cursor": {
          "ref": "eb21a445-562f-4094-8251-bc35f48545ee",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8ca74e18-2c9d-4dba-8bb7-da76539505d0"
        },
        "item": {
          "id": "5121161e-4d8d-4163-ad27-b799ab5712cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ddddcede-42d4-41ab-8e61-50cd5cbc2118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7959147-7bdf-4bc9-9132-9a4277d8a29d",
        "cursor": {
          "ref": "185c5b10-45ee-442c-a040-f0611ce7edb1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d7a8daa2-faf5-43a2-b18b-ef400789be7f"
        },
        "item": {
          "id": "d7959147-7bdf-4bc9-9132-9a4277d8a29d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0104f737-ea46-47e1-a0b3-4e0fe943c438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b3470a-e7cb-4a52-a77d-20e339b21178",
        "cursor": {
          "ref": "b8b2d07e-cd0d-4a0e-ab65-0b428c74d548",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "62ddf6ba-b8cf-4eaa-b418-f7e2e3121e9c"
        },
        "item": {
          "id": "e5b3470a-e7cb-4a52-a77d-20e339b21178",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5403e2a-14a2-4712-a71a-b3b513991324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b86edc-6f01-4a4d-b88c-6094423be8df",
        "cursor": {
          "ref": "3bed0cfc-6995-4b8f-9f1f-5e59c8c15bef",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dea19b4f-9b94-4c51-8611-e1d40d43082b"
        },
        "item": {
          "id": "93b86edc-6f01-4a4d-b88c-6094423be8df",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "71152071-fe88-4b45-874f-c4f721fe4c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2247eaa7-959e-483b-8118-0d3d05f67ca5",
        "cursor": {
          "ref": "cb99c1c6-e47b-4c40-bb8e-ba0d276f337c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6cdae337-1c6e-4caf-b67b-9b6824e12070"
        },
        "item": {
          "id": "2247eaa7-959e-483b-8118-0d3d05f67ca5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "45f5ab23-f54b-439a-bba5-31fe33bd42ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6646a3cb-97c0-43ca-b8fa-520653a3415b",
        "cursor": {
          "ref": "ba28731e-68e1-4277-8f2f-770d5cc2015f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c6a54fad-c397-483d-8808-f311705649b9"
        },
        "item": {
          "id": "6646a3cb-97c0-43ca-b8fa-520653a3415b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23787225-5b04-4cbb-a255-bf1c16b216ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cba1fd-9a37-4540-a115-f9af7d64374e",
        "cursor": {
          "ref": "e9c48d32-7a87-441e-a815-f912d7b9041b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18879c70-81c9-48fd-bafd-6b6145a047cf"
        },
        "item": {
          "id": "c2cba1fd-9a37-4540-a115-f9af7d64374e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "adfa7592-0251-47e6-8011-98625896ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d38076-f4e5-4631-9d0c-72d800e8479d",
        "cursor": {
          "ref": "8689af8a-b06b-4c9c-8b3e-979bedc726a8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "496cf39f-b8cd-4b38-88c5-dcdc5a9ca733"
        },
        "item": {
          "id": "67d38076-f4e5-4631-9d0c-72d800e8479d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa53cae3-2797-472a-a2a8-e3b7eeeefd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d922b995-80b9-4811-921d-42b9bc0d33e5",
        "cursor": {
          "ref": "f391f8dc-5cbe-41ec-92ef-d099e7fedf55",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "505a73e9-29bc-49b4-b211-d65eba7bd030"
        },
        "item": {
          "id": "d922b995-80b9-4811-921d-42b9bc0d33e5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "36fb937c-d875-4fbb-b270-f592aae52b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c0d8d-d3c4-456b-be5f-117a026593d4",
        "cursor": {
          "ref": "f0973796-2851-454e-af22-ca6ad4ef5ab4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "13207282-10ba-4958-890a-8292c4bfff78"
        },
        "item": {
          "id": "e95c0d8d-d3c4-456b-be5f-117a026593d4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9df66f9-91f0-4433-bfca-c1ea68c30b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7749af42-562b-4a1e-9102-d13c556aa581",
        "cursor": {
          "ref": "9a8847d8-8092-4743-85d2-9d3fb50eedde",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6610afb6-d9f8-44bd-b92f-5fedf94ef354"
        },
        "item": {
          "id": "7749af42-562b-4a1e-9102-d13c556aa581",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cc30d7c4-40ee-4b49-8979-9f100018ae40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c516463-3c6f-42cb-bec6-76aa272fcef7",
        "cursor": {
          "ref": "a3262408-488b-43c1-8932-2c083ccec7fb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d7de73d5-dd4c-4fae-b246-0de3bf21d532"
        },
        "item": {
          "id": "1c516463-3c6f-42cb-bec6-76aa272fcef7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "447165d5-16ea-46fa-a2cf-be1fdc791920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37826447-73da-40b9-881b-0db1f099e439",
        "cursor": {
          "ref": "78c67bf4-c49f-4a14-b2c4-30e200a427fe",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b15e488c-885d-406b-a475-72a23cc3df58"
        },
        "item": {
          "id": "37826447-73da-40b9-881b-0db1f099e439",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e10e7e7d-94f8-4b49-aeb5-fdfb0d326826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46b004f-42ec-4fa4-8a0e-43ac24cf0359",
        "cursor": {
          "ref": "6c00dceb-cdb5-4c89-a109-ae4e3e45a99f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63906f14-313b-4637-a462-7d570d00a71f"
        },
        "item": {
          "id": "d46b004f-42ec-4fa4-8a0e-43ac24cf0359",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2d32c82c-34a7-4090-84ab-53fe4a3623e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46779a24-635f-4d0d-9351-b450eed86ad3",
        "cursor": {
          "ref": "3c3546dd-6c21-4c55-a042-cb1046165f4c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "26ef6d47-55b1-44f1-b234-ada3525138c2"
        },
        "item": {
          "id": "46779a24-635f-4d0d-9351-b450eed86ad3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6f462d79-58d9-47e9-91a0-ed8b96f48447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9ae80c-acf5-4513-9587-650717be3a88",
        "cursor": {
          "ref": "447e0b19-094c-4f25-86ad-daaebf80aae0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cd86af7e-184c-4079-b53c-c93bee02d7da"
        },
        "item": {
          "id": "ff9ae80c-acf5-4513-9587-650717be3a88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "09ab2f40-4958-4cee-a041-29e72eff6ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e145b-eea0-4975-a359-a0a93abbd4fd",
        "cursor": {
          "ref": "2b48af81-0a91-494c-a087-68804ed45029",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "31286b94-d6a9-4340-a654-5adb876cb68d"
        },
        "item": {
          "id": "710e145b-eea0-4975-a359-a0a93abbd4fd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4a8765f4-756f-4439-aeed-5e799ccfd2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d22f2e-777f-45c2-86ce-eff59361ae67",
        "cursor": {
          "ref": "cf5eb007-3621-442d-bf15-c4a7dd95fbcd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f5b718d3-aec5-4c48-a4d9-dbea61d4b31f"
        },
        "item": {
          "id": "08d22f2e-777f-45c2-86ce-eff59361ae67",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8bcaa128-dd25-4e32-925f-cb83f8fe415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5f363a-adbe-4f27-8953-4f415e31c125",
        "cursor": {
          "ref": "ec8e3c86-039f-4af1-a607-7b51f66380cf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a0d35de4-92b1-418f-9f5d-6fd70d7b02a2"
        },
        "item": {
          "id": "0e5f363a-adbe-4f27-8953-4f415e31c125",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f11f385b-6802-43fd-bb77-1a3d309c5cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2846216c-580e-41c9-9ee6-757a694a243f",
        "cursor": {
          "ref": "50ffa06e-a8c3-4ebd-ad8f-b833ba02975e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f956d972-398d-4613-89ea-acc34373136c"
        },
        "item": {
          "id": "2846216c-580e-41c9-9ee6-757a694a243f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9022f031-6e70-4347-8667-8d38e0f0ec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037e0cae-ff92-4437-a1cd-0a6045848d31",
        "cursor": {
          "ref": "f0ea3b97-e2ad-4041-8052-4d67a1841155",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17c3fd59-c3b9-43ca-be4f-cee7137a71c6"
        },
        "item": {
          "id": "037e0cae-ff92-4437-a1cd-0a6045848d31",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "146b7873-f21d-4187-be80-a704e52642c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4350e0ac-6460-4b3f-878a-9cf31fb951b1",
        "cursor": {
          "ref": "d3617a54-6316-4087-9db8-080cda25b5d0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b1f83d20-b36a-47a6-8bd7-f5dd86aa706d"
        },
        "item": {
          "id": "4350e0ac-6460-4b3f-878a-9cf31fb951b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "551eacaf-19fd-4222-9bcd-791f9a245593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab457df-996d-4247-a49c-90dac6f0d2d9",
        "cursor": {
          "ref": "c0d58919-24e0-44e7-96e0-b371fdf30c49",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b90a12fd-fa37-4d3a-9109-b2bb59dc331d"
        },
        "item": {
          "id": "fab457df-996d-4247-a49c-90dac6f0d2d9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6c67e9a-a74e-4921-af2c-6cec8a71630a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fd49d4-ba49-4297-b46b-f7da61b9e5c9",
        "cursor": {
          "ref": "d11c10df-cf0b-4761-bd50-3105f1c09ecb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7d6f8206-da6b-4c5d-b067-56eafb226a4c"
        },
        "item": {
          "id": "d9fd49d4-ba49-4297-b46b-f7da61b9e5c9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7b781e40-3bc4-47c4-91d5-2391e5d09f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62528ff9-d18f-4767-afd7-a34b77b9a822",
        "cursor": {
          "ref": "c1a6c692-b381-4de0-a19b-34a316772015",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "084e75d1-3c58-4ddd-a54c-1b7d9e2dd25f"
        },
        "item": {
          "id": "62528ff9-d18f-4767-afd7-a34b77b9a822",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45be90bb-2cae-47f3-8110-0c1cc72a6afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeff063-8305-4b03-b0b6-c8f203edb434",
        "cursor": {
          "ref": "7c261428-64f7-4618-8a9f-718d7176920c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7196c58f-58ca-4507-acbb-6f7508f85c3f"
        },
        "item": {
          "id": "faeff063-8305-4b03-b0b6-c8f203edb434",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7637180b-51cf-49c7-9122-368a398eca80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51367d4c-e3f5-42a4-861b-75330b4e0764",
        "cursor": {
          "ref": "bc109544-348a-49a3-a744-95662a029744",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "68ea2e97-fa25-40a3-a567-a0aff9625039"
        },
        "item": {
          "id": "51367d4c-e3f5-42a4-861b-75330b4e0764",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f796724b-033a-4118-b78d-1af30ee03786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d87822-1b0e-4c60-a2e2-db2894d1a332",
        "cursor": {
          "ref": "d73afb25-37f6-4f29-aa2a-4a6356f5a7fe",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "66e9a68b-7b56-402a-970a-7307bab6b73f"
        },
        "item": {
          "id": "06d87822-1b0e-4c60-a2e2-db2894d1a332",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d472c50-0a60-415f-a1ef-64b0e025b8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a2391f-44f4-4bf8-8494-c061661e6173",
        "cursor": {
          "ref": "4d2a2bb7-c645-4e46-a823-3e36f6f6956c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "077f84c8-d33d-4bb1-9113-7d2330016559"
        },
        "item": {
          "id": "05a2391f-44f4-4bf8-8494-c061661e6173",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "64d52844-5e82-4d14-86b3-5f037cb950fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc1e670-41bc-40da-b919-f5c29f60f94b",
        "cursor": {
          "ref": "fc6ace49-2e67-4410-aa92-f2bfaddf99d6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e99080d5-ab3c-45d7-9a73-3b4a4188e25d"
        },
        "item": {
          "id": "2bc1e670-41bc-40da-b919-f5c29f60f94b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d3992198-3b84-4d61-8d9f-4393160b954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72788862-061d-4caa-8bfe-2a54a6ad186f",
        "cursor": {
          "ref": "0aeabf32-e573-4ded-aeb4-5be4c6bef8e2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2c8bf958-975e-45cc-addc-e8036672b59e"
        },
        "item": {
          "id": "72788862-061d-4caa-8bfe-2a54a6ad186f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5b48a3ea-c672-4e65-af93-477db72d752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3b9542-68ec-4aec-9404-188a7aac4794",
        "cursor": {
          "ref": "a8e39544-c078-4953-95c9-21584c07559e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4ff00aa2-46eb-47dd-9f76-3058c8dd6f6c"
        },
        "item": {
          "id": "ad3b9542-68ec-4aec-9404-188a7aac4794",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4f8cd573-211d-43de-bca4-c5a31364785e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4babc119-9806-4873-aaf5-6d72768e2226",
        "cursor": {
          "ref": "66a0e6c8-0454-4373-aae2-988091a6d3f0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4306902c-f934-4c85-a04c-534f0bfc155f"
        },
        "item": {
          "id": "4babc119-9806-4873-aaf5-6d72768e2226",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "10ddf4fc-0e27-4de4-b7f9-7d5c56fb21c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab63962-914b-4ab4-9fbf-291a0c6dbece",
        "cursor": {
          "ref": "150ea70c-7d5d-4c00-885b-07ffaaad5830",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "70336257-e9c0-4e22-a323-5a9185575d4f"
        },
        "item": {
          "id": "1ab63962-914b-4ab4-9fbf-291a0c6dbece",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a251e43f-d780-426b-9117-c0669dbeb888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d427b1-2e2b-4b89-a2da-32f75c60fb7d",
        "cursor": {
          "ref": "aa63c5a9-f807-4302-a654-be2d813cb8c8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70ea8520-2c07-47ff-ad43-d5cd96dee4b7"
        },
        "item": {
          "id": "19d427b1-2e2b-4b89-a2da-32f75c60fb7d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "be1f9ed4-9a3b-44c7-a25c-e423fc245f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3accb33c-5e13-4dc8-88a3-22fb27ebed3e",
        "cursor": {
          "ref": "3c1f32d6-6a03-44d5-8ef2-3d608a3fc686",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "87aa2582-5d36-44db-aa97-13f1c5ee392c"
        },
        "item": {
          "id": "3accb33c-5e13-4dc8-88a3-22fb27ebed3e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c4e9d30e-6b3c-4ed2-8f56-a26691c508c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5ebd65-d50c-4dc6-b22f-1747f807a8cc",
        "cursor": {
          "ref": "28e35647-a1df-46d8-b4c3-60e054f6e552",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "29131d69-83f6-44f4-b619-03a7d05c5821"
        },
        "item": {
          "id": "1c5ebd65-d50c-4dc6-b22f-1747f807a8cc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "decfcb38-81f8-423d-92f6-1d924455c165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be8c5b6-b1ef-4ea5-aaf3-2b749f1954de",
        "cursor": {
          "ref": "747cfd11-d6db-4ba2-a47b-a6b624345e0d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "075e0a7b-2356-4deb-9781-78848ac65ffd"
        },
        "item": {
          "id": "9be8c5b6-b1ef-4ea5-aaf3-2b749f1954de",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "205f9cb8-8e24-46d6-a8d6-4c1e8a61e941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7ef4cd-3a01-441e-a5d1-1558059f60bb",
        "cursor": {
          "ref": "2dbd7767-ac30-43e1-9118-365ad8b835cb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1b2a6f8b-7500-4839-9b55-6b974fec0ac0"
        },
        "item": {
          "id": "5b7ef4cd-3a01-441e-a5d1-1558059f60bb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2a24ab40-4338-4c77-895c-825262edf18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49409d47-39e4-434f-9f60-b3205b47cc6a",
        "cursor": {
          "ref": "ecf100dd-8cc3-42fe-9664-d517ec23e414",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00bdf097-269f-487d-9a9a-a37504007632"
        },
        "item": {
          "id": "49409d47-39e4-434f-9f60-b3205b47cc6a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a67e90b8-73ea-403c-923f-4832baae40c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b30a480-735f-4055-8e67-eb3966301b3e",
        "cursor": {
          "ref": "e7e216a1-1821-4ab8-aa6b-c6f61043ce4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e588e23f-da0e-43bc-9b5d-0eb4bdc8f33e"
        },
        "item": {
          "id": "1b30a480-735f-4055-8e67-eb3966301b3e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eeeef44b-44bb-4207-91fa-9b714fd1200e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b605ffab-fa15-415e-b4cd-5b4afd08930a",
        "cursor": {
          "ref": "1b7e59d8-3029-4290-8168-39c26abae4cd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "52d7511f-bf20-4c69-b87d-a152c878b88f"
        },
        "item": {
          "id": "b605ffab-fa15-415e-b4cd-5b4afd08930a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6860a3ce-9273-4032-9336-993f70455be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d988942-6079-41ea-a7d3-511e092e45cf",
        "cursor": {
          "ref": "673ae689-46ea-45a1-84af-d70e4f37d6e5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bd2e8517-4ca3-4f53-b475-6341f74c0963"
        },
        "item": {
          "id": "0d988942-6079-41ea-a7d3-511e092e45cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2ffef0f9-8b09-4e58-9cba-9c792d32a2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a7c7b-9591-4f52-a73c-b640995ba098",
        "cursor": {
          "ref": "0c18fb11-83f6-4106-8d21-30ac60d60a95",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3b44af77-09f6-4c8a-acd6-7194bf770ef5"
        },
        "item": {
          "id": "015a7c7b-9591-4f52-a73c-b640995ba098",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d1bdb17c-f9c4-4409-bfef-570f7d538d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b31a7a-cdc7-42cf-b990-1336c8790235",
        "cursor": {
          "ref": "22772a4c-ff70-4052-b498-8c3176095b1c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5bd3e070-7dc7-4d82-8980-3783a1876d74"
        },
        "item": {
          "id": "40b31a7a-cdc7-42cf-b990-1336c8790235",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aea9ef6e-bb57-4e0d-ad01-defc53210534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c38a84-f4c8-415e-a085-91ace592bfd8",
        "cursor": {
          "ref": "86a590fb-5c3e-4531-9591-5145c511dda1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "506dd9e8-4538-4e1d-b00c-27f557a34d05"
        },
        "item": {
          "id": "66c38a84-f4c8-415e-a085-91ace592bfd8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e3e263ca-58ab-4939-9800-cab54e426157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846f3516-feb5-4688-a768-757d2bca81fd",
        "cursor": {
          "ref": "963f32be-a84e-4370-94ca-6571e673a35d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0acb6aa-6e14-4642-ac48-7b6489cb6e0c"
        },
        "item": {
          "id": "846f3516-feb5-4688-a768-757d2bca81fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2c472ad3-a650-4b8e-bbbb-f346891cf6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac25cd02-3dba-47f9-ac6f-3037dec72a38",
        "cursor": {
          "ref": "7b51d188-bfa9-4825-93bc-9b223959b101",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4fb5810-9445-4ac3-b3cb-032fb29d4d92"
        },
        "item": {
          "id": "ac25cd02-3dba-47f9-ac6f-3037dec72a38",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9a91b6f1-067a-4d0c-8384-56d4e2192fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6cfabc-e0e5-4b52-abe0-820a8d7d3848",
        "cursor": {
          "ref": "8e1650a7-c662-4fcf-9c18-b26b952a7b28",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3252b2a8-58c2-4529-ac95-16d7eedda97b"
        },
        "item": {
          "id": "ea6cfabc-e0e5-4b52-abe0-820a8d7d3848",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "64715baa-2a8d-4504-9574-bc6fe275cc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04162a10-8162-4af6-b0cd-54fa0af3236f",
        "cursor": {
          "ref": "35b2581c-c742-4b1d-b862-e671be4dc06d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2577db0e-64bf-410b-a03c-dfa720fc3707"
        },
        "item": {
          "id": "04162a10-8162-4af6-b0cd-54fa0af3236f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "abe1b08e-7a5b-4426-982b-f1c0a2d4aa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2699db-94fa-40fe-a35d-51683ffac06e",
        "cursor": {
          "ref": "db26ebd3-2439-49e9-8f94-20d0d252b8ac",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a67cc8d1-b6a2-4041-bd10-7120553bb208"
        },
        "item": {
          "id": "5c2699db-94fa-40fe-a35d-51683ffac06e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e1328b24-aff7-4733-9e49-b72fdc1777c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be527326-da89-47ac-93a4-85bd7f3c4dbd",
        "cursor": {
          "ref": "c5cf0b49-d776-4188-93c9-a8209383c3b6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5b8dcae1-8f89-4e67-824f-59ead5cceeb6"
        },
        "item": {
          "id": "be527326-da89-47ac-93a4-85bd7f3c4dbd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35c50e3e-07b8-47b6-b8e4-d1f31708784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a1920b-22c3-4b51-b3d3-2e183b11c590",
        "cursor": {
          "ref": "054eb0ad-1564-4323-b2c9-f5ad75c54d66",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "44fc4cdc-55e2-4abe-9f6e-3e0c95afc80c"
        },
        "item": {
          "id": "12a1920b-22c3-4b51-b3d3-2e183b11c590",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "301902c4-9d01-4671-b35b-f60003a91b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f8e02-9cf1-4a80-aaec-480e51ed3967",
        "cursor": {
          "ref": "b9bb3ded-6308-430d-a4ff-8c2455b2645a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "40113a12-e794-4171-8802-4c58b84b0f63"
        },
        "item": {
          "id": "8f1f8e02-9cf1-4a80-aaec-480e51ed3967",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "15f314fc-42f9-4eb2-b6bb-b7440c8c1f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d2ef0-bbe8-4577-88cb-a522217119fa",
        "cursor": {
          "ref": "b827728f-cdd6-4b2a-9b93-c69c2e8af98f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8fad953a-4698-4d27-9ebc-06f4e6cce425"
        },
        "item": {
          "id": "5a6d2ef0-bbe8-4577-88cb-a522217119fa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4e392287-4c6d-4c3c-b1f7-32c003f3cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7d20cb-4797-4547-afab-dc5ea3dd3654",
        "cursor": {
          "ref": "b6a07096-574d-4cc2-b7c6-0eee550dc239",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a5a074a0-9dc6-4c37-8f69-e00e03bf0aea"
        },
        "item": {
          "id": "ed7d20cb-4797-4547-afab-dc5ea3dd3654",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5f45412e-2380-4c17-8fc6-33998e03f994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b6148a-d1a3-4ac6-bb43-752e6bc0351b",
        "cursor": {
          "ref": "d783436e-9191-44c8-b740-9b7d5fe23310",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1e291e68-6f8d-4220-888e-6f6e2bbe9c0e"
        },
        "item": {
          "id": "20b6148a-d1a3-4ac6-bb43-752e6bc0351b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "20a92258-1c8c-40b7-a1ba-9204d21f562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed024abb-24dc-4eaf-b267-1fdee147b4ef",
        "cursor": {
          "ref": "49ff638d-9ea2-4a5c-933d-55d1710af7ab",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d6da4a91-0fba-43cd-a7b0-ec5467b48459"
        },
        "item": {
          "id": "ed024abb-24dc-4eaf-b267-1fdee147b4ef",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06ab7ec3-5032-46ec-87a2-563111db1608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294bd77c-70f5-4972-9e9c-a320a00b6488",
        "cursor": {
          "ref": "5e1fb338-2ab4-46a0-9265-8355672a5e07",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "50f3f5ca-002e-4400-a30a-27526f8498bd"
        },
        "item": {
          "id": "294bd77c-70f5-4972-9e9c-a320a00b6488",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f55ba9d-60a3-404e-b773-cd1e70d5c5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02653c13-1354-4fab-a597-6f04c35b123d",
        "cursor": {
          "ref": "08e932a4-359b-4a6d-af2e-aec80926ddf8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "09b53f06-a525-426f-af58-4cc4cf742c5f"
        },
        "item": {
          "id": "02653c13-1354-4fab-a597-6f04c35b123d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "604d03b7-3bfd-4b52-8e51-3dbafa45dd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9664d846-ce33-4415-a18f-aedaf956a513",
        "cursor": {
          "ref": "300c6323-eb72-4789-96e6-b390b93c9987",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b897fe54-e754-4b53-a42e-ae1f9f22e5e2"
        },
        "item": {
          "id": "9664d846-ce33-4415-a18f-aedaf956a513",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0aaa6483-c3c1-41c0-8a90-356db1df5038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d4a572-abe5-4d54-a524-cd9386808742",
        "cursor": {
          "ref": "65a17e0f-c6fd-4abb-9aa5-3497203ba853",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "faed5db9-a1b2-440c-872c-0423389f2682"
        },
        "item": {
          "id": "f8d4a572-abe5-4d54-a524-cd9386808742",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "91979d08-164e-46c1-8ca1-ad424400889d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5649e327-b340-4417-8c0a-c51fc24de51c",
        "cursor": {
          "ref": "52ce8f86-4daa-4cdc-ad6b-cc32c7bbe9f8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "903a2b20-7d06-4538-a2ad-40c88a137caa"
        },
        "item": {
          "id": "5649e327-b340-4417-8c0a-c51fc24de51c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "095eec3c-7f59-4dc1-880c-d3d57c70be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7c674d-c25e-46d0-81a2-c916e7168aa3",
        "cursor": {
          "ref": "83af810d-06c1-4958-b5dc-5ca49b03f432",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8c28d572-3322-42b8-8fc4-9895d3e296d5"
        },
        "item": {
          "id": "3f7c674d-c25e-46d0-81a2-c916e7168aa3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e9e4226-429e-4ecc-8c16-6e6deec4debc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d185d7b5-f121-4fbd-b518-08ae084569f4",
        "cursor": {
          "ref": "43b8e928-64c7-4a55-968c-4cd2266a0432",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34239856-7228-4501-a447-3e6c07ded44b"
        },
        "item": {
          "id": "d185d7b5-f121-4fbd-b518-08ae084569f4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cb3d9241-3707-4742-962a-c53f15f1dc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27196f5-e986-4550-ba63-98d020e400b6",
        "cursor": {
          "ref": "97458e9e-f8a7-4c3c-8ed2-9646640dd510",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c65f6ab4-4c9c-469f-9e64-0dd3638f1ed1"
        },
        "item": {
          "id": "b27196f5-e986-4550-ba63-98d020e400b6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a679cd62-be90-4188-96e8-32eb964e57e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff6001-6c8a-4555-9534-c22fe6a7b262",
        "cursor": {
          "ref": "387be411-2eaf-4d19-9a90-464d557a58bf",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bf41ff45-db24-4b96-9196-5dae6915a215"
        },
        "item": {
          "id": "edff6001-6c8a-4555-9534-c22fe6a7b262",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "be1367bb-a0f2-477a-a66a-a2f67b9ad472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5d1ef6-5ed2-4989-ab70-831a334d7a99",
        "cursor": {
          "ref": "b99906a6-2418-4308-8017-c73922b30758",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "571aadaa-cc7d-4ff6-9259-cd8dd3caa6c1"
        },
        "item": {
          "id": "ea5d1ef6-5ed2-4989-ab70-831a334d7a99",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b168519-6281-43b0-a08c-ad8fae90f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704dec2b-0cab-44ea-a93c-665202368c2b",
        "cursor": {
          "ref": "81538b38-dc32-42be-9331-2358174d8834",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "32495661-f096-4797-8548-a2baffc03575"
        },
        "item": {
          "id": "704dec2b-0cab-44ea-a93c-665202368c2b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "221f81a6-c47e-40e5-9d5c-d031e6f6a481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b40df85-ac78-4fb7-9994-06a9080571f4",
        "cursor": {
          "ref": "82c06f08-0a9c-4800-9ef6-0b898c6b7a79",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d1c01fcc-00e9-4956-bd76-0a0d836c1a5f"
        },
        "item": {
          "id": "5b40df85-ac78-4fb7-9994-06a9080571f4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "42e2216a-9b4b-4201-a9f7-f03aacbf7213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c60b5-703c-4a40-9849-06c7124aaa46",
        "cursor": {
          "ref": "d197b951-2afc-49bc-acde-86057551f392",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7300730c-267f-4662-8931-456a7da41ca5"
        },
        "item": {
          "id": "492c60b5-703c-4a40-9849-06c7124aaa46",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6e42befc-5d11-4df3-9475-3d7921985c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb068e5e-ebac-4321-b6bc-941ec7010ba3",
        "cursor": {
          "ref": "ba80acf6-bd13-4445-9553-6be1f065e3c7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9ece8ab0-0dff-44dc-9911-c8322d196bf7"
        },
        "item": {
          "id": "cb068e5e-ebac-4321-b6bc-941ec7010ba3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ab56d1f1-3d4a-4d9b-ac6e-ce865f30c63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7aafdf-81b4-4e94-a96b-5f7750411722",
        "cursor": {
          "ref": "a9313daf-d251-4e0a-9c74-8514fc2b902c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8ff94d01-c2a1-4081-83c8-3bf55842b580"
        },
        "item": {
          "id": "6d7aafdf-81b4-4e94-a96b-5f7750411722",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90c50c69-943a-4986-9032-8e319345210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f40c4b-58b9-42b6-a804-1cad56e77578",
        "cursor": {
          "ref": "246c590e-8919-4f07-a39b-d46e1e22e315",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "09f217d0-4df9-47a6-8401-d6584e879e48"
        },
        "item": {
          "id": "59f40c4b-58b9-42b6-a804-1cad56e77578",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d21e4ef9-d20b-4880-8b92-cbfe45214960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b434018-e84d-42d0-abfb-2bc47066c678",
        "cursor": {
          "ref": "2d0624d4-9fb7-414d-973d-76be29cbda51",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "64226ec5-31b9-4206-a4e5-05234580e94b"
        },
        "item": {
          "id": "5b434018-e84d-42d0-abfb-2bc47066c678",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "55a6fbe2-8f3b-49ea-bb19-2f6740720c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e0ca0-7623-42a2-ad1b-15871cbb7a58",
        "cursor": {
          "ref": "59add568-9d67-419d-a240-988326c0bae8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ebfaae86-71f2-497e-bd68-877f9cbc8954"
        },
        "item": {
          "id": "4c0e0ca0-7623-42a2-ad1b-15871cbb7a58",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6fdc7ce5-6ece-4c02-8004-6a6a7f863742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308ac15f-97f8-4849-ae47-d3be4a135f3b",
        "cursor": {
          "ref": "38bed7d0-2e46-4c6e-b88a-89c7ce8b8841",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ad0a5160-c3a5-4007-9ec8-980414906e30"
        },
        "item": {
          "id": "308ac15f-97f8-4849-ae47-d3be4a135f3b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "250ce9bb-3222-4061-9672-46ac8ba842d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dcf902-1c26-4480-b172-f78ec4f010d5",
        "cursor": {
          "ref": "5bf2ac3f-bfdf-454d-b90f-00a5b70e4f89",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5cd2b012-8294-47f5-9b64-5499d7109dff"
        },
        "item": {
          "id": "e4dcf902-1c26-4480-b172-f78ec4f010d5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7e9e0422-264e-47cb-8504-536dfd33acee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a979805e-e0ad-46a4-9f1e-cf0eee083ead",
        "cursor": {
          "ref": "d85e684e-9a9e-4b09-b921-90a93dad7955",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "abfe9fb0-171b-4a59-8d2f-ed33b194c3f3"
        },
        "item": {
          "id": "a979805e-e0ad-46a4-9f1e-cf0eee083ead",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1e161704-a403-4ae8-bee5-5bc2062fe663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984a03ee-0976-47aa-a8ee-d80d0b81aa1a",
        "cursor": {
          "ref": "0f6bff79-0747-4527-91a2-e3fa01d017ae",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c4cf756d-c0bf-4e2e-94e7-dd81cf9edcc6"
        },
        "item": {
          "id": "984a03ee-0976-47aa-a8ee-d80d0b81aa1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa7b4423-1d1c-4faf-8473-f7e2bcfce702",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d78a59c-cd77-4b26-8427-4146da04689f",
        "cursor": {
          "ref": "38356e51-9f60-406f-80a6-a52499508cc6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95e96ab6-5ab4-45a5-ae80-e53c313d8376"
        },
        "item": {
          "id": "8d78a59c-cd77-4b26-8427-4146da04689f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "70c65c8f-c92f-4fe9-b593-60e99a83d85f",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "65861819-3a48-4083-b9d2-f6c35b7bb2ff",
        "cursor": {
          "ref": "12eed46a-a229-4df5-90ad-fab0de1c05a4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "049b8a44-a376-4ee6-93b6-bfd03186e705"
        },
        "item": {
          "id": "65861819-3a48-4083-b9d2-f6c35b7bb2ff",
          "name": "credentials_verify"
        },
        "response": {
          "id": "20340b37-4675-4b5f-a64e-8157d338faf3",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9451c25d-6532-47af-9be0-c87d0c95ab8d",
        "cursor": {
          "ref": "12a3b4bf-cc57-477e-a216-5c55974eef95",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e58d015d-17cd-4a69-b67c-56db3f736018"
        },
        "item": {
          "id": "9451c25d-6532-47af-9be0-c87d0c95ab8d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c45c2734-5b32-44d3-8bb1-2a6a61e39e73",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e973a68b-bf54-4944-a87d-bf3cfbc3488b",
        "cursor": {
          "ref": "68b57ae9-9e89-48bf-bc1a-334950171c03",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9cfbd33b-bdca-4dec-80aa-2365439b8f24"
        },
        "item": {
          "id": "e973a68b-bf54-4944-a87d-bf3cfbc3488b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ac7d2e1-3cfb-4aab-adcc-5f7380962b10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e973a68b-bf54-4944-a87d-bf3cfbc3488b",
        "cursor": {
          "ref": "68b57ae9-9e89-48bf-bc1a-334950171c03",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9cfbd33b-bdca-4dec-80aa-2365439b8f24"
        },
        "item": {
          "id": "e973a68b-bf54-4944-a87d-bf3cfbc3488b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ac7d2e1-3cfb-4aab-adcc-5f7380962b10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c971b9e-cfd9-41bb-8ee4-1e2a84a4b81e",
        "cursor": {
          "ref": "0baf8bb9-f1cd-46b0-94a8-df031f1d563b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "20f6c1c6-512d-4794-a087-bb33a323ef27"
        },
        "item": {
          "id": "4c971b9e-cfd9-41bb-8ee4-1e2a84a4b81e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "70984495-984b-4bb5-a550-c33b338315e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb533dc1-6742-4191-9aef-ba0066135530",
        "cursor": {
          "ref": "6a58afbc-7398-4bd2-b79d-a71a5c0717bf",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "da9b29b0-b783-4f89-bfd3-8a86c3433318"
        },
        "item": {
          "id": "fb533dc1-6742-4191-9aef-ba0066135530",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89d18034-cb04-41bc-971f-bf26bd3f6370",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}