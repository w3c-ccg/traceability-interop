{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e7a836a7-0724-4582-ba9d-ab9ac5dbb1fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cfea9512-f657-4cdf-83bd-10a869c90ca5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e6679aa-709e-4fbb-aabe-8a2d25180e3e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3b76e4a-9765-4f51-b196-404ec43e7be6"
                }
              }
            ]
          },
          {
            "id": "42b9d601-ad84-4f70-90b0-72abb2df610d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55b6fde0-1187-4906-8fc8-0e6ba18044c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3958fe2b-6a6f-402d-b39b-87e5a9462959"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e4806d3b-70af-4f34-8264-83e1d20c81b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0692783f-605c-412a-949a-33b3e8785c95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a32095f-41af-4a78-8118-2c89653d4b02",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aed37f2-7575-4305-9a6c-43eb69dfa7d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34de6ce5-c95d-4515-8f6c-6e84727bb14e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dc8eb11-9be9-4715-9e69-7601e37fdba7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f53f3059-6ac1-4684-be22-8d0b7fcfc43b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e3f3ec8-4950-46b9-99aa-1967bfd01735",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b698e533-0c1a-464c-8e30-d0eaf44fc834"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "359d2a48-8352-4784-aa04-954d27161c81",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "16cce6d6-d2cd-4e67-9200-ad5622db26e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01ff9c4b-2cd3-4dc8-af98-4b25e3c235d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "415d5620-3666-4fe1-887d-f3e28f461c9b"
            }
          }
        ]
      },
      {
        "id": "6a373cd5-37d1-4d3f-b0ef-f85391181c65",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ca8952fb-1128-4e71-be82-101115bc9064",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abb163b3-c2ab-4d28-a437-0c83deb81462",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7287bfba-8c9d-4472-b93a-5bdb3688df13",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c9ac0d-e044-4d3c-805c-da59672bea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7413fc82-1092-4179-823c-68a78572c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1991c624-3b2a-4e24-820c-17a96d33a6aa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0aa929-2205-47ce-8899-a7673102a88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9b1e642-c3a6-47b4-ac9b-7f978415f74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5696d08a-5fbd-4e86-9b09-0ff311adca51",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a751ca5-0218-4d08-83b5-b731c6b8a0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8627327-d7c8-422b-8249-4e606013017d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ea282cd-312c-45a6-9789-147b2de6507b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b262102-931e-4580-aa2a-59c1e6c65014",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a192e-65cc-4861-828a-53b8121a4e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fdcf954-6b20-428a-a0d7-53ff7a44e147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cda791-7cad-4f5f-9b2f-981ac75428ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a88588-fed9-4796-9a54-a0d5af4e2317"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "09272022-1f0f-496b-a0a7-47e3aab45810",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3417cc4-e5de-4516-adcb-739f7e5e5453",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aa3a67e-887b-491c-bdf1-3ae09072b054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a711f5a0-5f60-4a21-b499-3ad32ddc9e4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b68ddc-a26b-4816-addc-4028ceb37cbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf98eb61-e85c-422f-bd08-7965b16cd686"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05832730-c90b-4d0d-a7e6-1cbeff1789ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "290394f9-7cc8-4b5a-b942-0236ecda31da"
            }
          }
        ]
      },
      {
        "id": "ba0b49e4-45f9-4ce9-8cfb-6a41b6add4da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c6364355-a7c1-47a8-b99a-dd530f771b53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "132a1a32-2d1d-4f93-b059-dc7291d66902",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "05251a9f-5223-437e-a5eb-175dacda1cbf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7ae546-928f-4521-b7fb-3a3ddc1d21b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003f58a8-3006-4151-b3ae-ea2bf8d89c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f2abf3-8eb5-4000-a422-0699720d0eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "878f43e5-4ebc-4389-978c-6b3dd90d0cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c8cf80-2ca5-482d-85d0-61798b231a2d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce07eecb-9392-4a2d-ab9f-6a12041d6090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a260539-4f4c-4831-acc0-4fc2b8f398ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4742b0d4-aaf8-4f09-ae3a-952be2cf8744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf5f1e28-c0de-4b4b-8ae7-14b0a44aabf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea89f09-d5ff-4510-96ee-2e1e047202ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8cac6a-03a1-4848-9b2e-7989ea61c412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfc95e9-61f9-4a33-b8ad-f10c6ad8ebce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8d26c-3195-4083-9723-bccef6ce282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d86deee0-4ef5-49a7-9f39-53b3a8d7f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3823dbba-2c56-4367-b765-93bd464b4355",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b29f9b0-91cd-4020-ae2c-fa65a98453cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d6bc48-15ed-4a99-afd4-72b67035dac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bed77c4-bd33-4ade-a3c3-16cbd6747754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "948a7b5e-2094-4973-87e8-6b9258f25825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c6a886-fe7f-44f0-93b5-3ba2f62941ba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7851f9c6-e054-410f-bb8a-8dca2e10149a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de8e97d-93f6-4cd4-bc23-bc5821d33d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d796cacf-a52e-4d72-8a03-24d3d6358262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a8f11d6-1770-4cae-a33c-be1a316fd063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed00bb1-7f4e-44b8-8158-eab550210b1f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445e2d3-8d7d-488a-9246-ab150fc386a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957dd068-c5c5-4e60-a77e-47ea62976750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d1b2c9-71fe-45ac-bba4-53d63eb2ab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d2ae493-a835-4030-a83b-0df6328d76a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335436bb-659f-4cec-b730-75fdbf9faba6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbfa87-e19d-46fa-ab38-953de000832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e624715-d380-4463-b0a6-a7fac57b4586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356de6d0-9ba2-4e7e-bba0-c7418d59e00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17c71529-9972-473f-b94e-aafd94320501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec39793-bf8f-4461-ae7d-689a0ba36d5e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b084d-7654-4a3a-9073-2b11e0ffe5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae4cac3-ffa5-4498-a91b-959cdc3768d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0179dce-b3ca-47bb-a167-31213fec6235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4612682a-5c74-48d2-aa2c-93eec29f8f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a461d4-fb9d-4476-9529-386eb0c2053a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1e8f8a-cae9-4d0d-b222-854d6409c106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddc2a83-a799-45d3-abd8-6de89774aaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132c3f57-7f07-489f-8f51-0424c736f744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "971b6ce6-bafe-4813-ae63-0965ba4d257a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac479505-c6ef-4f7f-8044-ac37e169832f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a25ae-07fe-4ea3-8ed4-66800908ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16afb44-faaf-4954-9f20-dc0ba3d013cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae8854b-cb81-457a-93ba-80029746eefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbfaa7f9-55e1-4196-8d29-2b605fef0a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a76bc6-57f6-4d4c-804a-09e7b53570b0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d73f8f3-4820-42e3-898e-c8294580ff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9850e93b-9d85-4e72-a175-d49ff3cda7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fd700a-e235-4dea-ba07-43eda7d1061b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9e0ce73-73da-4ecd-9ee9-c8f9355b4a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070999d1-e373-4682-ba76-781709c62e0e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bcb443-c84a-47e0-93a8-b92f6f26db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384fb888-3de8-4588-ad28-cc49b17e38e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb1271f-742a-4b88-a687-3d3b105866ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c533f52-184e-4350-bb15-713101914d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac3c120-4fd4-4496-b821-ae45c8c64f2c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd8e30f-5e62-4865-80eb-23ec7abb970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac6500-bef8-4b33-8ecf-ef0c1c53d9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8901d213-3886-49fe-81db-019f6a51d49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f173900c-29c3-4569-a114-2c9a3d9c824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5f35b7-8cfa-4df0-9325-b93955bf3eb6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25347058-3ea9-48fc-b11d-a37bd3bf5eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474edbe3-6360-4dea-a906-c0ddb92a0486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb48ee8-ee42-43d3-aa2d-bc154eed7d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5885b132-cde7-440d-82da-f85aff131832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a43686-122b-47fb-9262-3fc0aae09135",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e9cb70-06a3-4dbf-b8fb-9e92763f8e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb2b66-fc3c-4e25-8cb4-dcb98152c4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd70536-b327-49e7-8a86-de52b43d5ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "892c1cbb-ebae-4d83-98ca-b67a446e9095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f09f5ed-d320-4835-8abf-2e6f6f6adbe9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec4227f-a414-450b-9284-ff171ece00bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca9bf5e-1c32-4817-bd0c-e1a53c696231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c391995-5a20-468c-8694-8990dae125db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad5328b-8f50-4c57-8728-d98779589a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b923f3-9e23-4199-a43e-b444d5100a1c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a981825-0372-4646-9638-1ebf3cddfedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6851d1-453e-41f4-aeff-ff2ca115bf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1eab0-a253-4066-846b-2ba1c7ded8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c097175-71b7-47ad-9da3-f6f56c5d711d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4640f4-6ccf-48cf-8d3e-729ccc0dd72d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb83e13e-cbd5-4d01-96c8-f73d3a01e097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b4adb1-88fd-4db5-b728-b20b0524f5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf7edc3-bfd0-4612-a203-8349ff377005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a691962-6499-4388-8bdf-61ef28a952c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467bbaf9-7ed1-46f2-af57-5568c4a85665",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339a4e88-fbc8-4196-b6d3-4c1010066cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571309e2-47ad-47ec-b8ba-fa1114079b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4b3efb-00b2-4f2d-9caf-dda7cfcf12fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08249692-f244-4df9-be5c-630f001b9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2099d87b-2f78-4ba9-92ea-456c4f32966d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2c59bf-71db-49ef-a00c-801a0151850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160641da-8803-496e-97d8-10d381b1850f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd638686-dfa4-4982-b1d3-72dd5d8865bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7642dc15-0a0c-48ee-9280-35a0938dd723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaad0a84-09b3-4154-a4b1-fdf37af4bfbd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e54d8e-14b3-4adb-8fc2-52f6b1bd8359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde4b001-3343-4fbf-9f85-db96191cdce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d94162c-ce5b-41eb-a4a2-a108acb11b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "651e785a-35ac-4a36-ad53-c4c778f1f40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb255ce-2821-4ec2-89a8-58cbe8aec35e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c575a790-56f8-40f7-9f17-4c689b17b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d550b77-a274-4b35-9aa5-63cc05013ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e06097f-2081-4cca-8439-b5c3f331aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5de85db0-fca5-43d3-b80a-4e381c6bab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de0eddc-2220-41ad-b176-7bf9aa0f6029",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d787a-3f2c-4826-9211-49c3cef6a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49a18e9-b642-43dd-9f58-73750a3fca26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e556b7c-3e15-40c8-a1d7-e90a24a6883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52f47473-1bcf-4fbb-967b-564adbda4dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e92e29-961b-48f0-a943-a10d563e3439",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6da3cb-f9ba-4dce-a693-ed1331b12e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a944aa-ee8b-4c6c-ad7c-59a27c5a72a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de826472-0925-4951-90d8-e00519c5a00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59023ce5-e119-4884-9cc8-09c621714a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202d69eb-b863-4082-ab9c-94f291fb566d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10212c86-9329-48d9-a740-33391ede277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f26006d-df1f-446c-bd47-25aa249eed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f6a88-857c-4494-8c15-0248cb3ac2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be37b231-53ef-47bd-bc6b-99602ad67209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d838b091-c4fa-4c63-8c08-44d6fcca0433",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d227b2-f276-4b7d-88ca-0725c1cfb462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ea29f0-f096-46ec-b9f0-ad3a0b125a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2900c507-d5d1-441e-b3d7-2592e35965a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd72064-4a2b-487d-a994-1d6b6d75bdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88ee5d5-918c-42d9-b904-f6ead2b9e7ca",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc13dc55-2881-407f-aa3f-7fb3df45107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd37c38-8b2a-446a-804f-747e5261c7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19698024-7661-47b1-aaa9-b27c33b2ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd0f5dc-1a93-46a7-8208-b8c94df8e07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cf6d69-d30f-45fb-a842-a342507baeb6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1354b055-245a-459c-b1ed-af1c934c1328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f77660-bc92-4da7-b472-4bf5e2192513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5f2e5f-6973-4822-82f7-e5c990a3f322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b5f877-19ac-41e5-9d60-0ee1c958f67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b235fd19-79ef-4663-8bcb-4b34d933cfb5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c837a2bd-513c-4a0f-b3ca-24f48a426c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df112fe-5a28-4b2c-b565-16993ee47678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6d88c5-14c1-426b-b1ff-84c0fc308c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac3d34b-9d74-4f0d-b988-21335b4b8d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc218d27-5fb8-4055-befd-7c06617f1820",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f424471-c2eb-4362-857d-18bf599bdcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af11a493-03cf-4a8e-bbf8-9178760d40af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034bd5e-bfcb-4930-9f23-d5de068594a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5ba4f4-b84f-4d12-96ed-6a00a943d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c498320-1449-4183-8c9b-c504e306fc8b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a6504-aacc-4446-84b9-e837ebcbceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85925a6-23bb-4944-8ec3-5ab6050fd030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763a63eb-a4a4-4dc1-8140-ca6994ab8125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c32be3-0ea5-498a-8288-fa5e57d2f9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65245c02-2f58-451a-bddc-9eaaad68b5f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107c0a59-8544-4078-bc98-37f346602c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4434d333-c3db-451c-8a91-e6279c521f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ee518c-9bc4-4d0b-9b07-43389cf885cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3e6dfc-eccf-47ba-96f2-1c113fbf24bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0064bad1-428c-4a82-982e-9d4d62015ceb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f567c81-666a-4f70-a974-503cb3713af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a637a21-e419-4271-bda6-85147309966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c1a667-bd18-4a54-b254-6d2aa7bbc77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9d725d-8712-451e-9420-9c0cb02ef63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a51a64-c7be-4432-920b-57a41932a887",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3fbe14-f524-4b20-92de-59715f8fcc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35ed1fe-ab08-42fa-8ecc-71fcf1c5d06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b680788b-ae02-4be5-ba04-8408841da3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d115d9cf-c824-4542-ad76-25a6c1a1ed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c72676d-37dd-4e50-872e-8b7dc154e355",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a96b783-6fa7-4c0e-b87d-d1ec60da6fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73688313-04f0-46e8-8bcd-3142452d6a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab3fb46-ef30-40f8-8a6b-002f0186f3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "656627fb-3677-4df5-984f-13f578ac479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9d027-b08b-460b-a232-7a5d74bf5ed5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71041ee-aa1d-4d8b-b0b2-49e1bdfed0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba3ad17-971e-42e0-b0c6-7857eb150381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dc5cbd-8664-4f11-8c04-e6e6dcccf71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdb75e6-f853-4e33-b613-8e96675ded3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cb8083-499c-4c12-afe7-55357bc74945",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aab703-57d9-405c-bad7-c9f8c8e75ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453ff789-b7a0-4b6c-83c3-41b343d35cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab39d7f-6eac-4863-a8ac-e78bf2c1d6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23801040-f3ef-423b-905f-fc9ea138c8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553c2b9-f9c1-47ba-8bd7-1b227837cfab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13d147-970a-4b13-a25b-7fcf3ba43c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa138f3-e00c-413a-ba14-e20e5907e59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104fe4dc-00d3-41ab-b073-701cfdc67d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f25204e-caa0-44fa-94d3-d9bf7e6942c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebbedee-dd88-41ac-872e-550180f516f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74871efa-71d9-4944-9d73-32baec33efbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1603e2-e0ff-4414-b100-c87a3e2a1e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc258e3-3d7a-4cbc-8d4f-78b7f7d55a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9d2c8b-ddfd-4785-a001-2e6ddeb5d7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b7750-afe3-462a-add3-61e032a2ddbf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23baeef-5708-4251-977b-e462d8c2a3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b730c9-aa01-4f6d-a0da-04943bcebc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f1b768-2b5e-4519-a3f6-b78c12a7853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7765bdf-b1ef-4937-9bc3-ad3665ecd311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c6d371-baee-4f7b-a115-b24f711e9842",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc6d6f9-8920-4b21-9261-ef28fa39adc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961b2fe4-41e3-4f00-841f-e0d22ea3ad7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd4fde1-4e63-420f-8084-29d68ed77bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c10a0849-4e2e-451d-bc5f-9256ccf5861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a0e698-cd57-453d-b94f-e6661f4cbaa5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378b8f69-8663-4224-9a85-44707b115a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5b189b-acb5-44a7-87f7-2376f86e3944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ac7a4c-2f61-4181-8f4d-9c5a629c3337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa48e15f-420d-4fff-94f7-806f1bb113b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dcfcf8-b757-4ea3-8166-4efb6712f0fd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66685e6b-2d69-4780-b6d1-2611e25a3b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c8e5e8-c866-4ab8-9c97-1b3a1693e8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77e9725-efb5-4f6f-87b5-a069ae7a983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2165361-95e1-4ace-a520-ed25f66b8abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0dca8f-f52c-4283-bfa4-ba237aa2bb0f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312c24c5-cce4-40ae-b72a-fca3777baf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed73174-24d0-4adb-ac33-24078a0c3939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f314c5-5445-4c4f-bc2a-3dc15a50e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a0fe1a-f5bd-46e7-b0fa-7c17719e3f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e7325-7614-481b-90e1-92666842e7bd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b04624-d1fe-4f9c-b509-35b05bfdbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf17ccb-97dd-4a32-8307-9f2201618746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b82f085-f71e-4cee-8c5a-bed8c835ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f206330-1ecc-42d3-97f4-cc75c9420f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879084f7-db25-4887-a40e-19cd9b807e20",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae920f4-cc8b-4925-bb56-546669b91350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962b7034-c1ac-49a6-8d65-8303c402dcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5027e4-c5ab-42ad-98f0-ad69d877a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "602524f3-c655-43db-976b-a58b7dbf1377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c1331f-894b-42f5-b75e-7ba00754a1e0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a516eca5-8f1a-4f39-81f6-caa6d34d954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3f9801-105c-4cdf-b481-82c6df987829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365e80a-922b-4794-87f1-cbcf03cad7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a6b946-becd-4bd4-8028-ddefa25a47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c34c5d-808f-480e-a3f2-38895409213a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab25bdd3-6d51-40a6-8d1b-8feec55bda79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b86169a-6696-43ea-a3de-6e5acf3c68f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310f7389-bcb5-4cad-80a9-b48f8a2b7d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45461c87-4bd0-410a-a9eb-5427ee651520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead849c3-1cc2-46ef-9d5d-44af1d3a4ae2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a8a16-60c0-4483-876f-d0111d198252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d01b52b-0e71-4de2-aef3-82d275603fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd3bb13-7a37-4bfa-9c47-3a33bf2f76e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc859922-3c0a-4982-8d39-769b9e91fa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d761e-afca-4222-80d3-162eccf83087",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610028a6-bb6b-4010-b04e-f3269aebb29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87122996-03f6-45d9-99c5-e41fa123c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948a7043-02e6-4626-958d-2c30149d7edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8faa9519-9163-4b0a-82ec-22b682178e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77ebd09-fe04-497c-9749-d516a3f22bfd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a5bc89-52c5-4b75-a988-b1418344c9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192b4d6c-2a8e-4de6-b180-eac0badfb772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c6d83d-f5cd-46cd-9744-6d3905e81999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc39b6f7-fed2-4820-964c-766b26ca1288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdc21f8-3ff0-4d03-bf9f-95311a2154c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bc3a43-a070-4ac0-a298-f84bc9ff63e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3fd361-31d6-4ba1-87d0-a674029d8620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b665e5dd-3af7-4d49-b259-f2b936be69c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76104ef6-4eca-4069-a7f2-2043e5e82ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1491f62c-675b-4753-8bc9-e5a543f3b32c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69712cb8-78bd-4f46-9bd9-f0a32113d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222f5ab9-8e45-4803-a214-7da96a34ebf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c615a0ac-75b9-426d-b1f9-278a6818315d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f8f75b-8439-40c3-93a4-d33629f50cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43346e0-be94-468b-9962-7371d5eb46c0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc1cec7-3da2-46a6-b3a9-d50f62b437f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925e42a4-65be-4c39-b8a4-ee69f5ff7319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88e5044-b854-4264-baa3-e781cebb63a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a432c081-38b3-49bf-8089-d800219fc71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8e6e61-157c-4490-943b-3ca5f52e5986",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1082c932-29e3-44a3-9b7a-e5e8c1a83480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a3739d-49ed-4126-9d0b-5c530c74e220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec159f8-1395-401e-b195-784d503e78a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e788296f-5e49-446f-9a00-d77e7c814191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47f2dc4-0e8c-4669-ae07-13be4cd3a3fe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d68058-771c-4650-a3e9-2bc8bf05ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589207a7-f896-4745-bed9-af95fdb39603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce5ecf6-2945-4530-a6b2-ab940b028bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "abdf2b04-01fc-44e7-8038-c171bd1948b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaa9a6d-68fc-4db6-8f6c-6964e887b633",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1412aea3-8173-4354-839c-22fd2fea6f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fbf438-2f43-461b-a26b-68f5ca245674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feede19-b4a5-4708-abd8-873e3d748f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed186c78-a0e7-48e4-a24f-51e54ce79036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859d033-b7be-4458-a630-a6249ad6a3a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ba5b9-901b-4566-a620-4d257784dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432ad6b0-5b5c-40da-8067-f82eb9653992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a0638a-cf54-46b8-ad76-d3869449a02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a254824-7ad9-4098-b248-e083d54875bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dec30c-7690-4b4e-ac27-7a5ab86ecc1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22db12-0584-411a-91e3-1dbf1ff2b35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf24ba3d-6872-443b-a725-fba963f65e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb5d69a-ba20-44e6-a42b-cc9e49503c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ff7334-9db1-4d26-b5f4-645ed2876718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faed50a-195e-4fcf-a770-a158c2c56dcd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccec6d1-31c2-4f9c-8d3d-b93ccb957b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e745a4e-2b30-4693-b625-6631fe2e045d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8209d010-a158-46b6-aeae-daae39ab92bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e8d536-3146-49b2-93fc-f2b5bc259df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db866f15-8447-4e62-b506-97bcccb0a362",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeeda08-7023-4e2f-86f7-9c88287a7596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9dfae8-d1a1-4498-abc8-9fc2de561674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fdbe5a-4a9d-477b-9206-0a4acacde1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a2218d-8b05-4fd5-8627-3c7616d54d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f95f83-b440-4314-8fca-742463da2d0b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afecbfb-6ece-47c5-9b3e-59e8083a56c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa75b18-d234-42b6-ad6e-67b715d0cad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e009daf-40b0-4f61-afd6-81ece0a974ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c54042b-0373-4cf2-afbe-7e75e0bf4f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c3f4c-e5d1-4fb1-87bc-f6a240413d22",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d2a1f2-7f2a-4b90-89e7-210cfb09240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab43fd4-eb52-44c2-bba1-ce1bf18b97db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa7959-05c6-4d0b-b579-68596a8fab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ecc718-e9a4-4f96-89fa-33ec8804edba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1966ac2-2006-445a-b401-c618641c6b12",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a2e444-ba32-4266-a9e3-dd73514181f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2e1d84-46de-439b-bfb5-f4eaec300ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba40be62-2ff0-49d2-aa3e-77c9e7639409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65436433-70b1-4d53-b2a1-889de78e2da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b84835b-acdf-4440-93cd-47282fd08164",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a0f0a2-0c11-420b-944c-81e12ebe6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c711e9b-6c52-4b60-85fb-0be30aa9878f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a69a16-e7c7-4769-8e15-41d65a19aaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc652364-35cb-4376-8a31-9a53445ee24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff7a044-484d-4d2d-9dbd-bd4a4f54a992",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfeb0c0-2346-4e75-b1ec-48c164537d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f283369c-79b3-421e-b230-46cb610f9814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d065372-249a-4285-9d0a-0e1281112b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f335e9-92e7-4745-87a7-95e1f8bf1e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e8745b-1615-4e7e-bcf0-d33293fffa11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6cee6a-52de-4c8f-a27a-c93645f9996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3eed0e-d5a4-457c-ad09-32dd1dbe4d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bab3e2-e343-419d-b101-44bf4e4f0f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78e79a28-e24c-44bd-b359-c59e41dc0132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589362b3-6283-4569-9864-47388fa8f144",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823204b-1db6-422d-909a-a34ca770b839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a258e274-1718-40e0-a0f7-ad0bdd0430a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5883dd0d-e9d1-47cd-84a7-e98b2051ddf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b743d76b-ae32-4467-8b65-3cce021dd6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c695103-3b14-4323-a915-c698c8a8735f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63240b34-bd45-4612-bfc1-964e34d03613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467fdb74-cbbb-4470-bf11-1da81e5baffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03df4a9-dd2c-49fa-84d5-cb7f685288ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0416a93-462c-4489-b509-e8c270bcf08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f865523c-61a2-43f0-bf9a-c228d3567cb8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e120fca-8898-43de-b1f6-a825d79d6830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfb047f-caa0-46e6-901b-622f222c696b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b050fa29-40a2-49f9-8aa1-f607a0401bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "470ea3dc-3d03-49d3-abae-f63a6909cf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50934adb-b1b0-40c8-a46f-a8c9d705b1f6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f328f55-0e73-4e7a-94a7-9353e0b8d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcf8ff3-1267-4126-9f4a-c9e75f9bb75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dd2f7f-0248-4eee-ab7f-925a0c43f946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e626af-f54e-46cb-b54a-077f243e6537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee7b088-927e-44b1-8ffd-48b737cf42d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4431c173-6e39-4b73-8eda-2bb3576068fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701ffc5a-5b24-40e2-9c93-55314eb70ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bda628-cb91-4920-8965-9a4a3843d884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e74c7c-a08a-4b18-8ba5-725a3a1cf04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab2f9e2-4216-4c19-9fb1-b5c135df2096",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96362f44-f495-42f1-9b15-da998c694000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974b0525-25de-4f7a-9b0b-70eea35c5d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8b0332-73d3-45a9-b600-b81f2f74039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "767bb7a0-94f0-469c-bfa1-0215a95dbddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6994a53-7072-4a01-bfd9-77cdaf44d33f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9294b6d-631e-4f1d-ac85-f0626abe8c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7f5f1e-e777-4c57-ba87-68bf914c022a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5507f-14ae-437b-9e24-5de4497de148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f7c85a-1350-4d84-95b8-ba69e2b6fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53bd685-7295-427a-8901-0377f9a45abb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc67591-aebb-4966-a43d-e3d514e5e05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35855120-2329-44b3-9da5-25f6b2f82ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ac8621-aa48-4497-b668-0d637d2d4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b07d58a-414a-4f98-8a51-292a095558ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169d2da9-dadc-4e4a-8199-e746c012130a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e984e398-e19d-43ed-86b5-d6dbe3930f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e09b57a-b4d6-4b9e-afc7-e136d2232bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a343db8-05ad-429c-b34c-1b1d68c82583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "147e57c7-1e40-46e1-9f0e-7f9c3b52d03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19b16e1-ba5d-4578-9769-6dd4af321b68",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213b5f87-1fac-4674-980c-71bd5e080199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee011b-7fc7-41f8-aaaf-47270532714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3214a3c-c006-40e0-ac23-f2b851f207b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e448d2-f682-4e60-8cd4-b3779fbfc09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131a0b6-e2d4-410c-a969-42193eb5b0f1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f0a7e7-2cc2-4473-b361-17ba3b2c05ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd57496-0e18-4565-ada2-4fbf93303754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f892e197-df72-487f-bda2-4cef264e41a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c738f69e-eb2a-4ef4-9b19-92be90876a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41195423-70f5-4bdc-bee7-c4f86bc44508",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e2c67d-95f8-4927-842b-de5bfd7b474f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9534087a-f785-42cc-a2a4-2d9d213ed1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d992750-6282-4c21-b2a5-18b6de66d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7064d19-d826-4e6f-ba88-e7d08d513add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa95725-1c45-4c2a-9b04-ee389d90e738",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9835b266-cf22-4e23-8e58-84eaf9b34738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ed5b49-161a-4b81-bdb1-f475c7f716f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6284a554-bd12-4ead-997d-7d232b7db5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "734c9250-f8e5-4b57-9956-af498d6c396e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d0de96-1680-4b7f-acb1-708701819385",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbf6e9-b9f3-4012-af32-71e7b0be6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5ea5eb-fc87-4e7a-bc6e-6d00bdd3f44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c981f864-e6e2-4fab-8bd3-100c0bcac53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "620bba2c-c59f-4ee3-9984-0146a8bd987a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6181ed0d-0d5e-4a04-8f45-d541b7ab0679",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8173fa-e4d3-4245-80ae-faa5c0eb9678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193b5875-0ccd-4080-b704-060aed4c5aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff390d4-dafc-496c-a7a9-89b06b4ef17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c551c27-157b-48e1-b65c-e78958a8dd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92b4a0c-ca4b-4142-b724-f407cb6789aa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6963a588-ffc2-4d19-8f8b-8ce1c7f2f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68c40a8-e3c5-4be3-91c7-b7c134ccc5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94feb834-f947-4194-9f05-fea8f64119e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d47460-7560-4c30-8283-58e6c4b3a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0611b02-b368-45a9-b13d-f2b61e0bc842",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9040e8f-014d-4d78-8be4-40ac44729872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd77b56-f49b-4431-b16f-74fe374adb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c04a17-1e3f-4a1a-9871-828f23c6267e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bedcf5-10d7-4ecb-a40d-46385366ffc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a19693-93f7-4888-be57-4840c8b38979",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23659a7a-1953-47bc-9f0a-e98031cde26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac40266a-311b-41d1-9e25-23090fbb262e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3a18d8-8f3f-42be-b9d2-70ecf62f9487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f88b16f-44f5-4f86-a693-4deb7c74c071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e2499-e7e1-43e4-a8fc-daa0870550fb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c8383c-f966-48ec-ae1d-02c6f1e41e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c782eaa9-5f5a-4271-a6e3-79dd37403077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1f7107-2228-448c-82eb-5066f8225006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcde943-4b17-4c44-b097-2f90f0ea63a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f76538-0a3d-4a6c-87d6-5244e4218ce0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17cf05e-957d-4df8-8d10-c0fa3458813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333b7643-5e23-4c04-ba8e-8d3494af6aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e195ff-3446-4b53-9a24-26942cc1478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90b3fdb2-5455-415d-a320-4566206635fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1c3503-c115-4a0e-af2e-6ec544af76c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a250af-5af4-46a2-b02f-f3f43d7a911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069965b7-8c31-42cd-a7cd-807caf522b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee4ae65-f680-4ae8-8467-b6a399b84c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6c1cf5-cc8a-4339-ac29-3ea6f1ced8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee37d4-44a3-4d2f-84ca-2251bc932bd0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8158291-cdfd-4d18-8c02-173b18936463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d530092-b778-453e-9ad2-8febf82b4a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027aa987-e7c2-4dc1-a448-1b2aa907774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ee4cfc-784e-415f-a9c5-710b9fe0c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ea1448-467b-432c-889a-838e067546c0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04bccb8-c0d1-455f-a1ac-19455296774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a599d4-3b96-420d-b82f-a1ae44306086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d18020b-245c-4248-92ea-ba19ac2ecfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b750600e-33c1-40da-a324-af99b27fcef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5bc37b-00b2-4c37-bba7-cbb6d1a50f57",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecdded5-12e9-4550-a6df-895f73360820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3380ead3-698a-4833-8e53-2fc2a5996115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51756d2d-b1ec-4ee2-afcb-77e8c1004966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3194e297-2647-454e-b086-67b705cae0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a54d6e4-1033-45b8-9528-7567e9b837ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487f86a-0301-460d-8922-58763fb187eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34375926-f175-4110-a14c-4ea0a71568f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490cd3d3-b2ba-4df3-a833-1d099f2a2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe30dfcd-b274-4e18-a2ce-ab954125b468"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23afd0ac-a448-48f7-8ba5-c57283cab2e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3da2038-90a3-4552-8dff-97fc5f4e7d5d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578c2589-e5c2-41ef-9719-17b75478a8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7299e14-ebfb-47e2-ba42-f3b691d15489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ef5fae-eb29-4c11-98ca-df81f3372566",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e197c6c-ca80-4a71-a1ee-51c41242f85f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f01375b9-390e-4508-8dbb-0f2f3ab10845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8e58e7a-b3dd-4025-8662-a4f0ee7010cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6327af95-d687-43b7-b55f-d0450f229d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3ee3dd-a58f-4033-8a56-74c4f435499a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e82939ce-bb38-4822-b9ab-c7111d255d22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67ffabd7-ef19-4061-b671-666288baae1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec7c4505-1103-4fda-967b-8353cf7f4109",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ade09d10-e8ea-4532-8755-613a56334f8c"
                }
              }
            ]
          },
          {
            "id": "b8f3c163-fb40-4b1e-af32-7566f673f1a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "397ca26a-4104-468b-b256-7596e3925fc5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "296354ed-799f-4559-bfa3-46b06653ed64",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b177f8d-c88e-4680-b661-5027a432031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db72e4f0-aa26-45d4-842c-7dea1ab3a34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de51d7f8-9b41-4d5c-a44e-5e8dc0d79cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c09479c-0d1e-4ec1-99b6-a4bf770b8715"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4933deab-1565-4d8f-a3fc-0cf9fba9e2a4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d70ac9b-6653-421b-b921-1f40122f7527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ffca0cf-667e-41ce-abd0-17aa39cb5223"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd455720-5a64-4a9f-af97-4ebc2d6baed7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "11a0538b-be5c-449f-89bb-28ccaa818b43"
                    }
                  }
                ]
              },
              {
                "id": "8bdfd185-07d2-4022-8bac-809b8bfb69d5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "366fb7c2-d1e3-4e78-82e0-33327d601b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ffb2643-e5e7-4dc0-832d-a6678f2c89e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "413e6f0d-a75b-4595-80ff-b16150cc4f36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f179cc3a-a7dc-418b-b1b3-c01811352dc0"
                    }
                  }
                ]
              },
              {
                "id": "0a45c7dd-bdb5-44ea-987a-ea1483b9cdbb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61687c8f-69e8-4d66-bc24-7497ff7b2cf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "175dee5c-e906-4e49-8fe9-6da773c9d4d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31bcd737-4549-4813-8439-447868b9d926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3c6dfdb-a18f-48ed-97bd-9542a82bf6ef"
                    }
                  }
                ]
              },
              {
                "id": "07dfbfab-bb97-4a7a-8462-72d398671028",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2618f192-aa4a-4ec0-8937-e35f3a8e8fc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e02269d4-ac7b-46d1-bcf4-45af1f0e43b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41a2ff53-0452-459f-b47c-4c6562b3f461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d55686e2-945f-40ba-bc67-2953960f42b0"
                    }
                  }
                ]
              },
              {
                "id": "a6506879-4091-4b36-80cc-b393f79c58ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b685f665-69fe-405c-aa3c-dfcbc8127032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ccdbf6a-87bd-4cbc-8204-a4f93bc25d2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a20be8b1-d402-4ca4-a027-575bd7540e9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "301fb216-c025-4498-b560-cd7ac7ae5e61"
                    }
                  }
                ]
              },
              {
                "id": "51d7f90e-ad05-4602-a3ae-ff876c666c26",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "871597f0-580f-405e-9247-92a29fcfe673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67a66289-ee93-4d14-8177-0af89dd83e6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2be6a16f-3f21-439d-999e-9679b5b81ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38594ef2-2ffc-4208-80bb-702ea567c7a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00a50a75-7575-4660-a670-0dff78f6e0d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c8b337f-5ad8-445f-b40c-143eeda257e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "215d3280-a735-4472-b8a2-735a11bc8840",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "543b0f9b-b13c-43ec-ab40-1f9e39d631ad"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3da96848-100f-4ef5-bc29-7af5b82fbeed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc3b0212-2acf-486e-abb8-96d14691a735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dc8204a-cb77-413d-a52e-2e70a649aff8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18e188c4-84aa-4830-94a1-1c8d24509c0e"
            }
          }
        ]
      },
      {
        "id": "d71f8918-fbf7-431e-8116-011d41dcfbb3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc4b8b09-a0d9-4c33-8f6d-c39449c9ddb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58d51138-d21d-492d-9c5c-14b45c0b1d33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87b17505-4108-445d-9c54-b4f3c458e7a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7793d528-01d2-446f-83e8-75259370f24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aaea56-8b92-4ce1-89ea-bf0ee18d2ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe12ed-b8d6-4d71-ae22-636aa77f7437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8671b6-5728-4150-a0be-277b176dec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65e6364-f70e-42b3-a521-e29ff2053fe3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc65252-d0e3-4278-9cd4-418927f3bcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9841dc1e-33b8-40d9-9fd6-b0a9dd321fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97b59b2-1a62-4f2b-9b0a-bc371ae77cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46fd1f4-bd1c-4e23-a777-86b0254acf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c744ea40-6d95-4d58-a661-62a007780730",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3ccd80-5636-4173-9143-921194cb25a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471e4721-37a0-4eee-aaee-1f72f61bf96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4136a829-4302-4cac-be66-9d16afb84630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad967396-c897-4881-90c0-ddbb87851366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9007cab-244f-4e1c-9e45-1ea7bd4528b2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aca1fd3-c0d0-4d97-9737-c1ce490b7bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a3f20f-9c12-444a-af27-173a4fb11d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42291267-fb84-473c-a869-ae4fe2b7f65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84448c1-c50d-45ac-87c8-d3fe71c9c3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fb399f-b09e-47c7-8cee-cc0c2621eca0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3781a65e-c4be-44cb-b3ff-4be9eab28df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3375a918-f45e-4b12-943a-4de16c296b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dc3566-dcf5-4301-a6c3-39beebcec2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d976d04-3247-4677-b39b-d29e13a50aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b8580f-9c95-4f7a-b936-117f234013c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4beda1b-7cc5-4654-82dc-a5ed25c79b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9a2b65-555b-413e-8dfd-34d36fafb338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acef0e2-7de3-4524-b026-ae0aa227cff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0be5c0a7-2bdd-4a68-89dd-d565ea34522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574c38b3-b639-43db-9613-0642491753d5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b15530-eac2-43fa-8ffc-671c2fb52b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b1273f-ddfe-4dbe-b894-d27c1dc6f4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0fa0c0-9b80-4844-9539-bdd6cc1ee799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5639d76-2450-4cfe-8dac-c8adc2ad5148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b07098-1cee-45fe-a90f-8b7da63cf152",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcb9210-43bf-4aaa-8e77-f66aeed51dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae08249-d91f-4577-809c-af17aee197f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30516596-916e-4999-bfc8-8ec206809a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bbe1ed-b7b3-4219-9dd9-325e1980518b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e8aaaf-8bab-4d13-986b-fba2c4f82fcd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9689e71-62b4-499f-8948-81da56e82c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1a490f-a911-4b69-a1b0-9ad4efc8340a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44643524-5fea-4990-bf41-74eee4448643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40617a97-9f31-4e23-a915-07c11d920b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af0f466-b44a-43f1-bd78-7a7fe8a2a7a5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf428de-1064-4fed-9a02-020aa6c5834c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4e0f6-d3e8-4434-bdef-ecec56378c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae55742-c375-4153-88d7-fa8fd9bfec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b970bc9-8556-4632-9f1c-4f2bbab9adeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bdb4ea-be4f-47fa-8d1a-ab144609006f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffe1416-29eb-4a9d-baf8-2af090be257c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87868b6-f5d7-463b-9532-fa6e28267931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e52fd67-d2a5-4ccf-94c3-ad43b42738fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54e3e81a-2ca8-405d-9093-6d25fc556b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6596ed7d-318d-4cf7-b736-ee9b65f80f26",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09501b8f-edcc-42e5-8e92-260c405d06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8397b0bd-0eb4-4988-b94e-bacf0d4a8a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96738a-f293-4d46-80b3-88356665508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac90db0-e988-45d6-bc3d-f5ecc92a29f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca766d1-28e6-4fe2-a53a-1fda2242fbbf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1a2587-8cf8-45ef-885c-ac9ac13e1d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cbd6ed-892b-43fb-87b1-29b3f03c699e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b46e1c4-6732-4a3f-821b-77e5a3f6ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "392698dc-cc0d-4f7d-8e65-1ab1a6a452cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ee083a-6701-43ef-9e86-6c92ef092fbb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5da8f79-dacd-49c2-b831-17273e532aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d68c93-27f4-4b77-acc8-f946952d1f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd17c0c-0dec-4454-ab25-54adb989c640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "827f9b9e-5a96-4d30-9ed6-bf55768a3019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0899e05e-ead5-49e7-ad3e-d4aa8ad41329",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af4d1f-0e0e-417f-bef8-eea39d3a9343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92008413-1bd4-4b09-a53d-5914a1dc26c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd580f24-85a1-4b19-a922-05b496063ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ec022e-a290-4852-bc7a-74912354a135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b7514b-6b39-41bf-981a-4a0c3035f23f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f668792e-115b-4aa2-a1e6-8591df00c327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c7f2b0-8735-484d-bb93-2f0a373e0e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7faf9a-feca-4233-8375-4c396b41e1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "089cc923-d501-4933-bc2c-0443dd283627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a4313-9975-4c51-905d-cf1f484fb799",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b263c13-bb60-4fbd-8b16-d9644e56005e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcf0266-b131-4b77-aa23-00a5514e405b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17641413-0b83-4114-b377-96335f01d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f24b281-46d1-47a4-a8b0-f239fd64fabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99669c5-1761-4c08-8998-90d6023be20e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ced31e-9050-4e2b-8ff3-ce742df0897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209cebc3-70f0-4973-8c10-e307d0401559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb9c941-7a15-487c-b2e8-1eeceb696239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a284a13-8616-460b-b13d-6c62ed39156e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ca139a-8074-468e-aee5-bf33fb1693fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cac2686-bf1a-400f-9fdc-2ed4a60e4581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98fa22d-1dda-40d1-b50c-76e052ac53b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3a6807-bbc8-4ac9-ae41-6957f7d0189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59acacaf-255b-46d8-94aa-f845955da990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b23d42-3acf-430a-a9d9-5bb35e34711f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f5a388-1036-4474-aa8a-7af1b22dc26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111125e6-384c-4907-9772-264920603336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d386c2a6-28a9-4231-a54b-cfcae474b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47dc703f-b0c1-4f4d-8d46-ba02838643f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64d9cb5-63cb-4e7c-bfc0-b4fb6561d7f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0369c002-defe-4afe-8c8a-fe9e304d15fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6624c446-c93b-4349-91d2-1ef8caecedf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd608ae2-149e-4119-a633-f9e694a6329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd81f454-b5df-487f-8547-5962c29c9a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d3305-b8fa-435a-ad3e-e1b9fe4f6e9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f411db0a-9efd-4f24-8159-c4af49bc31b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f32ae0-7007-4b73-adde-0408a3578756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec70af5-665e-4ed5-b677-520940309d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82f6f01-c705-4209-864a-67b20555ad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a76f7-3e76-4706-8437-aba0131f9e39",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38aaa23-bef5-4ad4-ad24-36055721a0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e11aaf-94e0-47f2-a2d4-209b3e2045a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff3464-ea50-4c27-aa2f-ee6ca16e4587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6df498f-345f-45f6-9893-bc107f2f5d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7314acd-317d-4c8f-8be6-2ee5b48a394e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe7ecb8-fe13-484e-8b62-e0eae6e183a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d86859-40e1-44dd-886f-54b3909d65bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee000f00-c56f-4c96-8c87-751f93d12cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e84accc6-c401-4cff-b1e9-04c0f00b2d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0f8274-e2f4-4d66-91cd-bcd4ce95fe6b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823c24ce-7b03-40a6-bc54-a4b0a6f9203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41d80a5-e273-44a9-b28e-e5141bf284c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d7eeee-2ea3-4848-a00a-c36453bab7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0a8f25-fa20-463d-9157-2d97e68386f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa134a7e-7d7a-4811-8a33-4eddcd8ea102",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362962ab-bdbb-45a7-9003-e5216e64f6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e873c26-dbfb-49ae-867d-1cc319338094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63c8e2d-d01b-4563-8b0a-5d33f5b6afc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f021701-1c4d-4e77-9bd0-7cc6bef3caf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f913900c-c2cb-4d84-b343-12126e201f59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d9e4f7-f9c7-4217-9525-9a2a392e4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60edce7b-54fb-4639-b105-3ff21f9484c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d1e504-b1c2-41b9-8e57-7261c916fdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9387c60e-979f-48e0-90d1-fd5674738d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ea6a7c-4d14-47c0-ad87-a179d4a2e72b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b989890-45db-4c9e-a4d5-0ddc32f946db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fbd38d-f6ed-4bf0-aecc-54d29a2d795c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb5cb98-24b8-4e30-8018-605bc5ec56f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5468cd0b-d3db-499e-ac97-7a9bd969fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8feb819e-775d-4246-b23a-f1bab251b384",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9768d2a-cef5-48aa-a6b2-55973228d821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9cc31b-fa11-4733-81e2-6478d04c120b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6e07f6-65ed-47da-99f7-72db0aa17bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce347e2a-4aec-4325-9aa2-35507c359a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd66f176-a491-4729-ac8a-fc7e6fd256e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349639d2-e943-4437-a23c-9a1d58b4c8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dbd48c-c216-4238-9473-bd128e89de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1899fec-8dfd-4e8d-996e-05170a2436aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45586d49-3ceb-44d2-9130-9b7ecdc8e10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37c1900-0faf-466f-8e4f-8324a673feba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478fdafc-e448-4fa5-9c5c-b6dc1332dee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd51cf1f-0b59-4db4-9c7a-e0cf28042311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb7559d-99b9-436e-85f2-d7994071fa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5b15ad-e0d6-4de4-9a39-1a9be0a15c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdc7734-67df-4abd-9ddd-926693f0bd1b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367583b0-e399-412c-b28f-0f1b561ac4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ab8de5-6860-421f-9710-8a584afef811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2d07d-201b-4ae0-8643-0ae7abfe0a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a763a61b-8d86-4d70-aa74-22dec36da6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1fc20d-4ccf-44f9-9efe-b7a88d8e5b98",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4565407-6bd9-41f7-b628-6fba940b2dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f2595a-e8c4-46dc-8fc7-0f3b060bfc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7300dcc-ff25-4b3e-bc0f-535fb252f2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a44eaf-6799-4cd9-af74-be54d45468f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af80ec6-3f12-4c81-bdce-e92f9358d368",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e1de3f-4e87-4b54-93b5-3fa5bc7497ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61dbc15-5c74-434f-89cf-6c022fcd6b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335d4edf-c5aa-4afb-a279-2eec1e299785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff46e8af-cb7c-4172-895d-e4e21d638e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6edf6b3-bfbc-405a-bc34-efeb415ce966",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fe0f0f-e7af-4a26-9597-2ccfb6107c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7121baa-4198-4813-ab99-81e7a2eb778e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071eec8f-8d41-45e9-bca0-391d6b6ad7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11a2c23-af2b-4834-9182-8ffaa7b72b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441d9ee8-22b4-4a8d-9360-bd2746ee9760",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c479b1-f30a-4cfc-b69e-48d18ad08f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea1714c-5f7c-4021-a1f9-cb1444736174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8551bbe-8491-4f4f-9dd2-c25adadd81c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3341180-547a-4acb-be28-04f5fc43ee7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ef6442-3b83-48e3-abbf-a76cbfcbcb3e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3e6dae-a162-4aaa-9b8f-db92524e42df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffb84eb-bf66-4544-832b-f5dfee085cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ebf31-771e-429f-8794-c0ee1fce5641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3207f189-419f-4b05-9985-46f4d6a29c7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92a22ab7-c633-47e1-b2d5-780515a085d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d1b38f4-74f2-444a-b9c4-f5c66645d454",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb63ece-51ac-4922-80b8-f69ad84795c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3f66baf8-1a82-4c82-9a2b-d3edb1c34bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adfe534-a53d-4e45-939c-bd03c4ea5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe560a7e-1b92-4881-86bc-c44cbeebe3db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e491b1f-4103-410e-9014-35c3dc6463b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b04747-b264-463e-8c83-dfb56e7aaf3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7f1f4cf-51d8-429b-9835-7bb55cfd03a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "664c9462-94ec-4cb7-9dd6-6a092e2a5816"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b832d3dd-ffc0-46a5-9875-6784db6702aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "899ad3c5-4a9c-4670-b700-021c1b0a3b5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edd1fb66-b5d8-4085-9548-d72d21eb916e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fa0fd47-6cf4-458a-8608-655359986c28"
            }
          }
        ]
      },
      {
        "id": "28f8f2ca-848d-4e5b-bf93-e5e8d1de2692",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "421313da-634b-4a20-8e2f-d7f77be91550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38e97a23-51af-4faa-adf2-1c28b5cdf3fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f4c8390-77c4-48e1-b049-5986940cc313",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f67edb-1def-4b45-99cf-7d3e2c68dadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41c1b88-64d2-4358-898f-675660275022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20baefa4-3f05-4f07-9449-e9669a1cff01",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbd8eda-3c3e-4c71-93cb-0d31520ccb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ea05c5-740b-4da4-8597-cec71a49c197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d44eb6-a8d1-4a79-b081-cc492a04f10b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8b278a-f3ff-4606-8429-7cab4e3dd18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114578a5-e87e-463c-8036-6c5c8b2d6c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af232d3e-7db2-4659-a526-ae29a23dcc8a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b646dbc-552e-4440-943d-1de0f12f0ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3c5e0f-69b8-4c98-bb7f-34319aefb968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ad28ac-3149-4516-8dcf-c7bfa93e4114",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9256f8-25ea-4831-9962-5ffdb8e70158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8170cb94-cafd-4ac8-af9c-ddb54d527ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee933a-be65-44f3-a41d-98ad942f2388",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c108b-4529-4e88-a490-640ff51ecd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d636f8-8615-4a24-b869-b5ddcda4f783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d35774-c004-41f0-a3c8-8febd07c0969",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3edacf-abb1-4246-a21e-f0fbe4030a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222e902f-a6bd-4b35-9743-313683381697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99bb66b-8c4c-46e8-8bec-fa87969b16a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb75349-b493-4b67-931e-eb2f933591fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c8c35d-ab4d-4faf-9bdb-025c360c44e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a7edc0-7392-4b5d-b6f0-cc34644d36f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a048d5-0152-4ed6-b976-b45d264fcac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167a36d-b72c-4549-863d-5130ecd957cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec151be-21a9-4d20-8a7e-de9e62994cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dabb82-181d-40f8-9b68-6628bbe50802",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e6d9f0-c1d3-41a0-9ac4-9662a997b4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6eff44-954d-447a-af1e-cab15dcc4073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5a83b2-172c-4d06-b33f-dd0d606a6f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5fe3ae-c4ea-46ed-b5bf-70bc7aa408da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0196a78d-a174-486c-abdc-ea1b2908b490",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078cf4b0-6a5b-45c6-bdf2-b01887849c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d712d5-050a-428d-9fb0-387e145c42f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fbd4b7-7777-4d94-96f0-6f8b98f99ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee4488f-d926-415d-8b53-32f1e7bc5f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec1cf38-fdd2-421c-b969-5a8d1fffc617",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed35f1a-a144-4f52-b1ce-bd433cb5b76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83b6dd5-1eaf-48de-80c3-b7d9eef00544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c20007-bdc3-4bea-a9a4-b3f5545b6f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0241dc-14b3-4c15-8919-ae5779a092ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376338ac-444f-46c7-a3ae-6bd726818fcc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d7cc7-da4c-4d87-97cc-5e4545954467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591032d9-370d-4ad4-849f-0c544acbeddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bed039b-85cc-4629-b6a5-296ff65e667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64f05ba-c190-44ca-aecd-5cb3773d9acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ec66f5-4f11-4c27-bc5e-5b02da94cedd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422d0839-2e10-4f59-9840-806aaa16c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa66f0c1-9582-4661-a0b4-12aeba630db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b906e5f9-252f-45c0-b6f7-19e7d36f2acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2503db96-021c-4f9d-8402-8bf5bd241108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca09983-bd59-4073-a6e8-9886f5b2f82b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3a01db-afa6-47c9-a4d5-2b1cf62bd1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b2212e-2e78-485d-aa49-2abdd8cd176e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d1f11-66a1-4e6a-8a26-8626295ad238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0df48fd-2684-4cc9-9070-d8e52b710ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a856f-d367-4259-97ab-5890992ba515",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ffd7b3-4fdd-40df-9b69-d06ebe45e11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cddf693-2af1-4630-8589-2439cc5ec6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1529f3-8417-41dd-b63c-21d5273e9be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876c1d8a-59d0-403c-a615-ca833788020a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac40b09-07ea-49e7-8172-7656087e6e76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbde8e00-583c-4de7-b565-befec0d380c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386d3184-7a0b-43a1-acf7-50ced002ee98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a867013-ec96-45f2-9121-2afa3c515711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b30be4-2ed9-49ea-92b5-b20d8da88963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f884639-c873-4454-a440-0accd3e5b5ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02bbab3-17ef-4ff3-b30d-3c5a590567a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c41c50f-a7a6-4c86-9186-cd6f81261c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74421ec9-dffb-418c-b7be-f4637603fe9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2aebf7b-cbec-4a1f-890e-4ed8da074732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56757552-cf5b-45bf-afdc-7384cb78a284",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bb292a-05f3-4a87-a4c2-f0ed18916104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7a3b64-b6a4-4df4-90e6-95fcf7340208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c07e140-e718-46d9-818b-6f6769615176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23245e4-49fd-4212-bdcb-ea96eb015bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67a34f7-bf12-406e-9391-fd839342cd7b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c4b0b4-d4ea-4e4c-8c40-76a8086022f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8f0669-ce8d-4af2-b500-59e2711b5dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5b6f5c-6e4c-4898-ba4e-2371eb4df9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9205709b-9018-42fc-8a24-dc0d1dd1a7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17bf40f-770c-40e0-9a79-e96518aa2a93",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360ee0a-29ec-4fa3-9ec0-e31583c4330a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ba79aa-ffdd-4cc1-9c23-d4d8f1dc0922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7634769-600b-4fbf-8e8a-8944ae6983a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d6ee9e-892c-4f98-a0a1-a7d0de611822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea5dc39-d93c-4f5a-bca3-9da9ddbe937a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6057da19-15fd-40ea-bfc0-b0a2d61529b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b27db36-8a50-48cc-9e94-8e045d551752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b16de8-497c-4ab4-8b45-4bcc2038e2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c842422f-86b7-4eca-acb2-a9efae6506b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5da6e7-ba60-4eb5-afbd-d50c4c693715",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a152302-7ca5-4491-95ad-f93a2f4f5807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e815af7-ff7c-43fd-b887-212de87dda72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bed9e0-084b-4148-9572-55d859abe121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1809578d-0457-49f0-bcc4-a0afb7a2da29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b972807-adc9-4609-b1bf-8d5c32436e62",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf3a16d-498e-4274-a1a3-45649a5d9b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6045d1d9-67c0-4044-a3bf-4b0d31bd3800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d4afb8-5d5f-4432-b19e-3b79da099aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c630379-9a11-4f88-872c-f5af26b706da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8397c5-39d4-4aec-8000-49721ce2befb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56e7bb1-3ec8-471e-9872-ca1f7576af9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95df90db-8e1e-4770-9c3c-53830fe7cd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417f1884-7359-472f-9c0b-08cb4396ac83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd114d3-c532-4b0e-bef8-5376917b1cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177585c-7090-4d64-9adc-f0f5cab1b182",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebfa430-a245-45b8-9994-a8fa3f002b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b724adf4-ffbb-4708-9c64-0f4cfe17d3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c6d89a-b1be-459c-8561-4e90f8fcda1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e3968b-7523-47f9-90c9-364c4345abdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392d7ed9-4416-4d74-8d58-716f6db60a11",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b19dcc3-418f-4cbf-82fa-1b4b9356509f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5362f27-d228-4775-8b9b-c9867851fb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbbec9e-cacd-4d61-81a9-4e138fb758ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3a5adc-297c-4c64-9ace-5eaa7556f48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7ee0f9-b19c-4ce9-b977-ec9a97c796b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c523bfe-9c01-4f7c-8259-71f1e01d74dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba21074b-c535-415f-b30d-c9ed50eee9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58166ba3-1c66-4724-a547-ca245a083b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2702601-60f2-41f9-b430-797ec2db212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45799e9-d03f-45e9-a03d-9943ad1f4119",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f61ef54-8e62-4dc5-ad20-7e4183b0015d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81465c47-10e2-47fd-a7cd-fa8677b8556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f513fa24-0c7c-489b-a6d4-e7b4f1c10db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dc8a79-e215-4c82-b2f7-6214d1dca22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feef4ee8-4bcc-4bbc-bbe1-86bcf07e92b8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d842809-1049-4e97-966b-7bfa096fcbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8d899c-44ee-4307-bdc4-1f5a0264cb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a131fddc-dded-4ce7-83e1-a6f716bf970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4578b197-ae2a-4022-8492-8e365a734c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c88f070-4112-4329-9064-6acffe6d3945",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9209818-8f3e-44fe-90c3-bf1449771a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b097b79-e647-4007-b24e-9add39b6d558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1b88a3-dba0-47ac-ae36-88f4da6b3c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e6a1aa-dfaf-4416-9402-72877028535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2b88be-aa0e-4a82-a6f3-70bd42ce1c44",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60124c7a-c7d8-4b10-8027-b322cd144ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a47f6b8-756f-4f1c-a35f-79db13b9ef99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f4470-133e-4110-83c4-84dde327ba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b13b37a-e163-460c-ac10-055b3e589fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d9434-6ece-4e54-997a-9e41f1eed71e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786371ac-faca-4c5f-8e71-ec6a21dbc17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57032810-e29f-4d93-bcc3-4f9180126dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef74f90-ab8d-44b1-a212-c5c45efaa8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d8f257-42ce-4df3-89b6-b040f972edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a685c1-e216-438f-9b2b-0818ac42f54d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b43088-c14b-4092-afac-c16108d2b525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7db885-c140-4881-9eca-09d3fb2a7694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca77f6d-ca8c-496c-b910-990dd6afe34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b907001-345d-4924-98e9-580bc25e99d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f154a5a-3982-4f1b-8eae-998398c3a168",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c607c23-2adf-4e0b-a7ab-bc499c1a3f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7d7b22-da3c-4f97-b314-a8a683001e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504201b-eec8-401d-a0d7-06a0e36cdec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d3d9aa-4e58-47d7-815c-4cb171173ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2258e086-8611-4a37-bc06-ae5ffc85b2b8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b07a31f-058d-455f-8e59-0f66f0ec9297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1d9953-69d3-45f0-a722-894e066c4544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11a0cac-9951-4ade-98b0-1018b35ec867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72979c28-e9bf-4c20-a139-83cc1f1bbcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566fa42f-ddc8-4248-a1da-706e39f9d5f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7124930-eb7f-4158-b420-4af6876f3bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3fae33-2cae-4e76-9d33-007b44dcc1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96592c8a-c376-4c45-b074-6ccaa405ee1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0706e60-b920-40b4-bfe7-bad160c3707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846e358-e80c-455c-ac07-98caf7607d36",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a1f091-27a9-4dcd-a1d6-481f82946639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4359295e-0e84-43d0-9e1c-fa9d9f20cdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f31da9-c0b0-4830-b82c-17300111e38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0ead3f-ebb3-43b6-a285-394ed68cd8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e12e85-5cc7-4120-a52e-97a5ecf394f3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abaeb2a-a467-466d-850c-fe720e78cf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680120d5-3d95-43ea-b0ef-645f703211a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8519210-454f-41ca-984f-985262d974ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2767518-aa07-46d8-b50e-00d09ff007af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de173112-cfb5-48db-95e9-5ca17f7feedc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d70019-68ec-40ad-bc76-443a002a9d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b61e9d3-1d79-4ac5-b8fa-ebdb75892f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c8443-ad1d-4364-8303-5e157729d663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c54be2f-2fa0-4850-84d4-a7b8e760d209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f442773-e2a1-4a13-b51c-8b6960d7d111",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defd523f-498d-41e4-938a-5302b50f7eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef7e7b7-e2d7-4091-8ecd-95051aac844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5416ed46-aa49-4a7c-8a32-e7884e303a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8ce2a0-53ac-40d6-8ae5-a041a371a300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af257d9e-1182-49b2-a909-217791c04ecc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2570058-c0f8-4b96-bae8-7a2b2024d416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c315c-56f4-42f2-b335-a515964362d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc99678-5552-4278-a3b0-47dd9e1ba164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d13b29c-cf9a-4ec4-a84a-ff92729da290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7e6e6a-2505-4523-8152-ff7f074085a0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b0ff5e-ebf2-409f-812d-20273e19a484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bd51e0-f1e7-4dd4-976a-dc395671dd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb15f90-6816-4476-9da8-a3e8ee41924b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5576aa-bb6c-455b-baad-561f1eb6a525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23fc27e-b46a-48b6-9300-6cebfec9b90c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7283a158-8834-4f81-b1cd-57e1fc6ed7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c674d3d-e32b-4b75-9d20-10631aacf0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310195ee-b918-4324-b9ca-7cca43b99479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78fc25a-3361-45ac-9667-295e8db2c3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca88a39a-b206-48ad-9716-86fb9d14f251",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f91570-7d31-41d8-88c5-2868e532bb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb88c526-7d57-43b6-bd47-7b345c608dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b282bc8f-ec59-49fc-9687-e01baf3b173c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d1a1d6-47d8-4683-9329-e46e2359ffda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2a9162-ab2b-4dc0-afb4-05811fa0bdc5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041a393f-a28b-4a84-90ca-4bf42fa1c17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa84915-71bf-43ca-97a9-cbb8a16f0804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb3eea7-dbe5-4e5f-ac62-d5d8832674fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a343de28-e822-4ebc-8a03-784aa36e15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43470fa4-5e67-4b1b-b7f4-ceb15ebe9656",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f1a4a9-e2f6-47c4-824f-4239f754c984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9af001f-08f0-45c9-9512-928a4bd5cdfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b3e51a-375f-4c6f-8d7b-098d810176d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9a74c7-15cc-44f7-bb05-456168582e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea617a46-84a6-4281-88ba-df7bb022a5c4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eff9d2-e875-4874-8f0f-7a4c743778dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66851b48-733d-4936-8a88-fffbb2a370bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5ac832-4f83-475c-8452-8329c9bb7299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384c149-8ceb-4dad-a82d-5f232b70facb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63b18d-5ab3-472b-bb8a-b7550b651f17",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa32477-1897-4eb4-a7eb-5c70581c4cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748f1856-eada-4ce7-af32-3061ab80ed4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e4cf51-a4ba-4bee-948e-493c807e6847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672b4efb-2939-47ac-a1e2-11533b103ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdc0cfb-8237-49bf-b218-7e0615972713",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033660d2-5908-4261-9476-afd967e8d9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea627bb-3f72-420f-af59-dfcc2fff0879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3238b-745b-49aa-b7c2-7f217ec8fbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64991627-fc83-4304-87aa-17444a8cb956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6918cc05-1b09-4399-9e6b-2e75f77e3578",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028a1d68-e123-46c5-b949-9590e03a2f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9577b54-5800-4e3a-acf1-0af7dae65025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3da2c48-294b-423f-ba87-83a4ed15ef2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db16fcd-041e-460b-bc95-79316ef8d82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f52a78b-d0e5-484b-b4e4-112a9814bb08",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26742982-9cea-41c7-ba73-25b6c8112443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f9f400-9d0c-45eb-8626-d38cd2d699bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99c933c-a166-4fa6-b3eb-785c287f0f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7726ba-e88f-4bc2-9da2-a81eb7bb6996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ef43c0-b312-489e-bdd7-f1e2fc9315fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9803bc8-c848-406a-b0d0-cc08c2aafb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb2cc1b-1205-4bda-9036-3e55fe753ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539f4edc-9407-4157-99cf-174862d00577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6901592-cb5c-43a6-922f-a5c0e5b4ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79ca1d8-00ca-48e2-b70e-bc2bcd6cee8b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261a4a3f-0295-41a0-a752-3cf1a799360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825b831-19b5-4ed8-877d-a8fdddf17792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdedb76-5d01-4b04-b3e1-b6258942edb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19740f6c-307e-4ac5-972e-c9d2bff60ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f5f781-0e27-4da9-b184-a2f5917b0216",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55078ea7-21cd-4fc4-ab46-365693605821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7076f7c6-7411-4419-996f-0413c41cbbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04e1d31-1197-481d-94d4-d7f4ab039043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2596091a-17e5-41ab-a31e-c33b21083175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3716c99c-1c9f-46ad-9b6c-3e1ddb7f29e9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37cc44c-e9d4-4566-ba48-c9109a55eeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff204d-7e27-421c-9b28-c1edbae19956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9048b2-fb55-4573-bf26-9aef714582aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92530a7-71d1-4b6b-ad53-3c5388b9870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f8637-f457-48dc-ac16-4f3a7884d74b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3379a8e8-fc3f-4723-9ad7-4db68fb549b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cc98bc-d36d-4a97-8cb3-c84fc18bd094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbf68cb-a5de-4501-8c2d-a2a6c9830640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6db5d9-0b15-4f4a-aa70-0f6f14dfa380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42854130-8cf4-4e26-a64a-dd648a4d36d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae55d57b-86bd-4615-9e5b-8fe7e8d9e8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7211db0-d15c-4066-b17d-5c491755903f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8139372c-20e7-474e-820e-2ac60dfe1df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d707f4-467f-4789-8cc6-336b67c7e482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3b79c0-44d3-497a-96f3-8be2abad7baa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a28513-801b-4c4c-8a79-064a36053d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c368af8-ebe7-4646-a21e-702eea9559ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c39175-868e-4174-ad18-3f4930f6d033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45003b3-2695-4833-ac38-7abfe7f69339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91ded86-946a-4bb8-b586-0fdb83536c97",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c215c7-8051-4b3c-bffb-c51b7858d9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402998b1-cbb2-47ff-9a2c-e1530fb3bd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55656dc7-312f-4815-8fab-48fc65e42d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf3cf38-5baa-4199-b5c2-ea5c4993673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb14ca-b12d-41f5-89fd-c9727826c4ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce9c8e1-f588-4ecb-937d-af6882fa93f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fce922-b66f-4d33-972a-17e7f5391880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b74318-1809-4b37-a6ab-f6038501c46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028066f3-7474-4613-9694-2592241bb740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b284aa-0d34-4eaf-84bd-7e4ee0483516",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05371d6-7035-453d-b893-0d5d1098443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936f24f8-0cf3-420d-b8e0-a492b7c045d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114587df-126f-4797-8c70-444fa0d05059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17c852b-af89-4848-88b6-849fbb8639ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5319be8-c3f2-4180-84ef-75933bd5b3b7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845a7415-9c00-4a14-a776-616c7ad86536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da95511-2f48-46ea-a892-30cdd98483fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c891860-1172-4c8f-a355-71bec65ba95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4bedba-822c-47ee-abe4-4d57b757b44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abeb81d-6877-459f-9181-62dcf1243f77",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e94282b-26a9-4297-a800-5ea6c9d86bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c621fd2-3654-4182-bc2f-4cf12c8530c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb177b0-132c-42e5-91a1-7e976ddd535a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b95db1f-a2aa-4374-b269-ad4deb2811c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05824248-ff66-41aa-b542-073780278c90",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f6a58b-7a0e-4a9b-8b52-7fe1267f5924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67222ce-9562-48e4-b2a2-a0c7814f0af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe883b8-ee14-413c-85cf-2d2d88c53aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0b9485-83e0-4d56-860a-8da39bbd5c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cce5bf-8e5c-418a-a401-2b69b32b1956",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a6a551-a82f-4080-acc4-47bf325db295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cb912ad-6bf7-4a8a-8e46-c5cbdd2cd97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd456f03-9ad6-422d-8527-384a7db8247a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e974dfcd-43a5-4ce6-a04e-7b35ce2d7c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1038041-229f-4415-a4df-7e044f3fa91a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70608d96-2978-46f9-968a-6fa0fcff3f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887037a5-f1b1-4ac7-9cd8-8af08f9056d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c73d8d-6b73-45c3-991f-b0f0c52ad9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9a9864-4ddc-438a-97f0-65eaf645ae77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f76b78-2cb1-42f0-ab7b-308a003babb3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6ecfb6-d495-4a91-86cb-9f02e825355d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6855ae99-32b8-40d6-9ab5-5d606eb8932a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4845cf4-349f-4b12-b8a3-3255c07e360e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b734333a-7d88-4761-b5d9-79dc42370761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1ccd29-02fc-4a46-a457-d81ae3cb4dd4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d577b8-dd05-4cb9-9da1-e75827a2a81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f146f8-9ef9-49a4-a761-00e602aa23a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85249288-b81d-477a-8a97-42a987e3e969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f1f173-ccb7-4f35-9d40-f9047e988dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c837c6-c9fb-4c37-b769-500c999a3ed3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9414b0-2a83-4f20-9e82-c53f2d30ce92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7169652b-abb4-4624-94fc-d97211e0b820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5559142-aa32-4e87-8fc2-a683aa2c6c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46f0012-a09d-4cf4-a96d-7bf9595f854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8d4a89-799b-43e6-a488-0d4a0a6414ea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb00b89-b1c4-4c06-af38-0917df9139a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73499cc-8463-4dfd-9d70-aa979df9ac0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970588d2-503b-4ba8-ab2d-b67c923eb58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eb8b74-7634-415e-ba2a-ea06cd745a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778e1f8-998e-466d-a00b-44d4c1288f46",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728f2a3f-3350-4bb1-89da-698fa63d462e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb10793-8a0d-4b01-8020-d647d07a0983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f271397-4256-41b5-90f9-898082e0490f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53df8222-3c9e-4c9c-917b-a81b3a8c87e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f1ade-79b9-497b-9fe2-6a0ef4c54a5c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d951bf3-b2f6-42f0-9f34-5e49e68ab0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a169ae91-e6fe-4356-bdbb-4c3d349d65c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d5c606-47e4-4921-980c-8cb5947d9eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b503a2e7-014d-4a98-827b-e012bed5cbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f8d3d3-1ec9-4274-963c-b16bfb80a79e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b329d2d5-ed19-4f32-953f-fc3d7dbd9ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822aca59-2e69-4d6e-bbb0-898f4c428a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5d889e-7adf-4643-a2fc-748d2f318d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ffbde-b498-41fd-b9fb-1bbba49f3e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1f412e-f6ab-4ec7-a569-597db91d5f60",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897bfe8b-22a9-460d-b007-51fdd29d58d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ba2264-49c6-49d3-87a4-2f21e8bb51a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aa8bcc-c6f6-4389-9bb7-3c6bcc1b7c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986bc867-03dc-4961-b80c-e86b080f9319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa60223-2fee-485a-a3fd-d6508988bb79",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49671b51-0753-4144-87cc-439363825556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4957f6ea-0d91-4968-aee4-68e2248f5bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceda3b4-7646-4777-a1fa-8381b1949fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baf351f-47f3-4255-9ceb-c1ca94a884bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e88b12-e4b1-4569-9712-aee9644527e7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3d5b65-5bd8-444f-b604-4f674c9e33e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deeb5e1c-216d-4fa0-84dc-ad1887219b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cedb48-d6d4-4b2a-83d7-6c65caed9e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a989cf2-0b93-4aec-8d15-530bf2265732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b73a44-ca75-4ac1-a83f-9e145d3fc610",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a810018-b911-48e3-8876-e5f3a1393dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4a2389-f946-4925-bcbd-000bf24269d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fb4e27-2e70-4bda-8c9d-d897a3dc0650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf50700-7753-4a7f-af05-879f1338be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debca025-f354-4185-a7f2-27d32e5f53f2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d462f26-81de-41b7-bac1-876618efba15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977f7acf-e9eb-4e20-85fa-0b9b47025ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f55de9-1fa2-41d5-afa1-5cca3b341445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9601e79e-2edb-44ab-9483-1979f993b76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5a0fbe-a536-4243-81f6-f31a469941f8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8511484b-2b61-44cf-8af1-72206a081d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04152430-3742-478b-9f1f-be04d5adadf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6abe9-f94d-4896-a99f-e118148fb816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43e2a7e-a370-412d-8178-86b182882a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84bb13d-0408-4079-a004-4080f7f2aaa0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8d0dfa-d07f-4370-8e90-6ceed7d6bac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09035f41-2e0b-4389-8862-f19b6db66b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098d7012-4e9b-419d-b77b-328a7b49ed4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147c56ac-ff98-4c62-91ac-98ef31f91b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8493c-9b24-4c3e-9739-34ab33105ce5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb6ad8-80bf-47da-acea-8a971430b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de325af9-c509-46b7-aee5-204479a08fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d42cbbb-522a-465f-a107-08b1e87eb52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea06e9fe-c34b-42d5-90ef-9b4d0ecdb3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45f604-294e-4dc7-9890-611abfb7567e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd2f36e-07b5-4ae2-9cc1-436ae813df21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c209d0e5-9b1a-4319-913c-e113034f107d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c728165b-d954-4c63-9ad2-1ffc561c1cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f21154-468f-4071-8663-07e819adda87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035bf061-1e1c-403d-8c57-a4ca0606a67c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c133ca40-822f-40f5-8b66-4e9d17edac8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cf0cb6-fc14-43bf-a40c-929724615de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b269d62-3fd5-4ec1-8d42-85191472bd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc35bd-e96a-4469-9a6f-f904148d2609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20f98ce-ccd9-4c37-bde7-ed2fc4961358",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec79365-7bc1-4ca8-bcf8-3a8543bd416f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574e8022-87d1-4aaa-aec6-a987a9b6ad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3296ae-ae51-491b-a877-bb6733c1647f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3273bb52-af98-4bd5-b6c8-fcee9a5191d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b88f31f-b1c2-47b4-ab50-04aabd7c73d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1a75cc-46a9-4e06-a0ea-06c78ac66f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d91e633-faca-4861-bf28-583c0ff0f2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c06501f-523b-4aa2-a066-44db37c5264b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806a84a4-385d-4ccb-9cb6-2fcb0333bf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe65bfb-1e93-4ad4-b4dd-8b954f9c1062",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d64bca-ff74-49fe-9b41-de73f5a6023f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf00e287-d60c-4fc9-8c7b-0ad7f0386557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f72a1e-2b09-4a13-a370-cd87b08e3272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4332d1-232f-4571-affe-1faab33ddb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6679c14-bd36-44cd-8953-5ecdee8da0da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aefa91-c9cb-47f7-ba40-3c7072a2de70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82b8609-bbc6-4deb-ba7e-daf835c2f201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce80edc-dbf1-4e41-99eb-c87ee2f29209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506ffb5f-5bae-4d7f-8a6e-0474513a3855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11d02b3-ee49-44db-b214-6f27560190e6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737a4adf-cd69-4822-b89e-52eb3a8f28c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e6abb75-4149-46b5-a4a0-a48f38b1ae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e40061-8375-4c36-ab3d-4dfb8fd70855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfef8f0-a766-4ee1-8071-6552ca7514ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc1dd94-6f58-4c87-bcd0-2886c7619f4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc03d5-7eed-457f-9e46-967278ddd437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efff24c-7b59-411a-bd38-f1a3bfd84491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd2495c-e7ad-4417-8ed4-f17c195d86f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20e71bf-ac7a-4c46-96f6-4517c1cb3e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb9796f-0244-48fb-9ca7-6a05e1efc615",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e03948-fb90-4ffa-83b4-86ac7032dce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c729aa-9156-40c9-8630-9e1a84c18bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06b992-e8ed-4877-8b1b-2ead508676a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b3e76b-4357-4301-84d4-6b4259754dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1480d90-b26f-433e-9dcb-dce7a7039fd0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c307f500-cbb8-4deb-9759-c6b5bfd9e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab76679-477c-414c-b3aa-5584aaf994fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a42f12-c6c7-463e-9097-9dd68746fb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038efbdc-2428-4a30-bea8-4f610f71d7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fcb7d6-cbb6-4422-b07f-054f64b6cb37",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30df1b5f-0e3e-4f91-9973-1cc561a14945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bbb523-ad9d-4591-93dd-5dc1d1effce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49139b8a-3a55-45a7-80f6-51fd871ab3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649d217b-4187-4b32-be74-b19237dd6946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d93f654-65fe-4514-9b66-93ca7b66d143",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58dab9f-322f-43d1-8a40-c31edb7877e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a0b254-ce02-40c1-b2bc-ac8742de0562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18096839-29bd-49f9-9616-4f13f05322cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bf4d86-cd99-468d-8372-ec76fdf26d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1eb585-3653-4596-84d2-3afbc89476a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e55a31-c812-4bb0-a351-9b293d6920b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23636476-22c0-4a2b-8e8a-33e42b8d4df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed470ca4-8ee3-42ee-92ef-9183724e176f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbd9945-31f2-41c9-aea6-2bee1ffd6738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44def52-8013-4bce-af8b-d45317d77e05",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5374307-d9bf-4063-90fc-330491222bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2577855d-cbed-4604-9426-a461ba1278a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dd1e56-d8d8-4cc5-9c28-33f4b8c9f416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c181819c-bc4c-4b79-840e-173e6a352193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb3f6a-8a39-4029-a472-bdffffca9f16",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4448f318-afd7-49f2-a345-8d9cd7237b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051d8244-cb64-4703-91f2-7e0c50c6838d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da65cbb0-3603-4312-afac-c0c50776a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a3f7aa-0275-483a-8615-e0ad13f21ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe96e0c-0cda-4c30-af33-14e5d0211b8e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2092ee1-a51d-46d5-a127-ab5b821afd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89488f64-9414-4ee0-85ac-7ebd3191d95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24559e55-384c-4b72-90b6-21de8d0fb4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbf6273-9b3d-4e5b-9e17-f67ec65c1629"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc1d39a0-baf5-4458-b3b1-8dd07f836776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8a3e77-447c-4ee1-9143-8467e45dcd1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eda806d-691b-40d5-b3db-81a262962d16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cb37c8f-a9a1-4139-90bc-5702e2e5e88d"
                    }
                  }
                ]
              },
              {
                "id": "170a783f-bb5d-4aca-86f7-644cb4606600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aedf5e89-0c65-4bad-8ee9-53121a34f400",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d998b6c-d747-4ece-947f-1c77f1cf3226",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "727f4b5b-ec89-43e4-8ad6-8d7863e192d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb3e72b-c1d6-4c7f-a619-f0aebf2b854e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccde8230-2f90-470d-bda8-07c295d02ad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8752f28-b2b8-45fd-8cc4-4d3335bfb0d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d6909a4-5f24-4f71-a4a3-613eff7c88d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb23cf33-fc11-4b24-9e90-27a1091e4f39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2540845-f56d-4061-ae54-2eb42dcc445b"
                    }
                  }
                ]
              },
              {
                "id": "61400943-c879-4ef9-8078-4cae613b1cba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f3876e1-3309-4f7b-8091-3d362b0ca10f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13840a0f-ab91-4366-8061-401738783183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9e2c06fa-0cc6-45ae-9960-d2c1e3ef0dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fb9e6d-a0b3-4cd0-b04e-d35212676a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137e835c-0a2b-49b8-adc6-0bafd4f0ed05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2225a8e8-a4d8-4b2f-b9e9-b88a81c98c65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "130d438c-a287-4f57-845a-33f6cb3de62b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb03857-ce80-4d97-be79-3a56574a8e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "979c6931-8aa0-426d-aa7d-f434a7ae5bb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78fc68ad-c508-45a2-9b33-f2d9b327d42d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11abe7e0-d48a-4191-b476-83249142f471"
                    }
                  }
                ]
              },
              {
                "id": "a3297380-088b-47fc-b466-2ff9c8158568",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60daace-a390-4a01-8584-7d1c6e3220af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f2f7f3be-6ecf-4a22-baae-7a5af2d64780"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e5b3b7a-6e80-4d84-99d1-544257d4d650",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8bb6602-15d7-4eb4-b582-69d9b4081dd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79900c71-43eb-479f-b646-38935f71cf91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d6f5024b-7855-438e-b09c-c19d8bbfd105"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af786267-3020-4d89-8b94-83b94a95fe77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5eded439-6613-4ef3-9d19-280341fb290c"
            }
          }
        ]
      },
      {
        "id": "733886c4-6ae2-494e-828f-b7136731bba3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d89f595-95c7-457f-ba86-5cb929950f0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c448eca1-8284-4cbf-838e-c9e52d015f28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d7b9112-98e6-452a-8e93-ac99d031922a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a315b8f9-5c98-4357-8503-8b796513dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb66ab03-b260-4ccd-8aaa-b3707007d01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c84a60-734b-4ff9-be9f-d9add236d208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc1917a-b551-454d-a9b1-91f3fe801f8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eedc4cc-9700-41bf-b2a1-771f1357edf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c61e406-8bdc-43de-88de-d34794912eed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1679ecf-7e41-49bf-8000-3fa42b9a861e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77eccf0-f07a-4639-8d78-7a45067f6892"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "789da71b-882a-4d44-9ad5-0a9bbe4ed11e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3511aa3c-3a96-4ac4-ae8f-1c9721dd5e90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f67b1006-32ff-4e31-874b-cdd661e5c45b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b804f32-e0da-40dc-8c00-fa49cb01633d"
            }
          }
        ]
      },
      {
        "id": "5b7868e0-5be0-4711-8edb-16d7ae0dff7a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b4bcf46e-c3d6-43d4-9f78-08d421ef8672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32a53584-1a41-4ea5-89ea-debc9a80e618",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "046f5b96-e857-49ee-8687-96bf4c868b19",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb4864d-4591-4ddb-8266-c9d35401b086",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99738b27-7ac6-4628-9f66-d6adb20187eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec495b0a-6059-4110-99a5-258903c3d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e25502b0-8c95-43b0-8c5b-e23c152982de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02b5c8c0-bd0b-4e31-b2ab-34a1d4f2a792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5065de6-3c67-45b0-8cd1-708b07226e49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c70f4deb-5765-4aca-b914-36641e79a265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb09af82-45c9-43fb-91e5-f1e3cb8ce5a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6edf1934-4a5d-4d53-88c9-b72e4c46f8cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c40820c-6d75-43ae-869d-bf48f9d77703"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5973a9d0-f10e-4123-a63c-5eac3dffb42c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b84d3467-f7d6-4915-9ccb-04a5d71bf87d"
            }
          }
        ]
      },
      {
        "id": "2cb56cbf-4502-421b-9f70-776d03cbc146",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ebe64fc5-466d-4906-9ada-55e833c4db22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bad1f1a5-7c55-48e2-8209-45876a8eeb3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b807cb50-12c3-4056-b835-873a34034297",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430484ad-f1c4-4db0-aea1-8681e7ca0603",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b05f78-32da-4810-a1b8-7f95bad4c8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b9aed-c709-4b88-bf4d-43aa64c07f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "367c1230-9f59-4bda-862e-104a0394bffc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d21fbbe-8a6f-4a9e-a076-e74a8dbc5067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5968127-4c90-4c8e-88f1-ab7702bcf271"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7ec4207-7a21-4199-be89-fdd29347ebcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6670a82-b5bd-4957-80d2-506388d4c2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da5c0716-a439-4694-92ef-cf2ac90140d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5eace880-a951-4e78-ba53-905446492f03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb098688-3a88-4285-bfe3-52a9c17e8100",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "922f0174-4706-4a17-b593-452aafed40cc"
            }
          }
        ]
      },
      {
        "id": "fa934382-59a8-4526-bded-8ab303b84629",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bde46107-8fc3-4056-892d-ca7b1c0e7b89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b83f88-d6de-4ee6-a942-821f9cfebf28",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a8b05929-ee9b-480a-97b9-460ade1f3245",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65a7d25e-6555-4f9f-bc32-f66ce55fa8ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74750c6f-5fd5-4363-8e1b-f5193fff8cfc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.940476190476198,
      "responseMin": 3,
      "responseMax": 267,
      "responseSd": 24.097034917946527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719708151220,
      "completed": 1719708161076
    },
    "executions": [
      {
        "id": "cfea9512-f657-4cdf-83bd-10a869c90ca5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a88abd68-75ec-495d-8e8f-d38c71192939",
          "httpRequestId": "bbf1e69a-63a0-4078-82f8-83db17ee06da"
        },
        "item": {
          "id": "cfea9512-f657-4cdf-83bd-10a869c90ca5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4929fa74-8f7d-4fba-a6fe-d1e0077af880",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "42b9d601-ad84-4f70-90b0-72abb2df610d",
        "cursor": {
          "ref": "2f80eede-bdb1-4b0b-9163-a4a57d3f113c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b08c6d09-efea-4c43-9dda-09563278f2e8"
        },
        "item": {
          "id": "42b9d601-ad84-4f70-90b0-72abb2df610d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4bdcd4a8-2931-4088-89bb-584e03beb78b",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "6a32095f-41af-4a78-8118-2c89653d4b02",
        "cursor": {
          "ref": "6004717a-c95d-41f5-aba3-cd77283a954d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d27a0d2c-46ae-422b-9e0e-652bef91adc2"
        },
        "item": {
          "id": "6a32095f-41af-4a78-8118-2c89653d4b02",
          "name": "did_json"
        },
        "response": {
          "id": "ed2bb28f-fad4-4030-99cd-75c1a54d960c",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7287bfba-8c9d-4472-b93a-5bdb3688df13",
        "cursor": {
          "ref": "0bd3b73d-125e-4807-ab3f-cc1b1a97d0b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12f04ddb-25f5-4237-941d-402c3dec2012"
        },
        "item": {
          "id": "7287bfba-8c9d-4472-b93a-5bdb3688df13",
          "name": "did:invalid"
        },
        "response": {
          "id": "46d34576-312e-4c6b-8501-4290b0e7742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7287bfba-8c9d-4472-b93a-5bdb3688df13",
        "cursor": {
          "ref": "0bd3b73d-125e-4807-ab3f-cc1b1a97d0b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12f04ddb-25f5-4237-941d-402c3dec2012"
        },
        "item": {
          "id": "7287bfba-8c9d-4472-b93a-5bdb3688df13",
          "name": "did:invalid"
        },
        "response": {
          "id": "46d34576-312e-4c6b-8501-4290b0e7742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1991c624-3b2a-4e24-820c-17a96d33a6aa",
        "cursor": {
          "ref": "b7856882-47b8-40b3-bd12-19c2b0f28a44",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9ccd3e4b-6a74-491c-996b-b2ae686bd379"
        },
        "item": {
          "id": "1991c624-3b2a-4e24-820c-17a96d33a6aa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b25a704-c408-4f6d-ab14-b0de0c6d3880",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5696d08a-5fbd-4e86-9b09-0ff311adca51",
        "cursor": {
          "ref": "5a563769-3047-405e-988b-df0b838930c0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f0c32307-1652-4c50-b9da-f824d4034016"
        },
        "item": {
          "id": "5696d08a-5fbd-4e86-9b09-0ff311adca51",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0238554a-9350-4bef-afa2-91a628612b00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b262102-931e-4580-aa2a-59c1e6c65014",
        "cursor": {
          "ref": "74c24e04-fe33-4266-9e86-663474cbfbae",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "657a4fc4-188a-4a7b-a8f7-5c09970fe158"
        },
        "item": {
          "id": "3b262102-931e-4580-aa2a-59c1e6c65014",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "133caa3b-2c0f-428a-92b4-305d997bae97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3417cc4-e5de-4516-adcb-739f7e5e5453",
        "cursor": {
          "ref": "fe4f131b-7118-481c-9710-a0bb4b284353",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5968f975-23ce-4883-b6ad-11c02abd044c"
        },
        "item": {
          "id": "b3417cc4-e5de-4516-adcb-739f7e5e5453",
          "name": "identifiers"
        },
        "response": {
          "id": "bbb2ce77-6676-4e5f-8b21-45a921486b02",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05251a9f-5223-437e-a5eb-175dacda1cbf",
        "cursor": {
          "ref": "8f28e4f7-3cc7-4a83-bc83-7cbd1b1969fb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9b099df3-b8a2-423a-8437-a8e2cda5a93b"
        },
        "item": {
          "id": "05251a9f-5223-437e-a5eb-175dacda1cbf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a4d37962-e23f-44f1-9933-32387a1add38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c8cf80-2ca5-482d-85d0-61798b231a2d",
        "cursor": {
          "ref": "d7c323d6-c828-459e-85f1-9a75a30b4f36",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e2d5f6c3-d776-40af-a8c2-aeb5c4ccfaf5"
        },
        "item": {
          "id": "a6c8cf80-2ca5-482d-85d0-61798b231a2d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c27e87db-3bc2-4874-9d23-c00ebbec9051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea89f09-d5ff-4510-96ee-2e1e047202ad",
        "cursor": {
          "ref": "a7b91c00-f6f7-4f42-9886-ef1e877170c7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "17a8ccff-5038-470b-afda-ac392d96395c"
        },
        "item": {
          "id": "fea89f09-d5ff-4510-96ee-2e1e047202ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "997127cd-0de1-43b4-8f5b-7d73cf1c5264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3823dbba-2c56-4367-b765-93bd464b4355",
        "cursor": {
          "ref": "f39691fb-56bd-483d-acb2-7e6a51115e7a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e7a63758-f6c2-4d35-a94f-07e050bdbd64"
        },
        "item": {
          "id": "3823dbba-2c56-4367-b765-93bd464b4355",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "01283d2e-cf45-49e1-9dd7-ca04339ee5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c6a886-fe7f-44f0-93b5-3ba2f62941ba",
        "cursor": {
          "ref": "4d19eca0-9d62-4a16-8814-563469e54e7e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e176101-9fa6-4338-bb94-1bc66d970103"
        },
        "item": {
          "id": "62c6a886-fe7f-44f0-93b5-3ba2f62941ba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "72035b2e-86aa-43c5-a836-247822bbe618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed00bb1-7f4e-44b8-8158-eab550210b1f",
        "cursor": {
          "ref": "b604676a-2174-401b-8dd8-68c303741b29",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ad17341-8604-4e9e-9910-5f3cfdc1f4e4"
        },
        "item": {
          "id": "8ed00bb1-7f4e-44b8-8158-eab550210b1f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dcaf9c88-3164-4206-83ed-f20b6206a1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335436bb-659f-4cec-b730-75fdbf9faba6",
        "cursor": {
          "ref": "36cdac0b-aac9-4fc7-a90f-a01778d3650b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1efcd896-2423-471d-8e13-4b82f393ea0f"
        },
        "item": {
          "id": "335436bb-659f-4cec-b730-75fdbf9faba6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8d2124b-f789-4e6c-933c-c6c1f504ae5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec39793-bf8f-4461-ae7d-689a0ba36d5e",
        "cursor": {
          "ref": "0f160733-ebcc-407e-85cd-f0e95f8ffd34",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ab9b1971-9ed5-469a-a6c8-22dd3480cbdd"
        },
        "item": {
          "id": "8ec39793-bf8f-4461-ae7d-689a0ba36d5e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75d8756d-bfef-452a-8844-bee0c88e2c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a461d4-fb9d-4476-9529-386eb0c2053a",
        "cursor": {
          "ref": "90d35c09-c06f-45e4-bc42-690e8415b65a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a13a59ed-5196-41fe-b5a6-32a664b92545"
        },
        "item": {
          "id": "f6a461d4-fb9d-4476-9529-386eb0c2053a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b4454483-c041-41da-bb35-ab0bf5824ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac479505-c6ef-4f7f-8044-ac37e169832f",
        "cursor": {
          "ref": "6cdd239a-f5d5-416f-91ea-3033ea4525c2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5da7c771-8a91-46e8-92a7-2ee7025e5ee4"
        },
        "item": {
          "id": "ac479505-c6ef-4f7f-8044-ac37e169832f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b0070a5-3282-44e2-930b-8d890b8bce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a76bc6-57f6-4d4c-804a-09e7b53570b0",
        "cursor": {
          "ref": "0079a560-8fc9-436a-8900-4b315e292e50",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b7d6fd82-3a9c-4073-9b59-9d9e0182af46"
        },
        "item": {
          "id": "17a76bc6-57f6-4d4c-804a-09e7b53570b0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4a67dd4d-cca8-45a7-9586-e74535291624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070999d1-e373-4682-ba76-781709c62e0e",
        "cursor": {
          "ref": "30c0e1fd-2727-4b84-afb5-adcf9084138e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "948d36b3-645d-412f-9dd0-4d215553bf92"
        },
        "item": {
          "id": "070999d1-e373-4682-ba76-781709c62e0e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f1f0fad1-cc1a-45cd-a24e-792a72e1d097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac3c120-4fd4-4496-b821-ae45c8c64f2c",
        "cursor": {
          "ref": "76c17959-9054-42ed-b427-e6426c04e7bd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b595a93-c75f-463f-b208-2319e839eea2"
        },
        "item": {
          "id": "4ac3c120-4fd4-4496-b821-ae45c8c64f2c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "658a5fd9-4db6-45bc-8c18-1d24d1351ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5f35b7-8cfa-4df0-9325-b93955bf3eb6",
        "cursor": {
          "ref": "a6248bd4-8843-4c28-a790-0de9268f93bd",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17e6939b-d173-4991-8c54-533abe8479a0"
        },
        "item": {
          "id": "cb5f35b7-8cfa-4df0-9325-b93955bf3eb6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f94b3f8b-41b1-474a-a138-c2de1f761b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a43686-122b-47fb-9262-3fc0aae09135",
        "cursor": {
          "ref": "cb2812f6-2a49-4515-8185-144020e83f3b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e6b30f55-4149-48ee-a006-66122403658a"
        },
        "item": {
          "id": "f1a43686-122b-47fb-9262-3fc0aae09135",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8675183d-32c8-4d13-be10-2eb6404cbc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f09f5ed-d320-4835-8abf-2e6f6f6adbe9",
        "cursor": {
          "ref": "16c1ac11-2064-4e3d-b1e3-37e365a89995",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "154ce808-2156-4b41-8c66-4f03ff139865"
        },
        "item": {
          "id": "5f09f5ed-d320-4835-8abf-2e6f6f6adbe9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0fcb3359-722c-4d54-b6fb-8829db5c30ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b923f3-9e23-4199-a43e-b444d5100a1c",
        "cursor": {
          "ref": "7d5d7090-8c06-4cae-8bf4-3d694fd01332",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e3c988c0-7d3f-493a-aadd-ab43c1a3ba58"
        },
        "item": {
          "id": "73b923f3-9e23-4199-a43e-b444d5100a1c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2353ef75-cf76-4fa3-91a7-ca806c23fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4640f4-6ccf-48cf-8d3e-729ccc0dd72d",
        "cursor": {
          "ref": "48b25170-9370-4c0c-8051-3fcb71546ef5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "13d1351d-aca1-42d6-b409-7e490dc2cb54"
        },
        "item": {
          "id": "6b4640f4-6ccf-48cf-8d3e-729ccc0dd72d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ba41b26b-4033-4133-9753-730896343281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467bbaf9-7ed1-46f2-af57-5568c4a85665",
        "cursor": {
          "ref": "976550ab-d7a1-4014-9e64-5f7d4baa0db3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "21fcdf33-193b-4ef1-ae59-e56986fcbdee"
        },
        "item": {
          "id": "467bbaf9-7ed1-46f2-af57-5568c4a85665",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cf057edd-8ed1-4a12-8863-9bb0d397e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2099d87b-2f78-4ba9-92ea-456c4f32966d",
        "cursor": {
          "ref": "6bba35f9-0258-4806-9700-093fd13c1bdd",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "32dd7e0a-4290-41c0-8f5d-785c66ac7978"
        },
        "item": {
          "id": "2099d87b-2f78-4ba9-92ea-456c4f32966d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aba9aca7-9072-4208-b399-6d9c46cd2a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaad0a84-09b3-4154-a4b1-fdf37af4bfbd",
        "cursor": {
          "ref": "7143766c-0e61-4d03-9aa1-d068c10db6f3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "385d9c4f-67f9-4b82-8b4b-a6be883e1487"
        },
        "item": {
          "id": "aaad0a84-09b3-4154-a4b1-fdf37af4bfbd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1edc5bef-7932-49f6-a683-420af716427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb255ce-2821-4ec2-89a8-58cbe8aec35e",
        "cursor": {
          "ref": "67d81a24-418c-4099-94e6-51ab5d4697ba",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "455b8b72-4ab3-4e7c-9913-fd7e1216a868"
        },
        "item": {
          "id": "6cb255ce-2821-4ec2-89a8-58cbe8aec35e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "82c7dbeb-0901-4169-b21e-bd1877ed61a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0eddc-2220-41ad-b176-7bf9aa0f6029",
        "cursor": {
          "ref": "dbbd3cf4-ba7a-45f7-bee2-5efaadd60bf8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45efdc9f-b6ea-405a-bac0-f10fb76986a3"
        },
        "item": {
          "id": "3de0eddc-2220-41ad-b176-7bf9aa0f6029",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "81509fbd-f120-41f6-9d1b-b12909e1a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e92e29-961b-48f0-a943-a10d563e3439",
        "cursor": {
          "ref": "f3bad731-ff51-4926-8125-132e1bc2c2e1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1567fa0-0dc0-4987-b7c5-a82be2b4cf20"
        },
        "item": {
          "id": "31e92e29-961b-48f0-a943-a10d563e3439",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a9dfb4b4-9eb7-455c-8aeb-5da6da351998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202d69eb-b863-4082-ab9c-94f291fb566d",
        "cursor": {
          "ref": "e018cbb2-a69d-4016-bdee-36a6a3a9eb69",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f67db741-938b-47d9-b91c-2cb99e460b50"
        },
        "item": {
          "id": "202d69eb-b863-4082-ab9c-94f291fb566d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "95a12e96-7b32-4155-a2fc-93608a5dd5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d838b091-c4fa-4c63-8c08-44d6fcca0433",
        "cursor": {
          "ref": "a255bb2d-7683-4c94-865a-b61e6a22802e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3259d483-a535-4551-8e63-41ab15260614"
        },
        "item": {
          "id": "d838b091-c4fa-4c63-8c08-44d6fcca0433",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38d35554-2c9c-41d3-b5ec-6d7523fcae0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88ee5d5-918c-42d9-b904-f6ead2b9e7ca",
        "cursor": {
          "ref": "52394840-544f-4581-9c37-c7034f83e1bb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5ddff465-7233-455f-89e6-72f6b8057ac6"
        },
        "item": {
          "id": "a88ee5d5-918c-42d9-b904-f6ead2b9e7ca",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3271d156-bb01-4ad1-9724-217275711a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cf6d69-d30f-45fb-a842-a342507baeb6",
        "cursor": {
          "ref": "ccb08e82-48e4-4fd6-98e9-69b3189bf3d6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "96f872ec-f97a-415f-a789-607adc91859d"
        },
        "item": {
          "id": "67cf6d69-d30f-45fb-a842-a342507baeb6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac13db9b-3fa4-48cf-bf46-b0f8afc09c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b235fd19-79ef-4663-8bcb-4b34d933cfb5",
        "cursor": {
          "ref": "6a13df39-2468-4d03-aa65-4c1d4fa5882f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a9fff108-8467-4002-984f-7891c71f7d4d"
        },
        "item": {
          "id": "b235fd19-79ef-4663-8bcb-4b34d933cfb5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9fe66004-e715-4040-8f9c-c36339d3c380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc218d27-5fb8-4055-befd-7c06617f1820",
        "cursor": {
          "ref": "d6bbc98e-9d5f-4e24-985d-9997b8766ab2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51af08bd-5607-483d-aaa3-4eadb96a7601"
        },
        "item": {
          "id": "dc218d27-5fb8-4055-befd-7c06617f1820",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ac4297da-b90f-48d0-9d9f-b54a3090e022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c498320-1449-4183-8c9b-c504e306fc8b",
        "cursor": {
          "ref": "12d2a9f1-7bdb-4895-bf0b-28428b89d0f4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c65d498f-85e3-41a3-986e-2bee62a9558e"
        },
        "item": {
          "id": "8c498320-1449-4183-8c9b-c504e306fc8b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b38e7c43-3464-4c23-b6b1-c558e2c82f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65245c02-2f58-451a-bddc-9eaaad68b5f4",
        "cursor": {
          "ref": "a48ae88e-92bc-4941-bbb9-c76e7b9268b8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e6aee6a-0961-4f47-b7c4-05dab62f6525"
        },
        "item": {
          "id": "65245c02-2f58-451a-bddc-9eaaad68b5f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "db753f03-b8c4-4b03-93da-94805b6b22da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0064bad1-428c-4a82-982e-9d4d62015ceb",
        "cursor": {
          "ref": "8439190e-8108-4419-8aa0-67332e499960",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0834482-aba6-4f0e-ae12-0af5b6bc7c7e"
        },
        "item": {
          "id": "0064bad1-428c-4a82-982e-9d4d62015ceb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b3e3c12-8bfa-41bd-bb34-682dd993ccbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a51a64-c7be-4432-920b-57a41932a887",
        "cursor": {
          "ref": "573a02d4-0d1e-4e22-b862-b85b39755cad",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "054d11ac-295e-4c8c-bf2f-b2b5f5f77ef4"
        },
        "item": {
          "id": "46a51a64-c7be-4432-920b-57a41932a887",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64e22705-e930-49e0-b8c6-d7519e777c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c72676d-37dd-4e50-872e-8b7dc154e355",
        "cursor": {
          "ref": "158b7ffe-1fac-4523-84c3-ae963811c67d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "feacc55c-9ff4-496c-865f-a70dc2cf8370"
        },
        "item": {
          "id": "6c72676d-37dd-4e50-872e-8b7dc154e355",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "13d5fc99-1467-4930-8133-b4dfadd3b375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9d027-b08b-460b-a232-7a5d74bf5ed5",
        "cursor": {
          "ref": "6ed167b2-c80e-4c3a-b692-317ee002eee2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "474fea0e-1550-4286-9725-c8de769af080"
        },
        "item": {
          "id": "aec9d027-b08b-460b-a232-7a5d74bf5ed5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "499562a4-6f2b-41a7-90d1-e3962de7d960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cb8083-499c-4c12-afe7-55357bc74945",
        "cursor": {
          "ref": "ca8a9f56-7e75-471f-9837-a39c3dc2d098",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a31ca86c-1036-43b5-913b-3e6589d27769"
        },
        "item": {
          "id": "b7cb8083-499c-4c12-afe7-55357bc74945",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6f629d69-cb77-4700-8c2e-323f057606cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553c2b9-f9c1-47ba-8bd7-1b227837cfab",
        "cursor": {
          "ref": "20a64eda-bfb0-4eaf-8318-cacf8f4068a6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b2910827-d7c3-457f-8aa0-05dbce736c9d"
        },
        "item": {
          "id": "0553c2b9-f9c1-47ba-8bd7-1b227837cfab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a3bdaafe-efcc-477f-a2ca-bf2edfc833f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebbedee-dd88-41ac-872e-550180f516f2",
        "cursor": {
          "ref": "088e6511-dfef-478b-a2fc-ff27f962dd4c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "53f4f7b5-86b0-477a-90e0-316400c95b6f"
        },
        "item": {
          "id": "eebbedee-dd88-41ac-872e-550180f516f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "929018ca-65de-4b81-9c7a-dc1c12a07d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b7750-afe3-462a-add3-61e032a2ddbf",
        "cursor": {
          "ref": "32b62c87-35d1-41cf-abf7-9fd987baa31c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "35d73a83-56f2-46ea-b660-8e3b3c9b91d3"
        },
        "item": {
          "id": "473b7750-afe3-462a-add3-61e032a2ddbf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8aeb52e8-41f7-42a9-9314-e7c2a387b6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c6d371-baee-4f7b-a115-b24f711e9842",
        "cursor": {
          "ref": "7ec28670-6afa-4845-b790-c85b09617a77",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1d6ce0ce-1cd4-4b9f-bc09-92ade276f1f5"
        },
        "item": {
          "id": "46c6d371-baee-4f7b-a115-b24f711e9842",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5abb4697-fcf6-4a27-927e-b3c44981b772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a0e698-cd57-453d-b94f-e6661f4cbaa5",
        "cursor": {
          "ref": "755c0208-7cb6-4e90-bb39-258ddb38521c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ab0cffda-decf-4947-982b-db733b6e9eea"
        },
        "item": {
          "id": "b7a0e698-cd57-453d-b94f-e6661f4cbaa5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6ae4e738-05e6-4707-9ebb-6b5f407bba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dcfcf8-b757-4ea3-8166-4efb6712f0fd",
        "cursor": {
          "ref": "ded8830e-0d35-49b4-883e-e3ab7cd9dca4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f9a31612-69bc-47d3-85c1-d390adc6d392"
        },
        "item": {
          "id": "87dcfcf8-b757-4ea3-8166-4efb6712f0fd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0fd3ea81-6ef3-4c83-acf5-084c27cc78a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0dca8f-f52c-4283-bfa4-ba237aa2bb0f",
        "cursor": {
          "ref": "6e32b392-efc2-4087-ad03-3d6bf48e6c0a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1382edaf-174f-4165-be23-e8ace6439db2"
        },
        "item": {
          "id": "bd0dca8f-f52c-4283-bfa4-ba237aa2bb0f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "158b3c9f-12b1-45a8-92f6-abd0aa05e81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e7325-7614-481b-90e1-92666842e7bd",
        "cursor": {
          "ref": "4e21b201-bee4-4825-b175-6fd5b2c136ed",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5d6a6645-5b39-4b46-914a-40092a9e4d9d"
        },
        "item": {
          "id": "433e7325-7614-481b-90e1-92666842e7bd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad5fc275-c33d-4d39-99c2-3e7c00195a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879084f7-db25-4887-a40e-19cd9b807e20",
        "cursor": {
          "ref": "480d4e11-cc88-4c99-80e0-7e7c6a70976c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c5d8ec45-36af-4d6f-bf59-4e3237d24f19"
        },
        "item": {
          "id": "879084f7-db25-4887-a40e-19cd9b807e20",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b4fac200-2407-4a5f-8eb7-b491e759817a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1331f-894b-42f5-b75e-7ba00754a1e0",
        "cursor": {
          "ref": "8321a1d2-c469-4255-91be-4aa21a613ead",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5f43264c-52e5-43bd-943f-cde21374f2fe"
        },
        "item": {
          "id": "79c1331f-894b-42f5-b75e-7ba00754a1e0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c46552c6-16ca-403c-a188-947205ca836c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c34c5d-808f-480e-a3f2-38895409213a",
        "cursor": {
          "ref": "b564788a-416c-4f47-8a92-df9f9dfb86c5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6bd65b7e-27c7-4656-a9eb-eccabdedfef4"
        },
        "item": {
          "id": "68c34c5d-808f-480e-a3f2-38895409213a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51803f62-579d-4c4b-84f1-9659d557db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead849c3-1cc2-46ef-9d5d-44af1d3a4ae2",
        "cursor": {
          "ref": "fee255c6-5d81-4004-86ad-b658afab0219",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "70a5a201-a486-4279-b2a6-6a90119438ce"
        },
        "item": {
          "id": "ead849c3-1cc2-46ef-9d5d-44af1d3a4ae2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "90ea9204-c4db-4f11-8f3e-48fea3add2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d761e-afca-4222-80d3-162eccf83087",
        "cursor": {
          "ref": "59cdd525-1bae-4997-ab4c-8f39ce7abe43",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8082507c-9e01-4889-9397-354cf5926817"
        },
        "item": {
          "id": "030d761e-afca-4222-80d3-162eccf83087",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e35607e7-6f75-44dc-9795-ac88725b3470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77ebd09-fe04-497c-9749-d516a3f22bfd",
        "cursor": {
          "ref": "188004d6-6eff-42b0-a2ce-6abe489eada9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4256c96b-ac5b-4b16-aa4c-a336d74e1386"
        },
        "item": {
          "id": "b77ebd09-fe04-497c-9749-d516a3f22bfd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5497fb18-bc92-4d22-a60b-e4ec108d9e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdc21f8-3ff0-4d03-bf9f-95311a2154c0",
        "cursor": {
          "ref": "2ced706c-5b04-4f11-a203-92171ae368ca",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fdaa3cad-2cb7-4e5f-ace0-d7390e541ffe"
        },
        "item": {
          "id": "4bdc21f8-3ff0-4d03-bf9f-95311a2154c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c68f59c7-ff9d-4270-84c0-3b48bcad0691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1491f62c-675b-4753-8bc9-e5a543f3b32c",
        "cursor": {
          "ref": "1e7c0c3e-61b4-44a2-924d-89c0dd1cea7b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a8445f33-54be-4d68-b892-daf0813469c3"
        },
        "item": {
          "id": "1491f62c-675b-4753-8bc9-e5a543f3b32c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "89766d43-a8ad-441a-b8c2-f6462ba3fc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43346e0-be94-468b-9962-7371d5eb46c0",
        "cursor": {
          "ref": "42ccb31a-568c-467c-91e8-4310fc27cda3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1cd8fb2a-756d-4ee8-9f4c-7389acca5738"
        },
        "item": {
          "id": "e43346e0-be94-468b-9962-7371d5eb46c0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "285da17d-99c7-451f-934f-643d674f9576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8e6e61-157c-4490-943b-3ca5f52e5986",
        "cursor": {
          "ref": "b75daa00-ae6e-46be-95ae-898594c14796",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b9d7e37-529e-4057-aaa7-ee7cca71dd64"
        },
        "item": {
          "id": "aa8e6e61-157c-4490-943b-3ca5f52e5986",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6d23f619-1051-42ed-9f9e-ab94f2029619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47f2dc4-0e8c-4669-ae07-13be4cd3a3fe",
        "cursor": {
          "ref": "c2f74541-a7b5-42df-afd0-67eece073047",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f40238b2-05ff-4032-8a75-e7cc7e227f72"
        },
        "item": {
          "id": "f47f2dc4-0e8c-4669-ae07-13be4cd3a3fe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2658817a-0285-4a71-98ce-5ada7be16a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaa9a6d-68fc-4db6-8f6c-6964e887b633",
        "cursor": {
          "ref": "8fe9fed9-b867-41e3-897a-9ed1dfbbff40",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1a17bb13-f1d5-4a26-82f5-8d604aada423"
        },
        "item": {
          "id": "8aaa9a6d-68fc-4db6-8f6c-6964e887b633",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b50f0637-ef61-47ab-b903-cfbf83a1fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859d033-b7be-4458-a630-a6249ad6a3a8",
        "cursor": {
          "ref": "0f034c74-625c-45d7-a382-c376bcf811f1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "67aa0712-138d-4225-b453-e5205395d1b3"
        },
        "item": {
          "id": "c859d033-b7be-4458-a630-a6249ad6a3a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bc6eb086-5ab4-4e59-88d6-462970f65819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dec30c-7690-4b4e-ac27-7a5ab86ecc1f",
        "cursor": {
          "ref": "930949a2-39ea-44f4-a858-db7e791b70a8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bf2e368b-368e-4d92-8f46-08ae8e6fe032"
        },
        "item": {
          "id": "d5dec30c-7690-4b4e-ac27-7a5ab86ecc1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1f93da46-85e5-4cd4-854d-385688986134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faed50a-195e-4fcf-a770-a158c2c56dcd",
        "cursor": {
          "ref": "c0015b81-970e-44a5-9f45-7b2a354d7185",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d3ec2e8-57f9-45e3-864c-d3be9c6eb330"
        },
        "item": {
          "id": "0faed50a-195e-4fcf-a770-a158c2c56dcd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "72e8ea67-a71f-4edc-a303-f83bfbdb457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db866f15-8447-4e62-b506-97bcccb0a362",
        "cursor": {
          "ref": "dda55cb1-303b-4037-820f-1eed2794d356",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "072e83aa-e061-49c6-b092-5be9f70c233e"
        },
        "item": {
          "id": "db866f15-8447-4e62-b506-97bcccb0a362",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eb12c8fd-c208-47b2-9d81-b9324bad95fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f95f83-b440-4314-8fca-742463da2d0b",
        "cursor": {
          "ref": "4eade7b3-3853-465f-9ab2-8782975a5f21",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e2ed9e9-d96e-4112-b667-ed4d7c4e5e28"
        },
        "item": {
          "id": "d6f95f83-b440-4314-8fca-742463da2d0b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2eac0eec-cf8a-429e-8e6b-9e49dba8ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c3f4c-e5d1-4fb1-87bc-f6a240413d22",
        "cursor": {
          "ref": "3539db4b-74e9-4a3f-bd97-28c6ba8faa69",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "53fcadf1-9963-4519-9885-4aa473381ae5"
        },
        "item": {
          "id": "336c3f4c-e5d1-4fb1-87bc-f6a240413d22",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b4042e2-2b78-4e27-a149-bde1e9745dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1966ac2-2006-445a-b401-c618641c6b12",
        "cursor": {
          "ref": "face814c-60cb-450d-8060-8996b37e84cd",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2934ff53-d985-4fae-aa5a-1f6064d3f0eb"
        },
        "item": {
          "id": "e1966ac2-2006-445a-b401-c618641c6b12",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "76632bc0-1ca2-404b-9ad1-7df40a3d7410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b84835b-acdf-4440-93cd-47282fd08164",
        "cursor": {
          "ref": "28290b76-5180-4ab7-90e6-68372ee66b84",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7c8929eb-5b23-4373-8bf2-d640f920c591"
        },
        "item": {
          "id": "5b84835b-acdf-4440-93cd-47282fd08164",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aa3401ca-c36a-496d-a157-cad20f8af5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff7a044-484d-4d2d-9dbd-bd4a4f54a992",
        "cursor": {
          "ref": "50b4a0e0-e886-430b-8962-3e419bb7004a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1081fb81-787a-444d-9b9c-9871457e093d"
        },
        "item": {
          "id": "4ff7a044-484d-4d2d-9dbd-bd4a4f54a992",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9a4f4102-f2bb-4c3c-8ac8-7aa28c7043ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e8745b-1615-4e7e-bcf0-d33293fffa11",
        "cursor": {
          "ref": "b6fd5e88-d391-4f2e-a021-3cadeda79fe2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8988ae58-748e-4de7-9ee3-94e93105009c"
        },
        "item": {
          "id": "b9e8745b-1615-4e7e-bcf0-d33293fffa11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5ed62486-7244-4ead-b1cd-43a5ed232237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589362b3-6283-4569-9864-47388fa8f144",
        "cursor": {
          "ref": "59d37fa1-91a3-47ed-a427-55bcc82b3002",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9376af9a-798d-4304-bab2-5be9d732d280"
        },
        "item": {
          "id": "589362b3-6283-4569-9864-47388fa8f144",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "afe3c56e-535c-4f4a-9ced-a88219d918e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c695103-3b14-4323-a915-c698c8a8735f",
        "cursor": {
          "ref": "583b6b7c-8888-46c4-b21d-7233dac5be11",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0f4a1674-a3a9-4fa9-9140-c4962b731c2d"
        },
        "item": {
          "id": "0c695103-3b14-4323-a915-c698c8a8735f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b988bae7-a98b-4526-a2b7-1fca18197ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f865523c-61a2-43f0-bf9a-c228d3567cb8",
        "cursor": {
          "ref": "41fa0a17-4b71-4a7a-bcc1-00cde5d268d5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "370505c8-aa15-43b4-aec3-7fd17e00ec3f"
        },
        "item": {
          "id": "f865523c-61a2-43f0-bf9a-c228d3567cb8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "727be07d-be80-4f18-a393-fcefe287e527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50934adb-b1b0-40c8-a46f-a8c9d705b1f6",
        "cursor": {
          "ref": "ebac393c-e1d5-4480-805f-44582c930e80",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f28a4b41-b13f-4063-b269-590996331309"
        },
        "item": {
          "id": "50934adb-b1b0-40c8-a46f-a8c9d705b1f6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "806c3527-2f32-4de4-834a-d39ed92f2ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee7b088-927e-44b1-8ffd-48b737cf42d6",
        "cursor": {
          "ref": "145cd0ee-b4c4-4b61-a3eb-53d97d63d952",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "98a3cf29-5cd4-4822-8c71-f010b0d856de"
        },
        "item": {
          "id": "cee7b088-927e-44b1-8ffd-48b737cf42d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e5824378-a817-4c3d-b9d1-57896d1185e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab2f9e2-4216-4c19-9fb1-b5c135df2096",
        "cursor": {
          "ref": "692c6a2a-6332-40c6-8608-e30ab7114557",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "054653d5-3d9b-4db9-b699-5cf71f28b703"
        },
        "item": {
          "id": "5ab2f9e2-4216-4c19-9fb1-b5c135df2096",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a2eb032c-ac6b-477b-94f0-25c0858f4647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6994a53-7072-4a01-bfd9-77cdaf44d33f",
        "cursor": {
          "ref": "119422ef-dc8e-4642-88f4-da28ca2a751c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "addf9ee5-c7cd-43e3-ba67-4624cdb75d01"
        },
        "item": {
          "id": "d6994a53-7072-4a01-bfd9-77cdaf44d33f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6e124157-8af6-4534-9743-9e0904028f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53bd685-7295-427a-8901-0377f9a45abb",
        "cursor": {
          "ref": "550a6080-e81a-47da-88ab-b151d9fc5483",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4bc1aead-14eb-4f2f-b793-77732415caf1"
        },
        "item": {
          "id": "e53bd685-7295-427a-8901-0377f9a45abb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "12279ba7-71c5-4d58-a9f8-6e09b4c11cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169d2da9-dadc-4e4a-8199-e746c012130a",
        "cursor": {
          "ref": "c5c3bb54-a2f8-412b-a2c5-2ed5fabff185",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ac5b1d82-ab5e-488e-9206-58b3acbbdebf"
        },
        "item": {
          "id": "169d2da9-dadc-4e4a-8199-e746c012130a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "93aa5cd7-1a57-4063-b29e-77d6e4851dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19b16e1-ba5d-4578-9769-6dd4af321b68",
        "cursor": {
          "ref": "2fe6e013-c142-44c7-b55b-23f65dda0224",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "85f58795-8908-4e06-aee8-3294879f9291"
        },
        "item": {
          "id": "a19b16e1-ba5d-4578-9769-6dd4af321b68",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "953fed5e-cb60-490b-a897-d0bae0ba736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131a0b6-e2d4-410c-a969-42193eb5b0f1",
        "cursor": {
          "ref": "7e3b37d8-3962-4168-88a1-1e39558fc925",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "401bf7cc-e0d0-4a12-ac00-449391929b2f"
        },
        "item": {
          "id": "c131a0b6-e2d4-410c-a969-42193eb5b0f1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "babdf2e8-ee32-40f8-a57d-a90a8fef446d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41195423-70f5-4bdc-bee7-c4f86bc44508",
        "cursor": {
          "ref": "014fd95d-f334-4a89-bc59-5689ce6f52ce",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1920680c-f74f-4482-9cdc-bef800ef12b6"
        },
        "item": {
          "id": "41195423-70f5-4bdc-bee7-c4f86bc44508",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ae5ea135-1d04-4f18-afda-0cb650ed0133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa95725-1c45-4c2a-9b04-ee389d90e738",
        "cursor": {
          "ref": "1a2b8819-6ec2-4ac8-b080-43b41bc500c4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a467b6a4-b2fe-42cd-a9f9-3f8d8f708d65"
        },
        "item": {
          "id": "1aa95725-1c45-4c2a-9b04-ee389d90e738",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "91eea100-ce7e-4c6a-aaa6-87ddfdb75430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d0de96-1680-4b7f-acb1-708701819385",
        "cursor": {
          "ref": "a3b57edb-e138-4a99-b5e5-805478cc3375",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fcb233f5-6179-4e2e-b83d-33830b5d7347"
        },
        "item": {
          "id": "45d0de96-1680-4b7f-acb1-708701819385",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "00669068-8e58-49b7-9f79-03e3e4bdae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6181ed0d-0d5e-4a04-8f45-d541b7ab0679",
        "cursor": {
          "ref": "04e58ac3-9354-404c-a6b5-ea741c796fe9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "08212929-b88a-4700-a15c-0320e579c28c"
        },
        "item": {
          "id": "6181ed0d-0d5e-4a04-8f45-d541b7ab0679",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a40c8e8-051a-47fe-826d-c7245b9da4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92b4a0c-ca4b-4142-b724-f407cb6789aa",
        "cursor": {
          "ref": "7c1d15c5-5de3-45a8-9dbc-d9ce374e5862",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7521a50c-f680-433b-9b36-fb201591c6ad"
        },
        "item": {
          "id": "a92b4a0c-ca4b-4142-b724-f407cb6789aa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "628f9b04-2e63-4235-8440-4bbe1ab6077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0611b02-b368-45a9-b13d-f2b61e0bc842",
        "cursor": {
          "ref": "0d89c028-8b1f-4056-9841-656a02069990",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "15b2c379-b72a-45a1-ab86-80cdc684129c"
        },
        "item": {
          "id": "c0611b02-b368-45a9-b13d-f2b61e0bc842",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0df5b19b-9ae3-47ab-95d7-e0c573ad53cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a19693-93f7-4888-be57-4840c8b38979",
        "cursor": {
          "ref": "20417907-4662-40d0-92ba-2ae1fadac3d2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f2336751-cdb5-4ea0-a0a1-b1e9ca8fe269"
        },
        "item": {
          "id": "33a19693-93f7-4888-be57-4840c8b38979",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "06de82d0-df07-4d57-81ac-c87069c63718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e2499-e7e1-43e4-a8fc-daa0870550fb",
        "cursor": {
          "ref": "6cc1b325-ba0f-4239-83e9-22ea5317b93e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "46f2d2bc-a87d-483e-89bd-1be91faf312a"
        },
        "item": {
          "id": "1c6e2499-e7e1-43e4-a8fc-daa0870550fb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e7777269-4cfa-45cf-9eda-dabd739b13d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f76538-0a3d-4a6c-87d6-5244e4218ce0",
        "cursor": {
          "ref": "3ed41c20-8506-4412-aa15-492818924ed1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f05be2c8-78dd-405f-bfd4-50eb7932a19a"
        },
        "item": {
          "id": "92f76538-0a3d-4a6c-87d6-5244e4218ce0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c174f364-96c8-4678-af6e-333ddc60cbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1c3503-c115-4a0e-af2e-6ec544af76c1",
        "cursor": {
          "ref": "67492314-8215-4c35-9b85-ea00be799766",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f9cd782d-3613-434c-8bbb-f536e696e856"
        },
        "item": {
          "id": "3d1c3503-c115-4a0e-af2e-6ec544af76c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "00c0808e-857b-4ff3-a499-6e2ee26298c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee37d4-44a3-4d2f-84ca-2251bc932bd0",
        "cursor": {
          "ref": "c098d39d-4db7-46f4-b31b-b15d52a72d82",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d0a9e15e-183f-400a-b358-2e1badf3a541"
        },
        "item": {
          "id": "9aee37d4-44a3-4d2f-84ca-2251bc932bd0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b63a9c16-c3ab-4440-b99a-1b8965c143c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ea1448-467b-432c-889a-838e067546c0",
        "cursor": {
          "ref": "1b5320b4-74f0-454c-8912-73eb6fcd0f57",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "21bf6b5d-2271-42cf-aace-b94a96b20ef6"
        },
        "item": {
          "id": "12ea1448-467b-432c-889a-838e067546c0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ece20129-4011-40db-87af-332544b9ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5bc37b-00b2-4c37-bba7-cbb6d1a50f57",
        "cursor": {
          "ref": "0b8ffb70-159e-4bcb-a06f-a545041ccf9b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61661f21-0f52-452d-b8ef-be499bd51f3c"
        },
        "item": {
          "id": "8e5bc37b-00b2-4c37-bba7-cbb6d1a50f57",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a9fd68fc-97b3-41cb-a9ac-87803239a2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a54d6e4-1033-45b8-9528-7567e9b837ae",
        "cursor": {
          "ref": "21717867-75f6-4114-8508-6acb9cd5d331",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "62ed8809-fae3-4075-a16e-9a5430eb44b0"
        },
        "item": {
          "id": "0a54d6e4-1033-45b8-9528-7567e9b837ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6520b61b-d9f8-4e91-b627-a0b9f7b19294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3da2038-90a3-4552-8dff-97fc5f4e7d5d",
        "cursor": {
          "ref": "633355e2-ce16-418c-9ced-6f548d0fd7f9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f1c7d6c-b6cb-468e-b3c6-fbc12060bc29"
        },
        "item": {
          "id": "a3da2038-90a3-4552-8dff-97fc5f4e7d5d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a589b8a4-6130-4456-9541-8ef414264508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296354ed-799f-4559-bfa3-46b06653ed64",
        "cursor": {
          "ref": "3718722a-20cf-484a-b32d-386b1ab839ec",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9a1eea92-38c8-45b9-b318-f793640d84d1"
        },
        "item": {
          "id": "296354ed-799f-4559-bfa3-46b06653ed64",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dba10357-24c9-4d20-9d2d-0e5bd5e6bfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4933deab-1565-4d8f-a3fc-0cf9fba9e2a4",
        "cursor": {
          "ref": "06a5f3d6-b961-4265-972e-97b605a87538",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "018828b5-5c06-4ed4-aff5-39625b733636"
        },
        "item": {
          "id": "4933deab-1565-4d8f-a3fc-0cf9fba9e2a4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "290e2305-2fd3-4082-95b9-e92799be0750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8bdfd185-07d2-4022-8bac-809b8bfb69d5",
        "cursor": {
          "ref": "6e98700e-58c3-4972-874b-1e644cf07923",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3c0551be-19ae-4457-9c75-563d2aa3884b"
        },
        "item": {
          "id": "8bdfd185-07d2-4022-8bac-809b8bfb69d5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4991a334-8439-44e6-be0c-d38b27822d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0a45c7dd-bdb5-44ea-987a-ea1483b9cdbb",
        "cursor": {
          "ref": "43405525-41a1-4356-85a3-8aa5d5826d42",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c85db3da-1dda-40f3-aca1-11bf2855593d"
        },
        "item": {
          "id": "0a45c7dd-bdb5-44ea-987a-ea1483b9cdbb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "10ac8b5b-23c1-4deb-8a08-7d06cc942e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "07dfbfab-bb97-4a7a-8462-72d398671028",
        "cursor": {
          "ref": "12ac61b3-c8cc-4ec4-a2c3-d5fbabdd90de",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a32ab48d-6610-4d07-b795-46a125740ea7"
        },
        "item": {
          "id": "07dfbfab-bb97-4a7a-8462-72d398671028",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "083a7703-e00c-41bd-a662-12a7adb0d68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a6506879-4091-4b36-80cc-b393f79c58ad",
        "cursor": {
          "ref": "57821f63-a56f-4b2f-9267-200372857395",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "504e5ada-500a-4e19-811a-24efcab8d15b"
        },
        "item": {
          "id": "a6506879-4091-4b36-80cc-b393f79c58ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6415d1e1-cff8-4e1a-8090-e774c9aab2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "51d7f90e-ad05-4602-a3ae-ff876c666c26",
        "cursor": {
          "ref": "c9de19e0-e3e0-49a1-9841-4718ca22bf0c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "342f3c76-71c2-4536-ba38-8393a5a63beb"
        },
        "item": {
          "id": "51d7f90e-ad05-4602-a3ae-ff876c666c26",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "28e032b0-545f-4ac1-93ef-f96d7a8bc156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "87b17505-4108-445d-9c54-b4f3c458e7a7",
        "cursor": {
          "ref": "8ca39ac3-9c42-4dfc-842e-c9835e8a5cdf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "08121936-7f1f-4a8c-9317-9a2ae9576363"
        },
        "item": {
          "id": "87b17505-4108-445d-9c54-b4f3c458e7a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fa07b623-7770-411e-9d2f-d9fc13ac81cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65e6364-f70e-42b3-a521-e29ff2053fe3",
        "cursor": {
          "ref": "c2e07f26-ce93-4240-8ed1-3c034f11532d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d5f999c6-3fcf-4165-b65f-b9951251e7f1"
        },
        "item": {
          "id": "c65e6364-f70e-42b3-a521-e29ff2053fe3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a86051ef-b132-4307-a904-c645a15fb37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c744ea40-6d95-4d58-a661-62a007780730",
        "cursor": {
          "ref": "1fb4610f-097d-4d75-a497-6c6f92978d2a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6095a509-e754-4b15-a790-c50f4971b148"
        },
        "item": {
          "id": "c744ea40-6d95-4d58-a661-62a007780730",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b61d00e1-1872-46e4-a324-90c576c97d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9007cab-244f-4e1c-9e45-1ea7bd4528b2",
        "cursor": {
          "ref": "59d31677-6eae-4204-a6f4-94afb6c9014a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bb23e660-6f3d-48fe-bc42-fe140070f097"
        },
        "item": {
          "id": "d9007cab-244f-4e1c-9e45-1ea7bd4528b2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61bf5496-e045-4e02-9263-ab5d126bdfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fb399f-b09e-47c7-8cee-cc0c2621eca0",
        "cursor": {
          "ref": "2b8d50b4-671d-4102-8ad6-02cf76304444",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8252f982-4649-46d5-86ab-2c49e5d0c4bf"
        },
        "item": {
          "id": "c2fb399f-b09e-47c7-8cee-cc0c2621eca0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92c26117-1a1c-4004-a0f8-9d95af9babc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b8580f-9c95-4f7a-b936-117f234013c9",
        "cursor": {
          "ref": "425e454b-742b-4a58-9f3d-13226b5a84dc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "216a2378-3bd3-4ca6-8d29-30004de141a4"
        },
        "item": {
          "id": "87b8580f-9c95-4f7a-b936-117f234013c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4aa1f662-02cf-40a2-96f6-bbdcbfce8c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574c38b3-b639-43db-9613-0642491753d5",
        "cursor": {
          "ref": "e5883500-cf01-439c-9072-5c52bbd4c911",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5c605d97-80b4-4d6d-a776-98439abea5f9"
        },
        "item": {
          "id": "574c38b3-b639-43db-9613-0642491753d5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f0344f4-34ed-48b9-8b32-191e5198c289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b07098-1cee-45fe-a90f-8b7da63cf152",
        "cursor": {
          "ref": "b6c8b857-50c1-4c47-97e6-6354c5d3de16",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e6154836-a0d2-41bc-8147-1f93061d54d1"
        },
        "item": {
          "id": "c8b07098-1cee-45fe-a90f-8b7da63cf152",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2fa4535d-1374-4e94-9f17-2df2d578e46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e8aaaf-8bab-4d13-986b-fba2c4f82fcd",
        "cursor": {
          "ref": "4e7b55fe-cf07-4fd3-b2c2-e5df5ad741ad",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a969dcd7-ea90-4cfe-85ad-0d1b0aaecd8b"
        },
        "item": {
          "id": "89e8aaaf-8bab-4d13-986b-fba2c4f82fcd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b807a516-0b0d-467c-ba4a-cc4dd7330498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af0f466-b44a-43f1-bd78-7a7fe8a2a7a5",
        "cursor": {
          "ref": "e8502bf4-ec06-40b6-a35e-2a9486e53f5b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dab94fa7-d1a1-4a21-90b2-ff0fff05ced2"
        },
        "item": {
          "id": "3af0f466-b44a-43f1-bd78-7a7fe8a2a7a5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1573945e-fc7d-49f0-932e-1304c6c51a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bdb4ea-be4f-47fa-8d1a-ab144609006f",
        "cursor": {
          "ref": "fbf727ef-67d8-4264-ac9f-3f8d7c29d36e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ebfd259f-c39e-4b94-bfd0-2291b4ea347d"
        },
        "item": {
          "id": "24bdb4ea-be4f-47fa-8d1a-ab144609006f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "50a0d57e-42c6-40a8-98bb-a42d995792e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6596ed7d-318d-4cf7-b736-ee9b65f80f26",
        "cursor": {
          "ref": "5764655a-1c66-458c-88a1-f328c7562334",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "60ad3789-7e75-44e0-be10-fa14d602dc1c"
        },
        "item": {
          "id": "6596ed7d-318d-4cf7-b736-ee9b65f80f26",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e10f8b6b-c5a1-4017-808c-556c0ddaab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca766d1-28e6-4fe2-a53a-1fda2242fbbf",
        "cursor": {
          "ref": "57b16bd2-9e54-40b5-bc48-1dea8e1e540f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d182d7c5-ad15-47e5-9f40-d607ab8b3f26"
        },
        "item": {
          "id": "fca766d1-28e6-4fe2-a53a-1fda2242fbbf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6aab4f67-d62d-48b6-b5b2-e057ece8f153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ee083a-6701-43ef-9e86-6c92ef092fbb",
        "cursor": {
          "ref": "a57f1881-19e5-4b23-8db9-734f130beb64",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "40fffc2d-2013-4137-8ca4-649342cb032e"
        },
        "item": {
          "id": "95ee083a-6701-43ef-9e86-6c92ef092fbb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e9307af-a8c5-4999-b79d-828da2a92afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0899e05e-ead5-49e7-ad3e-d4aa8ad41329",
        "cursor": {
          "ref": "72b35eef-9426-4d54-88ae-e09d5902b2f0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ecb911d2-283d-4544-be68-8958382e0802"
        },
        "item": {
          "id": "0899e05e-ead5-49e7-ad3e-d4aa8ad41329",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "09fbf310-0895-4e05-b565-4e4015072cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b7514b-6b39-41bf-981a-4a0c3035f23f",
        "cursor": {
          "ref": "2126835a-9487-43ad-a8bd-c59f426be188",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6464ee1b-d92d-4d79-85a1-9aeda6f42543"
        },
        "item": {
          "id": "d2b7514b-6b39-41bf-981a-4a0c3035f23f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cee41275-2263-4559-aa40-7b97a4d7bc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a4313-9975-4c51-905d-cf1f484fb799",
        "cursor": {
          "ref": "53ea4ae7-f2bb-4584-a83d-dd981bffe83a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ae943996-f8d2-4cee-b91e-d5a9698067ff"
        },
        "item": {
          "id": "de6a4313-9975-4c51-905d-cf1f484fb799",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e1a289c-8447-462e-9548-6d3979e9e405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99669c5-1761-4c08-8998-90d6023be20e",
        "cursor": {
          "ref": "c203436c-5636-4408-ab18-42a6c20d9ab4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "452406b7-cbdc-424b-98fd-c0b606b7304d"
        },
        "item": {
          "id": "c99669c5-1761-4c08-8998-90d6023be20e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d0f5ad4-d6e9-418b-82c3-952620ce7b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ca139a-8074-468e-aee5-bf33fb1693fc",
        "cursor": {
          "ref": "9aa54e04-4153-41d1-9681-9b83e7307c01",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5779a357-e90c-4616-bcab-c2f878e16fa6"
        },
        "item": {
          "id": "29ca139a-8074-468e-aee5-bf33fb1693fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8bd9d3ed-ec1f-4bd9-a86d-768db30c1336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b23d42-3acf-430a-a9d9-5bb35e34711f",
        "cursor": {
          "ref": "239c7348-a33e-4493-81d5-6997135dcad0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a766f3bc-2488-4014-90a4-0495af35b240"
        },
        "item": {
          "id": "a4b23d42-3acf-430a-a9d9-5bb35e34711f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a3bb588c-7549-44ab-bf14-58f163e7acc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64d9cb5-63cb-4e7c-bfc0-b4fb6561d7f7",
        "cursor": {
          "ref": "0756b58f-40c3-454e-a2c1-fd6059274c21",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9053c747-0aaa-43ed-a79f-2737a5f0e239"
        },
        "item": {
          "id": "d64d9cb5-63cb-4e7c-bfc0-b4fb6561d7f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8aed6318-2a4d-4185-8370-47c0ffd6d606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d3305-b8fa-435a-ad3e-e1b9fe4f6e9c",
        "cursor": {
          "ref": "b9af9528-1c34-45e5-851f-2099c1ad6225",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7805eec9-5fa6-44c7-a570-47e4d4b3a575"
        },
        "item": {
          "id": "030d3305-b8fa-435a-ad3e-e1b9fe4f6e9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0af9b3f3-fac4-4c97-af5a-1bf394d32158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a76f7-3e76-4706-8437-aba0131f9e39",
        "cursor": {
          "ref": "1328129d-fe8b-47b2-aa87-e65095deff3c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80ac7a05-854b-4276-9601-2e4915f95de6"
        },
        "item": {
          "id": "988a76f7-3e76-4706-8437-aba0131f9e39",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "594271ba-0e87-480e-98a4-a59cfae45bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7314acd-317d-4c8f-8be6-2ee5b48a394e",
        "cursor": {
          "ref": "648a932c-37b9-4f5a-b2d1-f249a81198a8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "90914549-5dfe-44ea-9b5d-20462977df20"
        },
        "item": {
          "id": "f7314acd-317d-4c8f-8be6-2ee5b48a394e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7b6751f1-6587-4470-a565-b13baf652a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0f8274-e2f4-4d66-91cd-bcd4ce95fe6b",
        "cursor": {
          "ref": "ece0d179-75ff-4103-a45b-8dbc39d56cc9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "18f0c206-6a6b-4a5e-9ea8-0ecb85cb2822"
        },
        "item": {
          "id": "3a0f8274-e2f4-4d66-91cd-bcd4ce95fe6b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "90765796-08e4-40eb-bcb3-c04ea48f28b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa134a7e-7d7a-4811-8a33-4eddcd8ea102",
        "cursor": {
          "ref": "9b8cb02b-7964-42c7-8ef4-10c6bebe40f2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de2db607-b9dc-4c8f-925d-e59f512e4454"
        },
        "item": {
          "id": "aa134a7e-7d7a-4811-8a33-4eddcd8ea102",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6550207-cfac-4141-ac9b-ad4a9a2f08e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f913900c-c2cb-4d84-b343-12126e201f59",
        "cursor": {
          "ref": "b7aa95bc-375d-4885-ae33-1702397d3aab",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8043198c-81ea-4e78-b305-76dcd429ff65"
        },
        "item": {
          "id": "f913900c-c2cb-4d84-b343-12126e201f59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "363e1342-01eb-489a-8e3b-a7daa1d74276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ea6a7c-4d14-47c0-ad87-a179d4a2e72b",
        "cursor": {
          "ref": "b8a8e722-ce4c-4956-990c-cfc6a32338e8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "90467866-bf09-488e-aeaa-fef9c67e4985"
        },
        "item": {
          "id": "96ea6a7c-4d14-47c0-ad87-a179d4a2e72b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79b4e3f5-11a1-44f5-8622-cb7a61aa8cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8feb819e-775d-4246-b23a-f1bab251b384",
        "cursor": {
          "ref": "e5cb5114-abf8-43e7-a017-b0dc4dbe25b4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "145ae1c1-ac5f-476b-bf7e-d25122f05041"
        },
        "item": {
          "id": "8feb819e-775d-4246-b23a-f1bab251b384",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5e7bea2-2291-4caa-bdcc-3b7e0d1fe23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd66f176-a491-4729-ac8a-fc7e6fd256e6",
        "cursor": {
          "ref": "9d8098e8-2296-4cdf-91bf-048db8fe264b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ed2210fe-5eb7-4c4f-9ebc-f9a3b18e34f9"
        },
        "item": {
          "id": "cd66f176-a491-4729-ac8a-fc7e6fd256e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c921e37-15e4-4109-be24-adf0df7ca9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37c1900-0faf-466f-8e4f-8324a673feba",
        "cursor": {
          "ref": "1d97a360-9a9f-4472-8356-73ddd6e70945",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80a13f5d-0d5c-42f8-b548-727ce3bc8ed7"
        },
        "item": {
          "id": "d37c1900-0faf-466f-8e4f-8324a673feba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d5476b2-4362-42d7-9bfe-f1af9b6633a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdc7734-67df-4abd-9ddd-926693f0bd1b",
        "cursor": {
          "ref": "b6d1e9ef-d074-4b22-a88a-bd64a165446f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3ebc36df-5904-4afb-aa2b-354a2cd2f055"
        },
        "item": {
          "id": "3fdc7734-67df-4abd-9ddd-926693f0bd1b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "86e255a0-0cae-49a2-8b7d-e4d61d484819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1fc20d-4ccf-44f9-9efe-b7a88d8e5b98",
        "cursor": {
          "ref": "05a5e9af-7013-4497-8bad-004eb41ec240",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54d98a18-bcca-4713-b4a9-b6e5c021dff7"
        },
        "item": {
          "id": "3f1fc20d-4ccf-44f9-9efe-b7a88d8e5b98",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c70f8e7d-ea4f-4f3e-abe6-27e5d8774107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af80ec6-3f12-4c81-bdce-e92f9358d368",
        "cursor": {
          "ref": "5c78a231-cd13-4c36-8d95-436855ebd215",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3bb4a331-61bc-4367-90ff-ec570938b238"
        },
        "item": {
          "id": "4af80ec6-3f12-4c81-bdce-e92f9358d368",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9cd79ea5-ed62-4e0f-be20-ceeb8ab7892f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6edf6b3-bfbc-405a-bc34-efeb415ce966",
        "cursor": {
          "ref": "f0e9760e-62f8-4bed-9f07-174022cb36be",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "441e7109-4e98-48db-b9ed-4da9a008c76b"
        },
        "item": {
          "id": "d6edf6b3-bfbc-405a-bc34-efeb415ce966",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "454f6526-1572-4b91-9672-a3a9b06c34bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441d9ee8-22b4-4a8d-9360-bd2746ee9760",
        "cursor": {
          "ref": "38bd7fb2-ae68-4509-b5a9-cf7db24858f0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d59d6946-dfb6-4cb8-999e-c5e07d3edd4f"
        },
        "item": {
          "id": "441d9ee8-22b4-4a8d-9360-bd2746ee9760",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "81f24024-51ea-498c-959a-77170c3ef215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef6442-3b83-48e3-abbf-a76cbfcbcb3e",
        "cursor": {
          "ref": "6aeb2c47-28c9-4eae-a9b4-615939118935",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67f3f33c-53ad-4d76-828b-a6f0537b8e4c"
        },
        "item": {
          "id": "37ef6442-3b83-48e3-abbf-a76cbfcbcb3e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d80019fc-6bc5-467c-8e9b-b5c560b90804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1b38f4-74f2-444a-b9c4-f5c66645d454",
        "cursor": {
          "ref": "b503a293-3a53-47a1-9172-68c5624a54cb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ebe950c8-a811-40d5-88b8-f7077d7da674"
        },
        "item": {
          "id": "2d1b38f4-74f2-444a-b9c4-f5c66645d454",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "106912d0-2980-4c96-941e-0e2d909b9625",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4c8390-77c4-48e1-b049-5986940cc313",
        "cursor": {
          "ref": "5782afc2-0924-4d44-9327-51192a4b6cbb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6950d117-2b2c-43b0-96d4-c3043910e30d"
        },
        "item": {
          "id": "3f4c8390-77c4-48e1-b049-5986940cc313",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "53ce4f10-5775-4027-baf7-5e330464c076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20baefa4-3f05-4f07-9449-e9669a1cff01",
        "cursor": {
          "ref": "2558c551-c58c-4a0b-a32c-5323859b69f7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aa9feab0-6652-4886-aab2-d8e423924565"
        },
        "item": {
          "id": "20baefa4-3f05-4f07-9449-e9669a1cff01",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9a36ebfc-1b21-4eb5-a02f-664f4a56847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d44eb6-a8d1-4a79-b081-cc492a04f10b",
        "cursor": {
          "ref": "051c84b5-37cf-4480-a150-01529f39b1cb",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1841b43b-e502-4f94-a487-9f558b964a91"
        },
        "item": {
          "id": "16d44eb6-a8d1-4a79-b081-cc492a04f10b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cea53d11-7d22-4a84-a58e-bbeac44cff09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af232d3e-7db2-4659-a526-ae29a23dcc8a",
        "cursor": {
          "ref": "1d5e9386-160b-436f-a6e1-cd5340cff7a9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8afbfc8a-5a82-4798-a04f-408902963f38"
        },
        "item": {
          "id": "af232d3e-7db2-4659-a526-ae29a23dcc8a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "85d2ed3a-4747-4227-8dd9-9c8b7e45b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ad28ac-3149-4516-8dcf-c7bfa93e4114",
        "cursor": {
          "ref": "c44211a9-ed7d-4806-993a-3c627c026ca8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e0c5d3a8-6a00-40fe-9e83-8766fcc68ebd"
        },
        "item": {
          "id": "d6ad28ac-3149-4516-8dcf-c7bfa93e4114",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87b09880-6d3d-494f-ac26-d9bc71c62826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee933a-be65-44f3-a41d-98ad942f2388",
        "cursor": {
          "ref": "d552020f-e44a-40a7-a5a2-8a5830d0cdab",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4babde2d-e5a8-49fa-bebe-4c9e60f27fb5"
        },
        "item": {
          "id": "e3ee933a-be65-44f3-a41d-98ad942f2388",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbf57306-b957-4ba5-96e4-fc023bab197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d35774-c004-41f0-a3c8-8febd07c0969",
        "cursor": {
          "ref": "a7e71083-ddcf-409a-9442-49dccad682e1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a6a36d7-96c6-463a-8a2a-4d6e37a7a7ea"
        },
        "item": {
          "id": "d1d35774-c004-41f0-a3c8-8febd07c0969",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0370e28b-0bb0-4999-8c33-06c6a64485d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c8c35d-ab4d-4faf-9bdb-025c360c44e4",
        "cursor": {
          "ref": "0ad87943-e713-4434-a5d8-32acd0e8990b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "953f8213-51ec-4464-88c8-12d281b9aa3e"
        },
        "item": {
          "id": "74c8c35d-ab4d-4faf-9bdb-025c360c44e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f4057dd4-c0d8-4860-8115-f1cc36d07e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dabb82-181d-40f8-9b68-6628bbe50802",
        "cursor": {
          "ref": "2c99ea96-c578-4684-895a-0dcc230a73a8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "83ca3393-102d-4281-8969-f580602441f5"
        },
        "item": {
          "id": "d5dabb82-181d-40f8-9b68-6628bbe50802",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "efe4d01d-22dc-4c4c-a13d-dc97c205b6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0196a78d-a174-486c-abdc-ea1b2908b490",
        "cursor": {
          "ref": "292e218a-e93c-411d-a75a-d71d71e8a025",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "158707fe-206f-4db4-a593-27e0809fb6fd"
        },
        "item": {
          "id": "0196a78d-a174-486c-abdc-ea1b2908b490",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f27551e2-964d-404f-b74b-fc9f07122277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec1cf38-fdd2-421c-b969-5a8d1fffc617",
        "cursor": {
          "ref": "e5fb10ad-fca6-426d-8954-630ea51a5981",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "56aa564b-4414-421f-a2ec-9a78e74aecc7"
        },
        "item": {
          "id": "9ec1cf38-fdd2-421c-b969-5a8d1fffc617",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3aad8489-ab2c-4d95-bb1d-99dff61eba46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376338ac-444f-46c7-a3ae-6bd726818fcc",
        "cursor": {
          "ref": "e16707f6-d098-48d5-9f64-6a40e508e3f3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a8accbb1-9c93-4398-baab-524942a9a440"
        },
        "item": {
          "id": "376338ac-444f-46c7-a3ae-6bd726818fcc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "078d641f-22fd-4888-a982-eb0a2309ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ec66f5-4f11-4c27-bc5e-5b02da94cedd",
        "cursor": {
          "ref": "db776efd-5d84-402b-b7d5-544bc23906f9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "204aa020-8f29-475d-8fca-023f6a0d92df"
        },
        "item": {
          "id": "e7ec66f5-4f11-4c27-bc5e-5b02da94cedd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d2e03da4-1612-45ee-ba2f-c16722698483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca09983-bd59-4073-a6e8-9886f5b2f82b",
        "cursor": {
          "ref": "d2bb4d18-655c-436b-9341-75ebce1c6e65",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2325f7f1-4b00-4c31-8e78-2e516851e98f"
        },
        "item": {
          "id": "7ca09983-bd59-4073-a6e8-9886f5b2f82b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "25556ebe-8991-4b18-b102-3518b73a6d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a856f-d367-4259-97ab-5890992ba515",
        "cursor": {
          "ref": "6f0d405e-e9d0-48c2-a341-4c3ce5db6f08",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ebb8b029-84d9-4f5a-8422-ef3308d2d196"
        },
        "item": {
          "id": "ba7a856f-d367-4259-97ab-5890992ba515",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cc34e213-7cb5-4b71-a06a-ea1e2182be83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac40b09-07ea-49e7-8172-7656087e6e76",
        "cursor": {
          "ref": "4db7255d-6fcd-4918-b8b2-fab6943ea041",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "811da3fc-ee54-4a09-af90-2fe68137c4a1"
        },
        "item": {
          "id": "9ac40b09-07ea-49e7-8172-7656087e6e76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b868a0c9-8a22-47f1-8a95-20511ed3e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f884639-c873-4454-a440-0accd3e5b5ad",
        "cursor": {
          "ref": "7e5ca09a-5cb1-40ca-9133-5c58e6ee090e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0d45e5e8-b417-495c-bfc9-cae45dedfd39"
        },
        "item": {
          "id": "4f884639-c873-4454-a440-0accd3e5b5ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d9b2146b-c655-4bda-b69e-2a8f0e39b7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56757552-cf5b-45bf-afdc-7384cb78a284",
        "cursor": {
          "ref": "efdccf6c-1fb8-49a0-85bb-71caded65c3f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bbbb8d89-3c52-4569-b6a6-06623d475d5f"
        },
        "item": {
          "id": "56757552-cf5b-45bf-afdc-7384cb78a284",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f66ae63e-3fa2-4430-b40b-7183209343c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a34f7-bf12-406e-9391-fd839342cd7b",
        "cursor": {
          "ref": "cb12aa6a-8bc4-494c-95ba-a718850dcd89",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fab7b249-64e0-420e-a401-dce1981b0fc0"
        },
        "item": {
          "id": "f67a34f7-bf12-406e-9391-fd839342cd7b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a2ced4a-f542-43c7-b463-0f7ddc4bfd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17bf40f-770c-40e0-9a79-e96518aa2a93",
        "cursor": {
          "ref": "3cc0adc1-465b-4eea-b3ac-6fd81d601476",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "13fc337c-82bb-461c-91e2-e48f5f3ecee2"
        },
        "item": {
          "id": "b17bf40f-770c-40e0-9a79-e96518aa2a93",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "06c9cee0-f123-4ce5-a6ce-0e21742f398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea5dc39-d93c-4f5a-bca3-9da9ddbe937a",
        "cursor": {
          "ref": "e2c0ec25-1cfa-4c23-a4cd-1f33f0d7b57f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "50c5d116-cf88-4d1e-9919-3f8e10a219fd"
        },
        "item": {
          "id": "4ea5dc39-d93c-4f5a-bca3-9da9ddbe937a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5066bc0-ff1e-4ee4-b8d8-3b872b6396d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5da6e7-ba60-4eb5-afbd-d50c4c693715",
        "cursor": {
          "ref": "edd16acf-82c6-4f6f-a745-aaf82a26954f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5e5cd7d4-c847-465a-8008-d6a612ed1d2e"
        },
        "item": {
          "id": "dd5da6e7-ba60-4eb5-afbd-d50c4c693715",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cf5bda43-698f-403f-a21d-e65ddf8e308a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b972807-adc9-4609-b1bf-8d5c32436e62",
        "cursor": {
          "ref": "3c87470f-ec14-4a5f-9d22-e976063c1c60",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1a413aa-e7a4-442c-af21-e3b8d5e0546d"
        },
        "item": {
          "id": "9b972807-adc9-4609-b1bf-8d5c32436e62",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7919bea8-a138-4c4f-b2d4-1ffb58558df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8397c5-39d4-4aec-8000-49721ce2befb",
        "cursor": {
          "ref": "a989dd05-dc44-4c4a-9aa3-3c55a06e5a6d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c0e534c-b053-4705-92db-a8158a501382"
        },
        "item": {
          "id": "fc8397c5-39d4-4aec-8000-49721ce2befb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54197564-2768-48f2-9321-d93bb2866809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177585c-7090-4d64-9adc-f0f5cab1b182",
        "cursor": {
          "ref": "afc093f8-f415-466b-8b75-0adef5f91310",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e62038c3-aa13-4721-9c96-afbe52bf345e"
        },
        "item": {
          "id": "4177585c-7090-4d64-9adc-f0f5cab1b182",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aafc44eb-477b-41c6-b336-1a2ff3ce8688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392d7ed9-4416-4d74-8d58-716f6db60a11",
        "cursor": {
          "ref": "bcb49df2-c6fc-4740-ac1b-4c6c17340f86",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e4166bdf-2806-41b6-a10c-cd68cf7e93bc"
        },
        "item": {
          "id": "392d7ed9-4416-4d74-8d58-716f6db60a11",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "83b32bc2-ebce-4ee9-a6dd-ee6034dc303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7ee0f9-b19c-4ce9-b977-ec9a97c796b5",
        "cursor": {
          "ref": "cc1e70d5-3e98-4052-97d3-dfc14efc8312",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ac47b9e1-76e0-4245-b34f-c7deecbca971"
        },
        "item": {
          "id": "1e7ee0f9-b19c-4ce9-b977-ec9a97c796b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef18000f-991d-41af-a7cb-eb7ac398ec82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45799e9-d03f-45e9-a03d-9943ad1f4119",
        "cursor": {
          "ref": "f30655bb-a95f-47ce-91f7-d4c08f0a9ff7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "928f8481-35f2-423e-92f8-dee2affec129"
        },
        "item": {
          "id": "f45799e9-d03f-45e9-a03d-9943ad1f4119",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "282b9696-2bfc-4ca0-8fbe-9e5c839b5bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef4ee8-4bcc-4bbc-bbe1-86bcf07e92b8",
        "cursor": {
          "ref": "b3259098-dc4a-46d7-b71f-504d7bcb0d27",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4d4e6d66-f6f9-4c52-b47e-9003809cfb20"
        },
        "item": {
          "id": "feef4ee8-4bcc-4bbc-bbe1-86bcf07e92b8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "960a53ca-1023-4eb1-b8ec-de39e0274ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c88f070-4112-4329-9064-6acffe6d3945",
        "cursor": {
          "ref": "cfab5b54-d0dd-4dd6-8a69-a38448128ec4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a508821-7b8e-4a1e-a1dd-de2799ec3b86"
        },
        "item": {
          "id": "1c88f070-4112-4329-9064-6acffe6d3945",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "581fdd4c-822f-4aad-b1d3-d26714802f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2b88be-aa0e-4a82-a6f3-70bd42ce1c44",
        "cursor": {
          "ref": "f2f66bef-6b2b-4dda-b06c-1823f84b7a1e",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2f918b4d-99d1-41f0-ac49-22e37c9da2f4"
        },
        "item": {
          "id": "0a2b88be-aa0e-4a82-a6f3-70bd42ce1c44",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "557c2db0-e945-4124-a7f6-afe664c43a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d9434-6ece-4e54-997a-9e41f1eed71e",
        "cursor": {
          "ref": "2a3d7988-15e0-4e7d-bf01-9116daad18e6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ea30a8b6-a63f-4843-b831-92f952ce3037"
        },
        "item": {
          "id": "7a4d9434-6ece-4e54-997a-9e41f1eed71e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e4dae081-e2c5-415f-9917-6d5778bb2fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a685c1-e216-438f-9b2b-0818ac42f54d",
        "cursor": {
          "ref": "c41cb4f1-4d3f-444a-bf84-35fabefdb67d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ef9cd149-2873-4d6b-8065-dcdc9b09b707"
        },
        "item": {
          "id": "93a685c1-e216-438f-9b2b-0818ac42f54d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "624c9401-ee83-44ff-94c8-93bc6a2fff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f154a5a-3982-4f1b-8eae-998398c3a168",
        "cursor": {
          "ref": "ad5f7594-67d2-4c1e-9b05-21235c87b8bf",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9373be6f-bda2-4996-bd62-d6bc06f62fb0"
        },
        "item": {
          "id": "3f154a5a-3982-4f1b-8eae-998398c3a168",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fd03546c-3a7f-471f-b7ba-6e526e444222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2258e086-8611-4a37-bc06-ae5ffc85b2b8",
        "cursor": {
          "ref": "fdd72601-4066-46ef-a7cf-ca0d8c0f2ec6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "881cc525-3ed6-4516-9dcc-b50d3bb24eb9"
        },
        "item": {
          "id": "2258e086-8611-4a37-bc06-ae5ffc85b2b8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "45129b2d-c0d5-4329-9e7a-83124c2c9576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566fa42f-ddc8-4248-a1da-706e39f9d5f6",
        "cursor": {
          "ref": "82344ed4-6e91-4ca1-baa7-5dfd6137a455",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2488c137-cbd1-48bf-ac93-bbce0e2e1576"
        },
        "item": {
          "id": "566fa42f-ddc8-4248-a1da-706e39f9d5f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ae9fe919-89d3-48ba-9b11-6099950e53df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846e358-e80c-455c-ac07-98caf7607d36",
        "cursor": {
          "ref": "9dfe2eb3-ef22-4065-9f30-c08828c9d17d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6d5826ff-d3bf-46de-b20c-4f1bcdd4f589"
        },
        "item": {
          "id": "7846e358-e80c-455c-ac07-98caf7607d36",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "97519ebc-c12d-4cd1-b549-cc3d522cc405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e12e85-5cc7-4120-a52e-97a5ecf394f3",
        "cursor": {
          "ref": "14d29cbb-4a77-42ba-9cb7-ef250427a241",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "46ce47c3-7734-4ea6-96a5-4189d78ad4b2"
        },
        "item": {
          "id": "35e12e85-5cc7-4120-a52e-97a5ecf394f3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7e9f4c3f-2bcd-4e10-bea7-239998738864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de173112-cfb5-48db-95e9-5ca17f7feedc",
        "cursor": {
          "ref": "633662ac-d296-4740-9ecc-9817276c4b78",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "50be3da1-aa2a-4b77-b508-90b1a012d530"
        },
        "item": {
          "id": "de173112-cfb5-48db-95e9-5ca17f7feedc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "792aef57-67fa-4f49-b95c-47b4eaf7fddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f442773-e2a1-4a13-b51c-8b6960d7d111",
        "cursor": {
          "ref": "c109d07f-3d88-448e-998c-c6a8822a6014",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b54219c2-0560-4e70-8025-99ded368c92d"
        },
        "item": {
          "id": "7f442773-e2a1-4a13-b51c-8b6960d7d111",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a7567daf-752d-481a-9296-2d7112e3a8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af257d9e-1182-49b2-a909-217791c04ecc",
        "cursor": {
          "ref": "53b2aa8e-c8df-4b1a-939e-105c93d4d3e2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "46aeefd7-cde2-4480-b249-735f04b5a4d0"
        },
        "item": {
          "id": "af257d9e-1182-49b2-a909-217791c04ecc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "72b96230-9deb-42e5-b133-61212593ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7e6e6a-2505-4523-8152-ff7f074085a0",
        "cursor": {
          "ref": "23936765-09cc-467d-beb8-d223380cd79f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d06ac635-aa0d-4ddf-b654-18d86b2ccd1c"
        },
        "item": {
          "id": "9e7e6e6a-2505-4523-8152-ff7f074085a0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "98452bbb-4b4c-438a-8078-2c7240fe75e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23fc27e-b46a-48b6-9300-6cebfec9b90c",
        "cursor": {
          "ref": "1c7d4784-ec08-4e10-9443-e422413ed5de",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "002d8cad-4bdf-4c45-a7fd-c39222b33cf8"
        },
        "item": {
          "id": "a23fc27e-b46a-48b6-9300-6cebfec9b90c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4ead680f-fa19-4282-acf5-7f77a5397360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca88a39a-b206-48ad-9716-86fb9d14f251",
        "cursor": {
          "ref": "d9990a64-fa42-4710-b88e-61cd6cb0c3ae",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "804365d4-03f3-422f-ab30-2ee396f22825"
        },
        "item": {
          "id": "ca88a39a-b206-48ad-9716-86fb9d14f251",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1f9349ed-7276-4dfc-82b8-61edebc15360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2a9162-ab2b-4dc0-afb4-05811fa0bdc5",
        "cursor": {
          "ref": "8002b683-b23c-47aa-8c07-b0b69afccd0f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a791a778-0789-4a55-957e-59bd3099693b"
        },
        "item": {
          "id": "8a2a9162-ab2b-4dc0-afb4-05811fa0bdc5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "44ea158e-9bcc-47e4-aa35-e6f8d8807d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43470fa4-5e67-4b1b-b7f4-ceb15ebe9656",
        "cursor": {
          "ref": "e6d33270-1f83-4363-9380-6530ae4d4941",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1264acbe-e3c9-4dfc-a51b-cec3e76022c1"
        },
        "item": {
          "id": "43470fa4-5e67-4b1b-b7f4-ceb15ebe9656",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ae373b67-57f2-4335-a1b4-d93b5a360f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea617a46-84a6-4281-88ba-df7bb022a5c4",
        "cursor": {
          "ref": "513770ea-0e39-4e60-84f1-54486cdeb9ce",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c2109f6-23dc-4bec-837c-787198616250"
        },
        "item": {
          "id": "ea617a46-84a6-4281-88ba-df7bb022a5c4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c3f8b6da-a210-4d8e-b062-3473b454598e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63b18d-5ab3-472b-bb8a-b7550b651f17",
        "cursor": {
          "ref": "a0fbe19b-5364-40b3-a6c6-80368b33a96f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df523f79-1579-4d27-8b65-ca1088f5bc70"
        },
        "item": {
          "id": "9f63b18d-5ab3-472b-bb8a-b7550b651f17",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d2db211e-9364-4f87-8fcd-24c3b2a1f9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdc0cfb-8237-49bf-b218-7e0615972713",
        "cursor": {
          "ref": "cba7df23-31b4-4408-be4d-d2fbc8c1dc34",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "37a2b0fe-38c6-48c7-9970-245b1af53c6e"
        },
        "item": {
          "id": "afdc0cfb-8237-49bf-b218-7e0615972713",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2fedb897-579f-41f6-a1dd-255505271d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6918cc05-1b09-4399-9e6b-2e75f77e3578",
        "cursor": {
          "ref": "e455a896-b2a0-4d34-9b65-6945d1faf154",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5993f213-8c06-4b5f-bb0f-e4619f0ced5d"
        },
        "item": {
          "id": "6918cc05-1b09-4399-9e6b-2e75f77e3578",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1dc1f5f3-197b-4544-89f7-974aa25c7c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f52a78b-d0e5-484b-b4e4-112a9814bb08",
        "cursor": {
          "ref": "bf15ef2a-9d86-40f5-88b7-34b7e6f340b3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cef51803-7c48-4d67-bb52-3d1fd59d1333"
        },
        "item": {
          "id": "9f52a78b-d0e5-484b-b4e4-112a9814bb08",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bb660478-0819-4011-94ef-a18a4d177a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ef43c0-b312-489e-bdd7-f1e2fc9315fe",
        "cursor": {
          "ref": "3fc07660-eff5-431c-b4dc-c5b401b48bdd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c96cfede-3fe0-48ea-9cd5-e5cf66d529c9"
        },
        "item": {
          "id": "f4ef43c0-b312-489e-bdd7-f1e2fc9315fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3c6b3c9a-246f-4721-85dc-6160b4303a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79ca1d8-00ca-48e2-b70e-bc2bcd6cee8b",
        "cursor": {
          "ref": "ce9516e0-05e0-4e8b-ba7d-6ea5304f96b5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a814d121-8e6f-4994-8b82-441fad478ffd"
        },
        "item": {
          "id": "d79ca1d8-00ca-48e2-b70e-bc2bcd6cee8b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0beafd5d-ec0e-4f0f-bd8f-4be7b96be494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f5f781-0e27-4da9-b184-a2f5917b0216",
        "cursor": {
          "ref": "c0f7db86-b157-4691-a4b6-2627cbaaad1f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "20284258-2048-4d52-afd6-8fef0e1cd3f8"
        },
        "item": {
          "id": "e1f5f781-0e27-4da9-b184-a2f5917b0216",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "535cf18d-b119-436a-adaa-4c1ec653d173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3716c99c-1c9f-46ad-9b6c-3e1ddb7f29e9",
        "cursor": {
          "ref": "936ecbf0-43e5-447f-b069-8507a4a178ce",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1940b61a-f110-40a2-9665-d7742df580c4"
        },
        "item": {
          "id": "3716c99c-1c9f-46ad-9b6c-3e1ddb7f29e9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f119e6d-9140-4623-bc6b-d158ded51cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f8637-f457-48dc-ac16-4f3a7884d74b",
        "cursor": {
          "ref": "ce29d160-25d8-42fa-be6d-d69e06d4a0f6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "85094194-59d3-4bdb-949d-dc64f179f658"
        },
        "item": {
          "id": "778f8637-f457-48dc-ac16-4f3a7884d74b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "238e3157-08c2-4c05-9dd5-e503dd920fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42854130-8cf4-4e26-a64a-dd648a4d36d5",
        "cursor": {
          "ref": "9005d2dd-7530-4e83-958b-801de6c7ca5f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "177b857f-6f48-4232-b172-d335b2dbe01a"
        },
        "item": {
          "id": "42854130-8cf4-4e26-a64a-dd648a4d36d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f89bacf0-54df-4b61-a487-187163883b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3b79c0-44d3-497a-96f3-8be2abad7baa",
        "cursor": {
          "ref": "1ae707f3-5805-425e-9644-3db1969a4bec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a23cf0cf-94d5-4c4a-861a-0ca4a6467302"
        },
        "item": {
          "id": "0f3b79c0-44d3-497a-96f3-8be2abad7baa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9827a7c2-183f-464d-9518-68af453cd217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91ded86-946a-4bb8-b586-0fdb83536c97",
        "cursor": {
          "ref": "02d3ea30-4994-4dc1-89cc-a2450563eaab",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "19e434da-af67-460a-a231-5d82f2c49570"
        },
        "item": {
          "id": "b91ded86-946a-4bb8-b586-0fdb83536c97",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6834a6f-2e9f-47cb-924a-d38a39dfd283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb14ca-b12d-41f5-89fd-c9727826c4ae",
        "cursor": {
          "ref": "01bc356a-2b83-465c-af6b-3705fae229d6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46f8adde-9014-486c-a313-9f26a8829e8b"
        },
        "item": {
          "id": "f2bb14ca-b12d-41f5-89fd-c9727826c4ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4193c6ed-411c-4b07-bf06-ed538587e9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b284aa-0d34-4eaf-84bd-7e4ee0483516",
        "cursor": {
          "ref": "81b5f90c-a970-45ac-83c5-ccbfe06b05f0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2727e724-6e73-4ce2-add1-daecc47d6a4b"
        },
        "item": {
          "id": "c2b284aa-0d34-4eaf-84bd-7e4ee0483516",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7535c354-d9ef-43d1-93a6-ccc294804a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5319be8-c3f2-4180-84ef-75933bd5b3b7",
        "cursor": {
          "ref": "9a83fbdb-8aab-4da5-a0ac-23c90d30044a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "edec144a-787a-46ba-a9cf-b810d76097be"
        },
        "item": {
          "id": "f5319be8-c3f2-4180-84ef-75933bd5b3b7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e0ed13ab-615c-4f10-9aab-c1ca54478c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abeb81d-6877-459f-9181-62dcf1243f77",
        "cursor": {
          "ref": "746291ee-2a13-40c2-941c-4240fbccd729",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "559597fc-4bd3-4f73-88a8-f2192159d782"
        },
        "item": {
          "id": "9abeb81d-6877-459f-9181-62dcf1243f77",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4e15a294-55f8-4dcb-982b-9213600b89c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05824248-ff66-41aa-b542-073780278c90",
        "cursor": {
          "ref": "11edb16e-1483-487f-b9a3-8f62eac673d1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c3da8581-baa7-43f2-8393-a5f7c843f086"
        },
        "item": {
          "id": "05824248-ff66-41aa-b542-073780278c90",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a3f38472-8f9e-4f11-a0d1-80f36e8fa724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cce5bf-8e5c-418a-a401-2b69b32b1956",
        "cursor": {
          "ref": "3f20ce43-eaf3-436c-94dd-ddc500156885",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "78db32a5-f2bd-42d3-a242-f92b12540d68"
        },
        "item": {
          "id": "00cce5bf-8e5c-418a-a401-2b69b32b1956",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4f3e8ddb-cc53-4093-8c70-b193fa811a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1038041-229f-4415-a4df-7e044f3fa91a",
        "cursor": {
          "ref": "6f6f7d20-81f2-4f02-843a-fadee2035aff",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "64f5548e-5a1e-47d5-baf2-111fd4b705fa"
        },
        "item": {
          "id": "d1038041-229f-4415-a4df-7e044f3fa91a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a37e9126-e4d6-4ef4-9fe1-de270f1f9386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f76b78-2cb1-42f0-ab7b-308a003babb3",
        "cursor": {
          "ref": "c9a787d4-e7a5-41c1-b85b-e3aa549b7855",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9c98c34c-cbe4-45b5-970b-c58ffdb08bf0"
        },
        "item": {
          "id": "42f76b78-2cb1-42f0-ab7b-308a003babb3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c6738bd3-4199-4e6e-ad32-e9b37350a835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1ccd29-02fc-4a46-a457-d81ae3cb4dd4",
        "cursor": {
          "ref": "e4d1fe4a-0c13-42da-a925-84b5b743fc94",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ed4f4c76-aceb-488f-a2aa-68aa1cc32201"
        },
        "item": {
          "id": "ba1ccd29-02fc-4a46-a457-d81ae3cb4dd4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9af527c5-ad49-4b66-be33-eca913537347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c837c6-c9fb-4c37-b769-500c999a3ed3",
        "cursor": {
          "ref": "4f11a907-896d-4d32-9df8-f7a0ba2d2a11",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0667f970-6fea-4239-b094-5c65bd629832"
        },
        "item": {
          "id": "01c837c6-c9fb-4c37-b769-500c999a3ed3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7040c9c1-4b34-43d8-85fe-1be870160c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8d4a89-799b-43e6-a488-0d4a0a6414ea",
        "cursor": {
          "ref": "eb6e95c5-faf2-433b-bb69-0073be86a921",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dc04f682-1b9a-4528-8c1e-5776552f322a"
        },
        "item": {
          "id": "0b8d4a89-799b-43e6-a488-0d4a0a6414ea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b6a22c33-22c0-476d-98b1-85f43be19c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778e1f8-998e-466d-a00b-44d4c1288f46",
        "cursor": {
          "ref": "86346800-e167-4af2-a33d-60a764d63c7b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "16705363-7daf-44dc-a029-01ee24acd8e8"
        },
        "item": {
          "id": "6778e1f8-998e-466d-a00b-44d4c1288f46",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9511e695-a5e2-4d69-843b-eb5c6491f0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f1ade-79b9-497b-9fe2-6a0ef4c54a5c",
        "cursor": {
          "ref": "9aa04cba-4746-451b-8970-5064cf128900",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "117bddbf-542c-4ace-81e9-f4ff5e713ebe"
        },
        "item": {
          "id": "c03f1ade-79b9-497b-9fe2-6a0ef4c54a5c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06b8a2c0-9a4f-47b6-b046-a4bf03f97bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f8d3d3-1ec9-4274-963c-b16bfb80a79e",
        "cursor": {
          "ref": "a08b85dc-ed5f-41ae-bd6e-5184e576c571",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "57746a15-d0e9-46fa-bc79-64c53dae560e"
        },
        "item": {
          "id": "67f8d3d3-1ec9-4274-963c-b16bfb80a79e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "653ab046-4cae-4804-b7be-deb4f828cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1f412e-f6ab-4ec7-a569-597db91d5f60",
        "cursor": {
          "ref": "e873a08c-a5e2-44c0-adee-c765f585714a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b5ff7dd2-9942-4c6d-846b-0da439179b70"
        },
        "item": {
          "id": "9d1f412e-f6ab-4ec7-a569-597db91d5f60",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "382bd481-47e5-45b2-b2c0-78d01bb9bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa60223-2fee-485a-a3fd-d6508988bb79",
        "cursor": {
          "ref": "4c429d7a-cff8-4081-93b2-f15f082fa381",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9be856f-b0e1-48c0-8aa2-2ad0b12a1edf"
        },
        "item": {
          "id": "8aa60223-2fee-485a-a3fd-d6508988bb79",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b765e571-93a4-4a1b-aaae-4d8f325da1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e88b12-e4b1-4569-9712-aee9644527e7",
        "cursor": {
          "ref": "17a5f235-83be-4bd9-b789-d07fec33eb2e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9892e73f-2ca4-42de-bf44-4408f3cfba53"
        },
        "item": {
          "id": "65e88b12-e4b1-4569-9712-aee9644527e7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a4003888-ec28-4c48-8f06-4b5a1c03ff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b73a44-ca75-4ac1-a83f-9e145d3fc610",
        "cursor": {
          "ref": "6bf3d620-7e8e-48bb-be7b-c1ef0ef73770",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b2023c18-0d51-4009-9573-5d1f41bacd30"
        },
        "item": {
          "id": "32b73a44-ca75-4ac1-a83f-9e145d3fc610",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a86c9337-0d00-4b5b-9d87-da90350c5f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debca025-f354-4185-a7f2-27d32e5f53f2",
        "cursor": {
          "ref": "4c3c30a6-a46e-45d6-9498-eeda91b049f0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1e7eca87-e1fd-40be-8a5a-78e140ea064c"
        },
        "item": {
          "id": "debca025-f354-4185-a7f2-27d32e5f53f2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "713b4870-993d-42f6-aa0c-daa082ec83eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5a0fbe-a536-4243-81f6-f31a469941f8",
        "cursor": {
          "ref": "24636761-65b0-49e4-8268-6e02f0ca9e30",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cfbe9956-73ba-47cc-946d-92525c6800d7"
        },
        "item": {
          "id": "ee5a0fbe-a536-4243-81f6-f31a469941f8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "26dbf8f6-fa85-481c-a3a1-3df3e474e460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84bb13d-0408-4079-a004-4080f7f2aaa0",
        "cursor": {
          "ref": "b3548aee-4a4d-429c-be12-0b2206dbaf79",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3bcae8d0-c4b1-48e9-ad43-f60494e12a84"
        },
        "item": {
          "id": "c84bb13d-0408-4079-a004-4080f7f2aaa0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3311b743-2f5f-4553-b0f2-2917751b3d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8493c-9b24-4c3e-9739-34ab33105ce5",
        "cursor": {
          "ref": "e63585fe-6c2d-4c50-a945-5f197591434b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1eed07cd-a7ef-4c40-a46e-14157cf324b2"
        },
        "item": {
          "id": "6fb8493c-9b24-4c3e-9739-34ab33105ce5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92cdaa6a-e311-44f1-a75c-d5a66192a6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45f604-294e-4dc7-9890-611abfb7567e",
        "cursor": {
          "ref": "2a0284a0-b43d-4ad2-9b1a-bd9a5e08f2d0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a992b63b-6993-4dac-8843-128503dc805a"
        },
        "item": {
          "id": "4d45f604-294e-4dc7-9890-611abfb7567e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3898c72b-69db-4f92-854e-7139089d2958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035bf061-1e1c-403d-8c57-a4ca0606a67c",
        "cursor": {
          "ref": "aae479de-5f8f-41fa-aa91-cc7941533666",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4bf4a420-a42f-418d-93d0-ed0dfc566455"
        },
        "item": {
          "id": "035bf061-1e1c-403d-8c57-a4ca0606a67c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "162c5aac-5b12-457b-ad54-8405c8a25c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20f98ce-ccd9-4c37-bde7-ed2fc4961358",
        "cursor": {
          "ref": "97946354-7e1a-478d-b7c6-c24dc861f2d5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8c1d57fc-e684-46d1-9e31-a4cbd9f9c89e"
        },
        "item": {
          "id": "f20f98ce-ccd9-4c37-bde7-ed2fc4961358",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "894dc034-ff6e-47c4-9030-eb4502587b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b88f31f-b1c2-47b4-ab50-04aabd7c73d9",
        "cursor": {
          "ref": "18f09546-be03-482b-803e-0f65703ab48c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bc937fff-bf18-4c0c-a2c5-070278117cd6"
        },
        "item": {
          "id": "2b88f31f-b1c2-47b4-ab50-04aabd7c73d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "31b34c12-a62a-4715-877a-bdf3d2b510cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe65bfb-1e93-4ad4-b4dd-8b954f9c1062",
        "cursor": {
          "ref": "e741bba4-bb5b-45b6-b0e8-799d388298ed",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c6bdedc-e94f-47d4-a82c-743ba0bce233"
        },
        "item": {
          "id": "0fe65bfb-1e93-4ad4-b4dd-8b954f9c1062",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "57399bce-41be-4406-b84e-e00239de68bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6679c14-bd36-44cd-8953-5ecdee8da0da",
        "cursor": {
          "ref": "db5405fd-00a2-4093-8bdd-48fde173b85c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "40c63c4b-6d73-4191-becc-37bd76cd21ff"
        },
        "item": {
          "id": "e6679c14-bd36-44cd-8953-5ecdee8da0da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c4224f3b-220b-4355-b4dd-ca5edca23e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11d02b3-ee49-44db-b214-6f27560190e6",
        "cursor": {
          "ref": "4aae7dcf-5811-4fa0-99ef-695e1c81e9dc",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c96c757f-2f54-4220-ae89-e9906e945b19"
        },
        "item": {
          "id": "d11d02b3-ee49-44db-b214-6f27560190e6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61b0936b-de26-47b8-8b79-25ed10003367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc1dd94-6f58-4c87-bcd0-2886c7619f4a",
        "cursor": {
          "ref": "5344ea76-7d1e-4729-972c-46c909fc25a9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5086e472-38e9-4703-baa3-16768a56b096"
        },
        "item": {
          "id": "4cc1dd94-6f58-4c87-bcd0-2886c7619f4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "71b7baa6-cb0a-4a52-91f7-34941f41044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb9796f-0244-48fb-9ca7-6a05e1efc615",
        "cursor": {
          "ref": "f25d0ffd-5f49-43b8-8900-c77e2a5ee1d5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "97d7805e-f043-48cc-a9c9-bf2b90585c2c"
        },
        "item": {
          "id": "5bb9796f-0244-48fb-9ca7-6a05e1efc615",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ab137742-e3c9-41eb-82bb-52d85c7a89f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1480d90-b26f-433e-9dcb-dce7a7039fd0",
        "cursor": {
          "ref": "8ec225a9-4ecd-4888-9940-c0728aeaf4c9",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fdfd3299-2e74-4f76-a619-63181c990d0b"
        },
        "item": {
          "id": "d1480d90-b26f-433e-9dcb-dce7a7039fd0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "477249b0-8e90-4fd5-952a-f4be92e796c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fcb7d6-cbb6-4422-b07f-054f64b6cb37",
        "cursor": {
          "ref": "43cf3b02-4c03-4867-be2f-d13f4d1e0e17",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "891b0c7d-a409-4246-b56e-e3f4e86d3209"
        },
        "item": {
          "id": "70fcb7d6-cbb6-4422-b07f-054f64b6cb37",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6487da7d-ec41-47db-83a6-c46ff5245eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d93f654-65fe-4514-9b66-93ca7b66d143",
        "cursor": {
          "ref": "0124d7e2-e508-4add-ba5e-8a369d747330",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3b4929a2-51c7-400e-bdcf-aa60bf1ce053"
        },
        "item": {
          "id": "1d93f654-65fe-4514-9b66-93ca7b66d143",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "eaf81bb0-d8e5-4c6e-b5e8-edf22b3ca955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1eb585-3653-4596-84d2-3afbc89476a5",
        "cursor": {
          "ref": "4eb88f63-2f2c-490c-9de9-d380dd1a7927",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98478101-c41b-4e50-99b7-7d4b4c5c30cd"
        },
        "item": {
          "id": "eb1eb585-3653-4596-84d2-3afbc89476a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ad3b04d7-46b2-4505-9e61-2f8e7fe59679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44def52-8013-4bce-af8b-d45317d77e05",
        "cursor": {
          "ref": "5b988c99-f05e-4d49-a607-60fcc66c9ecb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1674d503-b96a-4386-be36-5e75194d9809"
        },
        "item": {
          "id": "c44def52-8013-4bce-af8b-d45317d77e05",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f45cb404-e593-48ec-a92a-75197df69f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb3f6a-8a39-4029-a472-bdffffca9f16",
        "cursor": {
          "ref": "76b8ab90-f716-478b-902a-ee1a274d0148",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "26c831ac-0bf2-4ccf-9674-964c22be010a"
        },
        "item": {
          "id": "efcb3f6a-8a39-4029-a472-bdffffca9f16",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f62c6fed-031a-4f5f-b643-7faa29f601f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe96e0c-0cda-4c30-af33-14e5d0211b8e",
        "cursor": {
          "ref": "6cb8ca68-58af-4f2f-9d1c-dd22b043d511",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c9968f38-33fa-40dd-8f56-38e1f0bab358"
        },
        "item": {
          "id": "2fe96e0c-0cda-4c30-af33-14e5d0211b8e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d3257221-7d99-4b9c-9b27-5d10edb8e292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf5e89-0c65-4bad-8ee9-53121a34f400",
        "cursor": {
          "ref": "a2062c6d-37fb-45c9-8ae6-e62bc058cf1d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2eb9861a-d43b-4565-a066-42132464d75a"
        },
        "item": {
          "id": "aedf5e89-0c65-4bad-8ee9-53121a34f400",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8deae390-bf48-4d7b-b9e9-2bc6e17b6e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3876e1-3309-4f7b-8091-3d362b0ca10f",
        "cursor": {
          "ref": "b25607ee-0b1a-4f69-9b62-d70f53d60cf9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "12d2c2d6-337e-4cfe-8c84-9f80b95b6b62"
        },
        "item": {
          "id": "4f3876e1-3309-4f7b-8091-3d362b0ca10f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "847bbed4-8281-4a04-982f-1765687c2ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "130d438c-a287-4f57-845a-33f6cb3de62b",
        "cursor": {
          "ref": "240d0576-8b10-4f5e-9594-0dc98482ea59",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a0178c4-00ac-456a-93bf-e55e096e7a08"
        },
        "item": {
          "id": "130d438c-a287-4f57-845a-33f6cb3de62b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a1191b5f-a701-4df4-bfa2-b36dc95aea7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a3297380-088b-47fc-b466-2ff9c8158568",
        "cursor": {
          "ref": "b9a19187-e967-4441-ae2d-a5a9e37b8f88",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ff1d541-2dc4-4143-968e-5cd14dd8a991"
        },
        "item": {
          "id": "a3297380-088b-47fc-b466-2ff9c8158568",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "31f30189-1590-43ab-91ac-47bfd03d846b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0d7b9112-98e6-452a-8e93-ac99d031922a",
        "cursor": {
          "ref": "f0f1a81b-ec15-4046-b4c4-24dbc1844457",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01cb6860-0f9b-4632-bf3f-2a93cb70de9d"
        },
        "item": {
          "id": "0d7b9112-98e6-452a-8e93-ac99d031922a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34982b7d-7f88-4f93-b95e-03d01b37c9cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7b9112-98e6-452a-8e93-ac99d031922a",
        "cursor": {
          "ref": "f0f1a81b-ec15-4046-b4c4-24dbc1844457",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "01cb6860-0f9b-4632-bf3f-2a93cb70de9d"
        },
        "item": {
          "id": "0d7b9112-98e6-452a-8e93-ac99d031922a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34982b7d-7f88-4f93-b95e-03d01b37c9cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f5b96-e857-49ee-8687-96bf4c868b19",
        "cursor": {
          "ref": "d96a255c-abe1-4c8a-9aa1-36e1ba6b5576",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d4f942e7-248c-407c-b9a9-546fc22c8e7f"
        },
        "item": {
          "id": "046f5b96-e857-49ee-8687-96bf4c868b19",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "126aadc2-1a8b-46f0-a290-9cf2d6aeb229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b807cb50-12c3-4056-b835-873a34034297",
        "cursor": {
          "ref": "d8c39a3e-3006-4d24-86d6-a14873cafce5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3781a56f-cb63-46d1-9876-71fdc4f21f2e"
        },
        "item": {
          "id": "b807cb50-12c3-4056-b835-873a34034297",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "16ad3dbf-3937-45ac-a55d-79d0a689f4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}