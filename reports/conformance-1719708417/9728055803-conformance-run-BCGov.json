{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6eb2fb1a-30da-46e8-827d-6f55e7873783",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b50a510d-a85e-46a6-97ba-3e1e930592d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48e4d5e2-fa82-46cc-b792-4b5172118784",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00ce4e2f-aacd-48e7-8148-712bcfe446ce"
                }
              }
            ]
          },
          {
            "id": "d48b75e9-e0cb-4cdc-bb7d-b7e3d4cc6835",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a70f187-7c2d-4e7e-bf07-8f636e675573",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03f1f6fb-9643-4149-809a-eacd657b1b2e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e72aed74-5578-4302-9289-b2caa02543dc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18edd3e8-29de-4fb3-ba21-1d4dff011916",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e268e7ba-085f-4869-ae8f-4cef88078bc0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01e0930b-977d-4af8-b4f2-ed5a8a233a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f92b3ac-2ecb-44be-a4b6-de0487933edb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c028f753-fdcc-4d58-aeeb-b8144cb94a99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4347c1f2-a4ed-42fe-bc8d-32326398f0fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60553729-f65c-48bb-9280-4d0768dbad58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b788b849-f205-49b5-b2f6-8095bf40b1af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "850db1cd-c90d-4352-89e7-b76653df3764",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38503f64-112b-4653-b048-69ed0a53953f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fbb5c9a-cddb-4d18-abe4-05ea7ac49d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ac1fed7-8691-4c8a-9ee8-a9a499a893d3"
            }
          }
        ]
      },
      {
        "id": "c2b55e07-7a65-4854-9868-f94106b011a7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1ce338dd-6157-433f-8f5e-bf866dee00d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8431adad-0089-4b01-86a3-4f861cec53f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "244faaf3-9e2c-4137-acf1-1d5263ef9fc8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d76003-2b37-47a8-b2bc-4378f9f34b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0654162c-dea4-451f-b7e4-28f5fbe0add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173a6fb7-7860-40b1-8840-5d9884a4d4ca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd75cc4-a18b-42d7-8921-2e3136169790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dca866c2-9534-4f54-ba5f-95cf61661741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c50b26-43f6-4f98-9003-e01bbd3982d3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58f958f-f761-4dbb-b9b1-7e138efa4767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cee814f-710a-4898-b414-9ca39916ff77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "860bacdf-770d-424b-8400-09c9787931cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee39c71c-0ba5-4d18-9b3b-cf37beafd9a9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647a37f-700d-4c9f-a1b2-63f674cc4963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e15288-1de7-44a3-a720-4f8302db01f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365fef52-36bf-49d1-b9bc-cdd9ccd0af93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd93746-47f0-442d-a3e9-276de6b3a2bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74a69985-fed4-404a-975b-d7a0eb75a2ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4be2fb32-8777-4b25-8ec5-9e134b315877",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9427ae54-c5d4-44ad-abc3-9818ed79131a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f1e1209c-bb50-41c5-9279-d63bb4b2bc93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "673dc18b-f217-4861-9ca8-0556ef566bbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4ee0e2cd-b1b7-4769-b9c4-8b32b6899030"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e85dd7a-641b-4971-8825-ec2d6135297e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "162973dd-a81e-4d87-9716-a7d3ffe64d56"
            }
          }
        ]
      },
      {
        "id": "4fbb835b-ae36-49f2-9940-156b45ee618c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e387374c-e1fe-4991-bff6-ca142acf4e70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e2242cd-379a-471e-a018-56088c220b3b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c12f071-05da-4dcf-a16c-9d55097960bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438a275-dc89-48e2-aa99-52eb02db98e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe00992-0d74-48ec-b1c4-b5744206d8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6b00c3-e901-4f54-80f1-0619ce797de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9145b4a-3dc2-426c-9d8b-92cf5a1fab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd7e5b8-c926-4b89-bb01-46deb6ff108f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6905e8f1-4c23-4020-9f13-fec83ae0434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87216b4a-e0bf-43de-90a1-b7f6823d0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421f5886-226a-4c6d-9c35-f2e969a8ad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "336b0d10-bfc9-4374-b1cd-f8d0aaece37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dab9e2-88bb-42d2-9796-0c0d0d888157",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2bcea0-7603-45e1-ae31-0361f5ac5c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e240166-d42a-495c-84ef-70bb22d00abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00856c8-8c98-4e27-9d5c-160f5593a779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a8f6f9-56a8-4d0c-9143-fbbf4178002b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72587c4a-907d-4c64-8403-bf5ed7216271",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3020e47d-06db-4025-ad7a-6772fa52d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86b1470-747b-4b1c-96cc-dcd956871a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548666cc-93d9-4358-b6fa-2a9a601652b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e95083c-e8f8-4700-9ad0-ac2e4385d95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9bc091-c3fc-4b4a-8755-dadcdd1bb768",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee827767-bb8a-4531-9def-00b854c212c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfca077-7513-46a2-b441-0cc1a6488f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163c9081-b9bd-49c7-9d5a-fc68225ead80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37eb067-0ecf-47f4-9262-e48a0edfc629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35ad3dc-680e-43b5-8512-3d46eaf222f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc24d6-308c-4856-9789-ec386ce67972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652ba998-4c84-4fe9-ab2b-20c7bf41bb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e854cb1-aaf2-4f9f-b7c4-ab44a9ac458f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb0562b5-a07a-422a-857c-067dcb7304e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c173ad6-d828-4e9a-aa9c-73a746693b43",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd601ce-b9bc-496c-bf9d-69a29d730089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b66283-878c-4fcd-b615-3a3c617edf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5648a86-fc61-4332-a055-53484712ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "969cd863-b8f7-4e2d-a769-6c77addaf0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fea862-0f2d-4c68-a5d0-8399347f2d0a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d25012c-88bf-4489-b250-af75f4a5443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940cfb20-e527-47e5-8a0f-20670fbb00d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21174bf8-c8d3-4fb9-a1e0-25d4e8ad75be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "718e0246-4296-4c44-82ce-a7f7db39c431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1004af9-e131-496a-aecd-e757dfdb5d34",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0912d369-a163-44ae-a0b6-74b1eed77b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0044c92a-fdfb-4f4a-ad74-4c1bd8cbeadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faf7398-4d2c-4816-a54c-c4cb7ee42738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a6f7fb3-cf66-4693-ae02-d574a8de9d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd3a8c0-3e71-4aab-bbb8-d74383c700ff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e8a614-708a-4fdb-aa31-fef3806dfed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c330dd8-9b99-466e-988c-810522565fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c03408-0476-44b7-96c5-ca608c14a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a7a33e-1d47-4ee2-9868-a68e62e2ec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdaa9f-ab85-4d57-84af-55ea96432dc3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d3316-699b-434b-83fa-9cba077726d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1513e48-8b1b-4371-beb4-dc20aa13f477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8294502-c36b-4dd7-b6f8-cc9866c36042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee27e10-265b-43f1-9b96-aafd686c8827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d75a21-a43a-4a1c-b031-1fc4c5d40dfb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb4fbf8-55f6-4ff8-8098-065aeb19a8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0ec16e-191f-4a98-a31d-2c26cce96652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89976842-8f2d-44ac-ba5d-c07bbdae5e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdc841fe-d26e-44b6-baf8-9031ad8cbc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb25027-d018-4fd3-a045-06762cc7ae42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98fad7c-6bb2-4c41-8de9-87a4f4629673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d92920f-9d44-4509-ac58-e90d29f9e1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96351a1-cd23-4a0a-8699-79e66f61d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a477f0a0-1132-4a46-afac-2090fcbab00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ccf12c-b238-47e9-a37f-5a813b984d57",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee9b63c-2e72-496d-be97-95b1f3e03a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879fa517-803e-4359-b9a0-56ab1a460b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea2694d-3778-41d3-93f8-72aee844e345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f736228-4379-4f25-9f0e-cac14bac6641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c1ef27-2d91-4f8e-9a6f-637fa81d7b3a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f5783e-85f8-46a8-bc22-5c3a1ae567dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57343b40-2bdd-48da-843b-2ffb1897dcab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc9c617-3e75-4386-b39f-7baae9a9f885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bab018f-ce00-42cb-b97a-b79ef32b296a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b56687-8c10-4d9d-a599-735b9c28e5e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d5297-e955-453b-8942-1ec3840986e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0dda0b-8a39-4bbd-8e80-f84f05367f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b402031-2960-4c72-9295-44ad944be7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9ef5e4-7e2f-420e-91be-a151576c5f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f482f9-cab4-4b15-81f6-6702e543fe07",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947a2d2a-9038-4206-b7fa-dbcc672ceb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e317663-fe03-4aaa-8ba5-f36e6c6d67a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6347be2b-f723-42ab-a983-787ff291934d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d865ced-e704-4ba0-8aff-63381567a93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90024a21-a1cf-498a-96e7-7e9ef95bc9cc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dfa818-8ccc-4ce7-9d30-926ad0b31cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d8a9ff-8af4-4704-be14-b53c07166397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83b4f5d-2f25-42e4-bd34-3d29b477e15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b848f304-faac-489d-98af-59c9ad5ee3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4039b4dc-9ab3-4afa-afcc-287fe624fc1c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bb8e60-840a-4c4c-ab3a-0cd8c880309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112e3c57-271b-4a9c-b3c5-1b5d12843f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2677d920-3a8b-4700-9eef-a5a40f64f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90962a18-cbd6-4271-ae8e-17059982912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25bea9f-c790-4216-92ba-951ba6a20e9a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ced340a-02e1-45d9-9843-2e64c62c18ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fad3b9-c585-4ea6-9a08-9bb35c27cde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971617c9-16dc-41c3-9946-0db0116633c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5da1d31-75da-48a2-9832-69bc75fc8510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1eec36-409f-43ee-b48f-6515abe8151f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf617ea-d9a0-4c60-9438-75491151f033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77d4542-4256-40f7-961a-09e80b56eec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8e7e93-20cb-4970-9a77-8b00e5a80c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e244abfe-e6a9-4234-bc60-bf302ccf68c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9b855d-a3dc-4fca-978f-00f914ba77b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a755e3-5a34-4699-b7cb-1077c74acb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aa375f-f7c5-42eb-97d0-c92bcfb75265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e2fcf6-48de-4827-bc80-3f5c637e1e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dde66cd-b4ba-48ea-93f0-db6347a70688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1944d1-e7ca-4e93-b464-7c4ee2b2c6c5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7015f8fa-c7c4-428e-9049-2708f59f6a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2900c9a-d7dd-400a-8d9a-01b943236947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ea3b15-b583-49fc-89ba-a1b80663fc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93b07eb6-695f-452e-affe-cf4cbf522847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8162fa26-29bd-4d96-b42f-7a9961d2feb4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946df788-d21b-43b6-83d6-649f498b203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609993a3-18ee-40af-838e-44726747a329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0952d6-e8f2-4502-8f4e-2be8ccbc2485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b09d2b2-03de-4951-81ca-3809c544b9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1f7db-3c90-415c-8144-1b254e815f8d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a55ad76-469a-47a5-8ce0-535281c71192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1578405d-7e2c-4144-970a-2f96e98ff636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fbd31b-77d0-4cd8-947c-9d983aa767f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cc2861-7695-4f35-b3e9-1bb9caec14e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ffef37-92af-4bd3-a7b2-6cccaef06916",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca26f73-1497-4fa2-9ca5-473a497948e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00daaea-c02b-4e6f-b002-64443c16ccd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a21ec7a-8d9a-48fc-b63c-cd525103a079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7418a105-dedf-4285-bbb5-a791d695f2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809dc9f2-1a52-4bcb-b939-2e74f6d5c93f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9d591-285d-4759-bde4-8b557d628f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de264610-6f7a-4eaa-b33d-ee505b20c6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519ab151-4493-4017-8ddb-3a7e130464f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc83b6c-17a7-476a-b097-3ab873617a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca3b5a-0237-49a6-aac2-e75b38ecb1af",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f974cf-7995-49e1-bb34-a30e8c80db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98bb0dc-b72c-4385-9ae2-3e9b7ca67107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71454304-ac7d-4e20-bc11-0469a302ad7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80cb45e-1b2b-4768-b525-fefa3e9de17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb854428-6999-4c91-aa91-464538a38066",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dde57d1-2f2d-41cd-83ad-c452b45513bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7574524c-366d-4805-a069-74491d908f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ad3326-0567-4296-a84e-7719f05359da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cb67d7-2d54-476c-a3e8-dbb8831e5a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83388be2-a06a-4748-80c8-d354f8e8d23c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e4d1d5-c041-455b-9329-d61014964cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05776996-eaff-47c4-a6b7-741ec6e6714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457780fb-031f-4a50-ba8a-d0e207971035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8df046-9768-41ab-ae0f-dba3e5d3917b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c24bbda-3965-4917-8c4b-aa89908458fa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255d99aa-6cac-4385-aeeb-bae3584a0c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b5cc67-1a54-4cc4-b933-7a6b8a2ad223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc5976-12ce-43db-b8af-d170125c32ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4871d6ba-1e6b-4a38-bc58-19f0353c1e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cf0661-6e41-4a7d-8567-42275fa3a4c1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956bee2a-0a92-4b21-a8f6-d6528b0b2ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d8f193-c535-4fca-86a7-fb2b47ad14fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05fe473-5cee-4241-af3d-8b3f9196033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a4f133-b4b9-4c57-b8e9-809da535aa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebcf72b-86c0-4d3e-b528-b786b0c263ca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea576ef-7346-4216-988c-7e54f34a065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf02460-9ddc-44e9-961a-082a9a946f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736723a3-d5f5-4949-b3dd-ce88f1baa71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb658e1-b5c9-4335-bcba-db3b6a065dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04209f-ed83-4164-9102-d6272f0d36d4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefec023-6988-476e-9ecc-4f8a3fa03942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82564b0-26d9-420f-9365-b092e3f67385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d3d75-0998-401f-801a-5590cd9c342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5a5b3c-95c4-463b-8974-1967f5712455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0050c01-968d-4e2a-aba8-1c82acacb453",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05510197-f0bd-4ec5-84e1-ecea1e1d2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0d0381-528c-455f-a4ec-8f841356e599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36db9213-3a9e-49cc-a409-cf94ab34ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "82a9ab6d-0a53-4ffe-93f2-6c18d7703e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba1422-dd14-499a-ae7e-09a953085328",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc2486-1c91-4d39-a667-539cc8633c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e7ef36f-3c56-4bd8-b2fb-583efe770227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8155bcff-14e9-4016-a54a-07511d22efe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce1fa45-a3c7-40bb-bc9a-585818cfb211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d593d1ce-d894-4e50-85ce-4159526cb7f8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d440ec0-9539-402a-a4ce-30d01b3bfe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca81b75b-0c1f-460f-bd73-b60b66ec3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad23843-e1cb-418d-ae7a-a4a7a8757242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "317ed5da-a1b6-4f89-9071-6524778db354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a2eb8c-6798-4a6a-bf0d-530b69227dfa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff82c1-34e9-445d-8496-bcb0960ab285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b569a7c-c16f-46d4-9ae8-fe436c24aced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23864e35-520e-4464-bc55-ce09763ac24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "612350bc-29d4-482a-a357-f8b1e3d3b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b09bec0-c1ee-46e8-95a9-1e548d91d200",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abe08e-a36d-4522-a071-99b593d5ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ff8540-3769-48f2-bf50-40608079b2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4893a5a-3a03-4d7a-834a-1b71fda1e495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16f85c73-766e-4011-94f0-5eb382346919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e77f9c-0c15-4202-92fd-76037834de8b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdbd3ab-ec94-4c70-afcf-eaf1fe1e9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76e1ae6-8cb9-41cf-a163-4c87b0a3bc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5714d3e-ee25-44b2-8bc6-61f6e58af242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd62183c-0931-4306-85bc-b344d4984b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1041a8b-19c7-479f-b247-09ce96626d38",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bbcb6d-91be-4f88-81a0-a8aa776e910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18677e9a-c100-4d81-bfd8-12f0f8f1f752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e6db99-64f4-4b2a-9f42-1c642c1f8777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b3306d-dfa0-4c50-beab-b12e0e77cdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eccdd5-197a-4e6d-9fd5-99680b1ed343",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631b196-c82a-4f2c-b403-ecc1ad8bb965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf6704c-a317-4d61-a9d4-b71954d5418e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64daa189-ce1f-427d-b71f-b9a2c5e4a528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f31a4b73-189d-45dc-949c-e04cb2e22ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe06ee20-abc9-4b91-98b9-910e74108906",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc603b42-1f43-46f1-8004-419c1f2a9730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ccbf5a-0879-4795-ba58-cd99a5162950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb712f88-6c4a-4dae-aa20-3b43576ef1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c811655f-c0e2-47b9-9eb5-1eb4e3b9a38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b3fa2f-3f57-4db5-9f7e-8e889eff4b59",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f44cb02-18e3-4788-b227-d4087db10697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89553bde-648f-44cf-a571-17473b927e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccf2e0a-1c0c-461b-a0f1-11353946e856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "228650cf-9d5a-4070-b287-4f3c565af140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fb4d80-a55b-4f76-ba41-a328d7672aff",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb20ab-e5f9-4b4b-b132-36e9ac3987f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d485d1d-2268-4459-b70f-c40b97a5cf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2d1f63-4f8b-4b0f-8d55-d954df584423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5757d4da-2563-491c-afd3-519eeb4825a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b887f-1675-4be7-8247-b028abf6e365",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0a3a0d-bdcf-4697-ad33-9e65ff5b448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd0dffd-1eca-45ff-b1e3-ed616bf10da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9348c64c-a583-4b72-993a-6426983487e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33118bbb-d23e-4b93-99a6-73bd176d0ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09007ce0-af64-42ff-94a3-9830e524e7fb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e799e2ec-7ff2-4fa5-8dde-06a9beaf2e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6216df0f-1a1d-43a2-a3df-35b82fc77d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746210e-49bc-4efa-8a2c-b984080d93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cec8321-8861-49fc-a546-0ffdda38624f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056ffa12-da81-480a-a312-96b1e016301c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b199b4-fe5c-43f9-ab7a-2fa32c65bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c98f686-dcd9-4cec-9263-452bc30cab7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9032c648-9752-4937-ad6d-281d8cc62db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b400cdc-ccd8-4b37-a69a-7235a3d27f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c5f863-1474-4297-b8d7-44415c595abb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3162eb18-90c2-47d5-9382-dcfdc997ad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbcb114-895f-4ecc-a7fa-dd301d29a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac32e5d3-3d66-429c-bb7d-272fac8d28f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b1dd7e-a38b-41cb-af03-1060f2c06cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33db862d-d6ff-4483-890a-9430f90b9308",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c83a3fd-59be-4488-bfb7-3a8e9d16971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082bbf1f-a406-4a4a-bb8a-fc5df3dd0c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5591a14-4346-440a-92a6-04856dd2d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa20c5c7-2aef-486d-8b39-517e048f770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef966a0-a559-42f3-b1e8-571271a774ae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad26df3-4113-47df-92d0-0570c2e74d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36fe1cf-0b71-443d-b1ac-caad75373945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44359247-b826-4df4-b151-494f0a0a212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a460092-c753-4263-9a89-d829bdf5c971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8e41ad-dad6-4673-b86e-be9ab57efee5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c789fd5d-6d7d-405f-ac0d-4c258067f474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f5e2a0-e2f2-4c14-bff0-46e6f41fee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fa9888-e197-48ed-92f2-4836fd8ca8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5a9a9a-e4d7-4df3-9929-09809293c2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3289345a-ae54-4171-b9ca-d2bc436aaa20",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606dd6fc-4d6b-4d4b-952e-9866df25a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4343f27a-0133-4622-a185-dbff7992de9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493626e7-5287-473e-be54-46e37301ac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90509dc2-c04f-4840-9de9-fcdada7e2572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb9a385-09a7-4a4e-80a7-6a3ff81dc70e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93403b28-f99d-4cb8-bb80-47dd05493cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9126ccd8-9eda-4b85-9055-f7afaf3a1824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078dc5be-cc7d-47fa-8ee9-5f154c3d784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebcea59-320f-4878-aab6-ba061b9b2d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fbfb44-4d05-4d84-bc10-2fb755bd0190",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44e49f4-2701-4c2e-a1dc-3b43f9dfb1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a653c0-6aad-4fd4-a1a3-40b0c60d313c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efb47c1-758c-42d1-aab3-f9119de09443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3256b65a-bf4d-4700-abf2-c91930c16ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21dec8e-3daa-4504-832d-df5858f244ce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabc1050-8cc4-4a3b-a4ea-ccd9955d1965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9256bc7a-9266-415a-a664-e422272a6a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9dc045-9522-4090-81c8-de24f302e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29769402-22bb-4886-a1f8-326d749c5074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4018fdb8-7d76-4752-8912-890af56d748d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c8053-f9e4-4ded-8802-898344077134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9489c9c8-5ea8-4e89-9ef9-582a20164353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb70f1f1-751e-43e6-9082-babbef56ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d0c2d1-f95b-47c9-ab18-0f9cd111ff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3770accb-b9db-42c9-ab52-1fffb7c78bb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b152d25c-251d-4fd0-af56-fa059d369bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fc3c11-ada4-4d4f-9154-fa025e588a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde48ad4-a090-4f9a-992e-90fe7f499214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a2571a-7588-4818-81ad-e99357c34dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e4919-fd0f-4e60-a759-34aeb81f885d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746dde79-42c3-46ab-a419-7c1deb758933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb9b2da-5f67-494d-8aa1-b4196f63a8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cf0504-179c-46a1-a579-4a8ded639eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a873a3a1-4a17-437f-a016-66fec6b492c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fc5330-9758-41be-b1a7-0cc596344eef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea35a09-d48b-4fb5-9469-2afe22d8dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4048f948-bca4-4b8c-ae0e-5a0687b8c403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a8a52-4796-47ad-9d07-3d2cd5590fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78beec5b-4ffd-4ace-9193-7ab4fe18bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316fdc1-5409-4b0f-a419-dba32ab374e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e923ae-5985-420d-b60a-85313b738511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741781e0-479d-4755-a61b-ac7e87b708cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0be3c3-e72b-449c-8e94-2f047552b59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f6a2ed-45fc-44ac-9196-b76c44ed72b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1fa3f1-7a61-4a25-81e3-15229db404b2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a398f1-2a6f-44dd-84be-059b775e65ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8dc9a8-1283-4ac4-b040-8dbcfe0908b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c597d96-d3f5-4a4d-85a0-3353bd50d8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d6d7b1-af03-49aa-bb2d-8ea0c3e7ad9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec8b55-8fcd-458d-8561-db9b5f9b5dad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa30882-aaff-4027-b94e-a2cfa7840cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25704bf9-1885-4fd5-9dc7-d24069b666ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3615328c-c89d-4ccf-8036-fc3a56ca2bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a1de3a-ed05-409c-8fd9-d96d77a14a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ee464a-2e5a-48b5-a73e-567ad68831b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b96ece-dcd0-4dcc-915c-17ec5a4a624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aa607e-5bd1-4cd9-b3f0-7742acb1b365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357e9ecc-6c48-4d21-b7e6-a90f0d641aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85572102-3644-449c-8cfb-e75aeda3ecd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e183fc7b-98e8-4e5f-b5a7-00b90c2dedea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c1f88-6ef2-4a49-966c-5ab3ca15201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608430ca-ceca-407e-be9c-76519aa7fbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d44ddc9-f5de-43e5-abe4-68b190c2df76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75884646-5d4b-42df-89f4-17fc884863a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f1c149-f0ea-4ead-a00e-a239795110d2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b572446d-44c0-4182-98b6-b95626f8fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f9d9f8-3bb2-4cb5-8dfc-9fa9133eff64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0496143-1eb6-48f1-ad3b-4e722066abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe99e850-a68a-4f13-9a6b-41a3820663cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c951c7-3eea-42bf-954f-ca12859cd0c2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28991b4b-3d05-4370-88e3-93db05074d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6512a7f6-ca0d-4bd2-bdb7-e3ed22976b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a31a4f4-e1d6-4d02-b293-a858d598f42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89552b92-778d-4590-9381-11aca27f021d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8130e85-0467-4eae-869a-002f2480ce1c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a5072-71e0-4db2-a14f-46eae8cc3282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7732ae11-a46b-4863-9f3a-ba08a0058c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1fa71b-e9d4-4cbf-aa14-f57462b6936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1188660-1614-4444-817c-07a9a48c50ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207de4db-8f4f-4e0e-bb5b-0a212d8c1d21",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044a15d5-2993-4983-87eb-4fd6805eb5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ed6423-2584-4334-a746-5465f31c27a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c8ed6c-c281-4664-9339-98211838a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "194faa16-b4bd-4305-8c1a-387dac945176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05e0f72-75d1-49ff-ac58-323482b04890",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc2493-8c17-4cbc-9a83-5ad5d80bcb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e19339-1217-4307-924d-e969689bbf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaa852c-2472-4b5a-8d88-f67a19416c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabfa06c-50f3-4b9a-aff3-4b64abcd1b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11880c55-2758-4446-9e55-2cbd540f77f9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5660c86d-e558-430e-b512-4a3d2287bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066bcb6f-381e-4990-a529-f8c169c0e7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26118a40-0f2f-4ab7-9ff8-33538267569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0b7eb3-a56d-4a57-934e-7c35bcb1588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5906ab84-7129-4ddb-aa0a-47043ed4c65f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88000a94-28f4-4597-8a31-002bb9344a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7fcf85-6e73-47fb-8521-dc3f749f9100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a6de2a-c720-4683-be7a-2a335727cc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "248942d8-65a5-4f17-8058-25640b626d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f687a79-fdee-47d4-a7d2-ea9540e52975",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c672de-9ee3-459a-8aa9-da6b288bf449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc6a37a-f0d4-4695-a337-0224916d4eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b9f565-1333-4c98-b08a-31ef0ec74aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "201cd16f-369c-4b1a-ac3c-fa0a16949fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455180f2-317f-43c8-89f1-9551a594362f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bc3787-58a3-4234-8c0a-82b71ec9afe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f7cdd3-cf0e-4a4b-842d-e06d47e35adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a329470-7d08-4801-b531-2dc643795fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f5e94c-d2b4-481b-8840-275106ef1748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f675096-29dc-4ac6-afd1-7516d1f4a23a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8c33f2-b99a-4f52-a2ff-d05508e73c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e9ada7-5b1b-4f74-b49a-ab50a799d8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a700fa-991a-4c38-9161-cf8b98e189f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9850b0-83fc-4b55-b943-5576dc1b9454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f4115b-e485-4776-8480-11e4c403cd6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf63865-3186-4dc0-82db-4fb6275b1ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1793043c-d1a1-4f5e-92bd-98b0944f1164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb38a40-8cd1-4c94-8c8f-d8f79cca2082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1df3bf0-8ffe-40e6-bd24-26be73a599fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1c3799-3ca7-4e0c-9593-2fd81672620b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4557de6f-7f1a-4c19-9a41-15725ea315ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40489bd-c3ba-4eba-bfff-69e4de358e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df6720c-4ca7-4e89-b22c-b5cf26bb499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e9c7bd-03a2-4b03-943c-7dc40be41021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62c5fac-647c-46f1-949f-6262f7a2bcca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8261e2e-7252-4f1a-99f7-f0e3479f82b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3750aec6-21bf-4b2d-946c-72b904819184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff49d6b-1d59-407c-af4f-1d4402056d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c3e805-4d4e-4b21-85bd-283a5942ce73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ea0fa-6c66-4ee7-95f6-7246678acf7d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e3472-9537-4da5-aef3-9f8e6cc1a532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b3dcf9-96c5-4377-81a3-41a1c95e3c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b4e53c-1b2c-407b-9895-335f215893df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b3e21d-0aa6-436d-9a80-0482278d6184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73475ac5-e289-4238-ae03-9fcf14228223",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006dd11-d332-42e1-b976-9d8feba0da6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04a1cae-373a-4fb4-9cb2-eaf0e921858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8352012f-f04b-430a-b309-a852d55ddbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58a354a2-9503-4596-b019-eabab2d5c4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322611f6-46ad-4ecc-ae8e-d534535dde2b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc6acc5-5a0f-494d-af0c-10300235ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78649cc-670f-4557-aa14-ce056ce93afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57627803-9f32-41eb-a7c0-7ba966c3c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4896dc3e-f510-4080-99a9-a702b4eb8c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d3ff6b-1d07-42ae-84be-552e4a2eea98",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76020795-e195-4235-ba86-fd461ed579fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9febbf-871e-420f-9bf1-dfdd3c57a383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a75c46-8145-418f-8df1-fe723605691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2775f8d9-b5a9-4d72-acea-63a609c152da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b36f40-8dfa-4a54-a8f8-fa1bca2c9013",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e835604-2617-423a-8bf6-efa992aeb6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a43400-8949-4298-b2d8-34774ca94e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5930502-2839-46de-98da-d504b7762cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3c4d91-aabe-4520-a69b-24afb3ab5462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5cf9ae-c105-4e3a-a31f-8d9730dd0868",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12fca36-8eb1-479f-b866-697efc13e056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acfb49b-c013-4153-bbf6-0a3572fd0b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9affc2fd-88cb-4b39-9f64-6a3cdab8a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c855c5e-aea4-454d-b9dc-12cfb34078a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfcd78a-2b06-4dfc-82e0-12c50af831d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da83312c-1c6d-4a2d-995a-cd0211d0a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc913f5-67ef-4633-aa95-f2c33e59c4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d32d449-da43-4015-b5ba-19787a31176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38bd5f15-41d2-4866-87b9-ddbc8a1a9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9786450-9e95-46b0-a4b4-6c49118384e2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f92b995-0edc-45c6-8628-d3c8a42c39d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6e12a6-8ca4-4092-96ee-75e99150ebe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db352b3a-44db-49a8-a784-840c44f9e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75dcf733-2f4f-464b-a96b-08b5913d86ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9a158a-a54b-45c3-864d-40ae57432b64",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06e1294-241d-4367-aea4-e9078d487b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506d073b-49a4-402b-8994-b71b9ef5b5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a12a5e6-e820-4a1f-a841-91508ec6eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "827736a0-0676-4e86-bb4b-5e44014003a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df42e054-5634-4aab-9664-501dd6933c91",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9f63de-f83f-4722-bbba-82632f8cf91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7775fc1-9715-431e-be7e-e393aaafc532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1431bd-ee92-4222-b8c6-d4776eed1f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9ccde1-cfbe-4466-bf27-681d2cc634b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f380c6cb-ae61-4bdc-99d2-ec551d28f29d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9cb554-282b-4967-8b3a-789000f75405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3238cf-816e-41cb-98d5-98e31aeb481a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8437a3-efcd-4e19-a0c5-786611094163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a77580ad-5d9a-42f0-a6e4-44c2f53d2c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f90c9e-5ab8-4727-b057-cc262454ccc2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea6e53-dc2c-4979-9c66-19d350edcbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b63d0f-ab71-41bd-944b-c1232602f801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1081635b-2760-42d7-b606-4e0f6391fee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbff518-3d6f-4fc9-bc34-b4a28823557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da650e88-a900-4db0-8a50-48cd8de6e4b2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8b96bd-def9-4edc-b74f-e7f877b382f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dff11d-77d1-474d-a28d-4c81a5ae9aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bd2fff-cb20-47be-b6d0-4f76e9e954ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80edc499-e4fa-491a-86a8-5a547b84d43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f4df2-8532-495a-89c0-904baeb71019",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d32f0ae-3836-4717-bd5d-6c4d0ee4b641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a09107ed-4b58-4b2d-9039-03b66233a460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe18d2f8-faf5-4b2f-aea6-65b9b0e87254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e4f632-b8c8-43ea-bcce-40ec4115165c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e499a46f-2106-4b7f-b6f0-04d32bff550f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a178aabf-c6cf-4c4f-aff9-796e3bd11321",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fd703d-44e0-491b-8725-ce48e3fdbc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2e1e332-f172-44df-8745-e8737e9db4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47ae92-77ed-462d-adbe-096908bef668",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95edf6b5-fcb2-4bca-a115-f92878dc8587"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d88a2caa-dfdf-496f-99d5-3861019de9f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f0c452c-2c1b-4b1f-bfb6-51b8a928f1ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cca304a0-60bf-4524-ae6d-62fdd02d20d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3017caf5-d050-45a8-ad2a-09614275efd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab19585d-ecaa-4dfa-9d09-1ca3d96363f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c9469c4-dfa8-4e11-b645-73524709d7e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c2e90c4-3812-4c5e-a1d5-da91f1847f7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ce23700-e803-4b47-9a03-60c27f4a08d1"
                }
              }
            ]
          },
          {
            "id": "79a7e60e-ab41-4046-9e90-cbddfe91583f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e39e8588-9338-4108-994d-e21e190a047c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3d871b84-73ce-43de-a766-6d3aed4490cb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cecc829-46be-4865-8d62-04e99e3fdcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45d6fc2f-e611-4e12-8f3b-32495389353a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc4e38-a284-4e01-973f-b68deba0e41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e007ce25-3072-4bbc-9e99-c4a5cda0b1d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85feea54-0042-49cc-908b-bf5af4ce888b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a23ba741-7839-4250-8e85-79fe4f9b1b9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68555a1e-9b1f-45bd-a4a1-3ddb3ee49f94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e539732-68a2-4b52-a79f-0e2f910e1e99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "540e3640-5fe9-40dc-95f1-561bcf54ea88"
                    }
                  }
                ]
              },
              {
                "id": "5ece16b4-5597-4a21-8a92-5471512b958e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0459d012-c9cc-4bb1-b365-1abd63c0d737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56c7f269-f779-4cbe-8354-2f5f5dc6cc2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e8e7c95-6f02-46d5-855f-5dad15cf67b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5779aba5-37ab-4520-bc63-4a14ec8dbd1b"
                    }
                  }
                ]
              },
              {
                "id": "2af10a97-c578-41d4-9be6-826a9662123d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f359c567-e667-43b6-9a44-190972a23a0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7d9d636-2047-48b2-a65b-8e88bfd5f8b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a10556e-767d-4d85-8ce1-5e2a581fafa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb16fb20-8784-4fe6-9937-6b1bd868cbb8"
                    }
                  }
                ]
              },
              {
                "id": "76701417-8bb4-4519-81d1-e5c09436b860",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18de07a6-3491-402f-a505-3b3b2d479998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a2558ac-5192-478c-b613-5e4c719a68cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "643a0844-3046-4e8a-8261-fe60df36877f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "12fb993f-4129-46e0-808d-0c281f47f73e"
                    }
                  }
                ]
              },
              {
                "id": "67dbea83-aeb4-4407-918c-ac65436968e3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f35657c-7c50-49f1-9076-7242c066f9d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43f841ea-a7d0-4321-9e83-4ce6dcbd5c9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e18f9ab4-8a17-48d9-bb09-48ebcc2967f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4b3f0c22-904a-429b-9e48-5b4839fcea2e"
                    }
                  }
                ]
              },
              {
                "id": "41e0a0e3-5ad8-4a17-bd55-9f1e8720a035",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1513a20-15fe-4e1d-9c0d-408de93f3b86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06983b79-51b3-4277-829e-0e1a0232dc04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e87546b-cfed-4bf9-91e8-1349405156a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e7f6186-1655-4e68-bd58-d9c0aeb5db3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eff15398-51d3-4611-a702-20f7795eda4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e923daa4-4ade-4607-9cd4-b40bc0ee1943"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa632bcd-8dd3-4d81-841f-74790f0c12c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f37f2bdf-6060-42c5-a6db-67c9c222fcbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b42dfa-072d-4ca0-9a3d-4939bb5015d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eb068897-7651-4aa5-9792-7914bd1d76f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9283ea47-cb1e-4960-ab4d-3612e55993b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "459707a6-8a71-4af8-977e-c986ecd3d35e"
            }
          }
        ]
      },
      {
        "id": "0aa764ed-16bd-4e35-abf4-030720b13f50",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a560b654-8286-4d9a-af8d-c17787515846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5aabab6-2404-4f68-83e3-95ba3a8cddc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77e3e63d-42d4-4499-ac09-e30d2040140e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3111792-5112-4944-b020-80b7ad9e5bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44da9027-69b9-47e9-a7ba-099dc674ca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657cef3e-0ca3-4852-9c68-6fc360c72f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9569096d-d46c-49b2-a9b6-1cfc929e0e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d72fc-6c01-4b2f-856c-a6cb40a70e60",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a29cbc7-5347-4984-bfdc-0c10c6fb615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece7a0f2-b0ad-4a45-97d2-3ff8dadf96d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2b3561-82d6-4d24-8a16-e59c5b80141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3d32f3-42f0-416d-b426-c37999386855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d5b8f3-e71e-4ea7-9d05-ead546982083",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67afc948-ab99-4877-846c-12a9032b34a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9507f1d4-fa22-4cde-ab61-d2df74383c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d4a241-c3e4-4806-9f5c-1ef3d908f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a24596-a132-400c-8a89-dad68bc5041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d761274-01c3-4950-824c-e10df0a945c8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f80b7-d59f-4c7d-90a8-6e234984a5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2980d77b-2b19-4547-b724-992a60f8f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce643873-4869-47be-892f-91ea6a9d63fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d73b8ac-8bbf-4852-b3bd-561c54d386e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3516bf7d-f986-48ce-b395-7c015ed1b754",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1638eefd-93d9-48ce-b5f6-e6c1e0e50727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739ff599-0c97-46d8-add9-06cae6190fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671001e6-e7ae-420c-b4d0-e4e48c9638da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6934b05-7c02-4271-bd6a-b213bbc2b91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6424f921-e729-4814-872e-6fc21a39e343",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f72beed-f303-4029-a510-cd461ce93126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c330dd10-0f96-46ca-958c-255e8950a51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00235178-c038-4d8b-94ea-3a96ca4a2440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ed926a-565a-4f54-b8c5-1daa58d0ef1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04ebef1-0f9f-4d92-b6c8-7267b83a7297",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d372d-8829-4f58-96ff-fbf5475bee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f641b325-a717-4ff3-afd7-c90611cee8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3932bc86-d9b2-4563-920a-9d146bcda32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60396ec2-2408-408c-935d-686b91fc2eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40eb23f-9903-47e1-89ba-d5dca71f343f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1393d62c-6fe1-43d5-80bc-24535f4be23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a2034d-640d-4ecd-830a-f8d541461fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2198a6-0e9d-418a-b2f6-c7718908af6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab45b21-122b-4562-b4a9-e36c1e92cd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2511cff5-d113-4ce9-bb94-46804038bc89",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00825ade-aff8-492e-9e88-69403e318bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9cfe50-94f2-4b0f-b394-a7115d69a96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99dff50-891e-4963-9d8b-2eef5b0ca040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d7fb49-aaa8-4e51-9dce-277003709912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6a2348-8d83-48f5-9e54-34417be05c71",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35bdd48-6af3-4162-8480-2c5e7d3e1cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8ed052-2b1d-45a2-a941-abab5ca12861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecf68f7-9772-4833-ad80-1dceba8bcd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44167a1-725b-4f91-894f-707de655ea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af221fb-d2a6-432f-8364-2149ed2e6225",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396aed6-c20e-44d1-90da-3439f3f37d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387f36b3-7f08-4b1a-9b45-07f81c862411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42edc32f-de9d-4665-9f25-537c6fe4a8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ede0f1-806d-431b-8539-0fc2a9e78100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed0cceb-7636-419c-9e31-af6fa3f3aad6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6a28f6-797b-46ca-b1a8-c33a5e780108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9621a2e2-d482-483a-920a-49f16fbc8ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c1b84c-7aa2-42d9-8b15-a35ccae9a558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70f76eb2-2072-44a5-9ef9-2a7f598fdca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7ebf96-1865-420e-833f-9ee0aed26cd8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1268c807-63a1-48fc-a1b4-2df5111a1791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ccdd5d-d12e-4739-b777-ec83261c5de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26088f4c-8796-4137-989b-33bd6052183e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a92ee9-c009-437c-b659-56191dd395e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5df8c5-d4e8-4772-85ad-2306baa51e10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ef071e-402b-4852-8824-89eb1f7e8842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad63fa5-54b3-4013-b325-8bb02679b304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6a5c8-84cf-4ca8-bf9f-24fb516432e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a15cc4-0bd4-425c-a9f4-c4869cf21f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74231b4e-dfdb-4293-9c18-6451873b9d46",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447d748-6e76-4c0c-83ad-eca6e2913d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76c99e8-75c1-4e24-be80-7411730a563d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19849c5b-99b5-49e5-b5e8-60b22d211fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cc3d87-e4cf-4522-9108-5e3f761991ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72568f2b-2a6c-4192-baff-6d5217a0f921",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4acf30-8442-46a3-9bf0-86a88b8aeb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98af1ef-5fbd-468f-a2c3-a751087bc6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52dc360-6d5a-4313-b5da-1483af7fb070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2380c28f-d439-498a-90c7-0c3ec0f8afc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d529807-3272-4176-a29f-cb49ed59c00f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708eb17d-09b2-4f87-8c10-750258be247e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fedbe2-a43f-4e37-a172-00f293d5a82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5570528d-be70-409a-9159-dcf930bb0689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99be54b-0df0-4e05-9e54-f0f0009fd30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82edea11-f68b-43d7-8cab-cf0cea348f92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef914387-178d-4dcd-8f1b-cf7f72439a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc506bb6-ad60-470c-a3c5-68943ed2d155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f16d5ab-ae4e-4aae-b32e-3c716465e2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27fb3b26-7270-4de2-8559-2a4c0fc5430c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf161e9-56cc-4927-b0c1-63bd69a67584",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25ace5c-c05f-44f1-a018-0d2b2fdebbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df19c624-793a-4739-a6bc-551ce3947b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24448ec-4491-4397-8b46-55d9924f1172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41190722-6f95-40ef-a6b3-cf40ac7bc14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a54ba9-1f84-45ce-8b3c-cb296a0a9be3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702fe16-934b-4117-be5c-251800789d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508cf3fb-2840-44b0-b803-22b0fe0d20ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a7eee-018f-4f10-ae0b-fbf432875067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e076d6-9e0c-4595-94d8-7bb42b2b8c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67083360-0d33-4684-b307-ee20fee7156b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c20f91d-2c0b-4219-b7a2-3668503fbf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebe3580-e45a-4554-adf8-7e2886677cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06d5add-a7d0-48cb-91df-5b35962f880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf29dd8-ca4b-4633-9255-b2b2dd8fdaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a2963f-a32d-48a8-84de-8887ee974630",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ac10c-babd-4596-b1d9-76a4a44cef70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f64dd7-2db7-41b7-b357-f7703be7f27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50265bb1-00ea-4e73-995a-0a18c75301d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5965f269-1165-41d8-910c-a0d1c27b581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e9f76d-ae5c-4997-ab10-f0f86193610c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04a66a-d914-4659-8b65-784e1544c02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260ee4a7-31cd-4620-9fb5-9c3cb0bd6138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2f660-53a2-4561-9e2c-80fd851f473b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329b5bd0-f83f-439d-b789-b6483048ffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fae788b-ffe2-4c5f-a318-034afcbe8a41",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e5914c-1892-45b0-b94e-9be94a4fde8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4350e42-896a-49e6-9af6-825469fee5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5946dd37-3cfd-49cc-b818-abde143434ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c83d2c-de5b-46f2-ba00-8c3bd26af3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cdf4ce-2ea7-48c1-8c79-1319d0107b92",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4ead1b-8443-4d87-a6a6-ef47077aa9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2abb5e-7ae3-42e3-b1f4-cbcbacfa01e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a1ef62-d0ea-4dd0-9622-0a706bd52801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eeb340-3b1f-484b-8559-0b2a13d19f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8431da46-79a7-4fde-bd99-7a07d63bf792",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e4df50-0e89-4d0f-8fc6-334abdc1344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c14753f-922c-473a-bc4a-b538431e459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8bcf3d-3406-46d9-9a2b-68762632e641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c512068d-fe86-4b22-b2ee-f4730eb50241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0b32f6-4d12-4679-b779-24989009c285",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cadf05-b475-490d-962f-9db464bd151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eec9a5a-4035-433e-a47f-0a83da6d662c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ec40a8-5631-4657-aced-47ab2044440a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "900f873f-0c4f-4126-98e6-9cba7c716bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d30e48-373e-4eaa-8511-05eabf9fea99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f651c5-fa7d-4050-92d5-d9eea990f1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56ecd0c-0f8d-4ff9-9dee-bf225e63e99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bafd91e-165d-490c-845f-9a0f25f8a7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "578eae6d-041f-45ea-aaed-049abd1e0e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d76662-5e14-4bc8-816e-f11ec01ad21b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b083ec9-d267-4c02-b26e-d4031ba6d517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0162daf-ba32-450c-8544-ce0d1eb4c3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44baa511-ee54-4092-88a0-b3de368b5803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b359cf28-ce8c-49bc-8924-5db31d837278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3592a9ef-bcc3-4dff-9549-a7e5775f2f2e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf3f36-0c59-468b-b2d4-06068501f59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3aedf82-ae45-4dec-85ba-486d40073ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ffbe1a-9d76-43df-936b-89a5f4fecf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b94537-c06b-4dc7-83f9-a20687a368a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402c62d-fe0f-4c92-8871-8ed4e900c7ec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710c8ba6-4b9b-4e20-9bcf-bdf8a2fb49f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3698625c-6574-4906-b04d-529cb3b9c365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec101db-cbd9-4d74-8908-d138d1655934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e30c3f6-e245-4c86-9923-e90f3ac0dc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1cb6a0-6843-4c78-bfdc-72d0c15c7bd0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba36c96-8424-4274-a4de-ca4abe856513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3fd857-84f3-474b-a328-08f376d46ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3df3caf-a6e6-4bbe-8dda-d2a8475959be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801d6ad7-b2d0-46d1-b8ab-eeb9e4bce686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7f592f-9a3e-4a36-9a50-f314b56c5dfb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b59bf6-017b-42b1-90c9-aa99a3a52992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5ff884-a35c-4761-9067-c52889a4c878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9871fa6b-655a-4176-914d-40bb113ca162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e43506-11d5-40b4-8265-edab916543c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcff796-2a95-4b47-8a27-98262437a6d0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7232f3-0266-4461-ba7e-98733e1b844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006a06a2-efab-4757-b553-a92b90c4e315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d06c3e-4b1f-4a48-a025-24c1aa3c6651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fedbff-b3a7-47f0-8e57-6de302e2b30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019b165e-fb2f-4caf-bb5d-f471856a6bc4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32afa6c-8388-4f74-80d0-c99d2510f543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a28a53-a4b2-4729-85c5-9476f4e3d481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a351e71f-7ddd-4a61-8af1-2f1971134282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5ca101-bc6a-4b62-8dc7-e979eb56192b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7aad65-8b7c-45d0-8a56-77c5a817c1de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae2ead8-cf10-40f2-bcbd-fca113abf446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcaaae9-bb85-4f57-96a2-bc4ad5747497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467b2d62-0215-4a88-b841-a0c8bc6f9d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019127d2-9bcb-4a26-b274-2c474b1a3425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfdd818-5219-47a6-94f0-f53ce28a4ae4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c518efe-27dc-41e3-864b-d77820631414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0582af3a-3e31-4f75-ac46-ef26e483c428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130b684d-0086-42a5-a9f3-d3a29b2752cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdadc14a-8a5a-4144-ac63-61f2d2f4a93e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "296ef36a-715a-4752-b61b-a423ea36fe8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f7303a9-549d-4fd6-9a60-d725da10b1b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0342d4-e866-4c05-887a-b2eb2cc15936",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2edb98d8-1b5c-4c29-bb3d-05972f46f4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0211b99c-70da-4980-8beb-abf29a47b5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b31d127-9ef9-46a9-a01c-30fb040fc7a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "156b0405-e968-421e-a71a-0f8bb152b3c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a9e455b-a573-4971-8262-2c187a8ce075"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2f52d23-2b79-4c9c-9619-d77ac3ef04ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b662b13-5b1f-469a-8d23-627b681dc7b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2715062f-272b-4c3d-96a6-32992d89d223",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2a5dbb6-3f2f-4500-b2ea-36c0dab6f335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501c8aba-4505-406d-8078-fa3ec980f2a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a89906fc-919b-41d6-8c4d-6e151a9a031d"
            }
          }
        ]
      },
      {
        "id": "fae8bda6-bdec-4448-a296-298f0fa2522d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b0fea51-d20e-425b-a254-22d1fce22262",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b96004b-6633-4ea1-83aa-14a3e5d39b90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b5eb76d-0a69-4356-9774-51ab6d8f08fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a58523-338d-4073-9113-31e47a71ccbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04f611c-fe76-4012-a70c-c624a78a3227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e019ce90-0b26-401e-97ac-597a8885d91f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c108ac78-8060-4e72-b175-51a5d8097c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a63ffe3-530a-46c5-bde4-de77cf775add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e774d87f-572f-43c4-ae68-a61f2fea27cf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e372e826-68e4-4766-8448-5b3c190b75d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641578b0-5afd-4516-99b8-6a656e4f6493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631ab800-0224-4f61-9574-e65a276024a1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7736ff-c04a-44ef-bfd6-42b3302f9870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31947de5-ae59-404c-a8cc-86437bde9ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368e984c-3fbe-420e-adc4-5d4310854554",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe0138-95e5-4edc-9bb5-ba111383f687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b527b85-411f-48d1-9f45-c54c86db0d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf9e140-4553-4897-b633-425c8e69f5a4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a639903-8401-44b6-88bf-b9a44515e819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a63bc25-4b58-4cc0-9009-5bd563ba0ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53300dfe-9af3-49cb-982e-0614944bfd75",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fae827c-da00-4dd5-b18e-9ed697b3032b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4900bf-55b6-473b-9d88-a8defb02c385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4757c2-0060-42ee-97bf-3ec1a69f5cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf5d67-8640-4f68-9f4c-9478d5f6de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c40fb49-1e7f-4fe8-907d-5aa7d51f6c4f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33295d19-664b-4ff1-9a53-4b97c489ba6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af10ee9-7eb3-4f94-bafa-5567ae00bc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c3170e-2fa3-499e-9d7d-607185a84945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15851a07-0717-4074-af2d-1085781c1406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727aa3a1-7d8b-4e15-93e9-1d102ba46997",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb23b91-29f3-41aa-9c97-c5a8906cdd72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de590ac-4251-4b43-8a5d-c8e8ac81706a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d08ae8-3d6a-435a-8f87-e23365aa6c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe982312-547c-45fb-95b8-bf630f015616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a8a3e0-0e6b-46dd-a09a-a23fb3184c52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bc0ae7-2338-4aa0-b360-3a85b607853c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8d6253-b13f-49c5-90d3-28d85edd7af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2779bf-886b-4962-90d8-fdbf0c36923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ea5a69-c6c7-4a05-8d47-56beb570c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5a7c01-5f52-42d3-8d65-e8960a975e68",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fb57db-5119-4eb9-a009-e2aa49cbcdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ee9882-f863-4bed-9d6a-b126d3f74942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035e0cf8-bb36-4ef3-92f4-0f648c19b60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365d79b2-8b59-4d68-b228-553dccd1d4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c008f64-e41f-4422-98d5-2ba47877cbd5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb2b50-5653-48c7-b1c1-d27b0da930bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8128cc8c-23b7-4f3e-b612-1b78369a2700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b613d35f-6956-41b2-99a3-241d9a1e8744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3ca370-eec4-4b08-8a8c-b07765084582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abff274-d691-4029-90f3-078d07932071",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec5d025-dfb3-47b5-80dc-985efd32a851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f0ec12-ebfa-405a-8e4c-260a769005ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c22fbd-c843-4963-8119-780fbf05bc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd5a93e-6848-4b76-bf9b-805f4eeb7785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3fc5c-711f-49ed-b6a1-51bcd67e6ea3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1306eb-dcb0-477f-aab3-e621aeb8e679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa994d8b-a08d-45d3-a63f-85f2d70e8144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ff9462-b6c3-44a0-8748-907af17b9572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4a8d16-8b76-48bc-8d52-7bfa53cbdd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc03e6d-ffe2-4774-83a9-c158a0600760",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776c8d55-c34f-4b52-9296-bab7200649ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9242645-cfed-49cf-a294-9aa97e91f72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95bbd2d-08bb-443e-8806-2f7af011f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343b3a16-7639-4532-af80-a12f268c74fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cc0220-bba9-4fd3-bfcc-77693b89e2b4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df17170-be6d-4c21-9f51-6a0f6e16bd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdab619-2bdc-4ba9-a6c4-94df5b5f248d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc06e98d-ddbc-4a7e-b007-b403367053e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6283e6a4-25d5-416d-acdd-1485b9184e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3339a318-55fc-4b68-a338-6567fa5dee9f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158c9fc-f358-401b-a1ab-6e060a60c549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bc7ccb-a381-4000-99bc-e03934f4dfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cfb1e7-f6ab-4670-9322-cbe557d286b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b53799-56d8-4335-ba4c-98754839115c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d757a7-8229-4628-8007-ca1a31d0fa2d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec53e740-5594-4043-88c1-9558a4f95ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bdde22-d6f7-4484-871d-378c362072cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdbc32c-d314-4cad-adb8-0d0386489b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45993a43-9293-4118-a3a2-a706d7c3e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bae6b4-8c2d-4bf2-bcd1-0e357066d964",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff13b621-3b9e-42b8-afa6-0ee3f4e91256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f1c4c7-be46-4895-9c88-bd788406f1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9a5009-bd0f-4610-a6e8-c8ad63e01a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8752169-1473-4ab3-9f5a-e345be89260a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8966926d-25fd-4351-a406-94d98107ff85",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a74583-46c4-4148-a3a5-9f64d57d3b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a79ef0d-f0fb-431e-8e34-b4a1298f817d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cdd660-da39-4565-975d-0927a186151a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2785427-9f3f-428e-8590-5f2bce4601ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a7ea6-e7d1-4bba-8256-b687efeae3ee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fe9b42-b08e-487a-bbd9-b4484e544266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3804bc07-37b9-4422-9ecf-c11269ec7cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee99a9c-ccb6-4216-a7d7-e3bbb8d45e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df9ebd-cca7-41e2-92c6-b10ab8fc2ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ade723-0ae1-4f11-9e5f-11cedc0a0eee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee7714e-6443-4e78-bfe1-a3438af77403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19239ca2-191e-4e27-8ab9-0aea729f719a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5696437f-af61-4d8d-9891-7b11ac121601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be63124d-e3a2-4c98-8bdd-fcb1ab7dffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975c9a33-77f0-4baa-901a-5116ee0870f7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11a6f12-7d41-4366-8122-6fc531742402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0466f14-4a0a-4b03-be35-88350ccd959a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e481b-71e6-4f1e-a27a-93326ec1fb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe62b21-1d36-47dd-9fe3-256fb6175b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86195edd-d73a-4544-a6ed-ad6650a7b411",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffff4e43-c82b-47b1-ab5e-d0b4636ef23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6955fc18-95d4-43ce-9f07-16d981bd60bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6396c8fd-6ab6-4302-adc6-2d7587d9636c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793d4d31-eea9-412e-aa4a-325bf96169e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bf74b0-4ff0-455d-b2f4-42746dce4f92",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace9c85-7413-47df-9d0c-291148083645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103df023-2f24-4ab5-be09-0793ea69d9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7535b98-7ad8-41dd-b1e2-600fca7fc55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9d27e6-9976-4b1e-a58e-4a44b3109bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d1e91f-ed73-4e32-9f8d-9871b3dfc2e8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a33db6-ae02-4dfb-82ef-6c279d96507b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9bc389-3ee4-41d3-99d1-48affb9def60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ab47ce-a908-4552-818e-84b23bff9f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c9540a-2d96-4e59-83cb-2d43f6651b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f483d746-2c6f-498d-bc0d-226a26b3d2f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6006d3a8-02b5-43b4-a693-468aa047be5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53604be2-77a5-4e15-87ab-b5468d4d6690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c886a9f-6816-40b3-836d-2e8a40a25b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb763ba-f749-4bce-8353-d2d6a9e2147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eca61a0-a62b-4804-aa71-80af6b61b8ef",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf312cfe-d9b3-42f9-aa9d-ea13718f0266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db113c2-4e65-454f-ac14-dcdbaa2b7875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e7038e-7449-4c80-b4d6-d3b70e23ba71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97030e59-42d9-4a9b-ab05-926559504920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6ef98-aa6a-4135-95c8-56c5ebd5b015",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aadecc-31f0-46c3-8bb6-078ea750b654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43455217-997c-41ec-8018-30043bb0c8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f304309-c7c1-477d-82d1-379bed726d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edec29f-1947-4ec1-91c1-f999e30319b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c888e2-ab72-4b2a-b5fc-ad0571a30c23",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff54171e-7f1f-4e60-8607-14801d0b20a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c4d74a-b180-4f5d-b2b1-46f5b8087ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1611c1-ff05-4bbe-a565-9c383c44f17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1ba30c-e459-4d67-91b9-be37d8ce9bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d3f80c-016b-43af-9ee9-a4bb7a239570",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb79b2a-87d2-410c-8ff6-9bbebcbdb584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af54b5b-02af-4c47-92e7-8d3c4b3ce939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d5ee5-e2b7-49a1-88fd-3e8a2e34f3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cc4c51-d43a-464b-948b-5e95ec997ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e051db66-76d0-4f25-bbb1-7236eff7c8da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e5982e-d9e4-47f7-81aa-04e2d266011d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b467fcc1-cce1-49f4-8714-7b59570ec03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef3e29-7776-403e-9123-d53a19d3964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1332710-8124-4f74-a29b-1abad714c8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d827cff3-4a9d-4e10-a660-f4ccf6e36748",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e08ae7-5ee0-44cc-bbe5-69e525841398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086cef34-a5df-4235-9e36-515b4c249dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c4a092-ef62-4126-ab12-223508c0622f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f373d2c-17b4-450a-9872-e92898a706cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6333f689-62af-4b95-80b6-7d738fda5b9d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366321cc-4e3a-4da2-a998-b74e9a8c0bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4df43f5-1034-4b53-8c21-854144af8f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82680063-d229-40a1-8316-cbeb8861e9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff22b2f8-8fb1-4e17-aff4-8615d9fecca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b7920-eacb-4bb1-bd86-5598350b9cf9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb023bdd-21ea-4096-8e35-8802e6a6c0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57007aa-ef29-4905-a515-a335aaa63e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72301045-2bcb-43ea-a3fa-a8bb3c70dbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98685b4a-0b9f-4fb7-bb56-5c5cc84f781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c93b18-37f8-4c4a-abbc-816f08780817",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4cfec7-039f-4f12-a3a1-34e645b1aa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966ff5d0-106a-4837-87d7-9a3f48185b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b20aae-2333-4221-9c19-7f99152190d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8de1b03-a35c-441a-ad0b-46ba70d5778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f29801-0965-4e20-95ef-67446ef41dfe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115f3daa-2d3c-4e59-ae3b-ec9e2994024f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f596bd1-b3c7-434b-b649-0c8eb3a3fc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808a53dc-9b8c-40ea-a616-5374c9eb0aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43177426-2f8f-4d72-8a2c-281ac9ca0277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bf2fb1-ef08-4a71-8ec1-6938cd926b76",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675dacb-499a-4f1b-a5f1-db376503c85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a05773b-6d51-476b-bf64-44816054579b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aac924-8344-43c9-b6d1-3e1e62d6be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e71b7e-bc91-4751-ad5e-6313681d2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e16e0-7535-46c2-bb35-5260222fcb42",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233ae52d-fbfb-484f-b58a-49ad535433b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e872831e-e0ac-4469-82ba-190ca2d167ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d50b6ea-4df9-45d7-82d2-ba666cef7629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ac6773-893a-4a98-abb1-0d54b22bafa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d76f1c9-584e-465a-8110-4f975550edeb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c18674-ec1c-4d96-8307-beb3ce18f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f1c464-0722-4934-8bf3-1d3acd344a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333e872d-0fe0-40bd-8032-f67c5133255e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab20748-4532-4b86-a11b-907b91e19a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ed6a06-90d6-414f-8e01-14a3c7598a6a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03baf3f3-23fb-4231-af64-0daeeb022499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7849bcb8-0197-408f-af27-fe41aa286913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0b278-6d1e-4049-85aa-930939900a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9981e997-6ebb-45cc-8ffd-cb0c7e95643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608fa07-3bc6-4e32-8e34-38d531228c0f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca764a3a-da7e-4ce5-b81e-a868dc4dce9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d91c63-fd9b-4de0-ae37-64274f27c201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fc1eb7-4469-447e-a5ee-ba49c31b5662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8e8cb1-0e15-40e8-997d-246b894543ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1962fffa-fa85-4269-9dd2-45afac8fb3d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0e9161-604e-4f99-9137-778418dfad4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2b7d64-ee32-4041-94f1-23086c09168b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140d2139-c34c-4875-925b-82569c90eb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a08e87-e94a-4ab7-8dcb-66d60e7b8beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91586d8-0883-4a80-a147-89047cd7ee41",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469e377d-acc7-4729-bace-13b30b4ffb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea18027-879d-4dc5-b565-5f5a09782f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3094c066-d789-4c00-839b-2c49e78b73d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259e071d-7bbe-477c-91e3-768361a05702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940cd3d5-318f-4730-89b9-eda4b3d213c8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020da352-8b2b-4815-b0f2-59e7a6f67b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112aa38b-aba4-4b13-989b-ba860dd4b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b6d17a-315b-483f-bcd9-fa3e9b230483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6145790-63d9-418e-a3e1-5b6112e79f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c292ca-060a-438a-942b-8239eaec4a3d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a1c803-3b65-40eb-8bb6-0e228dbf2112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e5bf34-a824-49a8-bd70-b99627768982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d4cf78-4988-4f97-acb3-d800481f72b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06fb2d1-0e54-4b55-a325-40e540d141f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c12ebfa-645d-4941-ae15-182bac41db89",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c1fcb1-e4fe-4c7e-8306-9614d6030688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dc4f4a-4a54-4c9c-8c27-914690e3fb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec2663f-5ae5-4dca-b159-e4a6dc130b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb635f9-1d26-4c88-8299-39f57c8bcb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c1566e-cade-4041-b5a2-702d0b3ace78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d776054-332d-40a1-834d-ccb620eb72c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2ec31c-54e0-4430-80c8-152cad510605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d9226a-717f-4458-b227-741ad4cd1b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f5d787-9045-4d69-9731-62226ba721f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88801716-055f-43eb-bb38-9f688ae30741",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e479e2-cd20-4457-991d-329f4fc1fcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d3013b-337e-457a-8030-5c484a1ee829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da4368d-138f-4946-8557-c291a8006aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d7e8bc-cbaf-41c5-b94f-400daeec8869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37329a4d-9c73-440a-8eb5-40374b7aebfe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d88f885-5a22-4646-90f0-bf4dc6d3b4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90bce7a-503b-4c0b-a000-eed0e0bddb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec1d58f-9e86-4ecf-95c4-fe96c04dc18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc8cabe-e05a-40cb-89b5-561ffba856d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54b62ce-aa3e-4e53-a855-55c8f55ce92a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6982a21c-a0a6-4d0e-a776-ff36350310de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5dd0ff-db4d-4596-b005-9bb3601002a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c04ce-ea79-4756-8af4-182b50bd30c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6995e3ef-12df-4601-af02-ec5e5cc698bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1625167a-807c-49ef-a0a0-1c300840047f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20f7c73-7981-443e-aea0-f2d0ec815f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a983498a-8c71-4c80-a5a6-c3811aed8df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2884dc2b-5fef-47fa-a022-2da1ec61fb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2266f186-eb3e-4652-bb64-3d452ba55cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d3d1ed-06b3-4fee-ac34-8a1d1dac4c2a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc86ed-3219-4602-bd16-3677d2a40436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f701e83e-0b4b-4be7-a9ab-e77c0dfa9024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea90dfa7-ebfa-4f1d-9bc2-ba451a3331e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e25178b-ca00-4b16-8849-69907a9218de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41287ee2-d8ee-42e4-a351-cc083ef32297",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f31b5d-106b-4b9a-8204-60459cbdc8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8425d1-fea5-4a49-9ad3-c16f4f182e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae4f78-38a2-4cd1-9026-d04f269c1bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718d630a-3ed8-4145-a52b-7858848960a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71b8392-b21c-47d4-8858-23a3f4e670f0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f691ecbe-29b4-4050-8947-c1ebe8c9039e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b452658-8ce5-4dfd-9296-f5c5856e10cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b81e56-f5a7-4553-ae93-ffe49f10e6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f0238b-60b8-49e5-adec-f96a2330f520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d201a6e7-22e6-4d43-8f3a-51a2de45a8d4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe33617-289e-42f1-a8cc-05e9e2fb2901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c65ea8-4619-470a-b2ff-7db97cc5e460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32250ea-1624-4963-9844-d2cadeb55762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f80c35a-2767-4f5e-beae-aeb7e0ac9e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8044aa-4dcf-4e76-8958-3bd49d22acde",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d6720c-8b9b-4bc8-bd33-6e4a32504abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e51f8cb-f72b-42cb-97b4-d339310f66cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1139a35d-6fc7-421d-b4b5-8725c829bfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06589b7-4c46-4500-9c37-2808ebdc65cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb95b384-82a0-4705-aa16-2e858c0d9caf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcffee3c-b49d-405b-911b-9a540258783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feead36c-5634-47b5-8ae6-c837419b716a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82f1896-93a2-4827-a7ba-7a5b0c4abd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445fba86-a43d-42f9-84e9-dd45670cead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3342d5-78d5-40d1-a464-541dafa7b624",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc020ad-e231-4716-b49d-197d62247065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039bec7d-ea2c-405f-9325-98af78f40630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd223fb-02ef-46a2-8e55-5ba24af5db3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1531d50d-7b73-45eb-8bdf-5fce2e295c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37801348-1f6a-4c82-9b5e-f413f8aba4b3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c9665e-6d84-4e5a-97b6-a0812fd12e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c4cc95-ed70-47c3-b712-f0bfaf5f7325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0fae8-437d-45e5-aa43-3351d853343d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0c21aa-529f-4177-8e67-5c74fa669ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248b7406-391a-4485-b619-f573c55960dc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0478530-faa9-489a-9af1-73742b1ace17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698d13d1-7df8-4030-868a-6a4588b8236e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355d7952-ca8b-4d1b-ada1-63d0a750cf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65e7e3f-0674-43c8-afa6-6d2a18b1ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57588aa5-8143-4eda-a3eb-4f6e0daeebae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf866c7-5771-411f-9df0-dd3fb3062d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4543fc20-69aa-4770-bf2b-70cdb3222e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2bc30-3293-4e9e-a855-dadae0c0285b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800e86a2-1c97-4bf8-868d-2bcdcc89f8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff9cbfb-35ec-45f1-bef0-6e8c561c123a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8daf15a-f8d6-4751-aa85-f34e862d7eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0856f0-76a4-4781-8525-146d1acb52a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be3662a-2762-4fa8-a5f0-3f425bf88ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144ff74f-f802-4e29-83a1-ed1c41beb936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913a1e78-a9d6-4ca2-90a2-11713611d8e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db2c226-3ee6-4022-8324-a9a4e5072fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7345daf-9631-4ff1-8dcc-ed91c350f93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd069a53-b9ed-49a5-ad4e-e8582ff8d930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3613ae-75ff-4220-8b1c-27f93a82782b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82e74c8-ea1a-42d8-9041-5b2035b3e676",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ec7f97-07f0-41f3-89c9-28ac78cca207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d8dc0d-996b-4e95-8b47-5d5dacdf1938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a322baab-999d-4eab-8467-bd8199e92864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83380e19-1227-4ed9-b033-751903d15ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeeb0e4-9fc8-4339-a2f8-f9bbf1308252",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc3696-36cf-41af-8ece-718eb0d4a555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccdf9a8-796f-48b3-8212-4eb3f3e295b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c172635e-4cf1-4469-9f6a-2696fdf412d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b33b5d-0f51-4529-ac25-289ea270097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf26870-f404-4aa7-8532-7b2acd3d35bd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6a19f-cef5-4054-8f70-f0085b3f7693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995a58e3-3a10-43b4-aa91-7e3db2796cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd73923e-50ba-4636-a0eb-9a2dae432a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03db3e4d-d66d-49da-8f1e-dadb2f2935c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14acf7b1-cf6b-4f29-98b6-3a31661b75f7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51226fd3-6135-4467-b431-dbe9e3b4ed5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4c68e6-361d-490e-9825-92f287b5d2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3402b-3088-4e1e-b90e-9da2a374ed02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937fcbbc-22c8-41d8-979f-10e4c97ab083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf7419c-d7b2-4b32-8aef-91d91193cf85",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200a1370-17c5-42ef-8138-18a71ed2ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d009e5d-2a5f-437c-a26f-6fa1149ad5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61088a-235f-4390-9f0c-07f360c2fc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33ffc71-a2bf-4e3e-a048-5063b8283f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9799fb3d-e385-46b0-abdb-e24dc08b4664",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572901ae-a2d2-4654-88d6-42bba55122d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16135a8-b3a5-4cd4-9af8-213fb9c6ee71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f58aee6-c983-4897-8347-dc64d830b2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db54840f-9bf1-4fb3-9710-69c474aa8c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283ff766-4d8e-46c3-b9cb-e79954536f6b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afd323c-20f7-4695-99b6-dfedef8643a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd50991-23ae-42ce-9fab-5ae0ac55c091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f190be0-7130-4278-978f-c3d30bced0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5616b441-a689-4624-bf72-399a7bcfd273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32007f72-4ab0-4e46-8011-0f532f481450",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab4d62b-00d9-4b09-bffc-d3ced177ce0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841d1e92-634e-406f-a1dd-1275e0e7d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d34ca53-2d81-4b2b-bd98-8530a90879b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e22544a-f62a-4094-8c76-20334ddd5f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f143ec-f4c9-4375-8514-7901673465f6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140e43e0-4eb4-484f-86da-ae419b214264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1372b297-017e-4c82-97db-616cf3ad1161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc163e-febc-4658-afaa-81ceb8f60458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a02dd6-0c5e-4481-9e12-120a199e22c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efab42a-1d1a-40fa-8600-3cc93abee0ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf88e72-786a-48e3-9f13-1515b3e20592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a2363e-9b1c-4a8c-bb3f-74f66cbc15c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c616bc-471a-42e8-aaa5-6cbc2f112bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e17e380-3735-4efb-b775-66f4222bba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a2339-0a8d-4e93-896c-273995a5fd01",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5378394f-178b-4b44-8dda-b93acdce413c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72aec077-28d9-429b-91ff-3a94caed4649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e44f1b-ef06-4a87-8ffe-76c89fcec7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c410b9f-1a86-41be-be9b-4e8a891b4729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd15ad3-a329-4c75-91ed-a0289a751e4c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c9206d-7890-4796-afe0-3b5be446c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5b6b72-7e6b-4857-ae90-acfcdea61ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fe8fc5-676b-490e-a8cb-cf1c86f7c51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fb8de4-05b8-4a23-b919-8d0fdedb735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a389528d-8ab3-4aa5-989a-dda92fb1423f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2766fa6e-6d66-4c30-9163-65bcd4abb553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d19f9b3-e0e2-4072-a3fc-90ed1c163b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d321c3a-a01a-4acc-a358-b2bd42b3fd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147d9d8c-3c71-4a83-b8d4-f9d4b4c2b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae95173-c108-4810-b435-a59b3092ccb0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06df129-29ad-4dc7-87bf-25a2355b7a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14abff43-92d8-48a8-b5e4-2786a9f7e409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3a73d2-8eea-41e9-92ec-3dc219984427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c78f077-fe0c-4f20-be45-c2185c14f0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae997a1-660b-45d4-a93c-aae19279b980",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ec8d9b-9f68-4644-9a27-d1ffac645107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f202288-bdaf-4c99-8d12-e9a326582eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149908fc-8db9-47f6-ac23-5901a5e86dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c60d6df-fdcf-405c-9d13-6ac0c332b39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f759b5c-62c6-49e8-966f-939f17f9cf2a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffbe80f-bbea-47c9-91e4-bebdad7db83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1308d25-fbbc-41cf-8681-72c743e3743a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2debbad2-d866-45cb-bb5f-8705a855c446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a81adc2-6095-465d-9e1a-095b5aa6b7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a39fdb-d5cd-4a5d-afdd-f54881342eca",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4afe6c-0801-4044-acec-6c704652d1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe4aacc-e2b1-421b-b358-3b78da25c1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3841422-14ee-46ab-94a4-c587bc32bdeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8888580f-1d08-4764-afc8-ade5a39ba898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e87425d-6dfc-45b4-93dc-ac7f5c24a533",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d7f5ce-0d0f-47e5-9b6d-9587b77511bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866b76bf-c5d9-41cc-8342-46ecf8f3ddb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791570f4-de21-4e26-b06e-3865e547bd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b1d86-c88b-4861-9a2d-e7a0cc2c27ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02885bc4-621a-4985-9108-65d7c755b036",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3622e37b-41c3-496c-b11a-8ef4acefc9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e7761f-82a1-4216-92eb-8d3fa4987194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05048bd6-1abd-4127-9ed2-b84b495d919f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e36f352-bbeb-444c-bf77-aba3f7b5193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502b4152-2255-4f99-9cf7-6fc2b672c9f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d235a16a-6a91-4d59-8183-0740ce697235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967d061c-773b-48e4-a98d-277a041195c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390d366f-a827-46a5-8ce4-8c94875a5780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69ea784-f22a-4a70-bd8c-988e69400614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8287d6-f140-4e48-82c2-965fe3d2e834",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0bf723-7678-4657-a29e-14716703458d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcaff8c7-9022-4a40-a7e8-dcd34ba66986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb9c477-112e-4b0b-ae31-04bedaab3f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f709baa1-60da-4700-afa5-618fab2d364d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8de87f1-7eb6-4211-978b-f125c59824b8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79f2c46-4c66-4158-8397-994fab97bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde74e7b-297e-47ac-9139-85b03bc0b6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689ade92-861b-4b3c-87d5-da3b974c2230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b78e9c-15b6-448f-80b6-8d1fc64f8f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb20b5d-1662-481a-b480-c4ed66f07d0a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eceaa0-4bfd-4302-82f0-c8e30319f335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62274375-f3d8-406e-89e2-6ad531e20733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911fc9cd-a327-4ec6-82ad-e5fefbf8712a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8865411-7750-442e-a66a-1202f666b075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507c92c-8d82-459a-b420-36def948eff9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17aead4-79dc-42b3-9b77-344bb48f2d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700b9e11-582e-4a9c-9f26-f4a07af440ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808a0759-e807-483a-817f-4c2f171a1d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807a73d7-c011-4eb0-936d-cd6fe9b76299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48fd5fc-7a6a-42cd-b459-16f8260623b3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd9aa47-8654-40fe-bee8-cdfd98e9da76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf03e19-4c64-4069-986e-a1ff0419fbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5e7a31-7690-4f1d-941b-14c7bcbc8cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209436b1-8336-408a-a8d0-1b774f4c5e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf46aa6-59e3-49f4-904a-13a3f1e812a0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b0bbf-87e0-4af8-b7a0-690ad7a34c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a17911-6a06-4bbc-97aa-4c63e6f071bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20840f48-a707-4b1f-ad0a-4f2535c4e0a9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c900af7-86b8-4db5-8940-5f19af69b9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c00f10-fe87-453f-9cb1-110155880f28",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf82026-a008-4c67-b8b4-2a601e77c46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3717e744-364a-42e6-83d4-c3120a8d0e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da66f0a6-408a-4df6-9af9-e9b4944368ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2e6804-2579-4d60-910c-8a354cb3260b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a876a1d3-596f-44e1-93b4-ee640eaf4081",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23327d7-f2ed-4490-8873-c7c78b3014a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c27150-8b8d-4773-a743-bc9971d90b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f019848-d4e0-4c5b-abc3-1caab4a9f272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f6bb0d-0a5e-410b-9851-741e7924edfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a02319-7bf9-4322-949c-a26da04c779f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af56bcc1-9a89-438e-bf40-2d66a0554104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39c07a6-dec0-4736-a118-76cb85553a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c910d8f-579b-4ea9-ab40-f929ef174130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c297f0-75cb-4a75-b776-df18518e43af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c80e89-8fa0-41d6-9657-9dca58a4528b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f57dc6-7d62-4455-a2a4-a00b0e829416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3844e92e-7d3c-453f-b1a1-083541190cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4d40a8-a0dd-4657-b2af-8b00c8cb2897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fd6e4e-92f3-49a5-a7ed-d4f8229552c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84383957-d06b-491f-be52-cf22a80287a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d6adc9-1356-4dec-a923-744013b0c4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de475a6-fe25-4b66-bddb-9b5967ffb1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757e4750-af87-426f-9fee-ec40350e1275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc8bdf5-f22f-4d8e-a6bf-62cfc3403f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba4cc9-9b68-4442-8b97-720df0af0ea7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a055f6e-db75-4c9e-8843-875b5eba0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4df977-72e5-4201-bfd3-5f0f67b3cc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f2e58a-98bd-4724-9b0e-7b55f0f70eab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24321304-1ce0-47fa-9ab2-982aa6172ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22880e13-8e17-4b17-b91e-8165af3f5673",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1fd102-8a2b-4dd7-8a71-234bdd1f9952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a79e33-82be-4585-a63f-55a906669dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b852bc-24da-44f1-89f3-793214575041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50afb1b5-f9fd-4ffd-a1fa-f5a7ee976e85"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "612dcadd-2344-4b1f-befa-1d0084682452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f942641-e1a1-4a39-bd17-399f47f93e31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81767a7b-738f-4337-8077-0bcb9bd76b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbdd61d9-4c7b-40b5-af7e-343166af86b4"
                    }
                  }
                ]
              },
              {
                "id": "9624cd18-94c2-40ba-acc2-4dac81e989d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c3abf80-65f9-4536-9267-eafedc09c68d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bf2e9d-fe09-4f57-ad0e-90426ed40374",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ddbd0534-5102-4d4e-bb6b-da915adf1594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f88a0-1993-4bcb-acae-372660e724c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dbdda4b-0680-458b-836c-44985bdd97ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56160e9f-cc12-4642-bd54-c5d6e11853e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9f0e576-db84-4c1d-a8ae-f03a761e92a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee1ab5-4d5d-44d9-9f9f-3a25dd985104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8de53b5-2db2-4006-b3e2-ff2ec70328a9"
                    }
                  }
                ]
              },
              {
                "id": "d820e7a9-e04e-47b2-a048-37ce7adc8419",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9451caa-12cd-431d-a70c-d3c369f8b3f5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2c4eae-9d1e-45ab-960e-2c9848223365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "845a3c99-0e2a-4ec6-b486-db2e0ca3a70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a09c01-4740-4916-8d44-880d4e7833e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93f9adc-ca93-4ee7-8a42-9ee9aaf6e908"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b43bb6a-62fc-46a9-b19b-642efcc26bf9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a34fe010-e28c-40cc-90e8-e475785784df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7bf7500-4209-4093-8ddf-0eaaf485c6a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95dd379a-7ddd-45a2-af7a-ee0b62bcecf9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d691533f-989d-40ee-9570-09a836632384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94d69271-6de4-4d1a-bdf6-2fc956e57fa3"
                    }
                  }
                ]
              },
              {
                "id": "908426f5-74fe-4da9-91f3-dc781bb980d2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b94c24-bdd7-47bc-b6c3-ba8cc4c2f834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f532a95e-2b61-4e43-acfe-51c7f87fe776"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7db7729-4dcd-496f-bd1a-ba1f5a112bb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4c24505-2fcf-4da3-a4d4-4fa9348d15d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "729806c6-36a9-4d82-97ec-2440c9d4bda9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "629e27f1-6ad3-477b-b5cd-beac49c9cf34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7efecf35-ba1f-410e-9032-32bb0c07d8c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1209e4dc-f922-4b03-8c9a-39b2cf536b83"
            }
          }
        ]
      },
      {
        "id": "df8879ff-1ca1-4813-9091-a45622564786",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "62e7aa1b-16d6-4102-a9f2-d31ccabe3540",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42240fa2-0002-46ee-a202-a3c410b145de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fe08d93-bc41-4579-a1ce-aed66a37b6ec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f57d568-ec25-413b-9799-4046185126a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa69f67e-9cdb-4f6c-b330-e952ad63d1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ece4fe-8428-49f4-82a2-35db2212cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36911969-d680-4f24-a723-6c62631684ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9bbdfec-996a-4d78-94b9-77d7a01ee784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77d2bd28-21ed-4a7e-ab50-213750374dca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4045680-fdaf-4cd8-967b-0707418f082b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c553a86-2d6e-4594-ae10-fb8f823d46bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d75071b-c59f-4bc5-bb59-f60aaaa89cfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "499c819d-4c3a-42ac-adc7-e7a2ca772e53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39b7ef05-fb70-4d31-b073-29f461a46942",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd813fb2-e5ec-4d65-923c-7eb915577b75"
            }
          }
        ]
      },
      {
        "id": "ac3b026f-6592-498b-9276-94972c6774d9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "acbbed44-8e53-45d5-b150-501929910816",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79d8992a-3f0c-40c0-ae41-31ecec3c5940",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03f1a41e-84c3-415e-9798-9cc4ac4a446b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b665e877-b86c-4341-9848-8969d23e0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b212bfc6-e97c-48a0-95cd-68d8ce0cfeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911da2dd-ff35-4260-be62-0ff3d9284bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27f9f25a-0d90-44ba-940c-813851e9c1f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a5ba27-67e7-47b6-b87d-35139b16a1b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20ae2db3-cbf4-4d44-9237-553234f31db5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f298fb7-53bb-4d5c-81cf-fe1e9804eea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6007bfe2-08b2-4a9b-8e9c-e9d0337db6e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4964bf4-54b6-4ffc-baa4-811a34d1344c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c35eec4d-4630-4584-9a39-3f3bb3f0c857"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50b4aae5-e2d0-4d35-9e1d-8dfd3222c0eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f316544-ac0d-4888-9560-b83c64d9e1ce"
            }
          }
        ]
      },
      {
        "id": "1001d3d7-905f-400e-a5e6-bf1a64553c66",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2afd04d3-02cb-463b-9bf5-38996de87740",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22164ebe-6c9d-47e7-97fa-cf8427be7aaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e690eae8-c744-4426-b237-4263de68c561",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b110426-8163-4085-b257-bff410dbd879",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b35b59-1e9a-46b6-afa5-027627b547cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da7ddc-437b-40e2-9d37-25b6f373c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf3a454-f0b0-43b9-9af9-ab17f4666c96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78fd1500-137a-4641-952b-40779cebe4e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c8bdba5-d920-4a3d-8b41-883c3e7c9b4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d33b20f4-89d3-4e32-b460-2ec991f82b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe789a27-86e5-4f09-b861-c8369a899951"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e2938fe-a8ed-4291-a792-bee18bc42bde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "063e2a33-e770-46ac-b123-0bbc02b12df9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ba84038-9b59-45b8-8031-dabbc12fb693",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae785d7-d508-4496-8e14-dbab8058dc1b"
            }
          }
        ]
      },
      {
        "id": "12a61655-72b8-4ad7-8cb6-fdf1e1cb21fd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2426d990-ba00-4ae6-880d-ab04d904c591",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8d4ddf9-5c30-42ce-8bb5-556b54f22c28",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "30b8e7ae-87c6-4eea-969f-2b8d95982e74",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b932b508-6fe6-467c-b3e9-6f3e32a82cd8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "858b7bdd-f0b3-442e-bdcc-57e752751969",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 353.861111111111,
      "responseMin": 7,
      "responseMax": 9792,
      "responseSd": 1394.9848268772726,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719708147246,
      "completed": 1719708245042
    },
    "executions": [
      {
        "id": "b50a510d-a85e-46a6-97ba-3e1e930592d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "70e3bf68-c438-445d-84f0-50bc8da51279",
          "httpRequestId": "d2f14788-dd00-4dd9-88bf-b8b6953e4c11"
        },
        "item": {
          "id": "b50a510d-a85e-46a6-97ba-3e1e930592d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dc0637af-d025-43b7-b5d0-945752994fbd",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "d48b75e9-e0cb-4cdc-bb7d-b7e3d4cc6835",
        "cursor": {
          "ref": "7fd0d4f8-b13f-4f42-bbfd-fd92a9bcb823",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "580e7f97-434a-4265-ba51-e29949954055"
        },
        "item": {
          "id": "d48b75e9-e0cb-4cdc-bb7d-b7e3d4cc6835",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "58fc7fd6-906c-4264-b3eb-16b9dd1cba60",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e268e7ba-085f-4869-ae8f-4cef88078bc0",
        "cursor": {
          "ref": "03eaa1fb-0af3-4ada-bd8a-56a60322a81c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4161b1c6-ad9d-4f3e-a594-e5dd823d731f"
        },
        "item": {
          "id": "e268e7ba-085f-4869-ae8f-4cef88078bc0",
          "name": "did_json"
        },
        "response": {
          "id": "920c2fc2-3934-4e9f-bc53-0c9d1e11dfe3",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244faaf3-9e2c-4137-acf1-1d5263ef9fc8",
        "cursor": {
          "ref": "f1b8ff06-75f9-4316-9b0d-575da7a51d0c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31c1567f-9da1-4801-885f-b09a1c7b0205"
        },
        "item": {
          "id": "244faaf3-9e2c-4137-acf1-1d5263ef9fc8",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b4d0554-7da4-480b-9fab-a064d4b9637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2249,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244faaf3-9e2c-4137-acf1-1d5263ef9fc8",
        "cursor": {
          "ref": "f1b8ff06-75f9-4316-9b0d-575da7a51d0c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31c1567f-9da1-4801-885f-b09a1c7b0205"
        },
        "item": {
          "id": "244faaf3-9e2c-4137-acf1-1d5263ef9fc8",
          "name": "did:invalid"
        },
        "response": {
          "id": "6b4d0554-7da4-480b-9fab-a064d4b9637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2249,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173a6fb7-7860-40b1-8840-5d9884a4d4ca",
        "cursor": {
          "ref": "3a0f1ffa-c770-42b6-bd45-9792f8d1ee7e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b1ce4ef-ab22-4e60-ab58-d15e8b7e21ee"
        },
        "item": {
          "id": "173a6fb7-7860-40b1-8840-5d9884a4d4ca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b1cb0a5-f4b5-4756-bee5-488e2aa5fc0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2595,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c50b26-43f6-4f98-9003-e01bbd3982d3",
        "cursor": {
          "ref": "a63b9b99-bb1c-4cb3-ad79-85ed88e50c0f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "31a50158-08f2-4c26-8880-04ab2d2f8d35"
        },
        "item": {
          "id": "26c50b26-43f6-4f98-9003-e01bbd3982d3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "91ea9dfe-d709-4c41-9fc3-910ac241878d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2275,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee39c71c-0ba5-4d18-9b3b-cf37beafd9a9",
        "cursor": {
          "ref": "28da4300-e96c-4d33-a830-c60b1697feab",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e3a6db9-a35e-4ffe-959c-011ef5970d35"
        },
        "item": {
          "id": "ee39c71c-0ba5-4d18-9b3b-cf37beafd9a9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b0d9143c-d05d-441a-bdfc-30e231915feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be2fb32-8777-4b25-8ec5-9e134b315877",
        "cursor": {
          "ref": "830edd80-2dd4-47a5-adab-327b7b94dfbe",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "43c5c000-0c4d-4d02-8833-e60bbe3772a8"
        },
        "item": {
          "id": "4be2fb32-8777-4b25-8ec5-9e134b315877",
          "name": "identifiers"
        },
        "response": {
          "id": "656dbbda-f3ce-418d-b76c-a493829cb982",
          "status": "OK",
          "code": 200,
          "responseTime": 2532,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c12f071-05da-4dcf-a16c-9d55097960bf",
        "cursor": {
          "ref": "600b98e2-6331-40b8-800a-0251fbcf4974",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6421d44a-602b-44bb-a8e2-88cdeb3e19f1"
        },
        "item": {
          "id": "7c12f071-05da-4dcf-a16c-9d55097960bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b189fa0-7dea-417b-8c51-6c533547c941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd7e5b8-c926-4b89-bb01-46deb6ff108f",
        "cursor": {
          "ref": "87f11b47-7b8f-46d7-93c3-023d84904599",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e477d555-d826-48a7-817f-42c4a24caa94"
        },
        "item": {
          "id": "bdd7e5b8-c926-4b89-bb01-46deb6ff108f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ddda6b66-b014-4725-a951-fcc28360941b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dab9e2-88bb-42d2-9796-0c0d0d888157",
        "cursor": {
          "ref": "507f03b3-1a80-47c9-a9e1-7cc7c9aca712",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6da360fd-ef8c-47be-b5f0-4abac2c0c5e6"
        },
        "item": {
          "id": "88dab9e2-88bb-42d2-9796-0c0d0d888157",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a05fa7f-22e8-4719-ac37-986023b00c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72587c4a-907d-4c64-8403-bf5ed7216271",
        "cursor": {
          "ref": "f7ecdd85-ebfd-42c6-b9f6-d65cf2617581",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "71a0ac56-08d8-4c96-95b3-1504c3969af2"
        },
        "item": {
          "id": "72587c4a-907d-4c64-8403-bf5ed7216271",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5a461601-a7c3-4eb1-afb0-b29619256a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9bc091-c3fc-4b4a-8755-dadcdd1bb768",
        "cursor": {
          "ref": "181c6691-00c2-4a64-b60e-0660e973b79b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "191cba8c-a2ba-441c-9aa9-f7bba1582469"
        },
        "item": {
          "id": "0b9bc091-c3fc-4b4a-8755-dadcdd1bb768",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d9cb14b4-607c-4484-8e77-e75a1f9af7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35ad3dc-680e-43b5-8512-3d46eaf222f6",
        "cursor": {
          "ref": "98ed63e7-70bc-4d07-9140-d1f1495cd1c9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e3583d6f-731b-4f3f-8523-4633a7faf0d5"
        },
        "item": {
          "id": "f35ad3dc-680e-43b5-8512-3d46eaf222f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3ad117ba-1f4c-495a-83a3-15e86ba6da8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c173ad6-d828-4e9a-aa9c-73a746693b43",
        "cursor": {
          "ref": "7fa9d47f-15ef-4734-8099-c35ef3c53d59",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "95cd5f2d-c685-4738-ba15-4f591aab43c1"
        },
        "item": {
          "id": "0c173ad6-d828-4e9a-aa9c-73a746693b43",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e69ad07c-502d-47e8-8c59-2984cab573d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fea862-0f2d-4c68-a5d0-8399347f2d0a",
        "cursor": {
          "ref": "c3ddca08-a30b-4b85-ae76-625cc4245115",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cdc769d1-2a20-49b9-89ef-68539708de63"
        },
        "item": {
          "id": "48fea862-0f2d-4c68-a5d0-8399347f2d0a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b192b55f-5278-47c2-8154-0358ba85c854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1004af9-e131-496a-aecd-e757dfdb5d34",
        "cursor": {
          "ref": "b084de30-ba18-4538-b9f8-771a42a545ef",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0d033a61-92fe-4c1b-abd7-f600d68d5c3c"
        },
        "item": {
          "id": "d1004af9-e131-496a-aecd-e757dfdb5d34",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "28c9308e-44e0-4e60-ad7a-f74679391800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd3a8c0-3e71-4aab-bbb8-d74383c700ff",
        "cursor": {
          "ref": "be719b62-10f8-47c0-9ac3-1dbc6ae83a94",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a04bd8f0-2590-47b9-9382-791c0a6926e5"
        },
        "item": {
          "id": "2fd3a8c0-3e71-4aab-bbb8-d74383c700ff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "066d78e3-dbc1-4fe1-84f5-7f76413d2edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdaa9f-ab85-4d57-84af-55ea96432dc3",
        "cursor": {
          "ref": "501f7073-c49f-45fa-9d10-dada847db3f2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2f1a68a9-4295-44ec-bec3-dabde97282d8"
        },
        "item": {
          "id": "29bdaa9f-ab85-4d57-84af-55ea96432dc3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5dacc388-8394-41de-9b44-70c22f0e021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d75a21-a43a-4a1c-b031-1fc4c5d40dfb",
        "cursor": {
          "ref": "dff4ae92-8c23-4507-a111-9dfc0d445dde",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "134ae11b-6250-4e3e-bf8e-5300ed377cda"
        },
        "item": {
          "id": "24d75a21-a43a-4a1c-b031-1fc4c5d40dfb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57fe4987-5d82-4988-8e61-7b1c136309f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb25027-d018-4fd3-a045-06762cc7ae42",
        "cursor": {
          "ref": "a816763b-7cb9-4f92-893a-8039d7513a46",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6e499bf3-c3de-4a63-9ac5-9b08016ffcdb"
        },
        "item": {
          "id": "4bb25027-d018-4fd3-a045-06762cc7ae42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "62f8ddb9-ff06-4a79-a169-68787d64afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ccf12c-b238-47e9-a37f-5a813b984d57",
        "cursor": {
          "ref": "4c4f6172-d10f-4bd9-bc5f-bef5051e9431",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4df0a61a-8ed3-463d-a3d4-331a133b8d91"
        },
        "item": {
          "id": "f6ccf12c-b238-47e9-a37f-5a813b984d57",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "45363c68-3b12-40e4-ac56-55f0f67bd027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c1ef27-2d91-4f8e-9a6f-637fa81d7b3a",
        "cursor": {
          "ref": "3ad27505-437f-4eef-9b25-74ef7d9171c5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ddae57fb-53e0-4ce7-b118-c9fc69976bb5"
        },
        "item": {
          "id": "88c1ef27-2d91-4f8e-9a6f-637fa81d7b3a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d354a961-a998-4dd1-b2c1-676e5237d2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b56687-8c10-4d9d-a599-735b9c28e5e7",
        "cursor": {
          "ref": "740bde19-4234-42ea-a97c-20bc8b40bf0a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f9e748d8-8fa3-4d1e-8972-42b9162f0b08"
        },
        "item": {
          "id": "55b56687-8c10-4d9d-a599-735b9c28e5e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0a821f4f-864f-4044-b182-2ca097486df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f482f9-cab4-4b15-81f6-6702e543fe07",
        "cursor": {
          "ref": "a47e3020-7022-4230-ac4c-62de9138b282",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c57e3a6c-73ca-4a55-936b-6cc5a9ad9181"
        },
        "item": {
          "id": "d8f482f9-cab4-4b15-81f6-6702e543fe07",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7e465c86-2d19-40fa-ada4-f7260f5657bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90024a21-a1cf-498a-96e7-7e9ef95bc9cc",
        "cursor": {
          "ref": "5a8d465b-9aa9-40ad-b3c4-3023f93e5ee2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "26c0f901-f355-4215-9f80-2be6dffdefa5"
        },
        "item": {
          "id": "90024a21-a1cf-498a-96e7-7e9ef95bc9cc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9e70e3e7-d796-4fa4-8208-30007f41558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4039b4dc-9ab3-4afa-afcc-287fe624fc1c",
        "cursor": {
          "ref": "c85d3356-5674-4503-a094-c52e2b701c25",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0a3ad50b-4bcf-406a-9a1c-67b9eb583266"
        },
        "item": {
          "id": "4039b4dc-9ab3-4afa-afcc-287fe624fc1c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "690edeeb-de2b-48eb-81b7-93acebdd930b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25bea9f-c790-4216-92ba-951ba6a20e9a",
        "cursor": {
          "ref": "0c52d205-c6a9-4153-8c96-7c89a81fb0eb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "09b780b6-afda-4887-8eaa-254479c375a1"
        },
        "item": {
          "id": "b25bea9f-c790-4216-92ba-951ba6a20e9a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f3f208c8-403b-43db-8468-42b5ad22d203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1eec36-409f-43ee-b48f-6515abe8151f",
        "cursor": {
          "ref": "6740bfb3-cd75-49b6-9117-51d28af392e3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "620e9053-17c9-4c62-af0a-e0674852804e"
        },
        "item": {
          "id": "4d1eec36-409f-43ee-b48f-6515abe8151f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "20a44dab-d28e-4094-9d29-d525226ee2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9b855d-a3dc-4fca-978f-00f914ba77b8",
        "cursor": {
          "ref": "63760025-3575-4649-b865-65d4f383c3a6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3e809776-0e2b-4e09-9be8-422ff7a0b9ec"
        },
        "item": {
          "id": "1a9b855d-a3dc-4fca-978f-00f914ba77b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "219084bd-a9d6-40da-a401-e7fe1074418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1944d1-e7ca-4e93-b464-7c4ee2b2c6c5",
        "cursor": {
          "ref": "3cb49e31-b61d-4bab-8ffb-740970acee3e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8673fe1b-7990-4d79-822e-61485fe4dfc7"
        },
        "item": {
          "id": "3d1944d1-e7ca-4e93-b464-7c4ee2b2c6c5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f5343d2e-5cfc-460e-af28-bdc79fccd7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8162fa26-29bd-4d96-b42f-7a9961d2feb4",
        "cursor": {
          "ref": "fee16734-9b16-4bca-8cc2-0192eccb3fa6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bab275b-5b9e-4a6a-b053-a2959aba328e"
        },
        "item": {
          "id": "8162fa26-29bd-4d96-b42f-7a9961d2feb4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c76464dd-d823-4683-baf6-afab182029a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1f7db-3c90-415c-8144-1b254e815f8d",
        "cursor": {
          "ref": "fe0cd890-e47a-4622-b7e0-78a31d4b102a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "47e7b005-30f1-4016-8f57-fd6dbea0c264"
        },
        "item": {
          "id": "28d1f7db-3c90-415c-8144-1b254e815f8d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "82330dcf-4d6d-4913-97d2-72034ba523dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ffef37-92af-4bd3-a7b2-6cccaef06916",
        "cursor": {
          "ref": "53022c04-25fa-42e3-80e9-18946adb5619",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1b66c760-350b-4d11-b8c4-bdb264765e4e"
        },
        "item": {
          "id": "f5ffef37-92af-4bd3-a7b2-6cccaef06916",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b8841301-9854-4cd6-9faf-405f70c86ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809dc9f2-1a52-4bcb-b939-2e74f6d5c93f",
        "cursor": {
          "ref": "a54cd571-f2b9-420e-9eeb-2f52fe084526",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fa344850-2fc4-4097-bb3b-dbaa3cc6f8e9"
        },
        "item": {
          "id": "809dc9f2-1a52-4bcb-b939-2e74f6d5c93f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3c408ea8-f168-475a-8411-1fbbfaf40dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca3b5a-0237-49a6-aac2-e75b38ecb1af",
        "cursor": {
          "ref": "27c0529f-fe43-4f94-85ce-639521c6d2aa",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dfc52996-4ab0-40ae-b2a9-1092327411ab"
        },
        "item": {
          "id": "55ca3b5a-0237-49a6-aac2-e75b38ecb1af",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1a326ed4-4b30-489e-871e-d36251329401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb854428-6999-4c91-aa91-464538a38066",
        "cursor": {
          "ref": "871a3fd4-bc9b-4bca-98b4-feb8276b4b91",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cad0bcfa-0754-4073-b2f5-49e8be0170fb"
        },
        "item": {
          "id": "fb854428-6999-4c91-aa91-464538a38066",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "51c4d8fb-4f1c-49c2-b0e2-4a0efb8364a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83388be2-a06a-4748-80c8-d354f8e8d23c",
        "cursor": {
          "ref": "fb276714-ae74-47b9-97c2-c29e8e018e9b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc8f9fef-f4bc-47a4-83e3-26931a1818a0"
        },
        "item": {
          "id": "83388be2-a06a-4748-80c8-d354f8e8d23c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69eb5b45-3b00-48ce-b380-20ee4effd4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c24bbda-3965-4917-8c4b-aa89908458fa",
        "cursor": {
          "ref": "c4473263-0169-4c23-97b5-e1861f0570db",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bcc17a22-b750-4ea2-8a73-5706a3607be1"
        },
        "item": {
          "id": "2c24bbda-3965-4917-8c4b-aa89908458fa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0daa1703-b115-4a19-8f2d-7d4106a757b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cf0661-6e41-4a7d-8567-42275fa3a4c1",
        "cursor": {
          "ref": "8acc4273-8bfc-4abb-ad13-23acc3f1b53f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "705bd56f-f222-4742-8792-fe1eac96e574"
        },
        "item": {
          "id": "c8cf0661-6e41-4a7d-8567-42275fa3a4c1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31ccf1cc-260f-4bb0-aadb-52b8377d7c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebcf72b-86c0-4d3e-b528-b786b0c263ca",
        "cursor": {
          "ref": "7662de2d-158e-43c3-9d0a-c6ba1b938c8b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ee7a3582-09e0-48af-becf-920ad87250a0"
        },
        "item": {
          "id": "3ebcf72b-86c0-4d3e-b528-b786b0c263ca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1cc7cfe5-c9ab-4d98-b911-f1e50e1107c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04209f-ed83-4164-9102-d6272f0d36d4",
        "cursor": {
          "ref": "3017393d-9911-444b-9edf-e3fd96caf9eb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6d0aa1b2-686d-4e6f-9cc7-c6dfeef03ccc"
        },
        "item": {
          "id": "cb04209f-ed83-4164-9102-d6272f0d36d4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "413c230d-ddaf-459b-bd0d-be0897950523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0050c01-968d-4e2a-aba8-1c82acacb453",
        "cursor": {
          "ref": "119bc867-5908-4a7f-adeb-9bccf60ad812",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4ec2b7e5-d593-4b7d-9454-e13c1ed6c9f7"
        },
        "item": {
          "id": "d0050c01-968d-4e2a-aba8-1c82acacb453",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b9f9ab02-2d1b-45e7-b4f2-bada9a116ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba1422-dd14-499a-ae7e-09a953085328",
        "cursor": {
          "ref": "19baf695-13f7-4c0a-b6e1-53bedd17cc2e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fc735a63-1bc1-4d4c-9690-495d42ab38a6"
        },
        "item": {
          "id": "cdba1422-dd14-499a-ae7e-09a953085328",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7daa042a-02c1-4222-b12e-0f52eac2183d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d593d1ce-d894-4e50-85ce-4159526cb7f8",
        "cursor": {
          "ref": "dc964e46-b724-41db-a960-dfb084b4d319",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a58619b4-886f-4825-994a-4a604580a6eb"
        },
        "item": {
          "id": "d593d1ce-d894-4e50-85ce-4159526cb7f8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d1e4102f-7505-4981-bbcd-591c796778eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a2eb8c-6798-4a6a-bf0d-530b69227dfa",
        "cursor": {
          "ref": "24228b4c-f737-479b-bb3f-ddba3d7aa439",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0faf210-381f-47cf-ae53-036dc5845724"
        },
        "item": {
          "id": "22a2eb8c-6798-4a6a-bf0d-530b69227dfa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4200be0a-957e-4536-84a1-14cc3333d488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b09bec0-c1ee-46e8-95a9-1e548d91d200",
        "cursor": {
          "ref": "3fe23e38-a3ce-4771-abc1-090402865d85",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3470c37c-ad33-46d6-9588-b67d367b9cb4"
        },
        "item": {
          "id": "3b09bec0-c1ee-46e8-95a9-1e548d91d200",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6cad6f5d-5b2d-48b7-9108-ef985e1cf0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e77f9c-0c15-4202-92fd-76037834de8b",
        "cursor": {
          "ref": "83774f2d-4d66-44ac-be31-c19873ae2708",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5597d441-095a-4308-bae5-6714faf97ab0"
        },
        "item": {
          "id": "f9e77f9c-0c15-4202-92fd-76037834de8b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9cc99b75-519b-4e5d-8005-f12e1eb28d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1041a8b-19c7-479f-b247-09ce96626d38",
        "cursor": {
          "ref": "95c72a08-745f-4671-b65f-84fa5992156c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "17436085-8d21-45be-a7c6-2574ca841bf8"
        },
        "item": {
          "id": "b1041a8b-19c7-479f-b247-09ce96626d38",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d12c459f-93c2-480c-82c4-25e4db699884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eccdd5-197a-4e6d-9fd5-99680b1ed343",
        "cursor": {
          "ref": "4beee8e1-b2b0-40b0-a58d-cc94b5506a96",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1dbbd2d3-75a0-4fd8-b479-87c5f7ac8970"
        },
        "item": {
          "id": "97eccdd5-197a-4e6d-9fd5-99680b1ed343",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "de8fb47b-733a-4097-a356-435a4f08cfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe06ee20-abc9-4b91-98b9-910e74108906",
        "cursor": {
          "ref": "d49d290d-6388-478c-abc1-afdf02959d4a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b84d0c4-7481-4faf-9f4c-5c7308f28fd2"
        },
        "item": {
          "id": "fe06ee20-abc9-4b91-98b9-910e74108906",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8039a65-cb3a-4cf5-9db7-b956d6eaa2f3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b3fa2f-3f57-4db5-9f7e-8e889eff4b59",
        "cursor": {
          "ref": "7de0da78-81db-4195-b190-253808f43e0a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a853395-fd31-4f2b-842b-ab0db4c3a150"
        },
        "item": {
          "id": "31b3fa2f-3f57-4db5-9f7e-8e889eff4b59",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cbc41be6-6512-4cf4-ab11-bda5c55b697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fb4d80-a55b-4f76-ba41-a328d7672aff",
        "cursor": {
          "ref": "12cceb78-fc82-44ff-b3fa-445190f457d2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bcfe7cfe-e5d1-42e3-9be8-c3f38e8a7d47"
        },
        "item": {
          "id": "88fb4d80-a55b-4f76-ba41-a328d7672aff",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0bdeefef-e75d-40e8-8a86-8e09a5e4c42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b887f-1675-4be7-8247-b028abf6e365",
        "cursor": {
          "ref": "796463d1-4516-4408-856f-5ade7d668ae0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "494df2c0-8563-4be8-996d-f291f9d6e1ab"
        },
        "item": {
          "id": "1e4b887f-1675-4be7-8247-b028abf6e365",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9e5cc803-dc5e-4111-afe3-c7fe3f2bc526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09007ce0-af64-42ff-94a3-9830e524e7fb",
        "cursor": {
          "ref": "35e33609-46d8-4798-a56d-87ef42a47e00",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cb26d6a9-7355-4ee3-8f47-96db2c32d3da"
        },
        "item": {
          "id": "09007ce0-af64-42ff-94a3-9830e524e7fb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e6f11fec-eaaf-4522-894e-8f1b897c16ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056ffa12-da81-480a-a312-96b1e016301c",
        "cursor": {
          "ref": "5edae9c3-50c5-44ea-bd06-4c4b7f40d75b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "12da0a14-da46-4647-beb3-aef48edf87d3"
        },
        "item": {
          "id": "056ffa12-da81-480a-a312-96b1e016301c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54e9d063-4c6b-4907-a116-bdc21da5f4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c5f863-1474-4297-b8d7-44415c595abb",
        "cursor": {
          "ref": "1025ab0c-9c19-4f8b-8aee-640cf778ff30",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cbc7959e-4129-40e4-88ae-48abd03b21de"
        },
        "item": {
          "id": "00c5f863-1474-4297-b8d7-44415c595abb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "723ef8ab-6936-45cd-b29b-f4e77f279e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33db862d-d6ff-4483-890a-9430f90b9308",
        "cursor": {
          "ref": "80e54c59-9c72-475a-a90d-4b77f83dfe5a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4565aa4b-c812-4b5d-b9f8-bf86cf25b24f"
        },
        "item": {
          "id": "33db862d-d6ff-4483-890a-9430f90b9308",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "08dc7581-6091-4a42-9dd0-7dda5e8e3e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef966a0-a559-42f3-b1e8-571271a774ae",
        "cursor": {
          "ref": "2f03c50e-36e3-4360-8503-cacd8636d406",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "49afa1be-c6c3-485a-a3ef-68e7f34669bf"
        },
        "item": {
          "id": "2ef966a0-a559-42f3-b1e8-571271a774ae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9d5059e8-1a4e-4556-8a43-94ae1826598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8e41ad-dad6-4673-b86e-be9ab57efee5",
        "cursor": {
          "ref": "91b0571d-5436-47a1-a1ea-da755ee3c79e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b5908ed8-2c93-4fe8-a41c-4c9ec236f36e"
        },
        "item": {
          "id": "3e8e41ad-dad6-4673-b86e-be9ab57efee5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c733ea8c-b721-4400-a570-ed10e69ddee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3289345a-ae54-4171-b9ca-d2bc436aaa20",
        "cursor": {
          "ref": "5a034871-ed20-4d85-8db5-407866dd0d58",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fa1f7eed-1bfc-4067-bd5d-4ab15526b14d"
        },
        "item": {
          "id": "3289345a-ae54-4171-b9ca-d2bc436aaa20",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ba81cb0d-61f9-400e-be7a-876b7670bb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb9a385-09a7-4a4e-80a7-6a3ff81dc70e",
        "cursor": {
          "ref": "5c96d3b2-0ac0-42b5-b087-d3b9dcd51bf7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14a29e15-6fe7-42e9-9ac7-85e51e2b37e2"
        },
        "item": {
          "id": "fdb9a385-09a7-4a4e-80a7-6a3ff81dc70e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9b50bd49-8e59-43c1-a825-4b354d8251a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fbfb44-4d05-4d84-bc10-2fb755bd0190",
        "cursor": {
          "ref": "599b44e5-f2f7-412f-b6b4-9955aff6e486",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "683860da-9315-4079-8e07-0c1f866901c0"
        },
        "item": {
          "id": "28fbfb44-4d05-4d84-bc10-2fb755bd0190",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "97c730bf-980d-429c-ab39-d681db4e4c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21dec8e-3daa-4504-832d-df5858f244ce",
        "cursor": {
          "ref": "5836d42d-f498-43f3-8776-26599e782cc4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fdec805b-61df-47d4-87f3-9993dc0c718c"
        },
        "item": {
          "id": "c21dec8e-3daa-4504-832d-df5858f244ce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b8d88284-bcc4-4ef4-af61-ed2adad83224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4018fdb8-7d76-4752-8912-890af56d748d",
        "cursor": {
          "ref": "aa3b9565-623b-465f-98f0-64b0b9a3e21c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a3dc51d4-0e36-48ff-a001-a47b42107ef6"
        },
        "item": {
          "id": "4018fdb8-7d76-4752-8912-890af56d748d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "914551e0-6337-46d8-943a-f19d63202181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3770accb-b9db-42c9-ab52-1fffb7c78bb6",
        "cursor": {
          "ref": "21a38638-bad7-4af2-baa4-2e6d96dc8aa6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9e7d66b0-16fb-4ba8-b4fc-39c986e86e68"
        },
        "item": {
          "id": "3770accb-b9db-42c9-ab52-1fffb7c78bb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "89789d6b-16f9-4a91-96d5-87cb596515ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e4919-fd0f-4e60-a759-34aeb81f885d",
        "cursor": {
          "ref": "830506cd-eab6-46c9-bec8-7b1840283520",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "abdf63db-d262-4a7c-a8f1-6e601a648df5"
        },
        "item": {
          "id": "329e4919-fd0f-4e60-a759-34aeb81f885d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "204619e1-0add-4c40-8cb5-956354c5b381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fc5330-9758-41be-b1a7-0cc596344eef",
        "cursor": {
          "ref": "4144d8bb-43f5-4593-bfca-9bc2cca68428",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c8ac8189-0c4b-4667-9966-baafccdd64d6"
        },
        "item": {
          "id": "c3fc5330-9758-41be-b1a7-0cc596344eef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae144d75-f325-4289-8dba-28d2d4118422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316fdc1-5409-4b0f-a419-dba32ab374e8",
        "cursor": {
          "ref": "c3dedf93-0a27-40d7-be0e-bdc3bd49706b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3d3c5334-124f-4ea9-9cc6-cec30ac84a68"
        },
        "item": {
          "id": "6316fdc1-5409-4b0f-a419-dba32ab374e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7b83b2c-f067-4c61-8759-9ba2be61635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1fa3f1-7a61-4a25-81e3-15229db404b2",
        "cursor": {
          "ref": "61bffad1-c91f-4a3d-8d3e-ee280fb51078",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ba24c7c4-a921-4382-bbaf-d54464fe38b0"
        },
        "item": {
          "id": "9d1fa3f1-7a61-4a25-81e3-15229db404b2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f6925b52-c753-4d12-8b9f-72ee7101d37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec8b55-8fcd-458d-8561-db9b5f9b5dad",
        "cursor": {
          "ref": "70470f3f-f3e3-4244-9dd9-2051c7754226",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1936566a-d52d-4762-94a0-db5bacc238c4"
        },
        "item": {
          "id": "76ec8b55-8fcd-458d-8561-db9b5f9b5dad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3d4193f4-7cf9-41f9-a700-49da0a5781ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ee464a-2e5a-48b5-a73e-567ad68831b3",
        "cursor": {
          "ref": "26950377-4f6d-4c00-ab92-57b457391e5b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1fe54ed-8cd1-4c81-8975-9d37987f0811"
        },
        "item": {
          "id": "22ee464a-2e5a-48b5-a73e-567ad68831b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5da741e3-a204-40e4-854f-9a639dd11142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e183fc7b-98e8-4e5f-b5a7-00b90c2dedea",
        "cursor": {
          "ref": "a2bb0fa1-6170-402f-beb5-a36493fd7150",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1def17e9-9b10-41b2-b6ba-d88cc4ce4fad"
        },
        "item": {
          "id": "e183fc7b-98e8-4e5f-b5a7-00b90c2dedea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "01819c3d-cbf9-4f1e-9139-df9765965e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f1c149-f0ea-4ead-a00e-a239795110d2",
        "cursor": {
          "ref": "6e7c0c51-5ceb-4c45-8122-e05c6f427395",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "12028818-1d60-4566-9c40-15cf36d7e740"
        },
        "item": {
          "id": "10f1c149-f0ea-4ead-a00e-a239795110d2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e7a8ba8c-db83-46af-9907-a506c8580a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c951c7-3eea-42bf-954f-ca12859cd0c2",
        "cursor": {
          "ref": "f294dd60-8d3f-4f7d-a66d-5c6f255ca925",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8706b24b-27a5-43da-9fe4-c64829d00ed3"
        },
        "item": {
          "id": "85c951c7-3eea-42bf-954f-ca12859cd0c2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "15392a6b-df1f-42c3-b0b2-6da13b9576dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8130e85-0467-4eae-869a-002f2480ce1c",
        "cursor": {
          "ref": "df92257d-498a-4b5b-82c9-cd350983e8da",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "03c44b52-adb1-4c88-964d-4f6d5d3a8e31"
        },
        "item": {
          "id": "c8130e85-0467-4eae-869a-002f2480ce1c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8980ae59-d8ac-432b-a133-d2b5773cdb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207de4db-8f4f-4e0e-bb5b-0a212d8c1d21",
        "cursor": {
          "ref": "83c487f1-7bbc-4d75-92af-5a90b7f6ac7c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b078d882-72df-4c96-8e46-88148835be67"
        },
        "item": {
          "id": "207de4db-8f4f-4e0e-bb5b-0a212d8c1d21",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f51e77e0-223e-4b16-a2d6-1d8bab952ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05e0f72-75d1-49ff-ac58-323482b04890",
        "cursor": {
          "ref": "c66fe86a-7586-45b8-9aee-4c3d2c169fe2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "28a1c99f-b3fd-4a1c-b362-34669d0a5fed"
        },
        "item": {
          "id": "e05e0f72-75d1-49ff-ac58-323482b04890",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb88294c-574e-47d1-a502-15c970266afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11880c55-2758-4446-9e55-2cbd540f77f9",
        "cursor": {
          "ref": "74e86d80-ea6e-44a1-98a3-e91f8c1cea30",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb366459-6e24-48dc-a455-186999de700b"
        },
        "item": {
          "id": "11880c55-2758-4446-9e55-2cbd540f77f9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "82ffb946-760a-4729-b8ee-3e4b190945c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5906ab84-7129-4ddb-aa0a-47043ed4c65f",
        "cursor": {
          "ref": "eb041d46-615a-4c2a-bc86-365afff40e4b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1900f235-a93d-429a-bbb5-2410b5453a6e"
        },
        "item": {
          "id": "5906ab84-7129-4ddb-aa0a-47043ed4c65f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4619bdc7-1e3e-49e7-8afd-ae7ae4a5b75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f687a79-fdee-47d4-a7d2-ea9540e52975",
        "cursor": {
          "ref": "92f0b17a-d99d-4520-ba9d-b4f6b7023b01",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0122ab7e-20a2-4cea-88d0-72822c4c5d40"
        },
        "item": {
          "id": "2f687a79-fdee-47d4-a7d2-ea9540e52975",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ddc3a0a8-4876-4bce-8cae-c0c473466d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455180f2-317f-43c8-89f1-9551a594362f",
        "cursor": {
          "ref": "b526a308-7988-4fd8-951e-07eef5fbaad6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4ff02fa0-7189-4cb2-9166-c7e6eb4089b5"
        },
        "item": {
          "id": "455180f2-317f-43c8-89f1-9551a594362f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "be6b8a0a-61f2-4b34-8f2b-3b66e7c42723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f675096-29dc-4ac6-afd1-7516d1f4a23a",
        "cursor": {
          "ref": "4e80c2b3-9b16-4fb5-abbe-a74211fa1c03",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "767c9a5f-6309-48fb-8599-63822a8927cb"
        },
        "item": {
          "id": "4f675096-29dc-4ac6-afd1-7516d1f4a23a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "14d4f4e4-b5aa-477d-bec4-c429f92a38b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f4115b-e485-4776-8480-11e4c403cd6a",
        "cursor": {
          "ref": "f0a336fa-0659-4bf0-8295-226ce4a8ee5c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9a3ae66c-ec93-459c-9b09-dbf836d67d55"
        },
        "item": {
          "id": "05f4115b-e485-4776-8480-11e4c403cd6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "44f6ff00-3434-4bfb-9af1-d7b60a07146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1c3799-3ca7-4e0c-9593-2fd81672620b",
        "cursor": {
          "ref": "d7f05d19-9848-4b12-a506-83462a9c4985",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e0144f7-cdaa-4193-87df-6dbb6e9abcfc"
        },
        "item": {
          "id": "ab1c3799-3ca7-4e0c-9593-2fd81672620b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a82c77b4-cb4e-4591-a4c4-1a7b3df4ce80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62c5fac-647c-46f1-949f-6262f7a2bcca",
        "cursor": {
          "ref": "93a16034-4e70-4c39-8ad3-60d59961e73c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "42e107a7-5b8f-4fe0-9809-fc4985c831b0"
        },
        "item": {
          "id": "c62c5fac-647c-46f1-949f-6262f7a2bcca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b7a1011-0ef3-4f51-98ad-6182be455a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ea0fa-6c66-4ee7-95f6-7246678acf7d",
        "cursor": {
          "ref": "26285f93-c0cc-44c2-8685-0e673c2ea690",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "255fa4cc-8cc3-46db-a897-8c035e4abb0d"
        },
        "item": {
          "id": "c55ea0fa-6c66-4ee7-95f6-7246678acf7d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55c25ba3-0c94-42c6-9e55-2c0a11b9822b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73475ac5-e289-4238-ae03-9fcf14228223",
        "cursor": {
          "ref": "d2624d14-eac5-40cf-95ef-12e3bce01483",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f16afbf-2e8c-4208-9ed2-d92aa900c5df"
        },
        "item": {
          "id": "73475ac5-e289-4238-ae03-9fcf14228223",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e24eddfa-c1bd-4c63-a2ee-0904f5f0e5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322611f6-46ad-4ecc-ae8e-d534535dde2b",
        "cursor": {
          "ref": "336d8ff0-72b5-4253-bdb0-b85a4d37da31",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f5acf680-66d7-4b70-b312-750ae5fd9d71"
        },
        "item": {
          "id": "322611f6-46ad-4ecc-ae8e-d534535dde2b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "50e3ed09-6f0a-410c-829c-db10c8a50d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d3ff6b-1d07-42ae-84be-552e4a2eea98",
        "cursor": {
          "ref": "faee07a4-7142-41f2-8e5e-169b80c84478",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "af43ce27-9c4e-4958-9533-c1b06456b17f"
        },
        "item": {
          "id": "87d3ff6b-1d07-42ae-84be-552e4a2eea98",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "19ffdb4c-ce3e-4f3b-9d3d-da9a74365958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b36f40-8dfa-4a54-a8f8-fa1bca2c9013",
        "cursor": {
          "ref": "15a77a09-a933-414e-9c1a-568404d8f78c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9d581387-24cf-4c02-8ca5-7baf35622fa8"
        },
        "item": {
          "id": "d5b36f40-8dfa-4a54-a8f8-fa1bca2c9013",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0c1bb540-aaaa-48a5-8804-f986a6fc610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5cf9ae-c105-4e3a-a31f-8d9730dd0868",
        "cursor": {
          "ref": "071aa7e6-0ffe-4718-a667-61caea63f315",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "91fe23d6-cfdf-4d69-8ed8-e10d6aa09110"
        },
        "item": {
          "id": "1e5cf9ae-c105-4e3a-a31f-8d9730dd0868",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "942b8719-7c01-4502-8e50-0407146a5b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfcd78a-2b06-4dfc-82e0-12c50af831d1",
        "cursor": {
          "ref": "3a1d981d-3b98-446e-a395-344d9ae9d191",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b9c5347-7d48-4151-87a0-9640edabdeee"
        },
        "item": {
          "id": "adfcd78a-2b06-4dfc-82e0-12c50af831d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7390f85a-5958-4e25-a966-273c387aac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9786450-9e95-46b0-a4b4-6c49118384e2",
        "cursor": {
          "ref": "4f612944-ce00-4bf9-875b-c36eda6e2126",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7555552a-ae78-4fb0-9297-f012e0bf65c1"
        },
        "item": {
          "id": "f9786450-9e95-46b0-a4b4-6c49118384e2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "950e71e6-18a8-4bcf-9407-301952913f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9a158a-a54b-45c3-864d-40ae57432b64",
        "cursor": {
          "ref": "cc720254-c94d-464c-9b5f-5a5c7965fc1e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "89813e6f-61bd-4788-9b74-ac83b2e8b62a"
        },
        "item": {
          "id": "6a9a158a-a54b-45c3-864d-40ae57432b64",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8964b061-8909-47c6-a1c1-dc806257ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df42e054-5634-4aab-9664-501dd6933c91",
        "cursor": {
          "ref": "8522bca6-9299-464c-8ab8-4fac6b636f47",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "691460aa-0d3c-4ebc-961b-067d0bdb9aee"
        },
        "item": {
          "id": "df42e054-5634-4aab-9664-501dd6933c91",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4991e36f-d758-4f01-992f-81c41131273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f380c6cb-ae61-4bdc-99d2-ec551d28f29d",
        "cursor": {
          "ref": "a4392935-182c-4943-809d-d6def479b717",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "387d4b86-092e-4918-9cc2-6f6c4077a23f"
        },
        "item": {
          "id": "f380c6cb-ae61-4bdc-99d2-ec551d28f29d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d81966a-ca6a-4d2b-b18f-c746d796f4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f90c9e-5ab8-4727-b057-cc262454ccc2",
        "cursor": {
          "ref": "5a71e972-0b53-41d7-99f6-67e30dcac4e2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d78f865e-042b-42bd-b8a1-148ec07bc2ba"
        },
        "item": {
          "id": "09f90c9e-5ab8-4727-b057-cc262454ccc2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0d92f58c-dab3-4596-89c9-9d5d492b3cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da650e88-a900-4db0-8a50-48cd8de6e4b2",
        "cursor": {
          "ref": "e0e37366-22c8-4e9e-8e64-615d3c279047",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a58651e7-bf0a-4238-9c00-454690a8faa2"
        },
        "item": {
          "id": "da650e88-a900-4db0-8a50-48cd8de6e4b2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "94581836-06e7-4e61-96b4-4ba9c926d3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f4df2-8532-495a-89c0-904baeb71019",
        "cursor": {
          "ref": "e09f3e1e-2dd2-4f27-81ff-fdd571d97aeb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "44f172c0-de50-40fd-85ac-accba6da700c"
        },
        "item": {
          "id": "b57f4df2-8532-495a-89c0-904baeb71019",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "24bb6fa4-5fea-43d7-ab6f-5dbe90fae961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a178aabf-c6cf-4c4f-aff9-796e3bd11321",
        "cursor": {
          "ref": "975e9745-a1c4-4b2c-89bc-28b3e83ccb3a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "761d75d6-ec10-4c07-871a-188e2f8accad"
        },
        "item": {
          "id": "a178aabf-c6cf-4c4f-aff9-796e3bd11321",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6c7dce00-c86a-4bb2-9bdd-d208b2af6dd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d871b84-73ce-43de-a766-6d3aed4490cb",
        "cursor": {
          "ref": "4f9340e6-3924-4a3a-80ba-b24f3b456b4e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "88901340-9b59-4212-b7b5-a0c59cd31ad9"
        },
        "item": {
          "id": "3d871b84-73ce-43de-a766-6d3aed4490cb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4dc9d5d5-8579-4430-b4f1-5e175a8cdb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "85feea54-0042-49cc-908b-bf5af4ce888b",
        "cursor": {
          "ref": "35c04569-39f9-4b88-801a-42866daa3657",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6dba4fce-b600-4d6f-b400-57cf098f4bde"
        },
        "item": {
          "id": "85feea54-0042-49cc-908b-bf5af4ce888b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "65c1be75-2842-4ee1-9edf-537c7f3e6ca4",
          "status": "Created",
          "code": 201,
          "responseTime": 9792,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ece16b4-5597-4a21-8a92-5471512b958e",
        "cursor": {
          "ref": "ec63e228-8e17-4a3b-bf9c-d54cf13ba9ab",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2686e62f-e7b4-4770-bfb3-a9a8d36cc98d"
        },
        "item": {
          "id": "5ece16b4-5597-4a21-8a92-5471512b958e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "50d26240-c117-4d9d-83ed-80d010769c8f",
          "status": "Created",
          "code": 201,
          "responseTime": 8828,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af10a97-c578-41d4-9be6-826a9662123d",
        "cursor": {
          "ref": "df9ed62e-1243-404a-b908-25b5bec9e623",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4611bce9-1dd3-4076-8b2e-d23798e30956"
        },
        "item": {
          "id": "2af10a97-c578-41d4-9be6-826a9662123d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "54c40cc1-2452-425d-b21e-0bc8c35fea93",
          "status": "Created",
          "code": 201,
          "responseTime": 8761,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "76701417-8bb4-4519-81d1-e5c09436b860",
        "cursor": {
          "ref": "f5331552-6f73-4c87-b99a-265074c7606a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "11a4ecab-b235-49b2-93e2-489834ead68c"
        },
        "item": {
          "id": "76701417-8bb4-4519-81d1-e5c09436b860",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64e95270-3084-419a-bb9a-640a5b064bca",
          "status": "Created",
          "code": 201,
          "responseTime": 8813,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dbea83-aeb4-4407-918c-ac65436968e3",
        "cursor": {
          "ref": "8860624c-1b70-4846-9eba-a9a8ab990c1d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "83b8645e-b845-4dbc-aa5b-506a1212aad2"
        },
        "item": {
          "id": "67dbea83-aeb4-4407-918c-ac65436968e3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "470a76dc-cbad-4166-a179-efb8c98d310e",
          "status": "Created",
          "code": 201,
          "responseTime": 8457,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-30T00:43:32Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-30T00:43:32Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "41e0a0e3-5ad8-4a17-bd55-9f1e8720a035",
        "cursor": {
          "ref": "270db7fa-faec-4a42-9125-5608850a9a4b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "77a368fc-28a8-42de-932a-408b316e4a19"
        },
        "item": {
          "id": "41e0a0e3-5ad8-4a17-bd55-9f1e8720a035",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "42b0c36e-3907-4e22-80a7-d0bc2ff29bcb",
          "status": "Created",
          "code": 201,
          "responseTime": 8683,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e3e63d-42d4-4499-ac09-e30d2040140e",
        "cursor": {
          "ref": "0e5d4356-c12d-41be-8488-e5ff7049bc54",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "39165b02-c46e-4751-a2dd-be5f69950950"
        },
        "item": {
          "id": "77e3e63d-42d4-4499-ac09-e30d2040140e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "336802d1-4de2-4cff-afc1-2f9e61c9ff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d72fc-6c01-4b2f-856c-a6cb40a70e60",
        "cursor": {
          "ref": "623a38ac-870e-47a0-a39c-7ea71204503d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6b8dd9a-6162-49c7-b58e-1bbb4a4d0307"
        },
        "item": {
          "id": "278d72fc-6c01-4b2f-856c-a6cb40a70e60",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15c7db9a-e14c-4787-be70-447e6b1ea880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d5b8f3-e71e-4ea7-9d05-ead546982083",
        "cursor": {
          "ref": "3f494b99-9aa5-4ef3-8d66-8d27fe9869b8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f987675e-a31d-4423-8e40-0b90b72f24f6"
        },
        "item": {
          "id": "f7d5b8f3-e71e-4ea7-9d05-ead546982083",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "22188322-bf17-4f2c-99ce-9f5a51285e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d761274-01c3-4950-824c-e10df0a945c8",
        "cursor": {
          "ref": "0069c968-e9f8-46b7-afcb-54d336eefb7b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2945878d-a1bf-40dd-a3ef-00a28b27c0a6"
        },
        "item": {
          "id": "5d761274-01c3-4950-824c-e10df0a945c8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4450ff1-12c3-489f-9307-b8a54ecd1b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3516bf7d-f986-48ce-b395-7c015ed1b754",
        "cursor": {
          "ref": "b1f108a1-f82b-4725-8526-9849797d8a1e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0652454a-eff2-49a7-b12e-9725ec270e9d"
        },
        "item": {
          "id": "3516bf7d-f986-48ce-b395-7c015ed1b754",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "95a83a09-bfa5-4a64-a9df-1945de94687b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6424f921-e729-4814-872e-6fc21a39e343",
        "cursor": {
          "ref": "4a538fad-5eb8-4113-9db5-b1340548d81f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c177777b-e2fc-413b-afce-9c25b868fc7c"
        },
        "item": {
          "id": "6424f921-e729-4814-872e-6fc21a39e343",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cae46370-fb54-4d8e-b716-4656561e445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04ebef1-0f9f-4d92-b6c8-7267b83a7297",
        "cursor": {
          "ref": "ed79e775-7baf-4163-84c4-0a9733ee71e6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b81ff2c3-e33c-4710-876f-50d37b871fac"
        },
        "item": {
          "id": "d04ebef1-0f9f-4d92-b6c8-7267b83a7297",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "082bd849-9844-425f-99c0-35f32c5dc470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40eb23f-9903-47e1-89ba-d5dca71f343f",
        "cursor": {
          "ref": "f291a058-9b31-4be8-8182-73f5c9a37287",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7c10cd3f-b154-42bb-9fa9-dfdef074b0fb"
        },
        "item": {
          "id": "a40eb23f-9903-47e1-89ba-d5dca71f343f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "456afef5-35c8-4ac8-b8a6-a3cc11ad7e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2511cff5-d113-4ce9-bb94-46804038bc89",
        "cursor": {
          "ref": "fd8628af-0835-441d-af89-c3e7a079dbb3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "19021caa-6fc5-488f-803d-ba4c6a674cc1"
        },
        "item": {
          "id": "2511cff5-d113-4ce9-bb94-46804038bc89",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8167018f-9aac-46dd-a497-5778351af893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6a2348-8d83-48f5-9e54-34417be05c71",
        "cursor": {
          "ref": "92dfe72e-2031-4393-9f76-5367fef39358",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd27af9e-a43b-4263-8e86-7ab8be62b2b1"
        },
        "item": {
          "id": "af6a2348-8d83-48f5-9e54-34417be05c71",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1cd9cabd-a8ff-4f87-b943-30d44781ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af221fb-d2a6-432f-8364-2149ed2e6225",
        "cursor": {
          "ref": "bc581e40-9bed-439e-a8ae-205a0f434b71",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "990af922-457a-4b39-8c3b-4263a65bf2fa"
        },
        "item": {
          "id": "0af221fb-d2a6-432f-8364-2149ed2e6225",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d9229a3-8428-4c71-af70-46070fb6df6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed0cceb-7636-419c-9e31-af6fa3f3aad6",
        "cursor": {
          "ref": "8fab9e27-5400-4f6c-8441-d05bed8a8799",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7afca72d-7e74-4da3-a475-85e55b135a36"
        },
        "item": {
          "id": "aed0cceb-7636-419c-9e31-af6fa3f3aad6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "024e4108-4693-4a47-b0bd-b481eae11115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7ebf96-1865-420e-833f-9ee0aed26cd8",
        "cursor": {
          "ref": "500d64bb-5cfd-44c3-a308-8bde2096c957",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ee73618-49b4-42cd-b214-6d1605b4f80e"
        },
        "item": {
          "id": "0b7ebf96-1865-420e-833f-9ee0aed26cd8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8445efd0-91de-4124-b05c-cd4b8db55866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5df8c5-d4e8-4772-85ad-2306baa51e10",
        "cursor": {
          "ref": "a02a0cdf-bfc0-462f-bac9-62584b5b5c53",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "790c9021-55b8-4be2-af0a-d9924b3c39af"
        },
        "item": {
          "id": "9f5df8c5-d4e8-4772-85ad-2306baa51e10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5cf1a859-a493-45a9-abb4-96cca44412c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74231b4e-dfdb-4293-9c18-6451873b9d46",
        "cursor": {
          "ref": "5e9945a5-5e8a-4227-b401-4a450de65499",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0c2fa544-3080-4eee-8c96-ab14a5b8e30b"
        },
        "item": {
          "id": "74231b4e-dfdb-4293-9c18-6451873b9d46",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "587d24ad-16ea-4869-8003-776826c1d944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72568f2b-2a6c-4192-baff-6d5217a0f921",
        "cursor": {
          "ref": "15f3dfa2-2718-42a4-a3ca-5a208b38fe17",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9b2f75f3-46be-4c36-a724-0a7ec236e22c"
        },
        "item": {
          "id": "72568f2b-2a6c-4192-baff-6d5217a0f921",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3fa62e1-8e1a-4e2a-afe8-8627ab10efcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d529807-3272-4176-a29f-cb49ed59c00f",
        "cursor": {
          "ref": "24dcc93f-1ff4-453c-a5c8-18630d2978a9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5436825-0f71-4acd-9c8e-8434a2e948cf"
        },
        "item": {
          "id": "0d529807-3272-4176-a29f-cb49ed59c00f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4fb42396-a45f-4176-ab86-1ebc34591fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82edea11-f68b-43d7-8cab-cf0cea348f92",
        "cursor": {
          "ref": "0b8cbca6-b75a-47b1-a515-136e284b51fc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "aa52366a-b230-4931-8cda-5a100022cdc6"
        },
        "item": {
          "id": "82edea11-f68b-43d7-8cab-cf0cea348f92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9fe28d9b-2cab-4f0f-8a35-6bd96b16d2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf161e9-56cc-4927-b0c1-63bd69a67584",
        "cursor": {
          "ref": "cf188ed3-307b-42f2-859f-08070daff65e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2110312a-cf36-4d2e-8864-dce8ad7c57ee"
        },
        "item": {
          "id": "ccf161e9-56cc-4927-b0c1-63bd69a67584",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c40c9ebd-d549-4b2d-85bf-ece8addead96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a54ba9-1f84-45ce-8b3c-cb296a0a9be3",
        "cursor": {
          "ref": "30b09dc1-ab59-44f2-9b44-ef60649b3d8b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "94216e4c-bf88-4317-bd5e-f487eda40ec0"
        },
        "item": {
          "id": "93a54ba9-1f84-45ce-8b3c-cb296a0a9be3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "084bad66-f341-4105-adc9-34283fd353e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67083360-0d33-4684-b307-ee20fee7156b",
        "cursor": {
          "ref": "23bb4939-f5b6-42f4-b363-0b309fa1f2ae",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "18b07488-6f9c-46ef-9735-76cf4464bbf8"
        },
        "item": {
          "id": "67083360-0d33-4684-b307-ee20fee7156b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3900d96b-cac5-4cb8-8150-c26b57724c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a2963f-a32d-48a8-84de-8887ee974630",
        "cursor": {
          "ref": "6104a24f-369e-4279-b75e-74c264ff344e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b8a14138-1fc8-4fdd-860e-e55010b46a44"
        },
        "item": {
          "id": "c9a2963f-a32d-48a8-84de-8887ee974630",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c7aabffd-dd27-4758-b0bb-3eee5b75d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e9f76d-ae5c-4997-ab10-f0f86193610c",
        "cursor": {
          "ref": "19ecd616-5f95-4656-9411-b0a5d8bf4029",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb8ef791-5304-4f85-baaf-abeff0888e30"
        },
        "item": {
          "id": "75e9f76d-ae5c-4997-ab10-f0f86193610c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e963e50a-1a3e-4f53-95f9-660d21c1cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fae788b-ffe2-4c5f-a318-034afcbe8a41",
        "cursor": {
          "ref": "8b86c16c-674c-49a3-ae3e-b718ea27efb5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6074d00f-c760-4a7d-9a57-fbfe3877a64b"
        },
        "item": {
          "id": "7fae788b-ffe2-4c5f-a318-034afcbe8a41",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "af6e3c8a-e01c-4b64-9b12-9bc433386a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cdf4ce-2ea7-48c1-8c79-1319d0107b92",
        "cursor": {
          "ref": "7b6353a3-9de7-4854-9d12-10042e220988",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c50e851a-df8c-4795-ad83-ec7ba7641c2e"
        },
        "item": {
          "id": "34cdf4ce-2ea7-48c1-8c79-1319d0107b92",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ed755f2c-355a-45cf-94c7-4f014ad67e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8431da46-79a7-4fde-bd99-7a07d63bf792",
        "cursor": {
          "ref": "d73173d4-2002-42f2-8969-169a9e5109e1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd8fcf3f-ef2a-4efb-838b-569994f64c08"
        },
        "item": {
          "id": "8431da46-79a7-4fde-bd99-7a07d63bf792",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5fd0f94f-6d8a-445b-8ee0-f04139967203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0b32f6-4d12-4679-b779-24989009c285",
        "cursor": {
          "ref": "e3077136-7528-4199-9e78-a966a0f7b03c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "79e24aa4-5726-47a5-9669-36f3cf6397b8"
        },
        "item": {
          "id": "bd0b32f6-4d12-4679-b779-24989009c285",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "30f5479f-9ed4-4c39-a08e-e0d0a2314f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d30e48-373e-4eaa-8511-05eabf9fea99",
        "cursor": {
          "ref": "dd19cd78-5ed8-47cf-92cf-3f51a2edf129",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f33a3c5-f300-4468-8ba9-945eca5bbf88"
        },
        "item": {
          "id": "31d30e48-373e-4eaa-8511-05eabf9fea99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16bebc56-a9fa-4eb9-acd3-a2cddab5bba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d76662-5e14-4bc8-816e-f11ec01ad21b",
        "cursor": {
          "ref": "b0a82a79-21af-461f-b313-51e60c3472d2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cbc897fe-f23d-4bcc-8600-d43d8a7d1b8b"
        },
        "item": {
          "id": "29d76662-5e14-4bc8-816e-f11ec01ad21b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e47a99b-2e01-4147-ae01-a7f2ab14a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3592a9ef-bcc3-4dff-9549-a7e5775f2f2e",
        "cursor": {
          "ref": "a041a374-eecc-45d2-b959-12a08066779c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bed35ded-23d1-4bd4-977d-eb743a8ee351"
        },
        "item": {
          "id": "3592a9ef-bcc3-4dff-9549-a7e5775f2f2e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c09fa5c6-5bf2-4c67-9c48-c2f1ae5872af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402c62d-fe0f-4c92-8871-8ed4e900c7ec",
        "cursor": {
          "ref": "9ec94d2b-c7d8-443a-b184-5ed5bd9cae4a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "01f351a2-2564-4a39-a1a5-954bab16294b"
        },
        "item": {
          "id": "8402c62d-fe0f-4c92-8871-8ed4e900c7ec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b7dc6d99-07c2-4e1f-92c7-335a6cb92bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1cb6a0-6843-4c78-bfdc-72d0c15c7bd0",
        "cursor": {
          "ref": "f2ab5163-0bd9-4b00-8206-42477ab0390d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9d805475-57e6-4d6e-8898-336dbbc7b3b2"
        },
        "item": {
          "id": "7f1cb6a0-6843-4c78-bfdc-72d0c15c7bd0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "91b4985d-76d9-4de9-af6e-031b1f4aece6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7f592f-9a3e-4a36-9a50-f314b56c5dfb",
        "cursor": {
          "ref": "a1bc17f3-5d80-4655-af0c-2d71c42a164b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f6437b5-c4d9-4253-85fe-1cc08a68f13f"
        },
        "item": {
          "id": "2e7f592f-9a3e-4a36-9a50-f314b56c5dfb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "df270bf0-7307-4b74-a26e-6a28f826eeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcff796-2a95-4b47-8a27-98262437a6d0",
        "cursor": {
          "ref": "27e58e78-3be0-474f-a5b1-342d961d68e1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "52c6ca3f-68b8-44be-8efc-a210c5b2f193"
        },
        "item": {
          "id": "fdcff796-2a95-4b47-8a27-98262437a6d0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dbf25b81-abfe-4a70-a360-b46aba219e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019b165e-fb2f-4caf-bb5d-f471856a6bc4",
        "cursor": {
          "ref": "91b4b71f-e26a-44e8-8597-b9df705ebe4d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "142548b7-0be5-4c46-8383-d14e2973646a"
        },
        "item": {
          "id": "019b165e-fb2f-4caf-bb5d-f471856a6bc4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4028a655-8a11-4257-8753-08437b181fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7aad65-8b7c-45d0-8a56-77c5a817c1de",
        "cursor": {
          "ref": "c6b9ce9f-4edd-44bf-bc56-13b963763690",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b7e12b4f-ae02-4621-b88a-18c57632c6f5"
        },
        "item": {
          "id": "9a7aad65-8b7c-45d0-8a56-77c5a817c1de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7ee401cb-e050-49c5-834c-ad3f8722cb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfdd818-5219-47a6-94f0-f53ce28a4ae4",
        "cursor": {
          "ref": "e93aea78-f348-4bf5-8193-038f34a6c4b2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4c9ac2d3-7fe7-4081-9195-e0bad69e4734"
        },
        "item": {
          "id": "fbfdd818-5219-47a6-94f0-f53ce28a4ae4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0294c35c-2cf2-426d-b310-89873bbd7499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7303a9-549d-4fd6-9a60-d725da10b1b0",
        "cursor": {
          "ref": "90d7de7b-59ba-4865-8d3c-12383e1c81f8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3b9810ef-4dc7-4767-bc28-d3b7373c6dfb"
        },
        "item": {
          "id": "6f7303a9-549d-4fd6-9a60-d725da10b1b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "90a55c93-3e3c-45f8-9921-aff608930068",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5eb76d-0a69-4356-9774-51ab6d8f08fd",
        "cursor": {
          "ref": "2dfa601b-2da2-49dc-9560-1a15348bf94b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e2aac840-f979-49b8-b7cf-f5ccd8550cca"
        },
        "item": {
          "id": "8b5eb76d-0a69-4356-9774-51ab6d8f08fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "823c7be0-6352-45b6-b944-ee9d2bbfecae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e019ce90-0b26-401e-97ac-597a8885d91f",
        "cursor": {
          "ref": "680be11a-f5aa-4c8b-9992-d3523fe2455c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aeb93fba-449f-4557-9842-796f679f4f50"
        },
        "item": {
          "id": "e019ce90-0b26-401e-97ac-597a8885d91f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "10afea6a-f7cf-420c-9aec-50f4a2d8393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e774d87f-572f-43c4-ae68-a61f2fea27cf",
        "cursor": {
          "ref": "5d4c0a5d-a73a-42de-8241-6bf50ab41c51",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "db8680f4-6b90-427c-98f3-bb8b3129df96"
        },
        "item": {
          "id": "e774d87f-572f-43c4-ae68-a61f2fea27cf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "36fb685c-4341-4ac0-a450-0717fd3831bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631ab800-0224-4f61-9574-e65a276024a1",
        "cursor": {
          "ref": "6f06e5d5-cc9e-4f83-b8aa-dca5eb333a83",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c12d4d48-8cf3-4027-a535-01fea6ae8470"
        },
        "item": {
          "id": "631ab800-0224-4f61-9574-e65a276024a1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4c5288a7-d206-4dbf-b331-072c45e45f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368e984c-3fbe-420e-adc4-5d4310854554",
        "cursor": {
          "ref": "5534b39d-dc1c-4657-b170-0eba1bbc873b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5e6ca5a3-08ed-4637-a398-c472a93e7efa"
        },
        "item": {
          "id": "368e984c-3fbe-420e-adc4-5d4310854554",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "387ce9b4-20bb-4105-94af-79e8811f7320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf9e140-4553-4897-b633-425c8e69f5a4",
        "cursor": {
          "ref": "7b8351b6-dfd0-4654-8eaa-a0b9bfe2e606",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c397691-8e0e-40fd-be93-8c9fb8f54dce"
        },
        "item": {
          "id": "3cf9e140-4553-4897-b633-425c8e69f5a4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a61b5ab8-ede0-43ab-bf0a-02d89e32f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53300dfe-9af3-49cb-982e-0614944bfd75",
        "cursor": {
          "ref": "874ebe6b-db74-4c5c-9d76-99b317f68f32",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "88864cdb-15c3-4adf-a686-b55eea49150c"
        },
        "item": {
          "id": "53300dfe-9af3-49cb-982e-0614944bfd75",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "03abb7fe-4ba1-4f4a-98c9-2d79722d2411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c40fb49-1e7f-4fe8-907d-5aa7d51f6c4f",
        "cursor": {
          "ref": "6cecf930-3026-4aef-8924-0e163faab2ff",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ec388ea2-94e3-45f0-baee-f357280ed310"
        },
        "item": {
          "id": "5c40fb49-1e7f-4fe8-907d-5aa7d51f6c4f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "054c759b-ac74-4277-bc78-7ff2557058b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727aa3a1-7d8b-4e15-93e9-1d102ba46997",
        "cursor": {
          "ref": "89c2c147-3947-41ec-be9c-933b1ab496a4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3b724b0b-ca0b-4e98-bd6d-3e08cea7b58e"
        },
        "item": {
          "id": "727aa3a1-7d8b-4e15-93e9-1d102ba46997",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fbecc31e-3d62-4412-ab5e-6bfb2865a6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a8a3e0-0e6b-46dd-a09a-a23fb3184c52",
        "cursor": {
          "ref": "261204cf-1164-4951-a5a3-137591ed5e31",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04f17ffc-0d1a-4859-b948-74a9d5bc5b68"
        },
        "item": {
          "id": "03a8a3e0-0e6b-46dd-a09a-a23fb3184c52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d17d66dc-00ae-4c65-8df2-6a618e5463af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5a7c01-5f52-42d3-8d65-e8960a975e68",
        "cursor": {
          "ref": "4cf8f0c2-c02d-44ce-b478-0f942e9a5a6f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2242b593-0876-4ce4-8ee2-98a3eca0845a"
        },
        "item": {
          "id": "aa5a7c01-5f52-42d3-8d65-e8960a975e68",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "622be9ae-bcbb-492d-9765-5c5fcef7fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c008f64-e41f-4422-98d5-2ba47877cbd5",
        "cursor": {
          "ref": "38137af7-6369-4f23-a550-fc2183ee6214",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e208914-f7f3-4571-bcd9-d983bc37f52c"
        },
        "item": {
          "id": "6c008f64-e41f-4422-98d5-2ba47877cbd5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e308bd88-c2aa-4d57-bc57-29af065524d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abff274-d691-4029-90f3-078d07932071",
        "cursor": {
          "ref": "39d290ca-b167-4a71-b1d8-ea2684ba7611",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fde0b458-5aec-4bca-be73-d86fd5d43055"
        },
        "item": {
          "id": "2abff274-d691-4029-90f3-078d07932071",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9de09ea7-5249-49ed-8c2d-7e77dd9b183b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3fc5c-711f-49ed-b6a1-51bcd67e6ea3",
        "cursor": {
          "ref": "50977624-35be-4aaf-a17a-053739d3021f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "da251bf9-24f3-4271-92a0-5001e0ad2028"
        },
        "item": {
          "id": "b4b3fc5c-711f-49ed-b6a1-51bcd67e6ea3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f65283e4-c615-4a00-9d73-4169555b44a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc03e6d-ffe2-4774-83a9-c158a0600760",
        "cursor": {
          "ref": "d3b2e4f1-d68f-43a1-8c5c-dfa7951de7f2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0501dc57-df27-4291-92a6-d3304993f4d9"
        },
        "item": {
          "id": "8fc03e6d-ffe2-4774-83a9-c158a0600760",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1aabc337-ab93-47e2-bd13-bcfbff37f207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cc0220-bba9-4fd3-bfcc-77693b89e2b4",
        "cursor": {
          "ref": "20c71f63-3f3b-4de4-b28c-978771ce9b85",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b92f60d2-dd14-45c0-8435-0c5a70a2972b"
        },
        "item": {
          "id": "22cc0220-bba9-4fd3-bfcc-77693b89e2b4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "006ea2a2-c9e0-42e6-ba4b-a466a3c1e6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3339a318-55fc-4b68-a338-6567fa5dee9f",
        "cursor": {
          "ref": "00d42ed3-41a7-44f0-8762-6cee888882ca",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "57587f5a-3dae-48ed-8cbf-096f9a7b8c6f"
        },
        "item": {
          "id": "3339a318-55fc-4b68-a338-6567fa5dee9f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "63bd0f84-039e-447f-864c-74aa4823cac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d757a7-8229-4628-8007-ca1a31d0fa2d",
        "cursor": {
          "ref": "c255c5e7-7210-4f08-aeda-b0681142f0b4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0e777d36-11fb-43d2-b06b-109aedc38ed5"
        },
        "item": {
          "id": "25d757a7-8229-4628-8007-ca1a31d0fa2d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1af442ff-f703-4ed5-be5d-5f49a4403201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bae6b4-8c2d-4bf2-bcd1-0e357066d964",
        "cursor": {
          "ref": "6f7c6395-35c7-452c-8db6-592d28107e6a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eddd4a3b-2c15-4ed4-8545-7df73654a0bc"
        },
        "item": {
          "id": "b2bae6b4-8c2d-4bf2-bcd1-0e357066d964",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d0ba9ba-8023-4d28-a696-84533fef7df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8966926d-25fd-4351-a406-94d98107ff85",
        "cursor": {
          "ref": "567bbd11-3ba8-4b8d-8e01-0844c0713696",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8004c24b-795a-4d06-9b2a-cd67944cbe45"
        },
        "item": {
          "id": "8966926d-25fd-4351-a406-94d98107ff85",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8f969762-de3d-4894-8aeb-daa72dcd9b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a7ea6-e7d1-4bba-8256-b687efeae3ee",
        "cursor": {
          "ref": "f81dff2c-8be8-4604-aadb-4ee996644821",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "144c0d62-9921-43a0-8178-95a4e0ce9c8d"
        },
        "item": {
          "id": "8a0a7ea6-e7d1-4bba-8256-b687efeae3ee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dab3befd-3f12-4c38-b62f-fe5243f51198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ade723-0ae1-4f11-9e5f-11cedc0a0eee",
        "cursor": {
          "ref": "c65e107d-7cfa-4101-a9bf-9bf5e4a4d055",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2c9b4862-bc37-46f1-b274-22590ecd8566"
        },
        "item": {
          "id": "26ade723-0ae1-4f11-9e5f-11cedc0a0eee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f60e18e8-d4f6-4073-8c2d-de2558c6ce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975c9a33-77f0-4baa-901a-5116ee0870f7",
        "cursor": {
          "ref": "85c8cb71-a4f9-4833-9a38-7c5808811264",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "180ce571-fe89-4517-9d9f-886a209cb66e"
        },
        "item": {
          "id": "975c9a33-77f0-4baa-901a-5116ee0870f7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "500140ad-6cd8-4c8a-ab59-c7cff03243c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86195edd-d73a-4544-a6ed-ad6650a7b411",
        "cursor": {
          "ref": "00bfaf15-2772-46b3-a190-e200b2e31c65",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "27cfcc79-5d38-42b6-a17a-4995e60d2769"
        },
        "item": {
          "id": "86195edd-d73a-4544-a6ed-ad6650a7b411",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53da69a0-7a7f-4b50-8551-1decd44cf22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bf74b0-4ff0-455d-b2f4-42746dce4f92",
        "cursor": {
          "ref": "0b81c058-bf2c-4510-aca5-a7ae4af31172",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e6af57b-58ef-4dd1-9f09-1bdd03b34602"
        },
        "item": {
          "id": "c2bf74b0-4ff0-455d-b2f4-42746dce4f92",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dce625b4-2f9a-432c-ad2d-e7f6534bb13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d1e91f-ed73-4e32-9f8d-9871b3dfc2e8",
        "cursor": {
          "ref": "f5b37a69-3fe4-4293-acfd-c0b870465fd3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b320bc87-7000-4fc0-9030-b1e0f3c1f878"
        },
        "item": {
          "id": "98d1e91f-ed73-4e32-9f8d-9871b3dfc2e8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "841db12d-2de4-42be-b835-dab38078118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f483d746-2c6f-498d-bc0d-226a26b3d2f1",
        "cursor": {
          "ref": "c41b3fd7-1d04-478e-8ab5-ef68795120bc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "805d84f4-eebd-4534-88e3-3f1e206cd8f3"
        },
        "item": {
          "id": "f483d746-2c6f-498d-bc0d-226a26b3d2f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "491c453e-b3f2-4801-9c5c-80e14b100061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eca61a0-a62b-4804-aa71-80af6b61b8ef",
        "cursor": {
          "ref": "e5b0985b-9d63-47e1-bac3-4bfe24a90a8e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "442684bc-621a-4e03-a2ad-5fa81668cc6a"
        },
        "item": {
          "id": "5eca61a0-a62b-4804-aa71-80af6b61b8ef",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "354d77e6-f2fd-47e7-a111-ce697e2ad818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6ef98-aa6a-4135-95c8-56c5ebd5b015",
        "cursor": {
          "ref": "3cac8eea-bea2-40ce-a0d0-3adafc8cb246",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a63ab65-5c55-4f0b-ad79-5d4b82b5a5ce"
        },
        "item": {
          "id": "c2b6ef98-aa6a-4135-95c8-56c5ebd5b015",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d495b160-2535-4297-97e9-8795f6cbc82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c888e2-ab72-4b2a-b5fc-ad0571a30c23",
        "cursor": {
          "ref": "999c66ea-ca49-44bb-a604-01822702cb6a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c024f15d-f78d-408f-879d-9ffb37485c2e"
        },
        "item": {
          "id": "40c888e2-ab72-4b2a-b5fc-ad0571a30c23",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8d80401-d321-49bd-b572-8d8edd70c56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d3f80c-016b-43af-9ee9-a4bb7a239570",
        "cursor": {
          "ref": "b1b22a26-998f-4854-88a7-c1805f0e5572",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6bef3bc5-e940-4b94-ad6f-3f8650f85f95"
        },
        "item": {
          "id": "c8d3f80c-016b-43af-9ee9-a4bb7a239570",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3c9c913f-59a4-484e-82d3-88c4041eec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e051db66-76d0-4f25-bbb1-7236eff7c8da",
        "cursor": {
          "ref": "0e099074-8d50-491e-b129-a6439342bcc0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "30bc477d-e284-4bc4-9073-66dfa2dbbc72"
        },
        "item": {
          "id": "e051db66-76d0-4f25-bbb1-7236eff7c8da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ca728c2e-617e-4943-8b85-82a2e3a88073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d827cff3-4a9d-4e10-a660-f4ccf6e36748",
        "cursor": {
          "ref": "3808387c-9a9d-4245-9aa0-cfca107688ca",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f4d38858-b86a-41f5-aab8-a3d093ae44b5"
        },
        "item": {
          "id": "d827cff3-4a9d-4e10-a660-f4ccf6e36748",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4327144-e4da-4abf-a784-c1ae3880d4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6333f689-62af-4b95-80b6-7d738fda5b9d",
        "cursor": {
          "ref": "e879801c-f150-482c-9b9d-a3961a546117",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "39c1b93e-eaaa-4db1-9281-1a0029ac2b0e"
        },
        "item": {
          "id": "6333f689-62af-4b95-80b6-7d738fda5b9d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cdb7c95c-ac5e-44f0-bb1e-b83adef10840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b7920-eacb-4bb1-bd86-5598350b9cf9",
        "cursor": {
          "ref": "1d4d303c-76cf-4060-a23f-2e58e5b01286",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "24b9bd4a-6fcd-41d2-b238-ea678e33a630"
        },
        "item": {
          "id": "ad7b7920-eacb-4bb1-bd86-5598350b9cf9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "78b9ea0a-0dfe-4145-aa0c-f63416e73c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c93b18-37f8-4c4a-abbc-816f08780817",
        "cursor": {
          "ref": "d1d0ddb9-5a82-4f9d-ad0b-acc2a555510e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77403e00-82fc-4675-9ec5-c9c5188b8e89"
        },
        "item": {
          "id": "11c93b18-37f8-4c4a-abbc-816f08780817",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "990d5464-3c9e-47e0-bcea-60e5ce1a992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f29801-0965-4e20-95ef-67446ef41dfe",
        "cursor": {
          "ref": "c7282e73-cfe0-48d1-a20c-82478d8b42f6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1cb1defa-ee25-4fef-8bae-4df26a7379b3"
        },
        "item": {
          "id": "e8f29801-0965-4e20-95ef-67446ef41dfe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6ea94a7e-458e-4e83-88d3-93eaf80897d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bf2fb1-ef08-4a71-8ec1-6938cd926b76",
        "cursor": {
          "ref": "0412ce1d-2e35-4b1d-808b-793eeb8ca923",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d772d78e-7cbf-4f3d-86ee-138819ad26e5"
        },
        "item": {
          "id": "a4bf2fb1-ef08-4a71-8ec1-6938cd926b76",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5550c42f-84a8-4bcb-9da1-dc49614e5225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e16e0-7535-46c2-bb35-5260222fcb42",
        "cursor": {
          "ref": "fe3a1cb0-88b8-45dd-a99c-20a21fe0ae19",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b10f9e47-3691-4e98-b6b7-665d0a5a1e84"
        },
        "item": {
          "id": "fd5e16e0-7535-46c2-bb35-5260222fcb42",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "27f6413b-b1ef-4c37-895d-a45be15ad2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d76f1c9-584e-465a-8110-4f975550edeb",
        "cursor": {
          "ref": "62595e69-7e4f-4501-9f87-433814747c8f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0805a36d-24ff-4478-9407-88bf9a87f9ce"
        },
        "item": {
          "id": "1d76f1c9-584e-465a-8110-4f975550edeb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8a625287-9109-446c-b250-bcdf6d229214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ed6a06-90d6-414f-8e01-14a3c7598a6a",
        "cursor": {
          "ref": "9db391dd-dbe4-40f5-9612-d20bbab3375d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f7eee495-7647-4699-83ad-e197cf10fa0a"
        },
        "item": {
          "id": "e4ed6a06-90d6-414f-8e01-14a3c7598a6a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a43685e7-e8d2-4740-9aa3-64db9379eeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608fa07-3bc6-4e32-8e34-38d531228c0f",
        "cursor": {
          "ref": "78109a4c-28cd-435f-bcd4-94ab2665b129",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "049df51c-fc29-4d7f-8503-869e20931a12"
        },
        "item": {
          "id": "4608fa07-3bc6-4e32-8e34-38d531228c0f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e6c51ece-a906-47b4-8a1e-60aa45599075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962fffa-fa85-4269-9dd2-45afac8fb3d5",
        "cursor": {
          "ref": "ea0edfda-1512-46b6-9e9f-9f0dc12a2ba2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "15172ca6-45aa-4b6d-8c29-398be5565498"
        },
        "item": {
          "id": "1962fffa-fa85-4269-9dd2-45afac8fb3d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8acfefae-5b44-4292-bf6b-eddf8b887976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91586d8-0883-4a80-a147-89047cd7ee41",
        "cursor": {
          "ref": "b179ef84-b02d-4ecc-bf85-5c7c021bee5e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dc4376e5-58c8-4dee-934c-2c47a8a8db1e"
        },
        "item": {
          "id": "e91586d8-0883-4a80-a147-89047cd7ee41",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "14872437-3be0-4ebb-b92d-351e0b443b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940cd3d5-318f-4730-89b9-eda4b3d213c8",
        "cursor": {
          "ref": "cb9aef03-0b84-4347-bf93-d9a0b3fc79b9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ec32c0e9-c8ae-418d-9a04-868a7125e814"
        },
        "item": {
          "id": "940cd3d5-318f-4730-89b9-eda4b3d213c8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18db04c1-49e1-4500-ab6f-eae33c614bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c292ca-060a-438a-942b-8239eaec4a3d",
        "cursor": {
          "ref": "1ef7c254-7ef8-473d-beb1-666822b5cbcc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "955a7a7e-d648-4f75-8a36-3de98ba4365f"
        },
        "item": {
          "id": "86c292ca-060a-438a-942b-8239eaec4a3d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "52c6ac08-9152-45c9-b197-f423cb95c7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c12ebfa-645d-4941-ae15-182bac41db89",
        "cursor": {
          "ref": "8023795f-b9dc-44ff-81cc-a14fb0b979d0",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70c08e6f-8af0-4448-91f5-096a17811475"
        },
        "item": {
          "id": "9c12ebfa-645d-4941-ae15-182bac41db89",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "652034de-b474-4fe3-bbdb-680a870fd0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c1566e-cade-4041-b5a2-702d0b3ace78",
        "cursor": {
          "ref": "fd6bad6e-3bfe-4b40-951c-ce4de09c90cb",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "438def96-57cc-4e7d-a67e-c8777ce65aff"
        },
        "item": {
          "id": "86c1566e-cade-4041-b5a2-702d0b3ace78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66de0733-7794-4165-b77a-0c5b176c36d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88801716-055f-43eb-bb38-9f688ae30741",
        "cursor": {
          "ref": "d783c404-4664-4f22-ac9d-3e8c0c36c140",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a6dfa634-c4f4-422b-bec2-65dc85650592"
        },
        "item": {
          "id": "88801716-055f-43eb-bb38-9f688ae30741",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e91e3da1-37d8-493b-92d3-5f645d1ea8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37329a4d-9c73-440a-8eb5-40374b7aebfe",
        "cursor": {
          "ref": "2115e7d8-32da-4b1a-9689-0d31f111e1a8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3e1728f0-69c3-40d3-832a-fb9987c966af"
        },
        "item": {
          "id": "37329a4d-9c73-440a-8eb5-40374b7aebfe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2ba3c36e-4c2e-405e-98ef-eca35f779614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54b62ce-aa3e-4e53-a855-55c8f55ce92a",
        "cursor": {
          "ref": "1813b800-d086-41f6-99c7-99ccb3d043e6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "26bce40d-7c19-47a5-b2bc-9388a9a2bac1"
        },
        "item": {
          "id": "c54b62ce-aa3e-4e53-a855-55c8f55ce92a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f8e97bd6-5cc2-449b-8d5b-12a41f25d900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1625167a-807c-49ef-a0a0-1c300840047f",
        "cursor": {
          "ref": "6c7d235d-bd01-414a-b844-7faa7ccad889",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ffe6ab4b-98dd-42d8-b992-7a0c9baf8402"
        },
        "item": {
          "id": "1625167a-807c-49ef-a0a0-1c300840047f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "59f432ef-d69c-49d7-8bf5-c3b13df14c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d3d1ed-06b3-4fee-ac34-8a1d1dac4c2a",
        "cursor": {
          "ref": "d34adf8b-46d4-402b-83ae-8aaf5808e60b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "173b6b2d-46b9-4516-87f1-0cf9085dca81"
        },
        "item": {
          "id": "95d3d1ed-06b3-4fee-ac34-8a1d1dac4c2a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fd3be9b5-4e12-4c64-8db9-6008aca8750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41287ee2-d8ee-42e4-a351-cc083ef32297",
        "cursor": {
          "ref": "0ea690c0-cb71-4bf7-bed2-c6fcbebd316a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d3242a9f-bba3-44fd-9a25-f44a834f4d68"
        },
        "item": {
          "id": "41287ee2-d8ee-42e4-a351-cc083ef32297",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0af179e3-8c28-46d8-8e33-f8a9bb5dde84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71b8392-b21c-47d4-8858-23a3f4e670f0",
        "cursor": {
          "ref": "7b2e4690-91fa-4f0d-84b0-ce0af96b9ca9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "323c3d05-972f-49b5-b5ac-7f3f041e4009"
        },
        "item": {
          "id": "a71b8392-b21c-47d4-8858-23a3f4e670f0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e6bfdccf-4e86-4237-8982-be3867427d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d201a6e7-22e6-4d43-8f3a-51a2de45a8d4",
        "cursor": {
          "ref": "b104f489-fc13-4c40-aafd-9888bf376e5e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6701af85-d735-4b0a-9947-8dd8ec29c8be"
        },
        "item": {
          "id": "d201a6e7-22e6-4d43-8f3a-51a2de45a8d4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "96f0de40-2574-412c-9ccb-eb550eb084d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8044aa-4dcf-4e76-8958-3bd49d22acde",
        "cursor": {
          "ref": "46b5f9d6-729e-4420-a14f-3e724923655c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "30c7607f-0a68-4820-8a8d-15207657ff3e"
        },
        "item": {
          "id": "8f8044aa-4dcf-4e76-8958-3bd49d22acde",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cda3ff3b-e904-4071-a211-f9c79be8bf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb95b384-82a0-4705-aa16-2e858c0d9caf",
        "cursor": {
          "ref": "bd4c28a8-4e4d-42b0-9656-f3a8428fb071",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee015023-27c7-480c-817e-4bdef48675be"
        },
        "item": {
          "id": "cb95b384-82a0-4705-aa16-2e858c0d9caf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e2b1212b-9360-43ac-8e49-d226cd92384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3342d5-78d5-40d1-a464-541dafa7b624",
        "cursor": {
          "ref": "4d258ccd-a671-43b5-8612-fcf7ac28ef10",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3222ef65-6d9f-4b1d-9d19-d48624f93b7a"
        },
        "item": {
          "id": "3d3342d5-78d5-40d1-a464-541dafa7b624",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c8af92f5-b572-483a-8c85-0ba4f61e2f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37801348-1f6a-4c82-9b5e-f413f8aba4b3",
        "cursor": {
          "ref": "e21cbc61-4ec3-4390-b517-74824d8eeb15",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e7f57ba6-b1ab-4481-acd6-149df8e87d18"
        },
        "item": {
          "id": "37801348-1f6a-4c82-9b5e-f413f8aba4b3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c56d058-8414-405d-8be8-9ed2ddc872b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248b7406-391a-4485-b619-f573c55960dc",
        "cursor": {
          "ref": "ff02c703-33cf-4c09-ab66-0f81a3531a0a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a20d02eb-d2de-4d25-9b53-c45fca5989c9"
        },
        "item": {
          "id": "248b7406-391a-4485-b619-f573c55960dc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "defc79df-395f-4d39-ab5a-5ff4bc53d7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57588aa5-8143-4eda-a3eb-4f6e0daeebae",
        "cursor": {
          "ref": "4ffc4111-20d2-4ee1-815a-593554e1dc61",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bd198e92-4996-411e-9bee-0fb44008eae9"
        },
        "item": {
          "id": "57588aa5-8143-4eda-a3eb-4f6e0daeebae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e8466ea4-a615-45bf-a05f-2490e117779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff9cbfb-35ec-45f1-bef0-6e8c561c123a",
        "cursor": {
          "ref": "15c431e5-ce90-4395-99bf-0053d63a57d3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f5660c61-7d2f-4b24-b7c6-775e8117f005"
        },
        "item": {
          "id": "9ff9cbfb-35ec-45f1-bef0-6e8c561c123a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "90f9e3ad-5a5e-4485-98ff-eda350d8781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913a1e78-a9d6-4ca2-90a2-11713611d8e5",
        "cursor": {
          "ref": "66232749-bcb3-4c83-bad8-7d1493ce5028",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fc81bcc4-9c0c-4528-ad14-3a39408c8e01"
        },
        "item": {
          "id": "913a1e78-a9d6-4ca2-90a2-11713611d8e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "73f4b27d-d4c4-4ebf-837d-6b9c978e7ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82e74c8-ea1a-42d8-9041-5b2035b3e676",
        "cursor": {
          "ref": "b246471f-d0bb-4dec-a7a9-4e818c71fcc2",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3c60d782-60d2-42fc-b638-91a143cddea2"
        },
        "item": {
          "id": "c82e74c8-ea1a-42d8-9041-5b2035b3e676",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c3d6003-b9fa-4a3a-90b9-da0312c58642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeeb0e4-9fc8-4339-a2f8-f9bbf1308252",
        "cursor": {
          "ref": "8a6e4b76-2f91-4a14-a1b7-fb4ab071e05c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9377c36a-9d62-41b3-9277-8572cb44ec8f"
        },
        "item": {
          "id": "8aeeb0e4-9fc8-4339-a2f8-f9bbf1308252",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "afb352f7-fe8d-49e8-9433-9f5291afe1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf26870-f404-4aa7-8532-7b2acd3d35bd",
        "cursor": {
          "ref": "dad60204-fe0a-48a9-8042-c909e3f2f38b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "46f8d9a4-cdf3-4b69-86ca-10ed54686f39"
        },
        "item": {
          "id": "dbf26870-f404-4aa7-8532-7b2acd3d35bd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d78cd76-5944-4da2-8e66-b8a88138a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14acf7b1-cf6b-4f29-98b6-3a31661b75f7",
        "cursor": {
          "ref": "901aca50-b99e-4e7b-a3fd-9cec5e52e4a4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bf9098fb-4492-40d5-a8cc-a024d513c8cb"
        },
        "item": {
          "id": "14acf7b1-cf6b-4f29-98b6-3a31661b75f7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92db9652-d8d0-4bb2-b8c8-81c7331b0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf7419c-d7b2-4b32-8aef-91d91193cf85",
        "cursor": {
          "ref": "eec029c1-17ae-47d2-a2aa-a516bc1ad03a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "827f9044-81c3-4804-a066-a0516f249977"
        },
        "item": {
          "id": "abf7419c-d7b2-4b32-8aef-91d91193cf85",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2b4c0d16-0491-49d0-b8c9-026721a8a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9799fb3d-e385-46b0-abdb-e24dc08b4664",
        "cursor": {
          "ref": "81cc1724-1c86-40f3-8c6d-c54799d67066",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a94ca1e4-78e5-4d8c-9a98-1a641a09ddcd"
        },
        "item": {
          "id": "9799fb3d-e385-46b0-abdb-e24dc08b4664",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9d3e220a-0a3d-44c9-9426-e9c8df51acc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283ff766-4d8e-46c3-b9cb-e79954536f6b",
        "cursor": {
          "ref": "66f0a5c6-ef85-449a-8bf8-8f1eff91735a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9ea6e223-5507-4028-b697-fb838eaec99b"
        },
        "item": {
          "id": "283ff766-4d8e-46c3-b9cb-e79954536f6b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9cbeb8c2-6e5e-45e9-892e-2d7e01a89eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32007f72-4ab0-4e46-8011-0f532f481450",
        "cursor": {
          "ref": "cce1c043-b87f-47d4-83c1-49ffa53b213b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "03bccf4e-5240-42b2-9c6c-4ec02a0dfb0a"
        },
        "item": {
          "id": "32007f72-4ab0-4e46-8011-0f532f481450",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9ffc88a2-53bd-4ff4-9acc-452e0d032163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f143ec-f4c9-4375-8514-7901673465f6",
        "cursor": {
          "ref": "0dde1a61-ce31-4734-bbef-33c2529816a3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "97553c23-a11f-4e2c-a44e-1448aeed76b0"
        },
        "item": {
          "id": "f2f143ec-f4c9-4375-8514-7901673465f6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c0ecba8c-fab1-4e3f-8d0f-172180ebc273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efab42a-1d1a-40fa-8600-3cc93abee0ea",
        "cursor": {
          "ref": "d74318de-8dfc-443f-97e4-c572ea25777b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5296d7c0-bf0a-47fb-82b5-1c9ca6843a17"
        },
        "item": {
          "id": "1efab42a-1d1a-40fa-8600-3cc93abee0ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d6c6f215-b81f-48d4-af3c-81be7df11b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a2339-0a8d-4e93-896c-273995a5fd01",
        "cursor": {
          "ref": "e31b6de4-c09a-4079-af18-674fb7c360df",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "224c24e0-12db-4b5f-84fe-02163400538e"
        },
        "item": {
          "id": "772a2339-0a8d-4e93-896c-273995a5fd01",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3aab49dc-46cd-410a-85cd-4672af821d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd15ad3-a329-4c75-91ed-a0289a751e4c",
        "cursor": {
          "ref": "bb65e43b-0bfc-4867-aef5-be9e12c2f8dc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "abe8f47c-eff9-41c1-b2d2-1b02ec1f262b"
        },
        "item": {
          "id": "2bd15ad3-a329-4c75-91ed-a0289a751e4c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d606615-1b87-4d27-b97e-09f86fb62e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a389528d-8ab3-4aa5-989a-dda92fb1423f",
        "cursor": {
          "ref": "422f7804-5383-4641-8dd0-d27175c8e5e1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e8f8add5-7b72-4057-925f-040529c3ddf6"
        },
        "item": {
          "id": "a389528d-8ab3-4aa5-989a-dda92fb1423f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ece7d014-e0fb-41d4-b81d-08396853141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae95173-c108-4810-b435-a59b3092ccb0",
        "cursor": {
          "ref": "6509dd63-a306-4806-8531-c258b4ce9676",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2539a22e-0451-4b3e-a4ba-d46066ea39e7"
        },
        "item": {
          "id": "0ae95173-c108-4810-b435-a59b3092ccb0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e98420d3-8b51-4ebe-ba29-55771d76536e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae997a1-660b-45d4-a93c-aae19279b980",
        "cursor": {
          "ref": "4c9b9ca3-04c7-40e1-97cd-de8c237b60df",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "97372201-95ce-4cb4-832a-8612fd0330ee"
        },
        "item": {
          "id": "aae997a1-660b-45d4-a93c-aae19279b980",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c73aba64-bb95-46a1-846b-c1761ba6b0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f759b5c-62c6-49e8-966f-939f17f9cf2a",
        "cursor": {
          "ref": "5bcd7259-3634-443d-a6f9-64e2a24b9906",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7e192ee9-32d9-4f3e-a22b-73dfc3878f35"
        },
        "item": {
          "id": "8f759b5c-62c6-49e8-966f-939f17f9cf2a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1f1360a-bf72-4774-a3f7-8c2e4899835b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a39fdb-d5cd-4a5d-afdd-f54881342eca",
        "cursor": {
          "ref": "4811ef00-a75d-457f-ad29-1ff27b4f3a8a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "59900686-13cc-42a3-a712-61e5b89a3715"
        },
        "item": {
          "id": "b2a39fdb-d5cd-4a5d-afdd-f54881342eca",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3ae939e4-9050-40e1-a34c-c6628e13283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e87425d-6dfc-45b4-93dc-ac7f5c24a533",
        "cursor": {
          "ref": "8aa408ac-8c37-41d9-b597-fa70530f3afa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc7e0a49-4f42-4eac-826d-5ae1cbdb23fe"
        },
        "item": {
          "id": "9e87425d-6dfc-45b4-93dc-ac7f5c24a533",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "639a0cc5-deb9-4676-8e78-f49600c1adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02885bc4-621a-4985-9108-65d7c755b036",
        "cursor": {
          "ref": "ebd68d13-5634-403d-ad94-8a4f74a80db8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "47e018d3-cc71-4aeb-9bba-5bf3913c5ef1"
        },
        "item": {
          "id": "02885bc4-621a-4985-9108-65d7c755b036",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3302ab89-eb38-4e02-98a1-18f963c69921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502b4152-2255-4f99-9cf7-6fc2b672c9f3",
        "cursor": {
          "ref": "9086b5f4-0024-4c15-be85-104ac8c4cc82",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "197894d0-57f4-46ea-8d4f-5fb090f8902d"
        },
        "item": {
          "id": "502b4152-2255-4f99-9cf7-6fc2b672c9f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "61125dc6-6600-43a7-9f19-384d3cb61d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8287d6-f140-4e48-82c2-965fe3d2e834",
        "cursor": {
          "ref": "65aff0fa-d1d5-41d6-9a86-5cec39a072ea",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "97b4fab8-385f-4076-92ce-532335c8c35e"
        },
        "item": {
          "id": "6b8287d6-f140-4e48-82c2-965fe3d2e834",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ba6cb0d7-91b3-47df-ad16-74291475b8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8de87f1-7eb6-4211-978b-f125c59824b8",
        "cursor": {
          "ref": "94d47f29-0ef1-4cfb-b849-680d30978f32",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "830cebdb-9c0f-4f2d-ac23-cdb51e387ede"
        },
        "item": {
          "id": "c8de87f1-7eb6-4211-978b-f125c59824b8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "631fdee9-8b3a-42ac-862e-ca81ef1f9fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb20b5d-1662-481a-b480-c4ed66f07d0a",
        "cursor": {
          "ref": "e535f107-1701-4f4f-b8b9-8020b135a920",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e91292e5-9617-4815-9671-acf4b16ab16b"
        },
        "item": {
          "id": "6bb20b5d-1662-481a-b480-c4ed66f07d0a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0a8c8b75-fe8f-4622-9834-c961d263ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507c92c-8d82-459a-b420-36def948eff9",
        "cursor": {
          "ref": "d3b27eeb-25dc-4755-b76e-249225b10b5b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9016f8ce-601e-44ff-b139-74acda2903c1"
        },
        "item": {
          "id": "e507c92c-8d82-459a-b420-36def948eff9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "011deb60-578b-49a5-82ee-a2525d9c662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48fd5fc-7a6a-42cd-b459-16f8260623b3",
        "cursor": {
          "ref": "ebcfd63e-da1b-48ba-847d-b1c7bfd6b7f0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c256ac47-f764-405a-8abb-0eb6a45854cf"
        },
        "item": {
          "id": "f48fd5fc-7a6a-42cd-b459-16f8260623b3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "63cbece8-852f-4c47-894d-0ed1abaa3a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf46aa6-59e3-49f4-904a-13a3f1e812a0",
        "cursor": {
          "ref": "09b2c5de-1fcb-42b4-8c5d-6a6610db107e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fd3e88f4-9bc6-4e05-8794-d19a47fb641d"
        },
        "item": {
          "id": "ecf46aa6-59e3-49f4-904a-13a3f1e812a0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "75f2123f-fb20-4828-b2f6-13daf082babf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c00f10-fe87-453f-9cb1-110155880f28",
        "cursor": {
          "ref": "7a0ad006-6866-4114-8e7e-37fa7f22e019",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a69d3c2d-f01b-4ca2-9507-ba14d7ccf17f"
        },
        "item": {
          "id": "37c00f10-fe87-453f-9cb1-110155880f28",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3d07f69e-2255-4c94-acca-b9b2a3abbec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a876a1d3-596f-44e1-93b4-ee640eaf4081",
        "cursor": {
          "ref": "0dfd3218-3840-4c51-8e7e-89bd60aab4a0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cbfff470-db59-4a23-9d8b-2c21c4d19cce"
        },
        "item": {
          "id": "a876a1d3-596f-44e1-93b4-ee640eaf4081",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b8ea37df-a16e-4e7d-a2e7-be20084b9c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a02319-7bf9-4322-949c-a26da04c779f",
        "cursor": {
          "ref": "ad4a22c2-0b14-4951-be19-b9c4f2c728a3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "97dec47a-22c9-4fc4-a5c3-957af5b7dc47"
        },
        "item": {
          "id": "f7a02319-7bf9-4322-949c-a26da04c779f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa0aa3c9-0796-4f99-8807-0724782da47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c80e89-8fa0-41d6-9657-9dca58a4528b",
        "cursor": {
          "ref": "378ccf9e-5e58-4e9c-aa74-850fd2bc3964",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "300a340d-6c9d-47c3-a762-fc14889565c4"
        },
        "item": {
          "id": "b2c80e89-8fa0-41d6-9657-9dca58a4528b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "24abf8cf-968a-4cf4-a49a-3ad1556c1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84383957-d06b-491f-be52-cf22a80287a1",
        "cursor": {
          "ref": "cd6e0bcb-e5f0-4e2a-a7d4-19026d977d44",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dfa7c3d5-0c46-4a3f-94e8-31e7a7d9bb40"
        },
        "item": {
          "id": "84383957-d06b-491f-be52-cf22a80287a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9e9b9ce5-7de2-4675-8604-0426dd948f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba4cc9-9b68-4442-8b97-720df0af0ea7",
        "cursor": {
          "ref": "821a4236-b91d-4571-a34a-289e61b4224c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9325127c-1b79-41de-8796-787b5a784940"
        },
        "item": {
          "id": "a8ba4cc9-9b68-4442-8b97-720df0af0ea7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a6948672-af90-49f1-9c55-9094d607c722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22880e13-8e17-4b17-b91e-8165af3f5673",
        "cursor": {
          "ref": "4162ddec-f518-4a7f-a6d5-54c84228cdeb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3334d3a2-1740-4c31-aea2-9bb5ce7d22b2"
        },
        "item": {
          "id": "22880e13-8e17-4b17-b91e-8165af3f5673",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ca32f37a-a4ba-489c-b653-db674d95345f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3abf80-65f9-4536-9267-eafedc09c68d",
        "cursor": {
          "ref": "16ad7be4-ade8-4b7f-b77b-d7752695ac46",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7c5743f9-e289-45a0-b7b5-95cf481a04d3"
        },
        "item": {
          "id": "4c3abf80-65f9-4536-9267-eafedc09c68d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50a40efa-586d-4ef5-b383-75662b8ebc82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9451caa-12cd-431d-a70c-d3c369f8b3f5",
        "cursor": {
          "ref": "abb95514-5a73-4aa2-b390-2557ccc163be",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb3e0059-cb5b-45cd-8372-9429f1998a57"
        },
        "item": {
          "id": "e9451caa-12cd-431d-a70c-d3c369f8b3f5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7423ff7-7ef7-41c4-bcec-bd927f2afadf",
          "status": "OK",
          "code": 200,
          "responseTime": 2346,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34fe010-e28c-40cc-90e8-e475785784df",
        "cursor": {
          "ref": "cb43be00-87ba-4b6d-a5ac-6c3ab110a879",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6bc1b4f1-2927-4f32-91a1-747edce95882"
        },
        "item": {
          "id": "a34fe010-e28c-40cc-90e8-e475785784df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1846463-05a1-4d72-abec-8663031c3b0c",
          "status": "OK",
          "code": 200,
          "responseTime": 3093,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "908426f5-74fe-4da9-91f3-dc781bb980d2",
        "cursor": {
          "ref": "429612d8-99e6-49e7-8381-191b3bf5bd7e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e52216fd-b850-4871-ad43-511ec7dcd634"
        },
        "item": {
          "id": "908426f5-74fe-4da9-91f3-dc781bb980d2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dcedf215-f839-46e9-ba64-416d9a3c361b",
          "status": "OK",
          "code": 200,
          "responseTime": 2628,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe08d93-bc41-4579-a1ce-aed66a37b6ec",
        "cursor": {
          "ref": "460b6e0e-5194-4fdc-a3fb-f0e6c6b1dad1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2aca3c64-4200-4e8c-8cc8-2dde581ac8da"
        },
        "item": {
          "id": "9fe08d93-bc41-4579-a1ce-aed66a37b6ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc4418cb-861e-4919-8f61-39ac3239366a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe08d93-bc41-4579-a1ce-aed66a37b6ec",
        "cursor": {
          "ref": "460b6e0e-5194-4fdc-a3fb-f0e6c6b1dad1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2aca3c64-4200-4e8c-8cc8-2dde581ac8da"
        },
        "item": {
          "id": "9fe08d93-bc41-4579-a1ce-aed66a37b6ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc4418cb-861e-4919-8f61-39ac3239366a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f1a41e-84c3-415e-9798-9cc4ac4a446b",
        "cursor": {
          "ref": "1a648dee-7e6f-4698-93d0-cddd4b0c9810",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "49788c30-94f7-4128-ba9b-2e6a25444cad"
        },
        "item": {
          "id": "03f1a41e-84c3-415e-9798-9cc4ac4a446b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38d45385-d93d-4d44-96d9-7b426d1b9f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e690eae8-c744-4426-b237-4263de68c561",
        "cursor": {
          "ref": "6a708ea4-4248-4ab9-9087-166d2c5f8717",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a5c3f353-1da2-425a-8fa8-77fbd048f3ba"
        },
        "item": {
          "id": "e690eae8-c744-4426-b237-4263de68c561",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5fa8e864-da75-468d-9eb4-20f6fb1e0db5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}