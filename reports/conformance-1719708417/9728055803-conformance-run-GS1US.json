{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc32f0f5-13bc-4d85-abb6-3c474a50a2d5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "97c84aa9-e21f-4404-821e-b79c412aa154",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b1407f3-99a6-40e8-ad20-a401f0df9a18",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6fecbfd1-3149-4b4d-a374-773461964086"
                }
              }
            ]
          },
          {
            "id": "c46630f3-a60d-4a26-a979-3a2667b603ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63e9d164-131a-4615-8295-825024f1c9b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46237949-19c9-4a78-9240-cc3516e8781f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "05142046-7157-4b08-adce-cb5a64a60377",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cd4fc693-9a4c-44de-aa9b-cd230f64f85f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52f48d2f-4cd4-478a-ad69-44884dd7e166",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9072e8d7-5c88-4ede-94de-e161b323be2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0363056b-43e1-4847-a7b8-301eb39843b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4062c015-b02c-41ff-8680-c436c0e99a41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3da101ed-165a-4cf1-97ca-815d8e814407"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a4bdeb0-213b-46e5-b9eb-f7550ea989d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efae0160-af11-408c-a18b-1c64b02f214e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a63c822-f9e5-4bac-ad94-b0c2c94c1616",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c71086a4-907c-4afb-be12-8ad8fcae436a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f95324ce-5c7c-4c3b-bdf3-1e7edea0e22b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bdfa642-6fc6-47d6-8a9f-da8511f8e4eb"
            }
          }
        ]
      },
      {
        "id": "86c8c5e2-2199-480f-bb7c-c6c7fb2b4c56",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0212d4da-5777-4638-81c4-8b0c35249e44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bc482c2-b5eb-4e06-a0ce-9071f8b1360e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c846ca21-dfad-4d1f-8424-66d4e0d38444",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896b301-ca73-49f1-a342-5847b57a0e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e233211-1d66-450f-9e8d-e84abb3fd64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c2503b-c7b5-43bf-afae-a2f18a173fe3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af697618-0a68-4178-9167-a8a6bfe00535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b8ec864-8b4f-4c8b-8960-1ec2bc6a4627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2fcafc-2876-4d38-a81b-19233980aa48",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946bc646-0c6e-4216-b677-2d0c913b12c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0179e0d-3ec8-4a81-9846-bc9f762380fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb6bb4c3-b52a-4e74-a10b-2d84296c78bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a59da553-7271-4a7f-bfd9-7630e76fabed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316e56cd-3f69-4dea-8bbf-1314a2b2c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdba59e4-fc60-4b11-af51-36e50c1ca5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94351c76-2dc3-4828-95a2-85b56e5fe64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6433e747-f6d7-4339-8150-5f0531d551cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c02bc07c-33dc-4ec4-9f33-38a25a6cdde5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77544e50-3e27-459b-971b-b015b23f9418",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ef11ff-b56b-4c7b-a783-545a268e1e40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "742730e9-079d-4917-9480-9a99042d45f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05085f5c-5512-4387-9e19-8df7d95e4699",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "22d1e41c-a4ff-4feb-bd56-a0941fcf5891"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85e692c1-f450-4394-bcce-77ce368ef251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "447a458c-4e46-4d9c-8d6a-36d9d69a85ec"
            }
          }
        ]
      },
      {
        "id": "da640a59-d497-4ab1-ace6-01bc02151235",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "262615ce-1b03-46d0-aa6b-0fb42219b599",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ee22538-fe51-4f1d-8546-60e3efb59feb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "75bcb095-3b8d-4c24-a76d-4483482ba65e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa73952-725b-41bb-87a7-ed633de63739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863b3e4a-131b-4483-8bb7-ee8c39643a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d76f12-eb9e-4ccc-8468-93bf8264f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116073c5-d008-42d5-a8c1-5350ace5c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38d0907-034f-49c3-a2bc-09d42e5bfd02",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3f92ad-906a-42c1-a0c4-60a3147b3b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c415e76-2242-401a-83d7-5401c8f1d003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede6d27c-52e7-462c-a115-4334749a0272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56f51ad3-7378-4554-b1ab-18f8e363167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1800b262-48a1-43ea-9f78-a92b8086c454",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6c4b96-ce1f-4377-8c2a-447bc0594a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80339018-9b9f-4b6c-a742-58b4354cae08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0efbe7-637f-4ca4-b87c-c998f7c37d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2287e0a-59a8-4ec3-b740-d533ec95d7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51897a57-fb2d-4bea-a12c-e3bbd72257b3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9061119-d3d2-42ff-b86c-e1fa6fa95d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714365ab-8a83-4f28-8e72-6922a0236a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c5190a-028d-494c-a57d-f454325b2630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a5ef28f-97cb-4153-82c9-3fc05910b784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3512c69d-a08e-4d41-8e53-67b59158556c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e36ada0-61de-4c17-975c-ea584e06b62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5135ff77-236f-4e6d-873f-0d76a222cc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066c541f-201b-4f9f-8ad5-042e1d9cfbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83d844d2-f344-4af8-9b6c-583424b620d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ec7b2-2a73-416b-afcb-e91eba53d1b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dfe1ca-069b-4a20-a15a-d3e209a90e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051298cb-8fe6-4a4c-afdc-da8cc8a2ac4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3b10a1-a84b-4312-9aa8-b84bba3bbd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66e3118-c1c3-4967-81aa-bf94639aea2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9520a434-d5b0-4f71-a3fc-d45d34d2d2ad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1763b4d-f23d-47fc-b735-8046a56c9f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0d4f8e-e1b3-4efa-a88c-873ce66d967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6902b6-795c-4190-bf46-ba97f94dd8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c01d0bb7-eb21-4bc9-b6ee-14f5bc03a003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1c06c-a03b-4a9b-95b9-2c3134d5dc3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4080cb27-911d-4905-a615-3e614fbde9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9432ef7b-d02e-4c3c-abb7-a2e301f0e5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3f068d-1df9-470c-ae54-17e560c6941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6e31ce-64df-4a19-a3c6-6365049c5924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784def21-1262-4c16-9f5c-c399de35051d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed9bba3-f29b-4258-88ec-6bf793fd13ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc8ecb8-2f29-41b0-a1ae-605a00e62620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028b73a-4006-4970-8e04-301c70f3b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f5b6c7-2446-4dde-b7aa-21c673c451e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e49ba6d-0138-4fe4-b9f3-ce976ec519c6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d1f69e-8637-43f3-9645-d97bca489116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff770f1-5417-4e3b-871e-ce48f9984243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae676af-d3eb-4f4c-9467-459cd9fcd683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b4600a2-7129-46ce-b030-96ff2d2b9e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e52e863-d0e4-4799-bec1-5491d2c4c23b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9f14d6-414a-4184-af97-4f60df3e4fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becc6188-43e2-42c0-95fd-4c243d28d191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c46e7e-7ab8-4b93-857d-5292eb8e7965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d1ee33e-601e-4698-89e8-16806e209402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fcda56-d752-4ebd-9ee9-a8b2526749ef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3b05b4-6b86-4ea8-ab4d-659ba9d824ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd151b4b-13a8-4554-93b7-27ffeae2a2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37f8292-69b0-4433-ba5c-851e9aa9eb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7948ad58-1105-42b7-8b9d-e43e16568ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b1ed03-43d5-44ea-ae83-173d12de5bbe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8946280-e720-4c34-b8e7-ee8016622279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c1c85f-97ce-44e1-b4e6-ba60997d5dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c21520c-504f-406c-9c1a-101810778f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee83744-1ba7-49bf-b120-a7f2d115e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763086d1-c839-4408-8d6d-066aa2857fca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730ae826-f6d7-4d69-9221-1e3a3443f3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66da3a4b-bdda-4bd8-ae32-f89d08ac1460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043716aa-56c8-4f7c-b1e1-d432be7b8bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f8d3b03-10c9-4036-b668-61218afd5757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb9983e-d36d-4797-a936-fc82954f496f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d621764-350e-4430-ba32-c1d8da832e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b6cd47-6728-4920-95f1-382d86f08d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36aa1f0-a5de-4ce4-b5d6-cde915cd0b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd2fb3ef-2077-43ca-8add-8eb2b85299ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b715b23a-4299-44d9-9c53-db628d5f5276",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873aec55-77eb-4328-bc5d-3da8bed59187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ed6396-5b78-471d-aa09-ddf648536ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58c6021-20be-4bb7-af28-49656278bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d6cdf99-12a8-4d55-8e19-dc0517ea11b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccfcf72-2ebb-4fbf-b4a7-11fa83b02619",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7133f9-08b0-43e4-836d-f8204146ac5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4ca7ea-034a-418f-8041-61fd39c7c563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf7303b-deb5-4e96-b71e-da524ea8adb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a1e9b8-9697-4ed8-8812-6ebc5d8c1ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0230d5dc-7f9f-401e-9b28-c193b26f0410",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508fe48-3355-455e-a823-3ee0b69995be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6203298-6061-4448-acf9-16d2346a05da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9c8629-1cbf-4c40-95c7-fdfde2bd0a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b62104a-6732-4c48-bb82-a7e62c4b203b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f86d7-f310-4a01-a2e7-70d2da9380b8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b11836-cecf-4ad8-8376-2d523f96eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6683b0-d480-434f-b9c9-5c11076ec8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8415d3-2c97-41b2-815a-c306e2a99d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c1c28b-9625-49bb-8038-84181b9c43bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016a23ef-b705-4836-abac-d57dbfc1686a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e803a5e0-2c91-498b-8225-eece57497a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220c11d4-03c4-4ebe-9849-6f01939aa300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1c1f0-410c-4943-9c4a-ab60b00fb20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4f6ece-d83a-4cc4-ac70-e1dda543550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6615ccfc-b36a-48d9-98c0-9b25ca7d7e40",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11b81da-4e87-47b0-9db7-ba9bcfbcde74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b957564e-6c05-46a4-8460-f97935c5f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9c8d9-747f-47ca-a001-17c0dfebf145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f04d4b-8539-4115-b813-4acde58cedae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f1aadc-4586-434e-a3d9-c58ed10b5808",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fed8aa-02f9-4bff-9cc7-25c39db191fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925ceea9-4d38-4d56-91a1-a0eb2478dfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c79d3a5-5b1a-403f-a4e9-14967f905499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fd7661-bb61-43b8-809b-ce792f94a015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c37ee-4e42-4e4d-9206-60d5f88938f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fcec77-86d9-4a7e-b135-45acdf204baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca103f0-3c95-4cb6-8a3d-31e97449c9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d96788-6d45-405d-8899-2bac364831d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2eb51dc-6b3c-406a-ad1d-25d0f3eec568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ebe6eb-873e-4b47-b106-aa4d816149a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039fcacc-4ab1-4202-b882-85284e422406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0c008d-54ea-4f57-964b-cbb7844e0130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fd10ec-b82b-435d-b174-978968a41a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "773ea0cb-65ae-427c-9e75-0ad694c50ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdd9510-600c-4a98-b92a-7406ed86e156",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731dcfdb-c30f-46cc-bd28-83329f49d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c6c31f-a9e0-4318-956e-a2ff3c75771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832d193a-cd9d-46f5-adf9-5395b21a708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "092c0070-1d7a-4375-b861-815f5b001871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68a708-d8b6-42b1-9b44-eca97451a6a2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19af9e0c-1b32-495f-9646-225d127f6b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61e4eb0-0d99-4179-b513-f5d44f070681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759d3b16-e072-4856-a777-fa951f9fd0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b3890b-f807-4843-8cb3-671e0f873636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f66d44-2745-4061-bb37-592f39ade06f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fcb98b-9d7a-4e9c-8c14-aecab1610783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d93f20-d1f0-4aa2-8f80-76f892501795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d508c-0269-4e42-bbbd-efe35c875af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e7f958-7605-42ac-b6f9-e448643c1f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56d19e-fdd8-4c51-8081-0be36f5c2801",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e8137-6d76-43cf-867b-c282c8ff4dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b759b1d-3dad-4274-8f09-1211ea17cd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7432058-3377-4dde-adf2-abbbdf299013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "018a67a8-a81b-4458-b5b5-85168114dc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aab9995-0d92-4357-8ea2-a3e108c848c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1001cc-c3a8-475e-a9b3-7a1549781d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880e338a-7918-4003-b1c1-901fa4fe7b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd9f88f-3777-4a78-8790-9728229af761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eece65df-17c9-47ed-8c08-86419cdabde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ed01ca-d492-4eb4-a53e-572030431cf7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6f3011-88ac-4de7-9c70-f887c5bd0267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20db5fd-c0c5-417e-a1a3-3738c09dc302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2fe4e3-bb5f-430d-b03e-9a32530dfec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3e81d2-8750-40ff-8cdb-28bc7b0e864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1977888d-0bcc-4a3a-9272-4e85ed46bf8b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f2099d-3243-4afc-88da-2d5518f8c6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509c1fdf-ee37-4cd8-8ff5-650bb28e5328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00e4d48-eed8-4bfb-9784-0c3ae1bc0bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a4315c-4cb1-4dcc-ada0-1e18cfcb15ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a71704-7cd0-4028-8ea4-3f416ef856c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ded793e-84c9-4bb1-81fc-8c859eb17fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8e9a6a-01c2-42a5-a9ca-5e9463f243f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4be81d-3856-4d8b-8ab5-d442310a8b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224e1b47-c462-47c1-9084-f0a9d1f59936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4da511-8f57-4248-aef2-a4daac86ccf8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c676d3-6d1c-4789-a233-d55c4f6ba1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163d3206-e1d3-4a82-ab53-ddc779170d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbc705e-8ab7-4b9d-b443-fec475e55861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21265787-5833-42b8-b870-8b93991b9ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45090bf7-db9b-41e5-a740-7434f424c1a7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a044ae9d-2e79-4a91-8b0b-b405e444f10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaa7fed-ecfd-48d5-bca6-6075a238abc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0481e08c-2f92-44c4-b6c3-bb4494e61d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1ee14e-2f44-4982-ba10-0a83f50d56dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35574569-e22d-4d6e-8004-0ccb9c869ca0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051dc654-52eb-4ee1-ad38-2fe2921e08c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2ae7b8-ba2f-454a-bd9d-26342bcde9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54004a51-f7ce-47a5-a778-9389cd322c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0218658e-cfb0-407a-a1a2-a7db17478c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79208b8-8fbc-4eb9-b8e8-95186ad2e90c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea11d5cf-a72d-49b6-887c-1d9a4b09315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50705bdf-cff5-46d5-a5a4-abc0fe61f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d23bc96-f744-45b7-abfa-a8c58b03b606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3919014-44bf-43e5-bf12-b1df017e002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b546071b-19dc-46f3-ae10-4bb8418aaed0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09b0172-e67a-409c-b92f-c41eae441916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a97f59-b822-4d2b-a883-6ea3ee5b8b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b25c84-e592-414a-b050-78bf45a9b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfaa797-f466-4c18-b0ba-2d0680b6da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1292c4df-78d3-4b2a-901f-e307e682a009",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8d2d05-2179-4376-b900-c13bd0626712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735f108d-3e51-40a6-b357-75d6691d0ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6575b36a-53c2-4380-986b-5e60a5f049b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c276f4c-f6da-43dc-92d5-129f37f0213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e69e9d3-36ad-4dc9-9f4e-d33cb0d2613e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d3263b-a66c-4e66-be09-a90f10163ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4557955-ea0b-4a14-9fcf-4deab472d0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ced27d-7ab2-4f1a-b1e7-ddc9d1d769d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "024d960c-e2cc-45e5-a118-5d4d70e14111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c87b2c-0387-489e-b1a9-44f5e42fc70f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a314e7-0229-4172-b247-9d54b3c26a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5ef5d3-c816-4a39-a410-d851b02d6986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb904433-17b1-466a-9c3e-60a72c0f8f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0febfa20-7071-4121-bb11-2f36c700ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cdef8e-057d-40f1-88ac-3d76c0eb3f47",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3091977f-68f9-44fe-9381-3b13120c45fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b38b2d-72ef-49ac-8c53-f3f7ed7dfeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fcdc54-a52f-48cc-a281-6a9f02734f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b76b640-3bc2-4209-8903-d1e36c7588d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48b1247-e47e-48f9-ac1d-811c02a3aac6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d893236-bf6a-4003-8819-b6f10330b7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ba4436-7544-424b-bdb5-f529985b6506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73374d45-d7c7-48e5-96a2-39d498b8e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae1a49e-347c-494f-b0c2-d954d140b663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ba2b9c-6870-4bdd-a290-bb64e3e5b7b9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eae5838-fc6f-4e9d-a2f6-19ceef922a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ade630d-6e3b-46fa-b7ad-776d439b0b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7dcb42-294d-47b3-ba0b-6397ea523932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fda90a-9f0d-498f-8a5a-61ec5dfd09b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e067283e-4df3-4632-a4ad-8ab16d60b5af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2749ae50-cc71-4a4e-baac-1c82170b07bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45df979e-5ef9-4e8d-a35e-8d31e272d03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d57c9a-4d42-4403-b7b1-022ce93a9f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b327e6ea-0bb7-40e6-8516-d2e09c440027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16183042-6c0a-4f6b-b091-754535fd4a41",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da49d4-1c59-4008-81ce-853e2476a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d9840d-6bb4-4059-9c8b-379f8d96efc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e33e21f-353b-47d4-8759-e167c587d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0628832-d280-424f-ba8c-94568d3eabd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601e6ca6-f4c6-4090-b490-9742cb28d949",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce2c80-6c31-4537-ae81-f386ea0ce529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27519d9-659f-40b6-9d66-e7d48cf2d45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6101b6bb-dfb6-417a-94ae-ea3916a1eb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09c0414-663c-4a40-9f60-c5c10b8ddb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026da33c-3dfc-4707-9aa6-03d17c366f3c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e620c76-5cd5-4f4a-b222-c9eac8b9b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d711b08-e5b3-4c4b-b429-34c486825f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37497ff-d782-44d4-965a-8e5082c2b0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9003d58f-0eed-4442-8005-a55478dc0e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940848bc-28ca-478e-9b7e-f8a81131a0c3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523bddad-cae9-414f-a431-dda6fc9320be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757976ee-4764-4cad-8630-965d2705c377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd7413d-bf00-404e-af31-4159bc183cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc7c9f3-1a07-441b-b6b5-e8fd6b468560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba5973f-b988-405e-8b7c-d3fb105421a7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e025e5-ecfb-4b58-9b29-6fc9d0a71c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d350ede7-32b4-4160-aed6-168fb2d31594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767dc2b0-3393-4f14-81fb-4561ea8f5e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c00d8ab-a6df-499b-b4e3-c6c34c3f40f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47c093d-05d4-4d8e-a0bf-4e0e9a4f3b41",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd5a02-09aa-4a2c-b08b-d1572851d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20a250b-c91d-447e-aea1-c51cff45cb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb3432-979b-4341-8f97-b420318a09bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "676df8c7-3db7-4696-9bce-e35ab3be8bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97524d3-890c-45d0-ab14-8260d72d45dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0f7b7e-5fbb-4950-aed9-647e8c0ea5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd14ac3-0297-4e64-a0a2-e2a7b3aefd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8748573-3b17-4741-9557-27e87decafb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "934ac323-b7d0-46a0-9593-d989589ab8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025cb92d-16be-4f35-b7ad-6f5df43c8b6d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40fc07e-4469-45c7-bb2c-68e6d9866a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ee9a93-b748-4288-94e2-f2b79946070e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdc4c96-65c4-4022-a8ef-be4e2ff20698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3f4452-d9dc-4741-a30e-6ab5c417fb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fe01a6-cd4e-4bd9-9929-1fced00a212a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7fce47-8173-4fbd-90be-d37266f42b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17acfda8-3b90-426d-a6c3-d7bdba169239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cef09c6-431f-40a0-8c12-1b3dd5c00e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "599e205b-679f-4ae8-94fc-7932f934cfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12c0c64-3bd7-49ef-96b7-58f33b5bf9e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93aff91-8350-4d09-ba39-e65aef067884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c553eb-492d-4960-9100-501152e55617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d2f422-992d-4340-9321-1e856de8bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e488df-54e1-4978-a532-2a8e2ad163f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d856cb-9b23-4921-941e-da8054181d30",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1e15d4-928a-4dad-a33a-d6713aa1c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d88625-18f6-45ef-bb61-fffeeb45b830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b6a5d2-776c-48cd-bcde-6842c762a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084dc5e7-d98a-4c1c-baa2-d653318f1494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae23a95c-ecec-405f-9dfa-2f10d3dbeada",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d77e86-ed06-48cd-8fc6-04fc9b8bc09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4bdb60-dabe-4c58-92f4-7075654c9820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ec8d0-1934-4b08-aab3-0225c336537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a28d26cd-d86a-469a-a123-e5bc9e70b17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90f55a0-b1f8-4541-a3cb-6577b6bf09e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3809488-605e-4f29-a0f1-da227babb0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae92735-5ae3-471f-9e92-8b9b386979f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50bf5b2-1f5b-4fef-b441-e6fda26bb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b978e02-9f42-49ef-a1b6-441622d1a7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d54f5d-4ec9-429d-8afa-c32752203539",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071373d0-7cf0-4a4d-a0b6-011d8eee2904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02831892-48e8-42eb-9e3a-f8a6d3b41f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9983dab5-9f1b-4cc2-8f97-e8e009cca3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f92f45-7d49-481e-9a5b-fec186190278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4ae30b-123c-4197-abc3-62ddd8cc4877",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c30b0cb-8f8c-4abd-8b56-44cee2974819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653a314f-2594-4a61-af59-59143dfcee03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5cc59d-35de-4d3b-b2bd-606cbf691ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbc7399-7928-4efe-9512-52bc6a989dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5c960-27f2-46d8-9e76-cb71a1314f30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb109706-4301-4a0c-bcbc-7410dc39858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69dc89b4-9b6e-443f-b2c3-286892db12ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f384b-c851-4cc3-a028-116a7e06026d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de5e2084-32e3-41a7-834e-a9dd5a015eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453828e7-e4ca-4dde-ab43-81eab3cf0e69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6351ad-853d-4dae-a7a8-12f0e58fdedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c78423-673d-4bff-8161-211417fa21be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a2d98-13f8-4e0a-b422-4ef6ede0f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c849a6-5776-4841-b39a-d875030ba498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a40c96-3894-49f4-a33d-87e8fbde09b0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa321fa-6ae7-425d-8c91-fb70c9ae8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31753412-268c-47f5-a43c-536e2c956604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe7ffda-aaeb-4ab8-baed-a2eaa4f1ba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c14cfd-2d44-49e7-a228-bd1e2ecf20db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049d3cd8-9e27-4dab-9cf4-d3bb04b9f30c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e35be17-6daa-4bf4-9624-1ce5a6997af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73397d1f-1653-4da4-9dac-66fb4f7a2c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fb12f5-c6a7-4780-80ee-130906162e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58997422-5089-465f-ba8b-893acb099686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c9a0e-b73e-4c7d-b545-4e62e56fb789",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feb4023-3270-429b-ae42-0253a9a7ab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44b810b-d2a0-4948-9feb-8886d702a116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39881b5c-ac1a-467a-a6c8-6edd1876085f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d53070-73f2-4395-8492-f8672d3855d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ba00fa-44e5-4493-adb1-c3b61fa11f87",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35829f-5dcf-4ad7-ae10-b7441c97913a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44329ad0-e2be-4c0e-925c-26982e9f4f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be6fed-dbbe-45d2-b419-85f82a3bb739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5007cf81-f1ae-46aa-b6b5-20408278b908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6125ef6b-20a3-44c0-8f03-9deb48fd4f61",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace6eab5-ede6-4f57-86e5-f18f3a61a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af5da9a-3846-40bd-8bbd-5af76c8fa168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca798cd2-83e2-409a-b513-13faa4e0c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92655299-c288-413c-a15c-a6cc36b5fcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0611a1-28e4-40d8-b968-190b7882bc73",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8ed405-2919-4dc6-bc91-758ec2900bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52614e5f-8e55-4dda-bda6-ff70ddaa1fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc11e1-2034-482e-92b4-0b41352fcb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "589c515d-e7c9-49e3-b16b-64dd5d054c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74161b7-66ca-499a-945e-62e65f34bbf1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9caadd6-e022-4ab6-b78d-6737374e5697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7fbf65-1f25-41a8-a47c-dce10ee1e079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff157a74-7f37-4cba-9b04-149e33915b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9544ba4e-9cf3-4f5f-b81e-8472f8624b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5efa3d2-2602-4e7f-99bb-3bcdd85f5cfc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8812a702-98f5-482f-abcc-a3bfbe60579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c89c1b-3c12-4efd-a5fe-ddb346673aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a14cae-528c-49f8-aa39-102732a33b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c93283-daa5-402c-9776-df48bdf3e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4bed1-7a83-4ea3-ac58-584933bce897",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911b0714-3248-452d-a6dc-5e97e3682897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeeee8a-1e64-4b5b-b1c6-0a0c541d97aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6981a80-7b67-4b0d-a554-ab533c1f79d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9bd6f8-342c-4f96-bd82-1268747912cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19844c41-7440-4da7-8671-b7396d2cedd9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81728741-15cd-46cd-81a5-3fef83c9a333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474ee03a-7bcb-47d5-8c28-55eb908978f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441e55e-1e8f-451f-bf9e-52a54c06a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d357e0e-6e79-4300-b9c0-ef342a58a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3810f76-5ed6-43e5-9a93-c3060b099557",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d006ae6-915b-46ee-be32-295da9660acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1d1fab-13c9-4f99-9227-2590bdd21575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac2ef9-1f84-4a72-9397-8b573288fce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad25840-9e13-4804-ad5a-b73f853281bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba6f857-bed6-4dca-afda-e4d9cb49a316",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0508d8a9-88da-4d22-af38-e2a63f561b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6436ba9-ab56-46b3-ae79-376fe99a0e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57833f0d-8e93-499d-aa52-591e84290716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e07b578-1669-4150-908d-4cada6099921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dab3f1-2e4d-43d8-adec-734831508448",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484cd799-7e2a-4779-b9a1-8674f4028647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1bc364-38b5-4560-86ab-e2a8c3414807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0827d631-1aa9-4173-b7b4-0d4f56bd7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb33411b-66b5-43dd-bbac-1abd4629e1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9760a6-04b2-411a-9dd7-32ecbf651a29",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180a5908-37f4-444d-b536-70a336b4bbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84623583-523c-4653-876b-478c55c2e324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10275863-d195-4135-8013-d98dfe47025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c8aa1f-2da7-4154-9b58-ad31cdddf815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53146475-3f29-4168-94ba-0ce412f681c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f3b72-e4e5-4334-b469-d036d9dda795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee9d776-156e-40e6-b615-f9fce12440a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfe52dc-400c-4fde-8b70-1564e5891400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a1efab-2cbc-4f62-896e-a4b95061bb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d19430-289c-476c-af06-ccf2f865df05",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c98e34-e5ef-4293-a5a0-f5ab0b7563b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fa5c66-e782-462a-9161-c3a791e20bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d8c248-2a96-4bc0-a748-bdace4bd4d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8f205-e325-4465-b926-493f4b10126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3a72f9-5956-4d3d-9b64-dcb78e88efff",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bc7b9f-f81f-43fb-8b70-fad347e5fe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88686002-7d02-4496-8865-3bd161a6151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88532f-e2dd-4c7c-b267-69b7facfc60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0310ad9-0714-4669-9d8a-d6c742ac94c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e59c84-e56d-4998-96b6-5fc1a1f065c2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a8bfe0-6848-4b90-bed0-b0af3eec1f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39ab365-d877-4792-ab32-b0f031989a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e163de-73c4-475c-9f57-8e2420dcb628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8384614b-53a9-4c93-a036-54cbd620b225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868fe40a-0491-431e-8530-427bc695ad8e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271fd57d-f8f3-4467-be10-4a6eedc87e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06700115-cf5a-43c8-8847-9c9bfa376b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de362459-8921-439b-bd09-eeb7ac24868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac501237-6461-4b7d-8b39-d9917ba89b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55389e9-9dfe-4b81-9a38-089f0e127969",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25930628-dc4b-4366-9569-0b4093749c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2466b7-20b0-4e32-b29f-d35a73ca5ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c258bd-4026-4ca5-90e3-9a88d5030bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "804f93c6-368d-4369-aa3c-8522a1996fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ad9169-6e2c-4648-8555-3941ba9bbe8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad415d78-8261-4e1d-8d14-06a73a586ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d264337c-398c-4fc5-b0a3-7e4c2e12f4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6194f439-0d07-4f82-895f-7bf56f4e3fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "728f4d27-b1b9-4964-b532-bc36151eae4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b7c2aa-fd7d-4348-93a6-6119f2b7afae",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6e7419-c280-4e3d-9960-c95f908429cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274bfb6a-b04e-448f-95b1-f5c0f807e483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb2f06-73d0-4d87-8e34-b3ebb008193f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "637b322c-c71c-4005-bbb1-709990fe0cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081d6a53-9b96-4c42-8d24-ccc78339d5d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3413a6-d29e-4bdd-b441-3545e5ec593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04222e7c-a05b-4b1e-9324-863be55ff955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3344ae-7fc9-4add-a5db-4e66d02e0b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5928a011-5b04-480b-aefa-3482a66a5982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd11b10-e2d2-4bc1-b4e3-fab679c6bf20",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5400d31-da29-4297-a72c-e10d0fd2a802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f93f7da-ef70-4fb0-9c84-2b3258f16d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad98a888-8d29-4350-bbb6-ffc1c931ab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad20a67a-8f1f-4757-a970-789eace99765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d665b3-aa6a-41d3-833d-d934c9c1a9d7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b409e17c-bc0d-4cf6-a1c9-5ae8578d11a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c0e77e-6efa-4c1e-b07d-d8fe0ba56877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb824aa2-ea16-4a47-98da-51803f8bb089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d579e9-a735-4d22-b0a9-e63c376ec565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd56f96-7270-4b94-b9a0-2c5e7c996e7e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56583f-caa0-4d9f-a545-058a8337db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65201aca-84bf-4e83-a076-b2abc23a5c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3178133-4dcc-4f3a-90fc-a5ce8194a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43a0b794-252e-494b-93a6-db22ff590c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5633430-f0bf-4757-b434-5455f884263d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91caf8a-f7ac-4a4b-91da-6228bb69ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04848eb9-55a2-4bdd-ac34-15979f57acb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18a0b9-bca1-4c6f-b860-151b59df323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe127cce-25f8-46b4-b26a-8a0d39ba6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa94735-740b-41af-b2c4-ce582b5b8ece",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3463c829-3648-4610-83b1-b933b85ccf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0361338e-fdda-4128-82a6-ba5aa4f00097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01d3255-4101-4561-9eda-aa83b1aef260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83b9926-a182-4570-8ec3-5e76e6cf217f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac912cc1-438a-4bb3-a318-f6dff84e8c5b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82540ea-863b-430a-86b4-e5755e1aeec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd5d5f5-25c7-4232-a21a-22b0b6f06011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b935ad5c-dc1b-4135-87d9-0d89ead9688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "611addb2-f2df-400f-a60b-594e90ff0825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7989907f-7ea3-4908-bee0-4cd2fb91afca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c93d2b-6250-4567-981b-e28a8c1f2942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96af62d5-c880-459d-b651-bc4dd8886c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4592e865-4a8b-4dfb-996c-f62e91a3bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7a8450-1bae-40d9-8be1-c892a7c52bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341e6f8a-491f-4a01-996f-2d7e40bfb308",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e403c6-3ce5-45f5-abd2-237ae78313e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f67f3845-714f-4572-b3a8-e0053c3030c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4486f2-3901-45e7-9856-52d5810b3792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7010645-e829-47f8-b4aa-6744fac9d8a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e18b99ff-649b-4336-948c-22cfd0bc6ecf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb090da6-f38e-48c5-8d85-bbd63d09671f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64471253-4ae6-4ed6-8f4e-40d19ade4241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7220e8de-a683-4232-9969-dae7d1fc5514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9580025b-df42-4a58-a5f4-8548f27560d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "590974fb-b523-4f5b-b380-fb1016d4094d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82de6d98-2828-4db0-a2f8-cfed0cc499d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f85b926f-39e8-48db-aca0-1b2fd013f59e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b5ec82-dd80-4128-a131-81bb387c0535",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8310977e-7bd5-4d41-83e7-bde8a5a4d6ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "781630e4-5f26-4947-aeb8-a7a5741c465a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85441baa-0b18-4ec5-b8da-862ad1a5f841"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f79447e4-b6ce-4899-b51b-4b09ba8e9eaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ec5b29b-e704-4258-829a-09cafe4c6b80"
                }
              }
            ]
          },
          {
            "id": "5c3e15aa-363b-48ad-aab8-f64d770687b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfd431c3-4568-4129-98d2-c7fb7e37898e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c4a72689-1b4b-4cf0-8e6a-e71a6b38647a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c809bb5-bd81-4604-98d6-4c542afa7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "241182fe-d6f0-41f7-88c4-5e5091dde41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958a4b10-109a-4c8f-b4e4-c08a986a1902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c29a200-6135-4814-ab17-691eb8440962"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04f15c80-2552-40af-a7bf-60b71342f003",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05ff3c40-9b21-49c8-9e05-c47cf80829c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b72d0d5-c987-436e-9075-1533f69c788c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "842ef37c-3775-42b8-ae90-3deb725fbdce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95ea2799-de0a-47f3-8833-4c36f6b58f63"
                    }
                  }
                ]
              },
              {
                "id": "87018a54-9476-4660-ada3-507ec3b5ab23",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea41a527-4728-4e50-9e8b-2278007f36c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d326ff71-3abd-4882-8dc9-c554779aa409"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f12931f-4789-4b8e-bde7-e4f624289b4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecc0a9f4-d41e-4227-9a0b-d78bb5707cfb"
                    }
                  }
                ]
              },
              {
                "id": "101da6b5-2322-41e3-a69d-160fb31a1f9b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3763f427-ba21-45cf-a944-0cbd7660c345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4358d1c2-9754-4d8f-b1f7-620ba5e1ee81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf881bdc-0657-43fa-93a2-dc3f9c9486c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d0790b4-17df-4bed-a531-f0bccaffaf49"
                    }
                  }
                ]
              },
              {
                "id": "6a35f208-9066-4d48-91ab-46d1961ad548",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82368e16-aa0c-4176-810b-29289b8d4ff7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7820abe5-cd75-4c4a-b8df-d740dea6f94e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aebb3df6-f1cf-426c-a0dd-005062bf8b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c8802551-7e5b-4fc6-9db2-3b53ae1ac45f"
                    }
                  }
                ]
              },
              {
                "id": "22c66368-7f9e-40af-9b96-8f7e1d361bb2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8edc1a7b-d8bc-498d-904a-097af657900f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a36eba2c-780c-4b10-ad38-7813a87b8edc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e129d8e2-a8ae-4bec-b66d-2deb86d9b3c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "18a94fe3-c411-41de-beab-0257aa960f04"
                    }
                  }
                ]
              },
              {
                "id": "dc0b2a02-7038-4c77-9dbb-67bbf440bda4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52c828e3-23e0-47ef-a57a-50c2af884121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "017f8cbe-234f-4101-b82d-bfa30e9bb2a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0afeeb69-8e52-48f4-8973-6da1d77fccfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d1fc159-eeae-4b6e-8253-3761e0317e21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2032499f-cb15-4f45-9d39-229f891179aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d07d40e0-daa1-4c61-b97a-e0593f4e1269"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fff0dfcc-8d4e-4027-8ec2-821146f14ced",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acd3151f-100c-4c31-b50b-4a696ed81eb1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8744ca90-66cb-4f3b-b321-d2c53da4f1c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4b39e8b6-51dc-4988-a8f0-7dc54ef17948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cee3a5c2-6615-49db-8439-044aa6b4babc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7d2798e-5100-4320-a6f0-15ef329135bb"
            }
          }
        ]
      },
      {
        "id": "db574413-360c-439b-bb17-6575c546907c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c0bdf1a1-3ef9-4a10-8199-a29a96c2d8f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a18b4858-350d-410f-abe0-a4837c10bb82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e16e908-46e7-42ce-88a9-6764d397b15c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e18baba-ce05-4f81-906f-bcc17d53eab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c506aec3-7002-44f9-803f-a12eb200c33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb79f3-5b16-414b-9d42-aec966c678ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc24e2e8-f86f-4a76-bc56-b18079746ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbbf76c-3453-4940-94c5-98c7c829eede",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4cb02d-1daa-4281-858a-ce75139f5ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b7c488-0201-416a-bc64-ede7871d4fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cf1816-5680-4326-a6c9-248a060f437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c33009-aead-4e3f-a93b-9d7281021343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8757c370-0515-4a2f-b109-3bafa7de4023",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d0096a-059f-41ba-93aa-e213d85bd330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ceba33-7797-413c-9804-cdfb8686bb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e947b97-f287-417a-b7dc-26bde5539a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64ef41b-9e2f-44c2-aa0b-d6db82cbc132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afec234c-7190-4bfb-b43e-36a59450c259",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f72afe1-4fe0-4404-9616-e9d57dc6f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277ef629-53ad-44a0-8bd3-a4ea79409dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793fdf48-a3fe-433c-9de9-4555a57544c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "871242e8-81a6-4a2b-a432-6504e24f1332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2578109e-d7a8-4ecd-ae81-bbcb58c6734d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f630f3-1af7-409c-afe6-61b8a79727dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6b1542-b656-4225-be38-3b7ba73b4d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e3daae-8e42-4587-b803-57c178807c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f145892-c7b2-447a-98fd-2aa16203a160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f4413-2f20-4a21-a9f2-5e5381680114",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a775ed-207d-4c35-b344-e8afdab3da3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e529f609-a5e5-4fc6-8d81-e497eb710d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756c4a1c-0103-4550-94bc-ce26b11e5042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df53f638-ede8-41c9-8ad7-705e4f43bbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788fc39d-57c5-444d-bbb8-269504ef6127",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c6904c-0e12-415f-ba4e-4e7c684d5759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788f2311-a429-486a-8b7c-af0ba8d894f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c191d6ab-43cf-4eb4-a98d-a80ebfb031e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2646bb-b4e2-43b8-a957-1adc5fcb0ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f156c933-1a01-4060-b4c8-dfd7f89ae05c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b03b6b-19a2-4141-a15b-05708a083b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5632ba6-bf8c-425f-afe6-d93ef5a61564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186d95dd-d023-43e7-af31-b46d77af5e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1985367-45e1-4042-a82c-53511f5574d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0889aa9-a330-441f-83ad-1e519fb4f2a0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24c482e-99e7-44f0-b082-d7b653b6d9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe1a844-8e6f-49c7-8695-faccbdb97a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e32df6c-9eed-4202-86e1-8f226b5a4272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55b3804-9f22-4b6b-90e9-6c2945c4a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ca4d38-52ee-43a5-8117-8851df223e12",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0a31af-0946-4c6c-9e68-f07502eedaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61ea3db-ae85-44b1-8443-038f53325cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b7067-9dd7-465e-a697-17ec38f7453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bec09f5a-b801-44a8-87de-d4ef42eac0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee140a2-fcd3-4e3d-aefb-0d15ad9f1957",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53204ac2-60de-4353-a51e-17ad639955ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1e64f8-ea6c-4d1c-bd7e-09c6eb74d13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebb04c5-fc2a-4209-a290-10ec9db8b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e18a75ec-8439-4df9-a7fd-e4cd2797dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1550a292-e793-4116-b748-75486373a436",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f05d475-01be-4b1a-837f-489a71ddc649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007a155a-622b-4711-aec7-0ccc633c830a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ccc535-c17a-4aa0-9fa4-79bdfe9d4e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e98cd36-21a1-40d2-8ec3-6716839a0618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea17c7bc-3762-4aab-a73c-3a72c5db19b4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2445bbcb-69dc-4469-bd22-30d87b163cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a417ffc6-4d53-4c6d-8638-b4c59744ace5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d90642b-cf6f-4baa-90c4-1950adb549f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f21fdf7-e8b1-4672-ab90-1e5ce6dec61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e63fd33-5608-497b-97b7-2ff08c61fde6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f799ad-4198-4e0f-b70a-eb00220a9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef50dd0-1818-4faa-985c-f8d3e56f5c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff1cd3-692b-43c9-bc65-7f70d4db6584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e307ff55-caf8-495d-8a36-22d618a98308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0738ba8-acbc-49bd-b47f-4ab7d7df73d0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7995523a-156b-44d5-8553-880ca28c85c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aad6cc-5d47-47d0-96b6-4f51e137e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9566efb8-5c69-4b12-beee-f46ee5e92bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98e9f13-dc06-4a57-94ba-8d6455eb7627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e078114-86d3-4ad4-8c22-dc32f0513bbe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c117632-f897-4e98-a87c-b6f8312c4412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eda4a8-92bc-4ce4-8407-78853ad6f109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b568877-b795-41d2-8c55-8a4c42a78b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a669e8-1846-42fc-818f-6320f028e823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ceb4f9-da3e-46fa-ab95-1e62ecc972f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e691c14-fe43-4349-a128-b3715d0a5f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef44e61-0c31-4c25-9733-bccc0f9190f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acca520-1654-4565-8336-38bd4d3987fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d69b6e7-e98f-46e2-b93f-d29cb1d4caa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16c838-c63b-4d2f-8ce8-ffb49e8f1084",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ae582f-5c54-484d-acab-b7b40ab4bb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33513354-9bcf-46d0-81fb-444b2ebb2595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675cde3-c2b1-4f32-b60d-508e33d0ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a188606-7c4b-4df0-ab1b-6d89bc3251bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322d4269-4994-4309-81f4-1c8b39099296",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e86a22c-b6ef-4af0-bdc0-1e304c384a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf32a0dd-e117-45c6-9999-4a5a2b52e54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72dfcc2-2140-4fb4-8ae8-d0f9e165b3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba98da9-a57e-4e89-bfa3-586ec699a1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaac879-c0e2-4e07-b39f-4f0a39a76e2e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f77c4-caf8-41c0-9cf7-81947e221869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98993fb8-f088-4db9-a54f-55dda3047e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a592d5eb-01da-40fd-bead-e893b1ad8e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b219e8-829c-4f91-9540-479c1c0637a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522d4f46-316a-4acf-89f9-dd5c19878b0c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e38d6c-7f47-41fb-a6e0-79374f1f3daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33cfd78-2603-4343-a492-b35143c7a8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3076168f-1d33-413a-8e4d-1cfd958c65e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a73d91f-1dba-4c2d-b203-649937b0d522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f80908-6878-40ae-827c-f849efd4710f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2a0f8-0b54-4c6d-94a3-a3abacff2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd30589-3f56-4ee1-90f8-b3779096efa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958ed52a-86d8-41e5-bf28-9528a96fb445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee1c907-f7d8-4482-972c-ce9f83dcc075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f355ca-74ea-4748-8131-6fb7b06711d4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b8003-fc05-4e85-91bb-8f67574292b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bda0671-f7da-42f9-a56b-ed67d86ef063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f716ddf0-0f08-4394-8a5c-65417306afa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a19b3d-ece7-4c79-be22-ada0cddf1be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f5077d-e7eb-4945-b1e6-0690cb0ea826",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db714bfa-09a2-4c62-a0b2-a25cc240cf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeb4f62-1a4a-4892-bad0-b737820a4c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca24395-fd10-4926-897f-016d7cc2bf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "755ebeb1-250f-4fe7-a08f-3b7ea8ca4c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd31415-1b20-4740-a001-aef408cb431f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964181be-1ce9-4015-a06d-dc3d714fdf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8ce8ac-ee59-4ba3-bded-80fd3cc186ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faac336-1f11-44b6-940c-19bc19d4c7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae77042-d193-4a47-a47d-f2ff83092120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e044617-7f38-493c-b9ca-56228e6d2d65",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e946d41-b618-42bc-8187-a3823091cd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87027443-4158-4bff-bf11-96c2b2a63a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c901e72-fcac-4561-8775-5b0190bd0308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46fe674-bad7-453c-a60b-618f162d7463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b27dfce-02e4-47cc-b895-14171e4e9a04",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54a0ba0-7e39-4634-9c53-ac3c784d3f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9fa7da-608e-45cc-8d14-0d029ef9743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0011b772-465b-41ab-82fe-3dbbf4995dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7fad8d-adfe-4751-be6c-9a2ea374a5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8133af-6326-456f-a82a-4dac056bacf0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a195c0-97d7-47bf-aef2-d04c2abb13d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e96718-4fe1-4bb2-85d3-6be148a46e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1777ee-fecb-43ee-a86e-20623aaf9453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373110db-d300-4d84-b698-6bdba86bde25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c91d59-31b0-43c6-8a50-61e9d43cbad5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38867be4-f840-46e4-a593-3db614637551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e5c69-e057-49dc-afa0-b41bca5b71b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b7d48-a997-4095-95ef-4c616cd541d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24aa8626-a2a8-414c-b710-e2d5902959f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417d1bab-287f-4f68-bfe2-943501210a52",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4898598e-1f4a-40bc-bad1-8949e515dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9fe3a4-2712-417a-a0a0-6b88b89fd1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930ca23d-6f15-4fcd-ba9d-f275fc6b54e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92161cf2-c37e-43d1-9968-0d93538ee38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b01e51-fbde-4d78-aeb5-ee7cff1a9557",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47391e6-cc4b-4695-937c-48ef0a6f889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ef5482-4f75-440c-af5c-f5e7e13976e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201e11f5-34a8-421b-ba55-d5ccc2e40b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124ab922-3f81-4e30-a614-15b01a441df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64372f1c-b251-4536-93a5-1fcf039edcf5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561b043f-4020-4f25-98d5-ba450b8f4db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b191130b-7726-4c6c-add6-6e4d861b7704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc215646-174e-41d5-975c-68b431a7b17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ecd39a-f038-4aa1-9f16-0a9354fa6bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a5b19-017a-4dff-b864-1a5194b87121",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa9b664-ad44-4da5-9058-2e2d09f766d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad590d5-534e-4af0-82fe-dd4d519a0987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d69a73e-c7d4-4b66-8e4f-e11a23abdb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe04681-cf9a-4757-bec6-249ce6271974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f9feb-c8d6-47a7-92b8-03055f9d486b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ce085c-ee73-47aa-acc0-7bfc6192c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879ec31c-d8d0-487b-bf8a-f70fb0cd66bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bc09da-8968-4ad4-be66-0d85c4b64909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476f9130-9be6-447d-80c7-3747c5a83e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6544c0f-f01a-40a0-8c3f-6b1c05ac3af4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60adc6fd-32c9-4bc0-bc71-ec51d96f802a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f5943f-3147-477c-b6cd-c90c464557df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c84affc-60df-482e-9e97-a2c9473e6d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "306c0de2-da6f-454a-9e9e-ec7faa55166e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a94a06-8801-40cc-8b83-51252a5b7964",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8904b2-b366-46b4-91c3-e5b9ee632806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e1373b-a158-4303-a6cc-197fb1720933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40058065-736a-4a5e-afd9-124bdcaf7097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b020e90a-b1f1-4b27-bc4a-3666d4e76bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6995b8b6-4295-4119-9d51-17c0c185b24b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883b60ff-3481-4e13-9ff2-74f928ef2ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ae8622-6a50-4863-aa04-7782d7fae89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7180c473-ed44-403d-b2a1-f770575721c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0681f9f-52d1-421c-a05c-2360a6ae1c8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2aca4611-f477-496c-a163-147bfbfd1155",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d6b70d0-fb56-474d-9211-0a27272295fc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c3f3a2-c63f-451a-b796-46111d623af7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e4658e-dc3d-497f-bcf8-cff27e6bfd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eec4aa4-d044-4191-bb22-ac169f0d4891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50b6986a-252a-4964-92cf-2cc0a57e07ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c716b186-d61a-4ab6-a72b-58c63e04e9f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084cdf62-abc2-41a3-9e5d-97fbdc9cc55d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a0c0250-a65a-4197-856f-3836d0c10444",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cb6848e-d721-461f-a44b-d991cea85730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d725b3a-ca7a-4cea-912d-a59793d954e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4a2d4ae-165b-4704-a577-245dbe6032ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ce114d3-e957-4563-9a80-f8cc22fa85f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55ecfe25-216a-4366-ad9a-b567d889572b"
            }
          }
        ]
      },
      {
        "id": "e890e448-a36e-46d5-a5c7-7cf0b3317357",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "47d1f376-a763-46af-8cca-d37f6b489cd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d858883-bf37-4837-bec5-fd0bcd837252",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b079d33c-c1b0-4b1c-b776-094729ebaa9a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709c93aa-c3b8-4de6-9da7-5f22a2462dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3d5297-a7bf-4513-92a3-c9c29dd87200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a616cd28-1f17-4cf4-ac04-e5c4ee7e465a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf1f1f-a05b-44c4-aa8a-4ff780ba47b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831d209a-d5b0-4bfe-a2ce-5e1b34931346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecb1510-6226-4987-8575-6288fe212bf0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c04123-b635-4a42-9bcc-f1fd74e48597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14babab-6081-4990-8588-f429430a215e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305623bc-20c8-4864-bd63-368c9815d450",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8ea1c8-fcdb-4eba-a8e6-81a7bbda2d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3ea829-0887-4017-9bc5-6f4aed42c166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf558a91-e6f9-4e57-874d-7b68cbb3b3b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23587357-9706-49d4-bf5d-69e847548824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d59743-e3dd-4fdb-adcb-56fb3ca71e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185ef4cc-5f44-42bb-abd9-36433e595462",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceda76d-39ef-4bdf-9c73-60a7a817699f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b67ca0-8f6a-4009-8206-833ef719bf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bfab4d-8616-4b4a-a94b-26195211ff25",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd8745-3216-4768-99b5-184ede9ecc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1266e775-6634-47ce-b0a3-b0a5b0d8750f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a3b4ab-890d-46f0-903c-11a6d41b1d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d0667d-4e08-42d2-8df0-14def20e7ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e0577c-3772-48d4-9f93-a554c34ccf9b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a89005-7a14-4a0a-8ebe-ac683ccb6542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbb0663-b708-4384-a687-4c1c1637a2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b460fd22-ba79-451c-98cf-926ae8fa583e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb8b1ff-ed3d-4c8b-a4d9-3ad1fa8a5742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c82dc2-31b3-4df3-9323-f48281890864",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1609a930-aaa3-4867-be0b-0b2dd64eda84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa2b029-d361-4bde-9e87-2290f35625c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203ed0b-9c5e-4db5-bd53-846e09b60dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a50ab0d-2acd-428f-8108-748b504b1d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260954da-1fc3-44b2-8e07-0f9b9dc45fe7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f152ad-0f27-41b6-8936-0d60347378bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f7a33f-d61d-4764-9012-5de2ecb67bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f94b6f7-95a6-4ae8-8f45-e1d1bd1ee712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd1bcc0-2788-4851-84af-232c3e15d71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f787682-19f7-4a83-8be8-d5e1092c26cd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0ccd61-7c14-4b0c-af25-3013b627fc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d09e194-84f9-455a-9f4a-9ed72a57a5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd144f35-7449-40b9-a670-3eb8cfff0def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760a4257-512d-4ddc-a45c-9a475e6209ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3daefc7-828e-491a-b779-a673223b282b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909e775f-058f-4f51-82b0-83d85163ab53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1dfad5-f066-422a-95f6-d183846b9aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f119f191-5c01-45c4-99d6-ad9ecb650e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fd2b5a-e285-4b88-9529-18b61053b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfb8f8c-bf9a-4f26-8b76-8cdaac834224",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f31bf32-9490-4c8a-a681-d6d4a798edbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6118a87f-fdab-462c-8293-ae4c1155c898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f117e6-e368-41a0-9fac-8ff81910479c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d642189b-1144-478e-a493-44163844f20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476a589a-c537-4fae-bd81-05ee31b7b05f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3189fd86-4744-4c94-9b10-796f04a8b01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5d7380-7690-4414-849d-e3a70f694f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c47a21b-a0db-42f1-934f-4383faa02afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64008fca-e1da-4fab-ae5b-4d478e30bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca84d862-70fd-4e52-8004-ca9fd44c590b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c587d6e3-aaf6-4bfd-b350-3407be212cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850cb44d-ef8f-406a-a3fa-38efde06e5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e340f105-4770-417d-b8ae-a127f7d4bb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f02c19-41ed-42e8-9d3f-e4a57ca76a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90048c0b-d6a5-43cf-8216-fb8aa56b8c10",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd70abc-0612-4a2c-9654-fed04b656b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecea5192-d0c6-4fd7-8c9c-d74e559c3f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c817b-1ca0-4688-9e60-37bc47c379f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d558919-4ee3-48ce-8817-fab26fd3650f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73d248-6317-4901-8769-7c5e8971270e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4018de-9be3-4b3d-962a-8a452ba85192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4148a4f-8d26-4864-afa5-c0350ead494e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62268068-9e1e-48ed-9b3b-f2e3ad04f3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f931e5-15b4-4887-8e3a-3f5d09cc922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596fa15c-c098-4908-8e8a-ce0451129640",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22986f58-cef1-47ea-a5b4-619866606e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621ce3a7-d61b-40f8-a192-a6eebf62040a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c5c9c4-7e36-4959-958f-0c1052c08dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a963b747-1455-44cb-9267-f54ff1124d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862737db-84ca-4932-915a-3ac6b544d76e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89067d-4c15-4aec-8ac9-95b88b86bd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a52dd75-4135-4832-b66a-50c3055e922e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b58ab61-b408-4a9e-82db-693bfa1fb4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5043fd8-12f1-4727-9423-beff70fc1bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca7f74-4d01-47be-9ee0-6ae6b584ae30",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2cd7ad-6493-4224-8368-d64e47132e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644270b5-3c2d-4e58-85c3-1ae10053677b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4fa3c3-618c-4172-b01c-643b7248b34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfb25e4-2bc9-43ce-b45d-4f48fc6e5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf82779-0838-44e4-becd-aa6764a8fe20",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac3e6e-7794-41e8-88b5-adcd6f89b37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3df272-5e4b-4260-bb5d-3b79a0453f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a41d7d4-ccf6-417f-8bbf-8243b186b043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cf2fa7-4d2a-439d-8d4e-673a6cfd1929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ee814-3da7-4a5d-982f-5dec6a95b933",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e80c415-553d-4d21-af4a-ba7bb88462d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384e0e50-38b7-4385-94a4-c9239cb7e3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3127cea-727e-4965-987f-55dd095e8faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5a87f9-042d-47c5-bb54-2e3e3f0e574e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ec6aab-40c3-4d73-8bca-ecbe6fb97e36",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcf8c4f-2fa4-4e7a-bed6-420c6669d02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb92e783-a483-4068-9dd9-bd7e7a3bbe13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7262c9e-e161-44c8-a72e-0a5e3448971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4ee384-7350-4793-9005-f8462c78091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e4eba-69f7-4545-8f5b-fa5018709b00",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df655b8d-fe81-4142-a1ac-c2d030164d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3699354-b685-434d-b1a8-cf6cc075cdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a24d678-ca7c-469f-9989-d91005439aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54d9e11-8002-418a-865a-fe2cf9922c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c31f55-f1b9-42a3-96de-c209624f0a86",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b84ebf-abeb-42d3-bc7a-cbf32701e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd735c54-cba7-4eb4-a283-dee8c379f301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e6042-0903-47c4-ba63-2f69e9cade0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57db262e-7563-46fb-99c0-728863a08c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0307a9-0a48-45f5-a944-35ec8c9f8572",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe7637a-b724-4ae5-8ab9-4282c841e03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2736a519-ba1c-418a-8fe3-595dc4a17db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad56c19-505d-4134-9422-6891e17c71eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759f25f1-01bc-4283-b6ef-26cd35af36d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f0d253-d4d5-436d-ab22-5ddd2f02d962",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bba53d-8a26-4c28-93d2-394864dff907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac6610d-ce00-43e8-ad3a-f5bbcd8f0d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afaf400-d0d3-46e6-9f05-76a4dcccd43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea93f05-6d5e-454b-b9ec-4939d07b4892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080738b3-4307-498d-b62e-b7820a275fbc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131330f0-8f43-45d5-a737-0cc2f72c7583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078733fd-38b2-49a9-a412-ffe1c9b258e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6eaf89-35d4-44b0-b61e-bd52e8dd9be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f21a37-077a-47b0-9d22-0360df5ff935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f96beb-a48d-4159-abe5-1c17728ba191",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c9b3f2-c2ee-4d00-a1b0-20f19b0a3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7787b4e-2682-498e-9c72-3194044a65c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cdbacc-c750-421f-8fdd-5eb7cbabe61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d776cb-d168-41be-a4e5-2c3a0deedf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d294da-0297-4c37-a0d1-18672b15f5ee",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97769da2-8132-46d4-93da-6557e4dd037c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4d3c72-2ee6-4362-805c-ae3f969bcd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f8494f-1fad-4298-bd60-231041bdcc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184e1170-7bfe-4363-ad59-7cac16b1e7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5f41b-aa91-42b6-b7a2-58e4722826b7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a37933f-8e98-4af6-aeaf-614fe17e9209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667d1e98-1d86-4236-8783-e6612c2061b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b058fc33-7995-446b-ae23-02cb3dbeafd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6980e5-10c1-4897-b838-2d6a0ff2a07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048d297b-c3b4-4977-9060-c07c6c32b9f2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87049128-3912-4830-bcba-0f1623a1057f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef753965-0e14-4a38-9d39-84167a024c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb9655f-2a80-450f-838a-ef2ab61fa93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0755d95-2483-41fd-8247-15348535584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9502f80c-d6be-40a4-9ac4-09849833c97e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694ff18b-0ee6-4212-96d2-b3f57997014d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3148fd7-f589-4f6a-b370-c78aea78358e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bbc370-c877-4a89-9bcc-8d4ca8d3bafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3940f6dd-ee52-44db-87d2-3e8888e13864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bede0eda-9d82-4df1-bbe5-da6f14876192",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539851e3-7182-4ba7-843c-801f353ca953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4cb96e-9398-4777-a9cc-a33f61db08bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3981cb1b-13d4-4765-a388-667e07c36d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f27e02-04ef-4614-9c09-2f81a102ec32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d75abc-a0cb-4bb8-9f22-7f9be0bb2632",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bd9f66-1797-43a5-a1a4-72a808519742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b91f0c-26f5-4dbf-b00a-72f1f604e646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3700646b-e01e-40a5-96cd-5e3d4e3ae571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082b8e74-57f6-4dda-9065-71e485a78a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce3cc6b-9ee6-4860-82b3-396cb946ba64",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f614ab71-32f3-4812-a759-639e979064d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cb6bf2-788c-4623-86d5-7234fd81b412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4b8e29-c0d5-4d7f-b058-9d23bba7ab60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1639c497-d162-4cf2-bdfe-bc0ccfd1e140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cf168b-d597-4446-a0bd-74dffb086a94",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcd0e53-2c92-4e5b-af2e-603ff8e3bf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920a4b9f-4e65-47db-bca7-42bf484e10ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1c1d47-f1aa-4e5c-aee0-fd6f2ee797d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bfe3bd-e89b-444f-b1d7-e3b7b5a1df47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4289117-e8b5-4aff-98a6-9ed53d43409d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeaa8b0-044c-48ff-9d19-e800ed12aa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614ec4cd-f926-47e5-8abf-ffce95fb8b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d57d4-de09-460b-96a5-1630154f0367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb8b404-31f3-46c8-8b50-a25e027c14b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac5219-8dc6-45be-b55d-1271606f3f4d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310326e0-34a8-49df-91a3-366129c88e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41fdeaa-2af0-47b4-8ce5-b2cf3edf533f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eb433a-10ef-4fdd-a42c-e14a70b1ed69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f89afc-c3a3-4933-aa70-7a7ec976c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894b75cd-b70f-48ab-aff0-95a62e98b44d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a06faa-cceb-4629-a38b-ea01e96da74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86873f8b-ce68-4547-82f9-425afa9ac9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fbd5e9-644a-4aa0-b4b3-dcf9c65d3c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705d4a83-066a-40b5-9dc9-f465ed5e94c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e240b0-9eac-4232-aba7-6116f2f895da",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a8697-f118-439d-ae41-1d477480b5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8879b86-0436-4303-95a1-1b56f7995ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a73b898-c7ff-4975-b735-947803405fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af1e7c2-f7ba-494b-aca8-925f33d30084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621b9fd0-95b2-47d3-8e5d-cdfb685e9f87",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e7ace9-4b43-4382-acfa-8cb0110bdd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ddb0f-e7af-49c3-9aee-d47f3e4088d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43d7209-6fd2-484e-a32e-8f2fef3e9d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629286cc-3f11-416c-9136-3bcef3790cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4388b58d-cf03-4895-a48d-58ae944d5ad0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5aff01-cef4-480c-a9bd-18e1ffac0267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532a7d30-0e79-424b-81c2-59905531c625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55812ff-40ff-40de-a44d-ec79f09a7d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1f1048-646c-4547-ac7a-8d45eb9426f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7985ad5-4655-4a19-bcf0-dce54bf9253f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10063e2-c83c-48cc-955e-30aa82351367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b8d9fb-b918-45f5-b630-bce4720b4756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a79b05-53f9-4db7-bc57-5684773e457d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79e9817-5afa-4085-913b-09058f9fd7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c08a4ab-b984-4d0d-b09f-46adb45ea56d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c78ac8f-9497-4fb3-8f79-55f3f36b3b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c47157-040c-4704-962b-e276260e0655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d6441-c885-4b32-9de4-e7d495339b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d277a8c1-08e5-4b7b-b0cb-fc04242435d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afe2f8c-05d8-4f41-9142-b9b1179118f0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2464fe7b-6334-4710-b28b-e3e486842c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6ed715-4bf3-41ab-a154-b9a597a30f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76919088-d8b2-40b2-a8e3-d70b0ee69747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e34ece-0652-427a-843f-27e88d63f46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71614448-a9e6-481c-b2cc-2e1059168ae3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f16c0c-b91e-48e5-8075-a24c8a8a7932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d84ea06-8730-4d01-89c3-2a79ae5395d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d9ecc4-e37b-4a29-91de-423e98cd512d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffc515a-b560-4f6a-a1b8-a982aa1b2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ed2583-069f-4221-adaf-598ad087f723",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36c9b6-7ab3-4344-8ec4-a6300abc3c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c601e09-a895-4c23-9728-ff734b8a2993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddc8d71-eff7-4119-a20e-13368c17b521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd39fdc6-707a-4751-84b7-7b7dc1053ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a817b4e-5d5e-4439-a280-6e1c97b65c59",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feb5677-e1aa-4ceb-a9cd-a8a044f800b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa303aa-011f-46e2-8e85-5d953df4e8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39c8930-cd3f-4743-ae0e-6dbe8c4660da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13cbad9-dfad-45f2-951a-660e714aa5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69840ffa-cb7f-46ce-b6c7-533b8761222b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d8d112-71fd-4841-a816-32dfa26bbc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0552982-a721-47e4-a9cd-f1fea65c2143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bf462c-c888-4c9a-b858-afb794298447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f1d878-3ef2-4c8d-8974-8d1a33e56274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d7a88-8f1e-4114-8d7e-cc3c5366c929",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cf6b1d-91f9-462b-b09e-8b43e0f08904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9845cfc-1b6b-44b7-b8a9-c67325aa0b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d7757-9842-4bf9-b34f-67d4ed873a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54c9da7-9418-4796-8bb0-9c12fb48c80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec620b-0efd-4981-a6ae-0f0db6cb1e3c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159180b6-5fe7-453b-ab0d-b6c7b45bf981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d92e48-77d9-4b4b-a493-0d1870b9ff5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eb8839-4798-47c6-bde4-0d0d824f370c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70894f64-ec20-43b6-9cda-541b4805a0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543cb17c-07ed-4099-b372-c04da17c89aa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d71a0-3d12-497f-a39a-ff3a2c53f54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724d2433-896f-4ef7-b7e7-e3c4a983fc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b900282-7a31-4700-9698-a8920064bbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67500f8-6c4b-4f96-96c1-5e5b3b957d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de466b64-f213-4a88-89ed-0a1526fd641b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e3bcf2-c3de-46e9-b6c7-a5a43b277e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4632d87-0e22-4d9e-8c69-34a816b17666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754fa7c5-b931-4261-9cce-f3b7eccde4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc71032-340d-4a3b-86e3-71649a3ba3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d956af-f02c-49bc-93a0-0a7db634b127",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0c4633-b30b-4c4f-9e88-7b358f71c4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a666e13-48d6-4c12-ad05-1ddf5ba9c1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f1a228-f79b-4772-a95f-ee61647275d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411b73c6-fbb8-4057-bb3e-c447bf42862f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9dcdba-fd14-4810-ab6e-8e0fb7d141a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7412b0b-2000-4ff1-a05c-da770dfb24fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26a86f0-72a3-45a7-874f-0aee8405c21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2f949a-351b-4e56-971d-805e29b65500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3357cfca-9b3c-4dff-896e-7f083c309368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bd1148-f3e7-448f-9c72-63c839a04f47",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa55f1e6-ed9a-4ed1-a3b7-9103e195ee3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69886d-6599-4aa4-99c1-5b38159a00dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddc28be-3dec-4c96-9c5d-0fbc4235271b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f9f498-8a9b-4dcc-b591-d3a472cc3c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc87baad-9249-418f-87ad-2fca0d577e0a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b47e85-b576-45fa-8f2b-5494e1ea14f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c759f42-23f6-4066-ba25-d7da6566b9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87820979-f1b1-4d08-b892-c7b5aa887d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1289063f-d5be-466a-9fdf-606e66289dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ac6343-3566-48f2-9d44-17553ab44a1e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c74030-ec8c-4741-ad2d-749f9a2366a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9694b3d-91f1-4084-a4af-01a1e266eab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9954457d-4538-415f-ba28-d4278c22df1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2199f5f5-3201-4d49-9034-4a1bf3610450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2eb286a-0903-498d-9014-d27a284f8860",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e0a01d-2ae9-4956-8d2a-2111e95a570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd23668-899b-4886-81f5-1792f15bf373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7414b9-a727-45e9-9f4f-baa557d74f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86902ef-d0d3-4cab-9da5-46f5edd78767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606cbfea-d0e6-4251-91f9-f72777942b67",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cace026-f025-440e-8b19-c7bbd4cb5752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f03fac3-aea5-4bc3-b83e-f1b6a73398cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e431f11-0658-406c-ab18-0c7e65175873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c7bfec-a02c-42a8-b561-9f5f8cf97db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba2e283-1d6d-4692-83da-3bc3b479cd45",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6144ffdf-d30b-4055-a0ea-45ffd80df1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0ad961-a81d-409d-a7c7-a3f485079d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc314fe-38c9-4abe-8aa7-7a58eacdd78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f38530-d1d5-4149-87b6-bed74b68279f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e59278-60da-4d33-9a98-4c874a6bade8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd92772-9d87-42d0-9a8e-cbc176450e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bb9ba8-c050-4df0-833c-66d141b5c0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c26b97-51dc-44c5-b71f-a8bd1ddc34c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce98d6e6-af97-4822-a55e-3a446c844b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a64bbc-ddcc-40b6-8be3-1e5540e7242b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25a9a98-efbe-4735-a332-9d6758774790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b84696a-3e84-422e-bce2-b973afaad7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d7171d-c5e9-461a-ae91-83e3c9a785fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeeb3d2-1ff4-4c74-8c09-6fba7064ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c38e18-58d2-4c5e-9c5f-5f2f4846bd3e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc259050-9c6d-4676-abba-132500cafadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30899c08-52e6-4899-8c1b-ac0ccfcf6cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46e4362-46c6-49e6-ba6b-9586deda6662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac5b992-b8e9-4e7b-8d2f-2d8f1c398d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a442477-0d23-43de-a9f7-effdf5612fbe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee96da1-4c48-4c90-9f3d-bf377a355801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7c2376-a38d-4000-9c9f-fd56e6c43773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca255e9-c950-45f0-989c-2121c2e76034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a37ed24-82d3-41b7-a69e-57080a0cee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb25118-9685-4838-a356-6c72199f3754",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97199aa2-4abe-4838-9621-5787b7d404d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc95f96-a4dd-4cbf-bb63-d2bd79b598de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb83b78-a116-4773-b053-65b1c9b84bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b054ef-f659-4ad5-a983-4acca3c9b432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272969b8-9da7-44e7-93fb-fab8a31bf7bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d7e9fa-b1d1-49c6-a8b0-bde8561cbe45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df307ba-d65f-426b-b413-640ee5883a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1249da-c14f-4dd5-a85d-bf1dac7ec7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b23a77-934f-484b-bf11-689c36ef7f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1214afba-3b60-4a75-87e1-9a26e7989818",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2eebe4b-1d48-4682-b944-2db6316066e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "857cef4b-3f3b-49df-b85d-712336ff7867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4e522e-64ad-4f75-98e2-fc7c875f226a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ebe48-ee2e-4655-8cf3-3543c20d01b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26aac0c-e164-4f38-944a-0fe947745dec",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caaabe6-c60d-4edb-8558-9f0903ee2ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018c83b3-0655-4b49-845e-4ad46958893a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734665cf-9bf0-41d2-b866-009671c81a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1aff01-a836-448e-b250-3a8f515f8289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1500af2b-f04e-4ac5-9cdc-924ede8c0b72",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a69c14-f58f-44f8-b462-205a25205834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c50085-f512-428a-9fb9-2883588259fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4f5009-bb2d-4106-a107-435628c2f6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eb511e-502e-4723-b10e-73efa7e5f589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f2ca18-7fa2-48a7-8407-1b4a84ab2f11",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2246ceb-3a01-455b-ae50-f46113a46977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43943d28-d33f-4320-bef1-773cd60778e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4169241-add5-4aa1-9772-6013ed7cf75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463da968-1cb6-4223-913a-e5db9cac87d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead40fa1-000f-4ef0-a550-c37abdd12f8e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d678ccf-2f57-4e89-a81a-5e31ceb23bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8eb5072-0f17-4878-aa6a-d13bd720a605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b9a67-257b-4a51-9979-5440d8d1f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9697022-7c5c-40f3-a8ff-2ca4d7d5d249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdb9536-7d09-4463-a0e1-4aca17e004a2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9062b280-2347-4602-bcde-534763a2f445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b897c50a-17f2-47cd-a8fe-75d33e204dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a0cc4-a716-4286-8cb7-858f495118a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca10e68-dbad-4bf1-a074-9accf577db1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af60393-04ee-4d8b-abe7-bc3d5c99c2c2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0274543d-a8a6-41e7-847f-3ba4eacfabcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3c85d7-a6d4-4ae2-bd82-d6e96e1b1431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dce6b4-b67b-4f06-a320-59e10fe54209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc3cbfb-51f1-4243-a65c-5c8645b5f9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9d8f0-92cd-4a7a-ac86-a7ce8536ed86",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa3592b-98af-4fcb-81de-bf3be076152f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab621d8-6e57-48c5-b9cd-2824457f8e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ddad01-8729-49d8-a399-bf0a9939c821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365f5ef9-c70b-45b1-a766-97ce0e67df0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054d2e9b-2b06-4e11-a73a-fb65a9244817",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e323035-4d5a-452b-885b-79176be37b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e2ba3b-1f46-412d-9b48-204f1a6465a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c2d5fc-cc1d-4ad4-9483-4a54d3676fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c148f80-0033-4d20-bcb3-6a7c47cdd71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ae6a02-34b1-42a2-bd7e-8544ab203ae8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d141ef9-3cae-4595-9033-7bbd7b7edcdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9149246f-0549-4adf-ba4d-2ad8e4794ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01265a7-f371-4744-a0f1-3ad6f72b509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b398f447-f2b0-4da0-8a92-b590d983763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbdd55e-18a8-46f2-98fa-2555d4f1e3f7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6666224a-5a39-4ff4-a011-35f8b2ed5b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0743599-7ee0-40ac-acdf-86b251129e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9a6f19-dcb9-4e64-905b-d017fe649d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a867a937-dffb-4888-aeba-06e0be2ec64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644bd703-ced1-4854-8863-2626725b3649",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63da62e6-5baf-4783-8327-1bb154ad3a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae311168-ab51-4efb-8405-0ad1b7a3a72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c149925-3d1b-4eba-a3eb-a0a036b7a17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3357fe91-0858-4acc-aac7-709151806b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f01868-4f01-4483-9b79-92338840aa8e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f067689f-9a3a-4a35-8691-c0ce2eec592f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190616ff-48f7-4811-9046-9a33de340bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb61e22-7d5d-48ab-a110-cc5689f0486b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfe38c6-159a-4cc3-8de7-8df3e6f1dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e535c4-074e-4c01-8814-c3cfbeab0ae3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e89d7-8478-4694-95e4-195a40da0342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7bae1a-08fc-418f-8c8f-229d58fd7534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584517c4-8bfb-4db0-baff-ec06fc21ef6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73434f32-37ab-46f6-8a57-4e9b3575e330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f17224c-dc93-4235-bd73-f8add0147edc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d851a8-caa0-4fff-8225-5f85591c865e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3309f1-457f-401c-826f-4755c61773db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7a9b95-fc65-42ba-83d0-57c6aee5b041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b197a4-14c3-45d7-a0fa-346607d42dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9dc91b-7f53-4f84-a962-4cc21203e71e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad968fa2-7036-469a-b7fe-c3e7026b0312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb60278-3bee-4683-aa4d-e36dcb52724c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f894f-631c-4136-b9e6-ef1a5bcd2c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ecd64e-d604-4088-9aea-da6699031817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730b7bf8-f33b-4356-8f81-6ac943ee4ca6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf30ddb-47d0-4eb9-b2cd-c31b17947136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0e810a-424f-4dad-97bc-315e67060624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70767f5-f3f8-43a2-b1dc-f321569fcd31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0187677c-8f84-41e1-b907-da484b824b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9a2738-d115-4ff6-992f-ca34cc8d76a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc2ac51-be61-4ebd-9061-87229188970f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d96ce4-a5e7-408b-a627-fbe5b656e6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10185dd6-c1e4-4682-a88f-db0cb58e4d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6839b02-7c30-4ebf-a6b5-ad3df0937c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5922ea6f-09e1-4e10-a555-48063c763665",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c9dc8-abdd-4a80-a4d7-94dcb5f693b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbef09b4-8309-4dba-ac54-39788ff496f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e167697-d5f9-4787-80d5-7dd642498184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeec9fe0-cedd-431d-818a-9e3b56476fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6674f2c-12cc-4d7a-bf09-3553388e24cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d70323-ac41-424e-9718-ad6391f5ed32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ca1269-b5d8-4159-95ff-21a37fb93463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04833d7-01e1-4e18-9e62-c7a46420c2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f7ce71-75bb-4408-ba1b-be9b6f0494ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f625a59-0d3b-44af-adb5-84899615d855",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef46d66-a40d-4145-bef4-75e112c505f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcac4998-79a8-4343-beb4-0173276260e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175f2761-6e37-4f16-9a84-6615b92a936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a4e978-0325-4742-be5e-148f4f9625d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32654627-1541-41c3-ab5c-181b5d03fed5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd2788-3ab6-4a6f-aa5b-7552f98b014c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8843d412-82f1-46e6-b996-3f2f0c31eb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872eda55-f0c0-4067-9d24-cffab1c590f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fba806-8d04-4961-8b59-b887b74b502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6956d7bd-a9f9-43a1-8859-807c739ac9e5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16d18d-41a1-4759-b812-b3494d40c814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f05ed8-8634-4b63-9c37-7c3c9c90e8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210b1a5-9b3a-4a0e-99f5-27b3ee13cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc5f44-b49c-43ef-aca8-25cb862b5463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd998ece-6a45-4109-bc5c-4902cd94ac74",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9782270-80dc-445b-9b55-c4c2ce0dfa49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32680fd0-c56b-45c4-8554-97b6cd7223d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daf736c-7897-4c65-9a84-342dc1fcc5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d3fa83-fc84-43f5-b3e4-08876233c9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ac41f6-0994-4260-99eb-883af1ed21eb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73252b38-dbf5-4f1e-b99c-f80eae18b0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720eb39c-7eb5-4c51-b889-759315de8684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242506d9-5d6f-476b-94d6-b984d17dd607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafbc636-d144-4e64-9913-3a4bbc6c344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b158f0-7183-44f2-b955-8f305a33ec39",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b769a5e5-5b31-4b3e-8714-ad1cbdc5d14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3edbaf-1d66-4269-9cf3-98359755e25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7457fa1d-edcf-424c-a3d7-4b7f958a6dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5b46f4-8402-4cca-9d22-1ecc27ddfd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aca42b6-8a44-4a23-a14b-3e30e26c6004",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566dd462-1211-419a-9e41-6386c283eb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666f0d7a-2cae-4837-8207-d3ad5c8ff558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9934c5-f1f7-44c1-99ff-0c16c969db7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b26f21-9375-48aa-8022-82748686bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c375cecc-ea1a-4f4a-90de-8647778b199f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe0907f-4a26-43a7-bb50-45200505559a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f44bfa2-e743-4385-8229-6b69ab24eed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd1fb58-fe41-4b7b-8e98-5b5a891ae430",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b52cde-b559-4369-99a1-e5d0dd47369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d3e2ce-4c4f-4bd3-8195-8aea946a6f3d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb387f-b649-41fd-9c7c-fb3baa2640dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e20058-7b5e-4a3b-9f7a-9170865b2707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4422a16-07fd-46d4-a6ad-8a9f6c983e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebcae2e-3932-4c33-82d0-1ac818433ae4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca0f8560-05eb-47c1-ba07-8bdac6ce2042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40f0b952-e153-4e16-86ce-fe5890389a9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c934813-016d-4e38-9ec2-f9e558487a23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9fc4740-cba7-499f-8166-153ca7fc1cf8"
                    }
                  }
                ]
              },
              {
                "id": "a107d51f-4d30-47cf-8c2b-657f76823a77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09eaea80-49ba-42c3-a76b-c6d510e605a9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c976a53-e3f8-43fc-81e7-601f7fd61c00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6596b880-599b-4967-9f65-e2eba8ad8a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2eacc0-7ccd-4bdb-9f97-55369db41b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bd7847e-a03f-4eef-9510-5a27aed0a082"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "645b350d-8b3a-42f8-a357-626f5f3a4aba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f11d9a-b0f1-40b2-a5be-360bc306511f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2b5d7f0-bc50-48fa-9a40-f253104b2bdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85ea5280-71ec-428d-a8cb-86db090afa88"
                    }
                  }
                ]
              },
              {
                "id": "2dddfa78-d3d0-4e31-92be-adcb35109e33",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "233caf70-ebd1-4f03-8edf-060232c7c329",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778e347f-8811-4037-b98a-37119e465d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1cbf042e-0b0a-4b02-8d7c-884d5ba54984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfd1acc-d522-4cd3-aca3-67a35f4b4c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384740f8-9693-4fd8-b7c4-984e8369d998"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab72b196-f9f4-453b-b31d-4812d2d44a49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d126ba3-4639-48e4-bef8-738cbd6e8ced",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ec3b8e8-3d0c-4953-9e91-9aa19e35e54d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c21f9aeb-fab1-43ab-bb58-a461aa3f9fb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d08e6abb-1e51-4d67-922a-46c2b823f4fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cfa877b-b0b0-4585-a31a-0887e3957680"
                    }
                  }
                ]
              },
              {
                "id": "c97dbe20-fbcf-4047-a8eb-d028f23ffaf9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a07679ad-6cd3-4d5e-ac3f-9002e56a61aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6084edc5-f23d-4381-a706-fe54aa42daa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0369fafa-9780-4eb3-9908-83e4f74eaf1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "238b3ec6-dbc1-4209-a494-b45b3f96f70d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1bfb937-a7ac-4bbe-861e-229ae7498a54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a324bd59-0851-40fd-b179-aa00350d7116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6115285c-c069-4994-8657-ca0f11e80b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5e33137-4898-49de-b602-4e0f10a3a82e"
            }
          }
        ]
      },
      {
        "id": "55c3d8c2-9b55-4cc0-ac8c-e0a965e1ad5b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0b16e2ef-3a45-4c3c-987f-e787d2516f1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b11ad22-ee89-49e0-a5ca-ea3d80ebf646",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c227985d-84c3-4897-bb3d-2e894c5c9382",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26325f0d-e118-4b41-a29a-9dc6a8e30891",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "589d2366-e8a7-4282-8e6c-40ec86ac5b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d226a22-8969-4d0d-bb29-feb25f23b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d905ce-e64d-4d9c-a4e0-8e0d4e983f79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35808761-2560-4447-92ad-b679b2b80818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcbbd7cb-d2df-4350-89fb-cb44c893a933"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46e54001-caa6-4d60-ba6a-b037f12ab92d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "784ffbfa-fbf8-4b28-b097-f6eca6596f32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dd2b581-7a15-4a66-a75c-be81f7068f3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c13dfe4e-9b83-4735-bfa8-d53ade6152d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40444481-7e48-49c1-985b-ad5afa60b8bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c03145d6-bf0c-488e-b1e3-06406db1b3d6"
            }
          }
        ]
      },
      {
        "id": "9bf11671-1e3a-4bfb-8827-508c6c1175a6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4cfe889b-9527-4685-aed6-50b78a4648be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b49f534-3bce-4453-90af-30efecc8537b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d754fe3a-287f-44de-bf86-ef0a7e04d5bb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed682aec-6db3-46da-a11e-ae74fc93acbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07d042cc-254b-413a-895e-acf838eb83dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa462e45-4478-40f2-ac50-62e38cd8caeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46d5d857-d4ca-4e0f-b86a-042166765461"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b1f1642-b30b-46e7-b631-142588748434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36dce172-0f66-4644-ae52-47be98c57c9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6a66aba-ae39-4828-8821-704c4fbb2d3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb944633-5ccc-473c-8d75-2e6e037371f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1f3b815-fa6e-4aa1-9dc5-5b5b4ee0e245",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f38ea46-6dc1-447f-a384-906da59463b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d672ba6f-3ff4-4283-ad65-b32c6a6cccb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e64ce94-1f6d-4241-883f-1c069f86de85"
            }
          }
        ]
      },
      {
        "id": "43fc9182-07c4-470a-b701-ee21fd39b937",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "32b0bf2c-26be-401c-b14d-4b13a02988e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70562471-ff2a-481c-84be-f781e8e004c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac5d5425-e30e-4418-8df1-823bbfa11967",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb659023-3a6e-49ef-9b34-3d03f3a22bde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c691cec5-9f98-47e0-9c2b-1bdc86c92f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4afca40-4394-4d8b-9556-b7180df3d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb436157-f147-4e92-a7fc-7b6ee43ff6b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e3cedc7-8ab0-4fc7-90e9-b7497deb0bce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e9f3b5-f066-4d94-9578-dee84bb4c26c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e4c22b8-3cf8-4c86-ba42-7ff3791efc15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c397320-6003-42a0-aeeb-49a7f79d65d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c301bf5-bf2d-4e27-8954-bfd006e34590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "caa8b63f-6799-4aea-9835-cd56275b3f59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a107cf8-ff0a-4ba9-a4ec-f67f63fd0fcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c2f75c8-1764-4d28-8a70-f0e359926226"
            }
          }
        ]
      },
      {
        "id": "f09472e5-89dd-4fa8-9965-d16f292134a3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f86a1d3-bc35-4d52-9866-7fa767fcf9c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3c40862-009b-458a-a7b4-ae3395954c19",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de10a7ca-ca29-4066-b638-485cb8b94f2e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af5d0dea-099f-4ee3-8d6c-fb788a21eef5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cb700a3-f662-4ff0-9bdf-d5b51e003fc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.67460317460315,
      "responseMin": 7,
      "responseMax": 9136,
      "responseSd": 612.2474578734169,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719708147580,
      "completed": 1719708180633
    },
    "executions": [
      {
        "id": "97c84aa9-e21f-4404-821e-b79c412aa154",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6bd4bf80-5a19-4af1-9811-5b11d6de1979",
          "httpRequestId": "88bbaa5c-734d-42b4-a295-5eb07d356517"
        },
        "item": {
          "id": "97c84aa9-e21f-4404-821e-b79c412aa154",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "820b8231-3d50-49ed-b89d-6312d35d3d24",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "c46630f3-a60d-4a26-a979-3a2667b603ca",
        "cursor": {
          "ref": "ca69fed6-f257-4d67-a2a1-126495c98ca5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7842f1b4-f99f-49b0-81b2-7fe28fd2d3dc"
        },
        "item": {
          "id": "c46630f3-a60d-4a26-a979-3a2667b603ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "356394aa-de41-4ca0-b341-6a6292ba517f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "52f48d2f-4cd4-478a-ad69-44884dd7e166",
        "cursor": {
          "ref": "adaee7e9-69b5-4cda-b3b5-2955ff4fbd54",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "96d862e8-e40e-4e98-b45e-db4bc2b5f9d3"
        },
        "item": {
          "id": "52f48d2f-4cd4-478a-ad69-44884dd7e166",
          "name": "did_json"
        },
        "response": {
          "id": "48886173-98bc-45fa-b733-f6617aab3378",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c846ca21-dfad-4d1f-8424-66d4e0d38444",
        "cursor": {
          "ref": "3e954495-e683-47e8-8e29-e429a7d6c27f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6946a2f9-5ef4-4996-a6f8-cc34343294b9"
        },
        "item": {
          "id": "c846ca21-dfad-4d1f-8424-66d4e0d38444",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ce28eaf-c697-411d-901f-b99450d4e66d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 370,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c846ca21-dfad-4d1f-8424-66d4e0d38444",
        "cursor": {
          "ref": "3e954495-e683-47e8-8e29-e429a7d6c27f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6946a2f9-5ef4-4996-a6f8-cc34343294b9"
        },
        "item": {
          "id": "c846ca21-dfad-4d1f-8424-66d4e0d38444",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ce28eaf-c697-411d-901f-b99450d4e66d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 370,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c2503b-c7b5-43bf-afae-a2f18a173fe3",
        "cursor": {
          "ref": "eb82e703-1acf-4ff2-8a22-06796dc3ec7a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "72311d5b-4a67-4028-8ccd-0442d933b212"
        },
        "item": {
          "id": "35c2503b-c7b5-43bf-afae-a2f18a173fe3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "288f071f-6497-4a76-94de-eb634173f112",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2fcafc-2876-4d38-a81b-19233980aa48",
        "cursor": {
          "ref": "555921ae-0b0e-49b8-9cdf-dbc620b98090",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "797ca8d7-d67c-484b-85fc-fed95c0ba763"
        },
        "item": {
          "id": "9c2fcafc-2876-4d38-a81b-19233980aa48",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1b1e0f81-37b6-432a-9ae6-0afcabfef39a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59da553-7271-4a7f-bfd9-7630e76fabed",
        "cursor": {
          "ref": "56684cdb-7d49-48e7-85be-e2ee88e44cd9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef3b43fe-b188-462a-be69-cd6ef9ccd0cb"
        },
        "item": {
          "id": "a59da553-7271-4a7f-bfd9-7630e76fabed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d9f53d8f-715b-46a8-9c02-0b1a519e3019",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77544e50-3e27-459b-971b-b015b23f9418",
        "cursor": {
          "ref": "e7c5607b-4dd1-43b4-bd49-3043704ba6ee",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4bf06940-5245-427a-8a29-7fe6cae4bc8f"
        },
        "item": {
          "id": "77544e50-3e27-459b-971b-b015b23f9418",
          "name": "identifiers"
        },
        "response": {
          "id": "e966b473-7404-4192-b136-2800796744df",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bcb095-3b8d-4c24-a76d-4483482ba65e",
        "cursor": {
          "ref": "b97633c2-320e-4a30-959c-462c87ceacee",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa06f6a6-ec51-4d5b-8bc1-45afc57d77dd"
        },
        "item": {
          "id": "75bcb095-3b8d-4c24-a76d-4483482ba65e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "067d85a9-7483-4572-8634-9d4807ef5c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38d0907-034f-49c3-a2bc-09d42e5bfd02",
        "cursor": {
          "ref": "0e725abf-293b-4e33-8748-8d34d38d077e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7d7d3c0e-ee13-426b-be6a-4c2a35008dd3"
        },
        "item": {
          "id": "d38d0907-034f-49c3-a2bc-09d42e5bfd02",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "412dff78-524b-4620-a929-7b0fe790d9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1800b262-48a1-43ea-9f78-a92b8086c454",
        "cursor": {
          "ref": "1c3df379-670c-4a8b-92c8-b26aaee1adb8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f14566ee-69b6-43bf-b7f9-85311bb8723f"
        },
        "item": {
          "id": "1800b262-48a1-43ea-9f78-a92b8086c454",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "77844796-beab-43b2-a472-39311cacbeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51897a57-fb2d-4bea-a12c-e3bbd72257b3",
        "cursor": {
          "ref": "50a7556f-115a-48e3-9111-6b52e300389d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2c6d4ec4-8b07-4504-99c9-54061e8746f6"
        },
        "item": {
          "id": "51897a57-fb2d-4bea-a12c-e3bbd72257b3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8d098ddf-b956-4f27-ad67-0e572b4a2705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3512c69d-a08e-4d41-8e53-67b59158556c",
        "cursor": {
          "ref": "c922a8bf-6656-470a-b611-1660394085e3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bffddde1-248e-4273-bbf7-cc2695536308"
        },
        "item": {
          "id": "3512c69d-a08e-4d41-8e53-67b59158556c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f810175-f787-48eb-a851-e8affd3f3c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ec7b2-2a73-416b-afcb-e91eba53d1b0",
        "cursor": {
          "ref": "9d487aa8-35c6-474b-900c-e48a4fefaa4f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "affeaabd-ced7-482a-8add-baf1eb78620d"
        },
        "item": {
          "id": "263ec7b2-2a73-416b-afcb-e91eba53d1b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b5265494-8226-40b5-9513-0042543a445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9520a434-d5b0-4f71-a3fc-d45d34d2d2ad",
        "cursor": {
          "ref": "44de561d-49bc-4def-823c-80b1957b62fc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d8a6269d-819f-4091-99ec-1df09e59c30a"
        },
        "item": {
          "id": "9520a434-d5b0-4f71-a3fc-d45d34d2d2ad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cd046643-0d11-465a-8ace-ed31f48664af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1c06c-a03b-4a9b-95b9-2c3134d5dc3b",
        "cursor": {
          "ref": "d17e47b4-d442-42ce-a404-f16c2469953f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fe7fe103-3181-46fa-b15f-2b536814fd82"
        },
        "item": {
          "id": "8ff1c06c-a03b-4a9b-95b9-2c3134d5dc3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69bcaf3e-8813-4a6e-8c78-2074ec5b1f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784def21-1262-4c16-9f5c-c399de35051d",
        "cursor": {
          "ref": "c5bbc5fa-c1f9-4a0f-9443-7ce31ef44c97",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "93d8d81d-9d49-47ed-bcf9-177fdee1e3d3"
        },
        "item": {
          "id": "784def21-1262-4c16-9f5c-c399de35051d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06355df2-099c-46a5-829b-bb65db66bb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e49ba6d-0138-4fe4-b9f3-ce976ec519c6",
        "cursor": {
          "ref": "1c341e8c-5d5a-448a-ac1a-a110366de5b0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fda26893-3147-4775-930c-4e50ef901140"
        },
        "item": {
          "id": "4e49ba6d-0138-4fe4-b9f3-ce976ec519c6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0de7bd4d-1114-45f9-98f6-352c318a2d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e52e863-d0e4-4799-bec1-5491d2c4c23b",
        "cursor": {
          "ref": "578762f7-710f-4a85-8db0-2d5d470e28be",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c8427ca6-7a11-4f49-9c89-b53deee7883b"
        },
        "item": {
          "id": "4e52e863-d0e4-4799-bec1-5491d2c4c23b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9d6f7325-38f8-46b3-8b35-62d38a461c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fcda56-d752-4ebd-9ee9-a8b2526749ef",
        "cursor": {
          "ref": "c27a28ea-db97-44f1-bda4-0bbe28f30c7d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cbea9d01-72fe-4f8e-887e-2f4b42c4bf21"
        },
        "item": {
          "id": "e3fcda56-d752-4ebd-9ee9-a8b2526749ef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c41df2f8-1403-4236-a48b-7ca1bdd34ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b1ed03-43d5-44ea-ae83-173d12de5bbe",
        "cursor": {
          "ref": "2682eb3d-232e-492b-91e4-a9c755a09f3f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1a9ce28f-a195-4299-9590-6eaf764b2a67"
        },
        "item": {
          "id": "41b1ed03-43d5-44ea-ae83-173d12de5bbe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8a41fbe9-bbad-4aeb-888a-cb430475211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763086d1-c839-4408-8d6d-066aa2857fca",
        "cursor": {
          "ref": "c3909f51-7d26-4eba-a57e-39d403930742",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "501e20fe-2e15-49bb-9eaa-5b8b7df6fa76"
        },
        "item": {
          "id": "763086d1-c839-4408-8d6d-066aa2857fca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "df8e072d-5567-44d0-abd1-dfa646950004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb9983e-d36d-4797-a936-fc82954f496f",
        "cursor": {
          "ref": "ca16d719-bde3-446d-b658-84b544707bb5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "226eb2db-ea5b-4ba6-aabe-393190e88fc2"
        },
        "item": {
          "id": "bbb9983e-d36d-4797-a936-fc82954f496f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "364e3175-9c0a-4389-b98e-26f89555d746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b715b23a-4299-44d9-9c53-db628d5f5276",
        "cursor": {
          "ref": "14daa985-359b-401f-9b45-5cdad7c851bc",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f6639d7-a08e-4a76-a97a-548778692493"
        },
        "item": {
          "id": "b715b23a-4299-44d9-9c53-db628d5f5276",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "881a963e-3550-4765-bba7-ed71c2cf29ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccfcf72-2ebb-4fbf-b4a7-11fa83b02619",
        "cursor": {
          "ref": "c41000a8-f881-46f0-a16b-71f4a6acdaaa",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8732a5f8-dfba-4051-a883-5f712ca261cf"
        },
        "item": {
          "id": "6ccfcf72-2ebb-4fbf-b4a7-11fa83b02619",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "28293040-417f-471f-862c-4ef65fd38ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0230d5dc-7f9f-401e-9b28-c193b26f0410",
        "cursor": {
          "ref": "aab70b1d-8c86-40d0-8297-5f17ebd8e8d5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9b256ac0-e69a-4b09-8b06-a4f7d0239c1e"
        },
        "item": {
          "id": "0230d5dc-7f9f-401e-9b28-c193b26f0410",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2fe6bdd-7548-4f25-8f59-69d232762ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f86d7-f310-4a01-a2e7-70d2da9380b8",
        "cursor": {
          "ref": "6dec1092-dbe7-44a5-830f-39550d613182",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "12f9672a-ab02-4a40-a332-2655ecc7f716"
        },
        "item": {
          "id": "e36f86d7-f310-4a01-a2e7-70d2da9380b8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ea6f1161-74fa-452b-b61d-f294574d780f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016a23ef-b705-4836-abac-d57dbfc1686a",
        "cursor": {
          "ref": "ad0f1967-6cb6-481e-ae6e-f09e090b0b1e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "28a07345-bd54-4cdf-9e3d-0c19d7866bbc"
        },
        "item": {
          "id": "016a23ef-b705-4836-abac-d57dbfc1686a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a444e549-a0bb-4441-8276-501ad1356b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6615ccfc-b36a-48d9-98c0-9b25ca7d7e40",
        "cursor": {
          "ref": "529f2453-71d1-47e4-a463-3d11c1aa65c8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "27eec969-7fb9-4d7f-b926-cbe880fab79b"
        },
        "item": {
          "id": "6615ccfc-b36a-48d9-98c0-9b25ca7d7e40",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4751b170-efcf-41ac-adea-90cd4c80760f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f1aadc-4586-434e-a3d9-c58ed10b5808",
        "cursor": {
          "ref": "c3207c05-c39a-4500-a566-87bb22e5383c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "177bead7-c8e8-4093-b97b-2a03187d03aa"
        },
        "item": {
          "id": "d1f1aadc-4586-434e-a3d9-c58ed10b5808",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3d5922d5-98cc-4f86-be36-919ff72464dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c37ee-4e42-4e4d-9206-60d5f88938f9",
        "cursor": {
          "ref": "78d0af31-ee4b-402e-8c13-3618597356fa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "73315499-fd82-452d-884a-0e18bf7d846b"
        },
        "item": {
          "id": "c72c37ee-4e42-4e4d-9206-60d5f88938f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e8cfc340-0489-414c-9e38-b3cc5d5a67f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ebe6eb-873e-4b47-b106-aa4d816149a0",
        "cursor": {
          "ref": "359c8982-0a6f-4026-a21c-4ca5520852aa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79695a4d-cf4c-4e67-b401-f2a09f60e0ad"
        },
        "item": {
          "id": "b7ebe6eb-873e-4b47-b106-aa4d816149a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b3055114-8691-4a49-a183-891615c6de1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdd9510-600c-4a98-b92a-7406ed86e156",
        "cursor": {
          "ref": "54a6d80a-e768-4ee6-9e63-e44c2abd8bbb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a65cdb51-bcfa-4d68-b5e8-0967ad17b7a6"
        },
        "item": {
          "id": "4bdd9510-600c-4a98-b92a-7406ed86e156",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5fdf665e-4038-4738-b32d-6a04e1b03a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68a708-d8b6-42b1-9b44-eca97451a6a2",
        "cursor": {
          "ref": "35ee1388-1985-4323-a836-480febf0b9df",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "03130af1-8721-4ccf-9ce6-4c2dc667a19b"
        },
        "item": {
          "id": "fa68a708-d8b6-42b1-9b44-eca97451a6a2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4ef09e6f-7a3c-45c3-8f4b-12b686362fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f66d44-2745-4061-bb37-592f39ade06f",
        "cursor": {
          "ref": "867a254f-f1f4-415e-b4e2-39c084744dc2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7cf96df6-7d53-4d35-ab62-92c066d1ca83"
        },
        "item": {
          "id": "07f66d44-2745-4061-bb37-592f39ade06f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "60578b80-33b8-4fcc-85a1-f6dc9decabbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56d19e-fdd8-4c51-8081-0be36f5c2801",
        "cursor": {
          "ref": "68a5fecb-7f07-4353-b0ab-fc9ab80e4902",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2b310f14-31df-4571-ade8-eedf7a0666c0"
        },
        "item": {
          "id": "da56d19e-fdd8-4c51-8081-0be36f5c2801",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ee3172b8-7757-4b33-a190-a3d2c8bc9ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aab9995-0d92-4357-8ea2-a3e108c848c5",
        "cursor": {
          "ref": "ce8836b7-d131-4dd6-95e3-2c83133474d0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "89242891-8ca8-4ae8-9560-3638a9f23046"
        },
        "item": {
          "id": "7aab9995-0d92-4357-8ea2-a3e108c848c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dee4fc15-0ab0-4d41-91a1-654ed8c560ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ed01ca-d492-4eb4-a53e-572030431cf7",
        "cursor": {
          "ref": "7ce60b0e-79aa-405a-aa9c-1ed8168f7ae7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f7829195-9783-41b0-8511-a1dcc53e1700"
        },
        "item": {
          "id": "63ed01ca-d492-4eb4-a53e-572030431cf7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8cfbffeb-efc7-469b-992e-2eeabf76114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1977888d-0bcc-4a3a-9272-4e85ed46bf8b",
        "cursor": {
          "ref": "a1242883-8393-4dda-bfaa-ad5a59c1b7c3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bdb7de18-b640-49f9-915f-ebeb2db64ccc"
        },
        "item": {
          "id": "1977888d-0bcc-4a3a-9272-4e85ed46bf8b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c119796c-1c22-47a4-87dc-9bf436a98a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a71704-7cd0-4028-8ea4-3f416ef856c9",
        "cursor": {
          "ref": "65a750da-be1b-4dd7-9ee9-6babb8c834ed",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "677debfb-24ad-47a9-9a16-ee7aa432b928"
        },
        "item": {
          "id": "90a71704-7cd0-4028-8ea4-3f416ef856c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "76824af8-929b-4e42-a199-a23bb4fbae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4da511-8f57-4248-aef2-a4daac86ccf8",
        "cursor": {
          "ref": "d1c03ef4-19a9-4692-aa9c-461ac6ddf6cd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "47d97600-4ab3-4db8-ab05-d07ba3fb1beb"
        },
        "item": {
          "id": "2d4da511-8f57-4248-aef2-a4daac86ccf8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd5564bf-0ae8-4924-bf22-533049ac51bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45090bf7-db9b-41e5-a740-7434f424c1a7",
        "cursor": {
          "ref": "67e72271-4389-46f9-bf6a-e1cb003bc257",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cea5f4c8-7ec6-42d4-87f0-479f71cd357d"
        },
        "item": {
          "id": "45090bf7-db9b-41e5-a740-7434f424c1a7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "218a9d04-cbba-48e5-b1a1-2ab95bd25223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35574569-e22d-4d6e-8004-0ccb9c869ca0",
        "cursor": {
          "ref": "9ccfa798-7f9e-4a96-a4c0-fc2a2e8dbbe3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f563ee39-6e77-45a6-84a3-d1c0fe2d2660"
        },
        "item": {
          "id": "35574569-e22d-4d6e-8004-0ccb9c869ca0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3da27902-ffb1-46cd-a581-201b3cbe9b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79208b8-8fbc-4eb9-b8e8-95186ad2e90c",
        "cursor": {
          "ref": "76024f84-bcaf-482e-a000-13da225b3ca5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "22a3b18d-ebcd-4150-aa00-30d612a50611"
        },
        "item": {
          "id": "f79208b8-8fbc-4eb9-b8e8-95186ad2e90c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f9df0024-a7fc-41cb-afd3-0641cb4bf806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b546071b-19dc-46f3-ae10-4bb8418aaed0",
        "cursor": {
          "ref": "00d7cfcc-bd4f-4e43-afd4-a9210d06f305",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "12ca2a70-1356-4f64-85ed-c24b51b16c1c"
        },
        "item": {
          "id": "b546071b-19dc-46f3-ae10-4bb8418aaed0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "116892c7-31d1-4471-918c-74c14e3d249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292c4df-78d3-4b2a-901f-e307e682a009",
        "cursor": {
          "ref": "4666d727-234d-4728-96bb-3710034d2be3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8799d530-0891-4997-b973-4e40780ace81"
        },
        "item": {
          "id": "1292c4df-78d3-4b2a-901f-e307e682a009",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e0fc87fb-2024-4547-b65e-576a0fda06e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e69e9d3-36ad-4dc9-9f4e-d33cb0d2613e",
        "cursor": {
          "ref": "1d1759c9-fea0-4a80-b4bf-457242402778",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "728e4bc2-020a-4d3b-9993-7a1d6c6ad0a5"
        },
        "item": {
          "id": "1e69e9d3-36ad-4dc9-9f4e-d33cb0d2613e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f590b368-2d6b-4d21-9ea2-b836fcf9519a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c87b2c-0387-489e-b1a9-44f5e42fc70f",
        "cursor": {
          "ref": "49348df2-60cb-40e0-ac0a-01fece1be3f9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d9a25214-002b-4f02-9df1-9218c1c76b98"
        },
        "item": {
          "id": "62c87b2c-0387-489e-b1a9-44f5e42fc70f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f7cbcb8f-0a38-4edd-ad46-7316693f7bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cdef8e-057d-40f1-88ac-3d76c0eb3f47",
        "cursor": {
          "ref": "d05ad7df-9d86-4a65-8f9f-900fedb6d5cc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e571a026-747e-471d-be96-6542d131987c"
        },
        "item": {
          "id": "d5cdef8e-057d-40f1-88ac-3d76c0eb3f47",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4709cf19-1ea9-43bd-aa6a-860ee434fc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48b1247-e47e-48f9-ac1d-811c02a3aac6",
        "cursor": {
          "ref": "b9532c1b-40c0-48f7-967a-d912d124341e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "84896cea-6c1d-4717-821f-929755f352bf"
        },
        "item": {
          "id": "c48b1247-e47e-48f9-ac1d-811c02a3aac6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e1361736-3ca3-4d31-9a84-083fa800f2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ba2b9c-6870-4bdd-a290-bb64e3e5b7b9",
        "cursor": {
          "ref": "7fc6ce05-a66f-45af-a9be-5ff61c1c9b82",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7c754cb7-acf2-4b9e-90ea-138be49b8151"
        },
        "item": {
          "id": "75ba2b9c-6870-4bdd-a290-bb64e3e5b7b9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "684e2e61-1828-4fb0-9b7b-28c8111e1202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e067283e-4df3-4632-a4ad-8ab16d60b5af",
        "cursor": {
          "ref": "6051136c-6314-46b1-9485-d9bf4a1a7843",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ced52ec3-b47b-4440-be81-80ad0727b981"
        },
        "item": {
          "id": "e067283e-4df3-4632-a4ad-8ab16d60b5af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "817f9b99-fed8-4f9f-b1ac-c13362c522ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16183042-6c0a-4f6b-b091-754535fd4a41",
        "cursor": {
          "ref": "19102761-e966-43b2-8dc0-85857b8d20b7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bd7338cb-9cfe-4f06-90bb-37198d046e79"
        },
        "item": {
          "id": "16183042-6c0a-4f6b-b091-754535fd4a41",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42df7a66-bee2-499a-a275-ce25d169ecce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601e6ca6-f4c6-4090-b490-9742cb28d949",
        "cursor": {
          "ref": "1ae4d8e3-f9a7-4c85-8434-63be2e8262e3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "557a2ef6-0d0a-4322-82d8-b236a4ae4755"
        },
        "item": {
          "id": "601e6ca6-f4c6-4090-b490-9742cb28d949",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "305292bb-f809-4c7b-bba0-db8b757c259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026da33c-3dfc-4707-9aa6-03d17c366f3c",
        "cursor": {
          "ref": "6c6cbbab-b2e2-49e0-af77-8d7a78ab04c8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "62065d23-f02b-499a-89e5-a19afa0a1196"
        },
        "item": {
          "id": "026da33c-3dfc-4707-9aa6-03d17c366f3c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68fd6a68-d881-4efe-9562-1247c54eeb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940848bc-28ca-478e-9b7e-f8a81131a0c3",
        "cursor": {
          "ref": "56e1f6fb-82df-437d-9ef4-3404d21fb573",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "026cf033-62cd-4886-81c4-a79bab2d2bb7"
        },
        "item": {
          "id": "940848bc-28ca-478e-9b7e-f8a81131a0c3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "12e127ba-9815-4f4b-871c-7ae03acba149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba5973f-b988-405e-8b7c-d3fb105421a7",
        "cursor": {
          "ref": "f0fe438e-817d-4007-967a-af6240ab2589",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c69dd4a8-f9b1-4a0f-a3b1-dc4b2ab64f4d"
        },
        "item": {
          "id": "2ba5973f-b988-405e-8b7c-d3fb105421a7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4c5fb449-a698-45d7-8b5e-b11c2d8c0679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47c093d-05d4-4d8e-a0bf-4e0e9a4f3b41",
        "cursor": {
          "ref": "bd0c43c7-e52d-454f-b2d7-a0d32f425538",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "16c83a30-feba-425b-8dd4-7c022f6b5cd4"
        },
        "item": {
          "id": "d47c093d-05d4-4d8e-a0bf-4e0e9a4f3b41",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1e2b5bfe-7ab1-4cce-a32b-b36d6436599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97524d3-890c-45d0-ab14-8260d72d45dc",
        "cursor": {
          "ref": "5b4bafc0-f941-49b0-aa48-9d1f8dc408f4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "15f5ca85-b158-40ac-8bbe-6edf7a39f0ad"
        },
        "item": {
          "id": "e97524d3-890c-45d0-ab14-8260d72d45dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dd2be593-fe60-4d14-aada-a97ce7e30091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025cb92d-16be-4f35-b7ad-6f5df43c8b6d",
        "cursor": {
          "ref": "4bfad365-02c9-4b80-8d73-efb5700d34fe",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e33e3fdb-ad97-4390-88ff-aa045c569d36"
        },
        "item": {
          "id": "025cb92d-16be-4f35-b7ad-6f5df43c8b6d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "87b9574f-adfe-49d9-bb95-899c35efb036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fe01a6-cd4e-4bd9-9929-1fced00a212a",
        "cursor": {
          "ref": "73dc3311-fd98-484a-92d7-d005684f1618",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3acccf5-16aa-4aa5-b75f-dad34927410e"
        },
        "item": {
          "id": "75fe01a6-cd4e-4bd9-9929-1fced00a212a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "274e682d-0a7d-4e13-8983-b24a4700e2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12c0c64-3bd7-49ef-96b7-58f33b5bf9e6",
        "cursor": {
          "ref": "98bcbc02-00a8-473f-b620-c220958cd40e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a501eb1b-19c9-4ef7-ac64-6089a0370def"
        },
        "item": {
          "id": "e12c0c64-3bd7-49ef-96b7-58f33b5bf9e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "71fa0aaf-cbaf-4248-9b87-c88209cf9ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d856cb-9b23-4921-941e-da8054181d30",
        "cursor": {
          "ref": "58d37548-ad27-44b5-81ba-be5e321e0821",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "570f0041-58ce-4bcf-8b21-f589c1e238f6"
        },
        "item": {
          "id": "52d856cb-9b23-4921-941e-da8054181d30",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "64d8089a-0c38-49fd-b90f-45812d58c634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae23a95c-ecec-405f-9dfa-2f10d3dbeada",
        "cursor": {
          "ref": "98bf75d3-78c0-4c4f-98c1-9e15f99aa90c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1b7bca70-fc92-4e44-b0e3-6f0d47fbca15"
        },
        "item": {
          "id": "ae23a95c-ecec-405f-9dfa-2f10d3dbeada",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fb709572-e998-453a-8f8e-9328c6438f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90f55a0-b1f8-4541-a3cb-6577b6bf09e6",
        "cursor": {
          "ref": "dece0356-f63e-44bd-bd72-9ed03cb2a72d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "18019691-a301-4012-afde-a7cc9e8d1273"
        },
        "item": {
          "id": "f90f55a0-b1f8-4541-a3cb-6577b6bf09e6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da3976e8-ac1e-4ee1-b36e-e9140e1d3dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d54f5d-4ec9-429d-8afa-c32752203539",
        "cursor": {
          "ref": "1ac3d368-b9a2-491e-8ac5-ab805ac3e516",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2df921b1-8f10-4156-b36a-2e27b5afa3cb"
        },
        "item": {
          "id": "27d54f5d-4ec9-429d-8afa-c32752203539",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a3b25b8-5301-4a96-a1e3-0dc92a043e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4ae30b-123c-4197-abc3-62ddd8cc4877",
        "cursor": {
          "ref": "16ffc39d-3ab1-4160-aeab-204d8cf8e853",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3764096b-7a67-47bf-b797-6416925b768d"
        },
        "item": {
          "id": "ed4ae30b-123c-4197-abc3-62ddd8cc4877",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2df46aa9-ca7e-41c5-b5ac-42b6db9058a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5c960-27f2-46d8-9e76-cb71a1314f30",
        "cursor": {
          "ref": "8cb2fe43-7fff-4d04-b260-01d8da9e526a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7bf2cc72-16cd-421d-8a53-efde61529eb2"
        },
        "item": {
          "id": "88f5c960-27f2-46d8-9e76-cb71a1314f30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "95d600a1-85e1-4f56-a1e9-49f70878f25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453828e7-e4ca-4dde-ab43-81eab3cf0e69",
        "cursor": {
          "ref": "613a4c2f-ac5d-4350-b21a-8d12b1b25d3d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a81a840a-80e2-4dc1-a745-8f99b7ed2fb3"
        },
        "item": {
          "id": "453828e7-e4ca-4dde-ab43-81eab3cf0e69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e9ff37b2-8f85-4ab5-b39f-acf328720bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a40c96-3894-49f4-a33d-87e8fbde09b0",
        "cursor": {
          "ref": "961ee736-b5ee-4be9-b0de-66fa0da716aa",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3d19f044-4408-4758-a2a3-b7840a8f6510"
        },
        "item": {
          "id": "33a40c96-3894-49f4-a33d-87e8fbde09b0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "234a845a-20b2-437e-98e6-5e4c2a427af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d3cd8-9e27-4dab-9cf4-d3bb04b9f30c",
        "cursor": {
          "ref": "81b37887-83aa-4898-8853-c1994d60aa9e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0a860c74-161a-4b2f-8037-5f6e5d6e4baf"
        },
        "item": {
          "id": "049d3cd8-9e27-4dab-9cf4-d3bb04b9f30c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f5b186a0-f7f1-4dd6-a5fe-f985bc24471b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c9a0e-b73e-4c7d-b545-4e62e56fb789",
        "cursor": {
          "ref": "7938d063-8f2e-4d15-87fc-f7f957f3fb3e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "eb9041cf-7239-46dc-8a4e-0da622c5a9b9"
        },
        "item": {
          "id": "291c9a0e-b73e-4c7d-b545-4e62e56fb789",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07b7dbe9-fca0-4b6a-9880-7aad67ad8974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ba00fa-44e5-4493-adb1-c3b61fa11f87",
        "cursor": {
          "ref": "7f81e4e2-d1b8-4c25-9219-84ee618a46e9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ac8a4b9a-8c25-4e7f-885d-079dab0af1da"
        },
        "item": {
          "id": "e1ba00fa-44e5-4493-adb1-c3b61fa11f87",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e70e40c2-50f4-449f-827f-d08608eef839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6125ef6b-20a3-44c0-8f03-9deb48fd4f61",
        "cursor": {
          "ref": "7a538789-2a68-4738-ab7b-d0d16bef4392",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "be36f284-9520-42fd-95e7-f56bfbd5ab16"
        },
        "item": {
          "id": "6125ef6b-20a3-44c0-8f03-9deb48fd4f61",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ad879be3-35aa-4aa3-a35d-ee7a2cbf4851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0611a1-28e4-40d8-b968-190b7882bc73",
        "cursor": {
          "ref": "08510e4a-937c-4d92-916c-7e0f0f51dcb5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a98ead49-8eeb-4978-a26d-095a3410b6be"
        },
        "item": {
          "id": "6d0611a1-28e4-40d8-b968-190b7882bc73",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ab5a22dd-669f-47cc-9186-f8200d435cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74161b7-66ca-499a-945e-62e65f34bbf1",
        "cursor": {
          "ref": "ee0b4cf3-58d7-4d50-85a9-d0866e344393",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b572bc14-1b8a-44ba-a91e-9341c6d502ea"
        },
        "item": {
          "id": "c74161b7-66ca-499a-945e-62e65f34bbf1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7c30c261-ee3e-48e2-a293-9af6587d828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5efa3d2-2602-4e7f-99bb-3bcdd85f5cfc",
        "cursor": {
          "ref": "f57ec101-ab90-443a-9d87-7b50964fb92c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b8dc00db-b4b1-411f-a71f-8483c227ad95"
        },
        "item": {
          "id": "d5efa3d2-2602-4e7f-99bb-3bcdd85f5cfc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "adc1ea2e-78b8-4a0a-9252-6864525e46b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4bed1-7a83-4ea3-ac58-584933bce897",
        "cursor": {
          "ref": "e2c7c635-77a6-4c70-9aa7-44ac499d7bcc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8efde566-e3e8-4cac-b435-593b40dde384"
        },
        "item": {
          "id": "0fe4bed1-7a83-4ea3-ac58-584933bce897",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2fdfbfd4-272d-4d2a-8109-8b16a53e0327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19844c41-7440-4da7-8671-b7396d2cedd9",
        "cursor": {
          "ref": "adf2a8f4-27de-48be-8988-9b925d8c514f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d97266db-9ac1-4154-becf-da172f9b43d8"
        },
        "item": {
          "id": "19844c41-7440-4da7-8671-b7396d2cedd9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "847639a8-6e64-4305-b07a-0dc896f84611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3810f76-5ed6-43e5-9a93-c3060b099557",
        "cursor": {
          "ref": "4464f3da-d1be-406a-baaa-a343f7079697",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a9b0c4f1-1568-403f-88ce-97621ae39083"
        },
        "item": {
          "id": "b3810f76-5ed6-43e5-9a93-c3060b099557",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "68eaa226-58c3-4db6-af1e-d0a87f6435e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba6f857-bed6-4dca-afda-e4d9cb49a316",
        "cursor": {
          "ref": "15eb64a8-27db-4732-b08d-bed40ed3e03b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e0ac9f3-6ef0-43e2-87fa-d4a275ec4061"
        },
        "item": {
          "id": "4ba6f857-bed6-4dca-afda-e4d9cb49a316",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "10eedfc0-7c3d-4321-81e0-93332009fcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dab3f1-2e4d-43d8-adec-734831508448",
        "cursor": {
          "ref": "5bd81474-0361-4464-8b32-4d09851ffe96",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "923b7db3-1ac7-4cf0-9632-4d1acee9c54a"
        },
        "item": {
          "id": "55dab3f1-2e4d-43d8-adec-734831508448",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eccd6134-01d3-4bad-8e1b-079289467187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9760a6-04b2-411a-9dd7-32ecbf651a29",
        "cursor": {
          "ref": "c45bf5d4-4986-4ab8-8cc9-0880668a6d13",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a28040f5-0dcd-4782-84c2-6fcc22f3ebd5"
        },
        "item": {
          "id": "ba9760a6-04b2-411a-9dd7-32ecbf651a29",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "766628ba-4818-404e-9317-14a903564692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53146475-3f29-4168-94ba-0ce412f681c1",
        "cursor": {
          "ref": "040f4bd2-61d6-4729-a952-0d5a14ef8c40",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "18d54368-4334-4e6d-ae35-f046411a936a"
        },
        "item": {
          "id": "53146475-3f29-4168-94ba-0ce412f681c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0ce8070d-0137-4493-bbe0-f956f215157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d19430-289c-476c-af06-ccf2f865df05",
        "cursor": {
          "ref": "dedadecb-58f3-4155-be98-e9e2249b0db9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a7a6ae84-ed5f-4933-9d1b-3730992f6b4b"
        },
        "item": {
          "id": "e1d19430-289c-476c-af06-ccf2f865df05",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ed4bd5d8-1a11-41ac-8121-cb364115d8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3a72f9-5956-4d3d-9b64-dcb78e88efff",
        "cursor": {
          "ref": "957b2886-b66f-4e81-8c49-440bac530182",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "675db0bf-06fd-450e-8eda-5c38e3abccb7"
        },
        "item": {
          "id": "4a3a72f9-5956-4d3d-9b64-dcb78e88efff",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88314fe2-35d5-4e52-9b83-2afec8450aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e59c84-e56d-4998-96b6-5fc1a1f065c2",
        "cursor": {
          "ref": "7d893630-324d-4df7-8611-0cd7fc0ba8ff",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ce5cc0ab-da15-4012-bacb-bbe1c9cf3ff9"
        },
        "item": {
          "id": "68e59c84-e56d-4998-96b6-5fc1a1f065c2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "62d67c34-de31-4a19-b394-a0ac20970980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868fe40a-0491-431e-8530-427bc695ad8e",
        "cursor": {
          "ref": "cd27faa2-6a9a-4838-bcf8-2f07af8c1b8d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f039ee27-713c-47fc-a6cd-28491be311a1"
        },
        "item": {
          "id": "868fe40a-0491-431e-8530-427bc695ad8e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf944925-bfb4-4f51-9956-3ce50fd1020d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55389e9-9dfe-4b81-9a38-089f0e127969",
        "cursor": {
          "ref": "087afec5-4b9e-4d12-b75b-3421f5a2ded7",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4a569764-ac1c-46f3-b935-eee4ce998d29"
        },
        "item": {
          "id": "b55389e9-9dfe-4b81-9a38-089f0e127969",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34b3cfa8-d265-4bc5-b1b1-73fc74eff49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ad9169-6e2c-4648-8555-3941ba9bbe8c",
        "cursor": {
          "ref": "796212b1-f595-4a60-aa88-5fe1666efa9f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "11c87e07-1ce9-4824-93f3-3bcbdcd0a5a2"
        },
        "item": {
          "id": "a1ad9169-6e2c-4648-8555-3941ba9bbe8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cb8e7703-a011-457f-b720-0a8a111eb02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b7c2aa-fd7d-4348-93a6-6119f2b7afae",
        "cursor": {
          "ref": "e89d064f-ed6f-4967-a213-d97b9b9f71b7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0b828734-cb7f-42a1-9f59-19f22ddabdf0"
        },
        "item": {
          "id": "c4b7c2aa-fd7d-4348-93a6-6119f2b7afae",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "da8dfc23-706c-47d5-a9c9-f6489701a4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081d6a53-9b96-4c42-8d24-ccc78339d5d6",
        "cursor": {
          "ref": "525bf244-6636-4042-8b3b-7f4005c1e151",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f47273b6-54aa-489b-9604-5fc7e6a24c99"
        },
        "item": {
          "id": "081d6a53-9b96-4c42-8d24-ccc78339d5d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f340bf45-7ea9-4af0-a421-1d86a5f09a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd11b10-e2d2-4bc1-b4e3-fab679c6bf20",
        "cursor": {
          "ref": "7e8dcfc0-c2c5-43fd-887b-48ebf171aebe",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d3ef5a15-7de6-45d9-9de7-4c7e4138e682"
        },
        "item": {
          "id": "fdd11b10-e2d2-4bc1-b4e3-fab679c6bf20",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a01671b6-c57c-4bfd-8a0b-36447ca3b1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d665b3-aa6a-41d3-833d-d934c9c1a9d7",
        "cursor": {
          "ref": "5bf67fbc-587c-4037-a777-05adfe842c7f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "353fccbb-7cd3-4ab2-99ca-83ab6f92afdb"
        },
        "item": {
          "id": "11d665b3-aa6a-41d3-833d-d934c9c1a9d7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "29899e70-7200-49d7-b74c-50cbcd33a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd56f96-7270-4b94-b9a0-2c5e7c996e7e",
        "cursor": {
          "ref": "338460ff-8de3-4915-bf00-b93fb0508d3c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e040cf88-9c25-467d-9155-84f33efd03d1"
        },
        "item": {
          "id": "5dd56f96-7270-4b94-b9a0-2c5e7c996e7e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "77fdd7b6-1656-4c34-b504-51f0773333e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5633430-f0bf-4757-b434-5455f884263d",
        "cursor": {
          "ref": "0903dff4-06e7-477d-b624-6721b1e6e663",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c893e729-0c41-403a-9457-ef248b3e8f1b"
        },
        "item": {
          "id": "d5633430-f0bf-4757-b434-5455f884263d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2d4921a-23fe-4edd-b3f9-02dd0b48c6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa94735-740b-41af-b2c4-ce582b5b8ece",
        "cursor": {
          "ref": "c713afe1-9ef3-4e5e-9832-1da15e644e16",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "acb66d09-ec6b-498c-98c1-1342b9bf0df5"
        },
        "item": {
          "id": "dfa94735-740b-41af-b2c4-ce582b5b8ece",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cda69db9-2190-4050-b310-ae067ef53b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac912cc1-438a-4bb3-a318-f6dff84e8c5b",
        "cursor": {
          "ref": "56783c99-4a1f-41bf-8339-1ef19f12c14f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55e40493-ace9-4353-8eaa-c6d09897ad30"
        },
        "item": {
          "id": "ac912cc1-438a-4bb3-a318-f6dff84e8c5b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "31779721-8527-4df8-976c-6a44ac3af2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7989907f-7ea3-4908-bee0-4cd2fb91afca",
        "cursor": {
          "ref": "c9c3e671-4ae5-4657-825e-1b0b1ae4c8b3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3e05f268-0a0f-4f4d-83df-016af749735e"
        },
        "item": {
          "id": "7989907f-7ea3-4908-bee0-4cd2fb91afca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b6fc8ff1-722d-43e6-9153-523f1abae10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341e6f8a-491f-4a01-996f-2d7e40bfb308",
        "cursor": {
          "ref": "353681d3-71c7-4bdf-8dd2-bfe9283a11ee",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "74885c21-1f4a-4057-abdb-4b114d3778f9"
        },
        "item": {
          "id": "341e6f8a-491f-4a01-996f-2d7e40bfb308",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b5959acf-642f-4d17-bbb1-452adb908022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb090da6-f38e-48c5-8d85-bbd63d09671f",
        "cursor": {
          "ref": "312c6b64-6693-4ce8-aa23-36cd920c17f7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4fb348a9-798c-4ab9-b4b4-0f0ea7665125"
        },
        "item": {
          "id": "eb090da6-f38e-48c5-8d85-bbd63d09671f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f1913f85-2ad4-44c3-9dee-2b20bbc6ac4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a72689-1b4b-4cf0-8e6a-e71a6b38647a",
        "cursor": {
          "ref": "6edb30a2-8673-4933-b66f-9d684e073f07",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "766edd44-d872-4adf-8df5-1a7ad590f9ac"
        },
        "item": {
          "id": "c4a72689-1b4b-4cf0-8e6a-e71a6b38647a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "10778f61-9b47-4bdf-b4dd-846a8449c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "04f15c80-2552-40af-a7bf-60b71342f003",
        "cursor": {
          "ref": "073286f7-de3c-4d75-b78b-3675b5caa9a5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "605cb2a1-52c3-4abb-a62c-9c92f9d326f6"
        },
        "item": {
          "id": "04f15c80-2552-40af-a7bf-60b71342f003",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d4ae4d7c-b32e-4f25-bfea-f8855ab3ede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "87018a54-9476-4660-ada3-507ec3b5ab23",
        "cursor": {
          "ref": "6e2288b1-68b6-4e5f-a34b-d1ec05b846cf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8bb62058-0171-47de-a9ad-43dcda1ba4ed"
        },
        "item": {
          "id": "87018a54-9476-4660-ada3-507ec3b5ab23",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dc4c259d-537f-472a-8b7d-2673858e89fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "101da6b5-2322-41e3-a69d-160fb31a1f9b",
        "cursor": {
          "ref": "03262007-838e-4736-b216-19bb9dbc10a4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36338724-20ab-4a02-959e-3541b46c9756"
        },
        "item": {
          "id": "101da6b5-2322-41e3-a69d-160fb31a1f9b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e92f21fd-fc23-46b2-abe6-9fbd10f75a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6a35f208-9066-4d48-91ab-46d1961ad548",
        "cursor": {
          "ref": "7f31804e-7bf5-4ab0-a76f-a2583cdcbc5d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f7e1176-9e9f-4be2-98cf-d4026c9e5d2b"
        },
        "item": {
          "id": "6a35f208-9066-4d48-91ab-46d1961ad548",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a8a87dfd-b852-410c-8c43-ba779787af6a",
          "status": "Created",
          "code": 201,
          "responseTime": 9136,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c66368-7f9e-40af-9b96-8f7e1d361bb2",
        "cursor": {
          "ref": "bd5cd380-f88e-42bf-8aed-b7d831619534",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e593e207-4ca7-4378-99ca-e80a65c25f3c"
        },
        "item": {
          "id": "22c66368-7f9e-40af-9b96-8f7e1d361bb2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "32f863f9-8a21-4504-80f9-9330bc41d70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dc0b2a02-7038-4c77-9dbb-67bbf440bda4",
        "cursor": {
          "ref": "4c3ea926-7ff8-4055-aec6-a9a0682940a5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4d75c41d-7307-47d9-a143-18b3bb7f952c"
        },
        "item": {
          "id": "dc0b2a02-7038-4c77-9dbb-67bbf440bda4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "570714cf-7855-4f75-8a44-e9066aa41d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1e16e908-46e7-42ce-88a9-6764d397b15c",
        "cursor": {
          "ref": "021d512a-ffe3-45dc-8f50-02da9b182e93",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c4f60aed-d758-4fa4-8b74-2c4205ecbcf3"
        },
        "item": {
          "id": "1e16e908-46e7-42ce-88a9-6764d397b15c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f1ba6ac-2889-4b4b-b218-dfc120d07108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbbf76c-3453-4940-94c5-98c7c829eede",
        "cursor": {
          "ref": "e77189d8-ab99-4631-a415-20178b3c006c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "963b22f9-b301-486e-a668-1fdadf899a18"
        },
        "item": {
          "id": "5dbbf76c-3453-4940-94c5-98c7c829eede",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76aea4d0-c45c-451a-8b59-1c4b04d1685c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8757c370-0515-4a2f-b109-3bafa7de4023",
        "cursor": {
          "ref": "1cc84e42-0137-40dd-addc-fd12ba6626b8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6df21046-469d-4dd9-a90e-d9842d7e7461"
        },
        "item": {
          "id": "8757c370-0515-4a2f-b109-3bafa7de4023",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5858ad8c-94c3-4914-9ba1-c7dbb2050220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afec234c-7190-4bfb-b43e-36a59450c259",
        "cursor": {
          "ref": "8a0b5d02-09dd-4625-b21b-415c7af0b55f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3794c443-e6bf-4280-b4da-42280ff889ff"
        },
        "item": {
          "id": "afec234c-7190-4bfb-b43e-36a59450c259",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ddca024-3587-40c6-9fe4-82e233be590c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578109e-d7a8-4ecd-ae81-bbcb58c6734d",
        "cursor": {
          "ref": "53218247-d447-4b4b-ae35-a0f630604ebb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e6e26c55-13f0-4b8c-9925-cc8fb60d8808"
        },
        "item": {
          "id": "2578109e-d7a8-4ecd-ae81-bbcb58c6734d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3d13d1cd-2c4f-4d72-a58f-69e86b982190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f4413-2f20-4a21-a9f2-5e5381680114",
        "cursor": {
          "ref": "21a5f58c-0dbb-4bbc-a155-56651e8d6726",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d74cd508-7a32-498c-a0dc-3479313669b9"
        },
        "item": {
          "id": "1e8f4413-2f20-4a21-a9f2-5e5381680114",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "935eeedd-4d14-4823-b21a-7b71137e5341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788fc39d-57c5-444d-bbb8-269504ef6127",
        "cursor": {
          "ref": "48166fd2-f475-4581-b242-9353ec47b277",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1206d66-a568-43de-ae5a-ff8fe56a8b68"
        },
        "item": {
          "id": "788fc39d-57c5-444d-bbb8-269504ef6127",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44ff8a5e-0fd5-4354-b52f-856a9e6a662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f156c933-1a01-4060-b4c8-dfd7f89ae05c",
        "cursor": {
          "ref": "a0f42c3d-f0ed-47f9-a561-53ec8dece7b7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e5c30745-5483-4b80-8e98-2212b7d46d48"
        },
        "item": {
          "id": "f156c933-1a01-4060-b4c8-dfd7f89ae05c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de172085-54b1-4289-bf72-c526ca692960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0889aa9-a330-441f-83ad-1e519fb4f2a0",
        "cursor": {
          "ref": "fdb4ecdb-4511-4866-8d1c-a4787e57091c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf65b7a8-8faa-4102-8487-9d2e31e95977"
        },
        "item": {
          "id": "e0889aa9-a330-441f-83ad-1e519fb4f2a0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f2b468b6-7278-411d-a2a7-f91fdee8d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ca4d38-52ee-43a5-8117-8851df223e12",
        "cursor": {
          "ref": "dc7dd7f6-2714-4065-ad7f-929ad5115f73",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "438ee240-810e-477a-9f22-91a5fcc09c34"
        },
        "item": {
          "id": "61ca4d38-52ee-43a5-8117-8851df223e12",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "42fea06f-8fe8-4946-ad90-551a8368afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee140a2-fcd3-4e3d-aefb-0d15ad9f1957",
        "cursor": {
          "ref": "9cda1730-b9bb-477b-a9a8-da81270f2114",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "46ea7dc5-d8ed-4b58-9859-1c6bf3efdedb"
        },
        "item": {
          "id": "bee140a2-fcd3-4e3d-aefb-0d15ad9f1957",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7724b45c-9769-484d-8860-54974c918cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1550a292-e793-4116-b748-75486373a436",
        "cursor": {
          "ref": "b8efc5a0-7370-463b-893b-e6932fbce2a9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e3114d16-2be1-440a-a38b-c0f9a6de0790"
        },
        "item": {
          "id": "1550a292-e793-4116-b748-75486373a436",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "46d613a3-6b73-4360-a340-66acb55f5b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea17c7bc-3762-4aab-a73c-3a72c5db19b4",
        "cursor": {
          "ref": "87ddd093-44f3-4cc5-aab4-80d435b879e8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f2457a15-9750-4db4-8995-e3d526274f97"
        },
        "item": {
          "id": "ea17c7bc-3762-4aab-a73c-3a72c5db19b4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75c3118f-36d5-494e-bb4a-1fbcedcf246e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e63fd33-5608-497b-97b7-2ff08c61fde6",
        "cursor": {
          "ref": "aa5769e7-7bd6-4ddf-973c-7e396067d2b4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6cc83d15-67a3-40ee-a230-48543bc51c96"
        },
        "item": {
          "id": "7e63fd33-5608-497b-97b7-2ff08c61fde6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf14f8c5-83e5-4968-9a95-310a0a476d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0738ba8-acbc-49bd-b47f-4ab7d7df73d0",
        "cursor": {
          "ref": "ca1196ce-c9ff-4273-b6e5-2d47515aa5ca",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "02ba0913-7f8d-4a22-a342-7dd3cf54bf98"
        },
        "item": {
          "id": "a0738ba8-acbc-49bd-b47f-4ab7d7df73d0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b92d9856-8a84-4961-9fb4-3a3211dd697d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e078114-86d3-4ad4-8c22-dc32f0513bbe",
        "cursor": {
          "ref": "66849998-3821-4f58-b3ef-969122cdc41d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7015ee42-09ed-4e61-8000-a19ae9222fb5"
        },
        "item": {
          "id": "1e078114-86d3-4ad4-8c22-dc32f0513bbe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "84345d23-db52-4346-9895-d28a1f6010bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ceb4f9-da3e-46fa-ab95-1e62ecc972f9",
        "cursor": {
          "ref": "038e1328-694a-474c-821e-9bdebd3a8205",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b3add9c5-3b24-4969-9385-b83e6a906a01"
        },
        "item": {
          "id": "c1ceb4f9-da3e-46fa-ab95-1e62ecc972f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6c4f151d-8b78-4888-959b-9c6fb4c7fc7e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ae16c838-c63b-4d2f-8ce8-ffb49e8f1084",
        "cursor": {
          "ref": "39ee60b3-bc3c-427a-87b5-0ccdf4c96d15",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e7721d07-4cdd-4572-8ca9-362e12c217a5"
        },
        "item": {
          "id": "ae16c838-c63b-4d2f-8ce8-ffb49e8f1084",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "268fda30-ddd4-40c4-88dc-a00ef52f7a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322d4269-4994-4309-81f4-1c8b39099296",
        "cursor": {
          "ref": "bb3880ff-ec31-4fbb-b284-bccd537f65d5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4b3731ca-0422-45e0-a25e-893b258ac88c"
        },
        "item": {
          "id": "322d4269-4994-4309-81f4-1c8b39099296",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "47c86ec3-7c27-47f6-aeb3-b592ca9fd56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaac879-c0e2-4e07-b39f-4f0a39a76e2e",
        "cursor": {
          "ref": "73ca0e27-adf5-4fae-ad96-56db79de2025",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3affff95-1d26-4e74-b28e-60817cce1f95"
        },
        "item": {
          "id": "abaac879-c0e2-4e07-b39f-4f0a39a76e2e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a8a5788e-36f0-4673-8ca8-c7643a678bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522d4f46-316a-4acf-89f9-dd5c19878b0c",
        "cursor": {
          "ref": "4c1fdf9c-1678-4e6d-9d31-06d394c4db69",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2099b1f4-ddc5-4cd7-a1a1-5ca3873d3104"
        },
        "item": {
          "id": "522d4f46-316a-4acf-89f9-dd5c19878b0c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9501eb83-dc59-4dd1-8005-3d3aac4335f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f80908-6878-40ae-827c-f849efd4710f",
        "cursor": {
          "ref": "c15a922f-d21b-44d7-bdce-081df4f01274",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "71cedec7-3fc4-4c0b-9dbb-51c83a8a4ed9"
        },
        "item": {
          "id": "53f80908-6878-40ae-827c-f849efd4710f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1b5a82da-ab0a-499a-894a-febe5de3cf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f355ca-74ea-4748-8131-6fb7b06711d4",
        "cursor": {
          "ref": "3e942aca-00bf-4b31-94a1-729a700f830c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29e42bdc-579f-4e86-bd1b-e6e274d5e2b5"
        },
        "item": {
          "id": "85f355ca-74ea-4748-8131-6fb7b06711d4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34d969b3-f5be-4f6f-8036-26cc3de00a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f5077d-e7eb-4945-b1e6-0690cb0ea826",
        "cursor": {
          "ref": "9b88b834-cb9c-4b46-b420-82a5ea127082",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "399e593b-b6e2-47db-b544-d75e41bb545a"
        },
        "item": {
          "id": "a9f5077d-e7eb-4945-b1e6-0690cb0ea826",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6b071936-9766-4fd6-86bf-5d0ac6c55101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd31415-1b20-4740-a001-aef408cb431f",
        "cursor": {
          "ref": "5ac38e7e-653e-4f00-bc15-44b1950a698c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a78c5f6-f5f9-41e7-b504-9962ffd24602"
        },
        "item": {
          "id": "acd31415-1b20-4740-a001-aef408cb431f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a6048a01-774d-4d45-8966-8b6886f4aca5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1e044617-7f38-493c-b9ca-56228e6d2d65",
        "cursor": {
          "ref": "c0ea8bf0-dfa1-4caf-94f4-80c6f0e47497",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0c0d10c5-b101-44cb-834b-67f02d32b5d5"
        },
        "item": {
          "id": "1e044617-7f38-493c-b9ca-56228e6d2d65",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f2451b22-5d25-42c2-b658-8b55aeb26774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b27dfce-02e4-47cc-b895-14171e4e9a04",
        "cursor": {
          "ref": "05997c5f-6c39-4d74-ab48-ab7d2d8251f3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a69255a9-51b4-473d-aee2-4b0426dd19dc"
        },
        "item": {
          "id": "0b27dfce-02e4-47cc-b895-14171e4e9a04",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e8f4b35e-b87a-4fc5-a0fd-46d3e9d99f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8133af-6326-456f-a82a-4dac056bacf0",
        "cursor": {
          "ref": "3f340cf5-0090-4717-9a32-16f0f4c80a94",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ae9a0acf-06e8-43b8-a51d-7e90818d14ad"
        },
        "item": {
          "id": "3d8133af-6326-456f-a82a-4dac056bacf0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6d33a05-3008-474d-b339-32a2c04f574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c91d59-31b0-43c6-8a50-61e9d43cbad5",
        "cursor": {
          "ref": "b3d16125-f5b6-4c85-bcc8-8e2cd644dbd4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ef558fa-d64d-42ca-9dce-a325684f264c"
        },
        "item": {
          "id": "f9c91d59-31b0-43c6-8a50-61e9d43cbad5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "29cbbffa-7d45-4c29-95ee-34154c28e93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417d1bab-287f-4f68-bfe2-943501210a52",
        "cursor": {
          "ref": "4cca0468-71eb-4c8c-a330-9c7d20b6d94f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "28a8565b-e599-4e27-afec-870f4e70ee7d"
        },
        "item": {
          "id": "417d1bab-287f-4f68-bfe2-943501210a52",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "afc356d0-22cf-420f-8f76-5330af14fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b01e51-fbde-4d78-aeb5-ee7cff1a9557",
        "cursor": {
          "ref": "f96410f3-b710-4b3c-aeb7-e486f2da84ba",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6ce31ba-fbba-41d0-90d2-85e2263eb4f5"
        },
        "item": {
          "id": "f4b01e51-fbde-4d78-aeb5-ee7cff1a9557",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a9c3814a-cc2a-41fd-a405-432018f156ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64372f1c-b251-4536-93a5-1fcf039edcf5",
        "cursor": {
          "ref": "8c3cf497-cfba-43e5-b94f-edc4da987eb5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "18b4d9a3-a338-4845-be03-0c9d1fcbe632"
        },
        "item": {
          "id": "64372f1c-b251-4536-93a5-1fcf039edcf5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "87fec83d-cbd0-4c77-a5b2-8ae11d5691e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bb7a5b19-017a-4dff-b864-1a5194b87121",
        "cursor": {
          "ref": "84d2abec-1eff-4fe0-b1a0-5901ab2adc39",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "567cf8c0-65ba-42ea-83da-de0bea7e963a"
        },
        "item": {
          "id": "bb7a5b19-017a-4dff-b864-1a5194b87121",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf8f9b3d-d939-4bbb-81a0-ee2447810bd5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "536f9feb-c8d6-47a7-92b8-03055f9d486b",
        "cursor": {
          "ref": "7ea5ca5a-3691-479a-b27c-acdd11b9012d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2c2577eb-faed-44ea-8f65-257427501268"
        },
        "item": {
          "id": "536f9feb-c8d6-47a7-92b8-03055f9d486b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5575c9d2-641f-4743-94f1-9b4d08cf570c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e6544c0f-f01a-40a0-8c3f-6b1c05ac3af4",
        "cursor": {
          "ref": "d4a48d49-1a82-4ff0-91cb-884392c3c076",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7077087f-f763-4c7c-9ec9-aa34b4094580"
        },
        "item": {
          "id": "e6544c0f-f01a-40a0-8c3f-6b1c05ac3af4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6649de4d-96ac-441d-8f15-937a78f1a82a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "d9a94a06-8801-40cc-8b83-51252a5b7964",
        "cursor": {
          "ref": "c4948fe1-fe4e-466e-80ec-364c470ddc3b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9b2447f2-e5e5-40d2-841d-290d33c677ad"
        },
        "item": {
          "id": "d9a94a06-8801-40cc-8b83-51252a5b7964",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6967fa86-cead-40b6-a272-f4a7adbd6973",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6995b8b6-4295-4119-9d51-17c0c185b24b",
        "cursor": {
          "ref": "f96749e9-37ff-4f60-8d0e-27c4c980aede",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b427d786-ce0a-40c6-9f2e-7483893b7ce7"
        },
        "item": {
          "id": "6995b8b6-4295-4119-9d51-17c0c185b24b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "832572ff-d0a6-4ad2-ae4e-85af0222039c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8d6b70d0-fb56-474d-9211-0a27272295fc",
        "cursor": {
          "ref": "6d71427c-a77a-40cf-882f-d1272c127115",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e04da12b-6e30-4822-958e-11a8ea579125"
        },
        "item": {
          "id": "8d6b70d0-fb56-474d-9211-0a27272295fc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4c4ff2be-eb41-4813-9e5b-6c5ab7237234",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079d33c-c1b0-4b1c-b776-094729ebaa9a",
        "cursor": {
          "ref": "64dde90f-9e48-4bd4-aa2c-80dd6d4efc5b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee343882-25f2-43a6-855c-bdaa18e2b9d8"
        },
        "item": {
          "id": "b079d33c-c1b0-4b1c-b776-094729ebaa9a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "711d5302-615a-40b3-8db9-140634025b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a616cd28-1f17-4cf4-ac04-e5c4ee7e465a",
        "cursor": {
          "ref": "859c2703-85b9-416b-a24f-0359ce94d182",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e29819fe-f0cd-4990-b70a-a62cc8180526"
        },
        "item": {
          "id": "a616cd28-1f17-4cf4-ac04-e5c4ee7e465a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "20887288-bc6f-4f55-a4ae-95225f8f8061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecb1510-6226-4987-8575-6288fe212bf0",
        "cursor": {
          "ref": "7e45aeb7-13db-42f3-a55c-cb0b325811e5",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "34d40e58-6bde-4ff5-b99d-a144c4edc4d0"
        },
        "item": {
          "id": "3ecb1510-6226-4987-8575-6288fe212bf0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4ed7737c-8123-4575-b95b-92eb5e27e812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305623bc-20c8-4864-bd63-368c9815d450",
        "cursor": {
          "ref": "90e6e231-5e71-4613-983e-50f64195cd69",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a7247205-40de-422d-87db-14e1dc0a72db"
        },
        "item": {
          "id": "305623bc-20c8-4864-bd63-368c9815d450",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3c58f955-43ed-41c3-ad48-aea029554ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf558a91-e6f9-4e57-874d-7b68cbb3b3b3",
        "cursor": {
          "ref": "fe2ac128-035e-454a-9877-c5c70a3eabbc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "94321158-541a-415a-bd94-a4df755b1c11"
        },
        "item": {
          "id": "cf558a91-e6f9-4e57-874d-7b68cbb3b3b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13eb8c69-09e6-4c71-89d2-10203ccf99a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185ef4cc-5f44-42bb-abd9-36433e595462",
        "cursor": {
          "ref": "9ee95918-02d3-48bb-9c8d-e81a4f35a801",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7139bcc1-38a5-4d0d-9df4-aa537d1bb0f6"
        },
        "item": {
          "id": "185ef4cc-5f44-42bb-abd9-36433e595462",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0f7430c9-ae1a-46b9-be9b-5a3e5e882d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bfab4d-8616-4b4a-a94b-26195211ff25",
        "cursor": {
          "ref": "31081499-5c73-4cca-849d-28d889a1aea9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5516d07c-effc-4942-902b-03eec848a1c1"
        },
        "item": {
          "id": "a4bfab4d-8616-4b4a-a94b-26195211ff25",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70c9332f-d6d3-490d-9e6d-bff1d8aa2e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e0577c-3772-48d4-9f93-a554c34ccf9b",
        "cursor": {
          "ref": "49034800-28e0-4696-9edf-677ba03ce2bd",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5ed87ccf-564a-4a77-8f34-b005d1eed43b"
        },
        "item": {
          "id": "67e0577c-3772-48d4-9f93-a554c34ccf9b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ad368287-701b-4aca-b935-205ca1280794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c82dc2-31b3-4df3-9323-f48281890864",
        "cursor": {
          "ref": "4529826a-daaa-4ebc-9fb4-df192c4a73f2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2fdbdbd0-1937-45eb-8921-57f071116940"
        },
        "item": {
          "id": "b8c82dc2-31b3-4df3-9323-f48281890864",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "05777063-fe10-499c-8051-f8b917ac3ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260954da-1fc3-44b2-8e07-0f9b9dc45fe7",
        "cursor": {
          "ref": "9e856905-d5ec-4b34-a3a5-aeb107ce638f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a8d7cac9-be96-4bab-a65e-fa818e655a48"
        },
        "item": {
          "id": "260954da-1fc3-44b2-8e07-0f9b9dc45fe7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c940ea2b-aff4-4373-a7a2-619b796e6be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f787682-19f7-4a83-8be8-d5e1092c26cd",
        "cursor": {
          "ref": "117c0d7a-81ba-494c-97d3-d0e52ed33666",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "335c8613-d306-48f4-8f08-22b695293cce"
        },
        "item": {
          "id": "7f787682-19f7-4a83-8be8-d5e1092c26cd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a01d7993-c7e3-45da-8be2-9255c6e206dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3daefc7-828e-491a-b779-a673223b282b",
        "cursor": {
          "ref": "2886aecb-89d4-4af7-b3fe-ba9dd05d67bb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e3319a28-82eb-4eda-adc5-c81ad45db947"
        },
        "item": {
          "id": "c3daefc7-828e-491a-b779-a673223b282b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "19a648fe-f9fd-4dc1-9aab-e4130b850503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfb8f8c-bf9a-4f26-8b76-8cdaac834224",
        "cursor": {
          "ref": "4cabe98c-268f-4b27-8994-083c190b7706",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9cdb8c5-2d2d-43e5-8234-e5445bfe0ced"
        },
        "item": {
          "id": "0bfb8f8c-bf9a-4f26-8b76-8cdaac834224",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e4e0336-3a35-40a1-a770-45be4314ed38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476a589a-c537-4fae-bd81-05ee31b7b05f",
        "cursor": {
          "ref": "428f02cd-8f4c-41f2-ba62-c2277e3bd37d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a66ea19c-143d-47cd-8e71-58f3b05cfd41"
        },
        "item": {
          "id": "476a589a-c537-4fae-bd81-05ee31b7b05f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "06ba332b-935c-48b3-b642-1623fcb27441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca84d862-70fd-4e52-8004-ca9fd44c590b",
        "cursor": {
          "ref": "ca5c59ca-50c3-4871-92ce-15ceec7d3a2c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7df6511c-3602-42f9-81eb-915ba0590eba"
        },
        "item": {
          "id": "ca84d862-70fd-4e52-8004-ca9fd44c590b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "285268bd-1332-4c09-aa39-05617acd8b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90048c0b-d6a5-43cf-8216-fb8aa56b8c10",
        "cursor": {
          "ref": "b9e3439c-1007-4bab-8116-5e35060661f8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1ffde11d-5abe-4db7-b3af-5cf52fb02175"
        },
        "item": {
          "id": "90048c0b-d6a5-43cf-8216-fb8aa56b8c10",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a463cfd0-e8cf-42b3-a03e-85874cdda9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73d248-6317-4901-8769-7c5e8971270e",
        "cursor": {
          "ref": "2e0e94ee-789f-43da-9226-6a06f74271f4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c016232-26f0-4d9f-88d6-66a30463d30b"
        },
        "item": {
          "id": "ad73d248-6317-4901-8769-7c5e8971270e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6176fb5d-3347-4e31-825e-d4b557dc19cf",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "596fa15c-c098-4908-8e8a-ce0451129640",
        "cursor": {
          "ref": "a059ebe8-72e6-4ad9-8cee-74d03901b5e7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "07429ed3-dabb-45c4-b66b-74bc04ed0942"
        },
        "item": {
          "id": "596fa15c-c098-4908-8e8a-ce0451129640",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "71d53304-275e-4734-882f-a58d52073cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862737db-84ca-4932-915a-3ac6b544d76e",
        "cursor": {
          "ref": "e215d7b0-a272-46b6-ac8a-3ad2c8fdccf7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4cc73a99-a9bc-404e-ba2f-a093be414de6"
        },
        "item": {
          "id": "862737db-84ca-4932-915a-3ac6b544d76e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76448176-f245-49bc-a795-08a11388681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca7f74-4d01-47be-9ee0-6ae6b584ae30",
        "cursor": {
          "ref": "b71d03cb-d560-4e9b-9aa0-f10f7153d0be",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a21d3abc-f7a8-4311-a4c8-e2e85aaba9e8"
        },
        "item": {
          "id": "f3ca7f74-4d01-47be-9ee0-6ae6b584ae30",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fd3d330a-b201-45e0-91fc-8e14ed2725ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf82779-0838-44e4-becd-aa6764a8fe20",
        "cursor": {
          "ref": "d3b75867-74cb-4298-935b-cef2277905c2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "576aff1b-a3a0-4124-b1ed-38fb7ebcfc8b"
        },
        "item": {
          "id": "2cf82779-0838-44e4-becd-aa6764a8fe20",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5e76bf8-da14-4fb9-ae22-dcd043f4f58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ee814-3da7-4a5d-982f-5dec6a95b933",
        "cursor": {
          "ref": "fc8b520a-9c70-46c5-bc91-b0aee7ec9038",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "72b003ff-ed3e-4816-aa8f-565a19fd9c33"
        },
        "item": {
          "id": "fc9ee814-3da7-4a5d-982f-5dec6a95b933",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2c13709c-47be-41db-b936-1313bb383e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ec6aab-40c3-4d73-8bca-ecbe6fb97e36",
        "cursor": {
          "ref": "e10b1038-cce2-4155-acd3-db9de59f0d34",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e71eaf9c-94ab-44d7-9746-12c1e05544be"
        },
        "item": {
          "id": "75ec6aab-40c3-4d73-8bca-ecbe6fb97e36",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f7eb1ab8-054f-493b-b41b-a4f3caf9784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e4eba-69f7-4545-8f5b-fa5018709b00",
        "cursor": {
          "ref": "e1005347-3b70-475f-a7d9-868be6987dc8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c5514f1-85e1-46c5-aa48-c6a05ede96a8"
        },
        "item": {
          "id": "653e4eba-69f7-4545-8f5b-fa5018709b00",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "16594ef9-0ba6-4f5c-b455-65bba33e2282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c31f55-f1b9-42a3-96de-c209624f0a86",
        "cursor": {
          "ref": "ec720917-33c3-4054-8beb-17e5f84237dc",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "87cc2d9f-c0ca-4423-8c60-994036fec446"
        },
        "item": {
          "id": "10c31f55-f1b9-42a3-96de-c209624f0a86",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "868aa458-e75a-4fd2-b879-0cdef791b79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0307a9-0a48-45f5-a944-35ec8c9f8572",
        "cursor": {
          "ref": "f6f9ba80-7670-4e15-8693-eb3b5d93b034",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f6f95e89-e632-496e-82d3-b264a04c2f32"
        },
        "item": {
          "id": "ae0307a9-0a48-45f5-a944-35ec8c9f8572",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "731869c6-0be2-458e-930c-0501e716a150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f0d253-d4d5-436d-ab22-5ddd2f02d962",
        "cursor": {
          "ref": "71864a26-3889-4177-908e-3a0a9851ba13",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "10a2227f-594a-4a84-9cf6-43c349651469"
        },
        "item": {
          "id": "05f0d253-d4d5-436d-ab22-5ddd2f02d962",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fd0eb7b9-4c4b-4458-9df6-c128ea9a3f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080738b3-4307-498d-b62e-b7820a275fbc",
        "cursor": {
          "ref": "162bc639-6f16-46ad-8a77-8398a2777c4d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cb716fd8-449a-4b39-89da-cfe5aa881603"
        },
        "item": {
          "id": "080738b3-4307-498d-b62e-b7820a275fbc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "78e8d874-4d3e-40f8-98f6-90fd8dbd2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f96beb-a48d-4159-abe5-1c17728ba191",
        "cursor": {
          "ref": "ecfb6b61-bb66-4572-ba5b-e854bc49f8a6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8825a772-3925-4370-af0b-da96febc9143"
        },
        "item": {
          "id": "b9f96beb-a48d-4159-abe5-1c17728ba191",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c47944b9-cde2-44e1-8161-0a0db153eb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d294da-0297-4c37-a0d1-18672b15f5ee",
        "cursor": {
          "ref": "c6e32001-7cae-4bac-931b-e430650da6d0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fd281f6c-44ef-4778-b983-d595750a619d"
        },
        "item": {
          "id": "43d294da-0297-4c37-a0d1-18672b15f5ee",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4724a7bf-b591-4906-90b4-d4c659bf80c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5f41b-aa91-42b6-b7a2-58e4722826b7",
        "cursor": {
          "ref": "a1f81bf3-7b5b-4353-9e08-9e0dabeefb9c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d6727d6c-a04c-4c14-b513-6717ab09a2bc"
        },
        "item": {
          "id": "acf5f41b-aa91-42b6-b7a2-58e4722826b7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d4328ef9-b79d-43d3-a21d-83a5415b36a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048d297b-c3b4-4977-9060-c07c6c32b9f2",
        "cursor": {
          "ref": "c2b2144b-dcef-4761-aa11-d9177cfa1a63",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dbbec714-beae-471a-9e89-68b37f2dfc30"
        },
        "item": {
          "id": "048d297b-c3b4-4977-9060-c07c6c32b9f2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "986a9fbc-915c-4ee8-9b9d-bdd9da1d0715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502f80c-d6be-40a4-9ac4-09849833c97e",
        "cursor": {
          "ref": "d9f43671-2b24-4867-9544-b7800a920f35",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ba036b25-b99b-4fd3-bf4c-d3da7bae38f8"
        },
        "item": {
          "id": "9502f80c-d6be-40a4-9ac4-09849833c97e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12e7f401-becc-4e7e-bd37-30a59284880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bede0eda-9d82-4df1-bbe5-da6f14876192",
        "cursor": {
          "ref": "7789eb79-f156-4ae8-87d9-504de9a6abb9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4b84ce52-8080-4314-81e3-10df9a6e23ac"
        },
        "item": {
          "id": "bede0eda-9d82-4df1-bbe5-da6f14876192",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "32de0e29-2a14-4b21-8723-f2e660d010b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d75abc-a0cb-4bb8-9f22-7f9be0bb2632",
        "cursor": {
          "ref": "b4d58b57-b4d5-4c6e-8286-caa7bed9db1b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "82a98773-f82f-4075-b38b-4c4c2e5233c9"
        },
        "item": {
          "id": "53d75abc-a0cb-4bb8-9f22-7f9be0bb2632",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6aae8f3-c19e-4ad1-8338-4fbc1702f959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce3cc6b-9ee6-4860-82b3-396cb946ba64",
        "cursor": {
          "ref": "725d3b14-124b-4965-8feb-b32e71510212",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "855fc898-2348-4fda-ac21-d045b9f47b50"
        },
        "item": {
          "id": "1ce3cc6b-9ee6-4860-82b3-396cb946ba64",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c8a7f042-cb8a-43f0-833f-c9f4a5e0f599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cf168b-d597-4446-a0bd-74dffb086a94",
        "cursor": {
          "ref": "ad15ad92-4641-4d48-bc1c-9b1e30e1497b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b60c41dc-28fa-480c-82d8-293768b2f223"
        },
        "item": {
          "id": "87cf168b-d597-4446-a0bd-74dffb086a94",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eb23b22f-8abe-4456-b26d-69d4ff5a849c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4289117-e8b5-4aff-98a6-9ed53d43409d",
        "cursor": {
          "ref": "221d2a08-90c5-4043-9382-09ea85b541ca",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "612119f8-1903-49d6-8710-7740af273849"
        },
        "item": {
          "id": "c4289117-e8b5-4aff-98a6-9ed53d43409d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6c1bcff5-8741-45af-b82d-4be9fb4b05e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac5219-8dc6-45be-b55d-1271606f3f4d",
        "cursor": {
          "ref": "078869a7-56b4-4e2b-ae4f-8c902445aee7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "17b5f834-7930-4d90-b09c-d49f87a14fb6"
        },
        "item": {
          "id": "9eac5219-8dc6-45be-b55d-1271606f3f4d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6103de84-5962-4328-884e-23b4ca74d3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894b75cd-b70f-48ab-aff0-95a62e98b44d",
        "cursor": {
          "ref": "386e1ef5-d612-416f-8560-a6947ac75ae7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "193088c7-7913-4a2e-b205-ae34293bb205"
        },
        "item": {
          "id": "894b75cd-b70f-48ab-aff0-95a62e98b44d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e6ebd482-8c49-45e1-af8e-3f304be08c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e240b0-9eac-4232-aba7-6116f2f895da",
        "cursor": {
          "ref": "bab9cbc5-0715-4b03-b6df-a729ba847a4e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "baf51564-a893-471f-aa82-781827d701a2"
        },
        "item": {
          "id": "e5e240b0-9eac-4232-aba7-6116f2f895da",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd74f1c8-7854-4af1-a597-67f14f0b4cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621b9fd0-95b2-47d3-8e5d-cdfb685e9f87",
        "cursor": {
          "ref": "615f4184-c10c-4831-afd2-2423b4ae5f98",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5c610d06-ff8d-47f6-90e4-fdb9db1fd1a9"
        },
        "item": {
          "id": "621b9fd0-95b2-47d3-8e5d-cdfb685e9f87",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87f3b7d1-0640-4a18-99c4-3062004a0702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4388b58d-cf03-4895-a48d-58ae944d5ad0",
        "cursor": {
          "ref": "5080426e-26fc-4930-8bc2-f502a9536266",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "545608d5-50c0-4742-b693-f51852668ded"
        },
        "item": {
          "id": "4388b58d-cf03-4895-a48d-58ae944d5ad0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8970327d-736d-4b9c-afae-b303fc65242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7985ad5-4655-4a19-bcf0-dce54bf9253f",
        "cursor": {
          "ref": "1feedbcd-cf4e-47c0-af79-43ae5c5e0b60",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9f50ce80-8a31-4d51-a1b5-c1697abc6c6b"
        },
        "item": {
          "id": "d7985ad5-4655-4a19-bcf0-dce54bf9253f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d68b5423-630b-4477-8758-7be28c70b921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c08a4ab-b984-4d0d-b09f-46adb45ea56d",
        "cursor": {
          "ref": "89904be2-6737-4c9b-a44c-e78abb20d61f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "99197da0-2e54-4d2e-b7e0-1046940f2eae"
        },
        "item": {
          "id": "7c08a4ab-b984-4d0d-b09f-46adb45ea56d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "62596f75-9821-4eed-b98a-5be1e92605aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afe2f8c-05d8-4f41-9142-b9b1179118f0",
        "cursor": {
          "ref": "bdfd91ac-192a-495f-aa7c-e9a58072a702",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bea458b3-0ed6-4a7f-af4c-0ca17a718134"
        },
        "item": {
          "id": "8afe2f8c-05d8-4f41-9142-b9b1179118f0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d5a07346-72d2-4a4f-93b8-93743079207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71614448-a9e6-481c-b2cc-2e1059168ae3",
        "cursor": {
          "ref": "61f80db2-84ae-4c37-a0da-6e82f822644e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3bafb2c2-cfdd-4e70-a331-980aa23a0b32"
        },
        "item": {
          "id": "71614448-a9e6-481c-b2cc-2e1059168ae3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "182109f2-69fc-4b55-b7d1-22662a952dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ed2583-069f-4221-adaf-598ad087f723",
        "cursor": {
          "ref": "ae887010-f0b4-4565-b435-5734b3ceb869",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "49b532f6-45ea-4d0f-9edb-c5710ee2f3ff"
        },
        "item": {
          "id": "78ed2583-069f-4221-adaf-598ad087f723",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a53caa93-afe8-403f-ac80-d925b612cd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a817b4e-5d5e-4439-a280-6e1c97b65c59",
        "cursor": {
          "ref": "7c07b186-af0c-46fa-bcbb-48e46064ae67",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "28d46d78-6f8a-4c82-ac81-ed342925aade"
        },
        "item": {
          "id": "4a817b4e-5d5e-4439-a280-6e1c97b65c59",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "063ad3c4-49e6-4d4d-be6a-c8284eee59ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69840ffa-cb7f-46ce-b6c7-533b8761222b",
        "cursor": {
          "ref": "6658954e-cb68-419f-812c-8457ab168127",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a086473d-2ca8-4d9f-88eb-c81a6d7391a8"
        },
        "item": {
          "id": "69840ffa-cb7f-46ce-b6c7-533b8761222b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "001a78fb-17fa-4ff1-ab99-8b5f6b5ed743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d7a88-8f1e-4114-8d7e-cc3c5366c929",
        "cursor": {
          "ref": "d940fc40-5525-416f-bd0e-b93515b415d9",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "28565ccc-4515-4134-a22c-f8a0f6ca4ea3"
        },
        "item": {
          "id": "f67d7a88-8f1e-4114-8d7e-cc3c5366c929",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7c28f5cb-7804-4c13-9966-93fdc6424576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec620b-0efd-4981-a6ae-0f0db6cb1e3c",
        "cursor": {
          "ref": "f0bb8f95-3755-4703-af97-af24b9cdaa1f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf9e930a-23de-4a67-9a67-9991208d63b6"
        },
        "item": {
          "id": "17ec620b-0efd-4981-a6ae-0f0db6cb1e3c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dab73b50-0833-4537-bb6f-5a6b56a2bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543cb17c-07ed-4099-b372-c04da17c89aa",
        "cursor": {
          "ref": "beac638b-9605-4b6d-bc95-958d0eb3a6d1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f3868951-2366-4eef-9389-b269deafdf27"
        },
        "item": {
          "id": "543cb17c-07ed-4099-b372-c04da17c89aa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c874a532-3a21-4580-88cd-673cfe103707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de466b64-f213-4a88-89ed-0a1526fd641b",
        "cursor": {
          "ref": "8acd88cb-7087-47d1-924e-d8e25bab9a8a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b3cad559-f53d-4096-b284-d70794900279"
        },
        "item": {
          "id": "de466b64-f213-4a88-89ed-0a1526fd641b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "91178c4e-84d4-4880-a378-28c397ee81c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d956af-f02c-49bc-93a0-0a7db634b127",
        "cursor": {
          "ref": "10c650cf-ec3a-4714-b4e7-958a4f2229f6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "32e2a4d5-7e3e-48a4-9aad-870b802d3cca"
        },
        "item": {
          "id": "20d956af-f02c-49bc-93a0-0a7db634b127",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30380e05-29c8-42bf-8f34-1a0e810d8700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9dcdba-fd14-4810-ab6e-8e0fb7d141a1",
        "cursor": {
          "ref": "d4fbbef6-0129-445b-97c4-2e09419fd08b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5f6604e7-23c3-4b76-b3e2-f002729b18dd"
        },
        "item": {
          "id": "bb9dcdba-fd14-4810-ab6e-8e0fb7d141a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "20bda73c-4e79-48a8-8680-56f87ca6ae25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bd1148-f3e7-448f-9c72-63c839a04f47",
        "cursor": {
          "ref": "30029026-0670-4442-9c8b-ab68f62dffd9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "723af4bf-b033-4d5a-92ce-ec10502a593f"
        },
        "item": {
          "id": "a2bd1148-f3e7-448f-9c72-63c839a04f47",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1761eec8-aff7-4f14-bfbb-cf28eba19250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc87baad-9249-418f-87ad-2fca0d577e0a",
        "cursor": {
          "ref": "8d4d6296-fda6-4c56-93d8-9a051811cdcf",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3abf81dd-0e00-4dbf-852b-505986d522eb"
        },
        "item": {
          "id": "cc87baad-9249-418f-87ad-2fca0d577e0a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d6ae495b-b249-4951-8fe5-8f46701e44e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ac6343-3566-48f2-9d44-17553ab44a1e",
        "cursor": {
          "ref": "1738684c-f53f-48ac-9296-8d21d7f13ce9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4def33cc-3aaa-470b-96d6-3c38e9ac719d"
        },
        "item": {
          "id": "89ac6343-3566-48f2-9d44-17553ab44a1e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b431a985-65ad-4ade-940f-fc18ccd5f4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2eb286a-0903-498d-9014-d27a284f8860",
        "cursor": {
          "ref": "ba4ea973-8a4d-4499-8635-bb140ee9df17",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04d5a823-126d-47ea-a8c2-af8f4dcc922b"
        },
        "item": {
          "id": "e2eb286a-0903-498d-9014-d27a284f8860",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8d2ea6a4-e54b-4867-b4f8-3ef5f8324698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606cbfea-d0e6-4251-91f9-f72777942b67",
        "cursor": {
          "ref": "d8cea9f8-6e0b-49b0-9b9b-af20e62793a5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eef257e3-5613-403f-9b10-6208cb2884a1"
        },
        "item": {
          "id": "606cbfea-d0e6-4251-91f9-f72777942b67",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a8173d67-8cff-4987-bfee-bca9297e0247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba2e283-1d6d-4692-83da-3bc3b479cd45",
        "cursor": {
          "ref": "dce6f19c-6f6b-47b5-8548-18367dd816b0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4961d962-887e-4cdc-9fca-3b7a7faf8906"
        },
        "item": {
          "id": "0ba2e283-1d6d-4692-83da-3bc3b479cd45",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d4b6249e-893f-4bc9-b489-b8c27aa51c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e59278-60da-4d33-9a98-4c874a6bade8",
        "cursor": {
          "ref": "c7c267a3-e29b-4843-b034-852259c9bb40",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0a67160a-dc06-4be4-ba21-675169f801cc"
        },
        "item": {
          "id": "92e59278-60da-4d33-9a98-4c874a6bade8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "760b48ba-1213-491e-b96f-5538a66addab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a64bbc-ddcc-40b6-8be3-1e5540e7242b",
        "cursor": {
          "ref": "5a11779c-f3a2-4ff9-9906-ec6f28ceed60",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e545d5c7-fb8a-43f4-8570-cf5265df683a"
        },
        "item": {
          "id": "a1a64bbc-ddcc-40b6-8be3-1e5540e7242b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "adf0d4f1-8e10-4230-b1b4-85593bf84396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c38e18-58d2-4c5e-9c5f-5f2f4846bd3e",
        "cursor": {
          "ref": "f6fcf6c3-03cf-425c-9ec0-3d5170f012c0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7a4dfad5-9af2-43b2-b82c-4a49e786b060"
        },
        "item": {
          "id": "49c38e18-58d2-4c5e-9c5f-5f2f4846bd3e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3079b9e0-a845-45fc-bef6-fa8f586dd778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a442477-0d23-43de-a9f7-effdf5612fbe",
        "cursor": {
          "ref": "1568e133-dbfe-4f89-8a09-2f3992388eab",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b3357f62-fc7e-4907-ae0a-6b164d0da8cb"
        },
        "item": {
          "id": "4a442477-0d23-43de-a9f7-effdf5612fbe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "46af1c37-0b14-483d-aa74-4b2143dec51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb25118-9685-4838-a356-6c72199f3754",
        "cursor": {
          "ref": "3ad73e81-2b44-4951-aa5a-1c1e2b1b8bf5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "17f6d72c-7e72-4583-9022-f2d6ca6037dd"
        },
        "item": {
          "id": "6eb25118-9685-4838-a356-6c72199f3754",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7ea22b4c-94c2-443f-93a2-9401c37564e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272969b8-9da7-44e7-93fb-fab8a31bf7bf",
        "cursor": {
          "ref": "51beb56f-e38b-4571-b24f-7e0496d03e73",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6db7f8ac-4452-48eb-a277-1f20e6603cd2"
        },
        "item": {
          "id": "272969b8-9da7-44e7-93fb-fab8a31bf7bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94422acc-7e55-4f3d-a634-3283cf763fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1214afba-3b60-4a75-87e1-9a26e7989818",
        "cursor": {
          "ref": "a50e6bb4-4864-47e6-b994-473b1eb8cd85",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ecafed6-04ee-4ce0-b1dc-8ec59e55a0b1"
        },
        "item": {
          "id": "1214afba-3b60-4a75-87e1-9a26e7989818",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "78ce6f0c-5a2a-4a73-8666-6ccb78ccc8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26aac0c-e164-4f38-944a-0fe947745dec",
        "cursor": {
          "ref": "b1f05911-9739-417f-95bf-9fb72f8867c1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ef81db9-f4b8-453a-9586-f01531dc4146"
        },
        "item": {
          "id": "f26aac0c-e164-4f38-944a-0fe947745dec",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9f9b3eb-52d6-4efc-841e-1f90c40518c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1500af2b-f04e-4ac5-9cdc-924ede8c0b72",
        "cursor": {
          "ref": "24fbd343-a8fd-4bd2-bd3a-c08062e2ea2d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "30bdcfe1-431a-4985-ac2b-1ed1acafc814"
        },
        "item": {
          "id": "1500af2b-f04e-4ac5-9cdc-924ede8c0b72",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "07674584-dc53-415b-b16a-58fa81440619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f2ca18-7fa2-48a7-8407-1b4a84ab2f11",
        "cursor": {
          "ref": "0470db42-790a-4edf-956e-fe94094e59a5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fe064220-591a-418a-bc2c-9103444d4149"
        },
        "item": {
          "id": "59f2ca18-7fa2-48a7-8407-1b4a84ab2f11",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "35b17bd2-4a5a-4d63-8efa-57a969407cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead40fa1-000f-4ef0-a550-c37abdd12f8e",
        "cursor": {
          "ref": "322173cb-f8fd-42b5-a07b-ff454c855e03",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a3bd6c3-f5fb-4f43-8fb1-0607a34c0a6c"
        },
        "item": {
          "id": "ead40fa1-000f-4ef0-a550-c37abdd12f8e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77ba00c2-9aa7-4ea6-a8e7-8e3f2d3d4aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdb9536-7d09-4463-a0e1-4aca17e004a2",
        "cursor": {
          "ref": "c8f63471-aa42-4bdc-bb21-def2527e746f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "810c990c-a4ca-4a80-9da7-2c9935d78a4a"
        },
        "item": {
          "id": "1fdb9536-7d09-4463-a0e1-4aca17e004a2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "afc080c3-785c-47e3-bfd5-6021c8f36946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af60393-04ee-4d8b-abe7-bc3d5c99c2c2",
        "cursor": {
          "ref": "739e7a8e-57b9-4b5f-927f-c8d7a0a07635",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e774005-445f-4757-9cb9-cf2a418bc855"
        },
        "item": {
          "id": "3af60393-04ee-4d8b-abe7-bc3d5c99c2c2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fac8be20-01a9-4deb-a5d5-73d05bcd3f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9d8f0-92cd-4a7a-ac86-a7ce8536ed86",
        "cursor": {
          "ref": "a2ea0db9-8508-48b2-9684-1657976fdf06",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2ce301e-fd69-4c13-8069-802c82a3aad6"
        },
        "item": {
          "id": "75c9d8f0-92cd-4a7a-ac86-a7ce8536ed86",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d1016f0b-f2b0-46b7-8b99-fe5932636cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054d2e9b-2b06-4e11-a73a-fb65a9244817",
        "cursor": {
          "ref": "b4303a70-6e1c-47db-852c-c3b2853d0f3b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "53430168-60ee-4090-8740-243fbacd5630"
        },
        "item": {
          "id": "054d2e9b-2b06-4e11-a73a-fb65a9244817",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a8c56bd1-5aa1-4c0f-ae92-9712af483e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ae6a02-34b1-42a2-bd7e-8544ab203ae8",
        "cursor": {
          "ref": "48e9096e-1ca3-4f45-80d7-41e35a7d2c9c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a9490d42-5fe5-4847-af18-ce89773b130f"
        },
        "item": {
          "id": "d6ae6a02-34b1-42a2-bd7e-8544ab203ae8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0ce884f5-171d-4577-917c-617c7fdc04a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbdd55e-18a8-46f2-98fa-2555d4f1e3f7",
        "cursor": {
          "ref": "762b0776-2a5b-4ded-8953-d269cb804abb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cfd40f63-cae4-42d1-b114-f791808fb8ff"
        },
        "item": {
          "id": "5bbdd55e-18a8-46f2-98fa-2555d4f1e3f7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "af1e05c1-536b-4237-b948-59451eaa8935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644bd703-ced1-4854-8863-2626725b3649",
        "cursor": {
          "ref": "7e5fbd42-4d16-4f54-8945-26d2ac3ae66f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "069b242b-de33-493f-97d3-2ac772d0c5db"
        },
        "item": {
          "id": "644bd703-ced1-4854-8863-2626725b3649",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27925b64-42bf-4526-8c82-939e8c3e2b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f01868-4f01-4483-9b79-92338840aa8e",
        "cursor": {
          "ref": "b3ae7ef1-80f7-45f4-8f0b-03d64c99d824",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "236221c7-94ea-4d84-8c95-c2e29b944a95"
        },
        "item": {
          "id": "80f01868-4f01-4483-9b79-92338840aa8e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0a8572ee-69d9-414f-ab32-be21c189333d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e535c4-074e-4c01-8814-c3cfbeab0ae3",
        "cursor": {
          "ref": "928f74d0-de3a-4d60-a141-d99ca506db14",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4529256d-688f-4440-828a-a38e087eddc9"
        },
        "item": {
          "id": "a4e535c4-074e-4c01-8814-c3cfbeab0ae3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f91e4b69-1cab-43ce-8d9a-1786de8d13ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f17224c-dc93-4235-bd73-f8add0147edc",
        "cursor": {
          "ref": "d8ef7fe7-49ae-4ebc-9efd-d9542d1f2476",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "66dfe42f-964a-4fab-aa81-2ab700fbd733"
        },
        "item": {
          "id": "1f17224c-dc93-4235-bd73-f8add0147edc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "943b225e-5ce0-4c0e-81de-150e14d31b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9dc91b-7f53-4f84-a962-4cc21203e71e",
        "cursor": {
          "ref": "3458db93-f1c8-4be2-a365-ad380a2b6103",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "299e8d82-8d7c-4d52-824d-cdcbd0b3842a"
        },
        "item": {
          "id": "0f9dc91b-7f53-4f84-a962-4cc21203e71e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0f4c745a-8370-45c6-935b-2df55d63e93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730b7bf8-f33b-4356-8f81-6ac943ee4ca6",
        "cursor": {
          "ref": "edabecd6-fb02-47ef-9644-79da5d9baf33",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "024513ec-3e8b-4c9d-b1f5-a9fca8454e06"
        },
        "item": {
          "id": "730b7bf8-f33b-4356-8f81-6ac943ee4ca6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77bd9040-e761-4603-bdbf-51f0aaad1119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9a2738-d115-4ff6-992f-ca34cc8d76a1",
        "cursor": {
          "ref": "f2cb5ea7-65b1-44f9-b16f-0f4f37fe1838",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "94c9a571-8d83-4e85-94b9-48e7a76d35e0"
        },
        "item": {
          "id": "2f9a2738-d115-4ff6-992f-ca34cc8d76a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7d0381fa-ee44-4de6-953f-26637d38a886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5922ea6f-09e1-4e10-a555-48063c763665",
        "cursor": {
          "ref": "28fa8f6d-9362-437d-ae0e-7e638a016a88",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "428260f8-6e31-42c2-9886-101e787bbcef"
        },
        "item": {
          "id": "5922ea6f-09e1-4e10-a555-48063c763665",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e613bdce-e977-417d-9eb8-3c1c3a54ac5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6674f2c-12cc-4d7a-bf09-3553388e24cc",
        "cursor": {
          "ref": "2fc0a4c5-9c7b-45ab-a625-a9007b7a82ad",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5204719-3453-436c-82f9-9976e82436fe"
        },
        "item": {
          "id": "a6674f2c-12cc-4d7a-bf09-3553388e24cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9186636f-f83f-4030-b49b-3dbda4d37a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f625a59-0d3b-44af-adb5-84899615d855",
        "cursor": {
          "ref": "26c7c0ce-e1c2-4287-ace1-84521bc56087",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ac6e5b4b-ca13-4233-bc31-40d960855a7e"
        },
        "item": {
          "id": "5f625a59-0d3b-44af-adb5-84899615d855",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6a5c3fe-5168-4729-9712-43c6701fdf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32654627-1541-41c3-ab5c-181b5d03fed5",
        "cursor": {
          "ref": "1e8bfdf3-43e6-4074-8da9-7f721ee1098a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "162c26ce-9106-4c74-afca-f82dd44ec5d5"
        },
        "item": {
          "id": "32654627-1541-41c3-ab5c-181b5d03fed5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "316a405e-35ec-4b16-bbca-daf9b4423878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956d7bd-a9f9-43a1-8859-807c739ac9e5",
        "cursor": {
          "ref": "fc40f8dd-5b2b-4c22-b129-f5390d9a498d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f09b28f8-9914-4b7d-842d-4c91c7374296"
        },
        "item": {
          "id": "6956d7bd-a9f9-43a1-8859-807c739ac9e5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "78432781-aa73-4ab9-9712-855f6a61bb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd998ece-6a45-4109-bc5c-4902cd94ac74",
        "cursor": {
          "ref": "8caf3932-7a9b-4713-93a8-2a5f77edf3e8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7ec38aef-14d7-4bc4-97c8-6f1e28d6c50c"
        },
        "item": {
          "id": "bd998ece-6a45-4109-bc5c-4902cd94ac74",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b80c7c17-d8ce-4c95-94b7-c3ca9fcc6487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ac41f6-0994-4260-99eb-883af1ed21eb",
        "cursor": {
          "ref": "08ae6a93-14f4-48eb-9cde-dc2b3462047a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "53707184-0187-4987-a814-44deb14e635b"
        },
        "item": {
          "id": "b8ac41f6-0994-4260-99eb-883af1ed21eb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26999109-1181-493f-8ab8-e6d3068e1fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b158f0-7183-44f2-b955-8f305a33ec39",
        "cursor": {
          "ref": "e24be94f-8066-4318-9aa0-d7eb93860f81",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd8d42aa-8113-46c7-a951-b4d746c81861"
        },
        "item": {
          "id": "31b158f0-7183-44f2-b955-8f305a33ec39",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bee69104-4a6a-44df-b679-7252592f3300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aca42b6-8a44-4a23-a14b-3e30e26c6004",
        "cursor": {
          "ref": "4e837b3f-811e-4284-8f51-bb733ca47f0d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "784c111e-613a-4c8c-95aa-1d61cc0c8cbc"
        },
        "item": {
          "id": "4aca42b6-8a44-4a23-a14b-3e30e26c6004",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "622aa853-519f-4335-95ba-ee7f4f9a7977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c375cecc-ea1a-4f4a-90de-8647778b199f",
        "cursor": {
          "ref": "b886d307-c93d-4bc2-bced-c9028a6c36fe",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8acddf70-c561-4735-b9af-cedc85318e05"
        },
        "item": {
          "id": "c375cecc-ea1a-4f4a-90de-8647778b199f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "da731f57-b604-4e65-8d78-7253a806ed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d3e2ce-4c4f-4bd3-8195-8aea946a6f3d",
        "cursor": {
          "ref": "d58559c0-b21e-462f-884a-925d2d88bd22",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "672d000d-20ec-4d4e-aefc-6ea776a27e37"
        },
        "item": {
          "id": "47d3e2ce-4c4f-4bd3-8195-8aea946a6f3d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1fb63970-d16a-4c65-8104-5fca62e5d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eaea80-49ba-42c3-a76b-c6d510e605a9",
        "cursor": {
          "ref": "bae59889-6441-4074-9ffb-75c29eadc427",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "07b6d955-38b1-424a-9b1a-89caba94c1d6"
        },
        "item": {
          "id": "09eaea80-49ba-42c3-a76b-c6d510e605a9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "66e10b87-a0e0-4b96-99c2-1dadda3492b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233caf70-ebd1-4f03-8edf-060232c7c329",
        "cursor": {
          "ref": "131d251e-d668-419c-8df4-d2f51c7e83ba",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "655468a4-41bd-4387-8e37-1408990e49df"
        },
        "item": {
          "id": "233caf70-ebd1-4f03-8edf-060232c7c329",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "241bd15a-a7a2-4f7e-8e0d-3f43dd6557a5",
          "status": "OK",
          "code": 200,
          "responseTime": 138,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d126ba3-4639-48e4-bef8-738cbd6e8ced",
        "cursor": {
          "ref": "b1dded14-62c7-4c91-898a-434022e8f4ad",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "29d28585-095e-4eb0-a7ff-dc1e9578924f"
        },
        "item": {
          "id": "7d126ba3-4639-48e4-bef8-738cbd6e8ced",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b16a5b8-322f-46b8-b57e-8b83e49f6e11",
          "status": "OK",
          "code": 200,
          "responseTime": 2662,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97dbe20-fbcf-4047-a8eb-d028f23ffaf9",
        "cursor": {
          "ref": "a90d88dc-2e62-4685-9f24-635144902008",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf5e4983-d457-417d-8d38-202a7e9f9409"
        },
        "item": {
          "id": "c97dbe20-fbcf-4047-a8eb-d028f23ffaf9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8f585dfa-2e03-46a7-a84e-d103c44c1c7d",
          "status": "OK",
          "code": 200,
          "responseTime": 2225,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227985d-84c3-4897-bb3d-2e894c5c9382",
        "cursor": {
          "ref": "e5e11c15-4e51-44b6-ad25-96f137f13914",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "987ef09b-5451-48e9-92e9-c7acc5ce8aa5"
        },
        "item": {
          "id": "c227985d-84c3-4897-bb3d-2e894c5c9382",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14e4c18d-1850-4e6a-bdfa-dbd007f5bfcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227985d-84c3-4897-bb3d-2e894c5c9382",
        "cursor": {
          "ref": "e5e11c15-4e51-44b6-ad25-96f137f13914",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "987ef09b-5451-48e9-92e9-c7acc5ce8aa5"
        },
        "item": {
          "id": "c227985d-84c3-4897-bb3d-2e894c5c9382",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14e4c18d-1850-4e6a-bdfa-dbd007f5bfcc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d754fe3a-287f-44de-bf86-ef0a7e04d5bb",
        "cursor": {
          "ref": "bc6cbffd-f66a-405e-8df4-187c8dc78888",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "00b998b9-b4e6-49ed-9f89-0fdba068676f"
        },
        "item": {
          "id": "d754fe3a-287f-44de-bf86-ef0a7e04d5bb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "282d57e4-bdb2-4a8b-a9ba-905138f5f840",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5d5425-e30e-4418-8df1-823bbfa11967",
        "cursor": {
          "ref": "36c3459e-3426-4bb4-addc-8442b7c9dcf3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a2ce2011-c5de-4186-8d3e-4679a4c9c5f5"
        },
        "item": {
          "id": "ac5d5425-e30e-4418-8df1-823bbfa11967",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f75cf909-c3ff-43b6-a805-6df43acb28e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}