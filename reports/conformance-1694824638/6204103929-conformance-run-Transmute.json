{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1443e083-26bf-4c70-862b-1212935215db",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8649ea93-e7c5-407a-9820-ef12af053aad",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80aaf68c-7a2c-4fd8-a096-e7e8a26443e3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e7b7083-abac-4248-b502-b0e7fe519905"
                }
              }
            ]
          },
          {
            "id": "090f5a72-df3e-42ca-9d3b-3b21a1191d4f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53b94d25-393a-49a0-ba70-d588af2cc428",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "011a4b05-d069-4b27-95b9-eb6f53c81e10"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd0ac982-754f-4587-abf7-edfc3ef60be8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1984067c-ae1e-43db-8c46-c910ab30d786",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4a12848-3da1-49c1-8f88-8c475dcc9107",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72709ec4-7181-4ec0-8113-2e553c8e00c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "957bc18c-ea01-4030-8877-e6b62ea7639c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d4087de-4707-4bad-b763-a07dc890ed9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "172e1d8d-ee78-4330-b72e-9a444b93a86b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "77130f0d-ae7d-4e61-9be7-047ca679627a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d9d01cb-1314-468c-8b16-f8af2ac101f2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43050711-3647-4a59-85a4-130684ee0420",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce4b7146-97be-46e4-81ce-c0b332d331d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b91142d5-e63a-44ec-8e6c-888c3bf1207d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0636973f-fd81-4958-8493-f7dec660676b"
            }
          }
        ]
      },
      {
        "id": "cea53917-d915-4184-9389-8968f361a3be",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "788598d0-5893-449e-9409-fc86e1de81b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a80da94-674f-4d49-b772-c995e94714c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcecb28e-5beb-4471-8b34-f2b85fe6a8b5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71425f8a-11a5-4dc0-afaf-9053c00e4cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84aec8cb-759e-4fa2-be10-80d0d7f1dcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28bd96c-0e7c-4205-80ab-3657dc245334",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f9ae9-8036-486c-b996-994bbcab8b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1178020-57c1-4582-b7f9-ff2724f546f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096b698-b8ab-4aa2-8e23-8f0ac2d4d582",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df756083-c18f-42b8-8f63-11f0460f3ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b131d6b-7eb8-4ee4-ab0c-bd047ad511b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b404c18f-15de-4718-8394-999917e45b0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2e3b2fb-1030-4b56-b651-04b4f59e3764",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e4068-672f-42c1-b5b9-92d293cb5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc0ce066-d9b9-4df1-9ec2-f4ecf521af89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6852ab-d6ad-4c6d-86d6-820720ddbf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0d4a3a-a057-434b-b5a7-a293f70567b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d3bec8b-b0cc-4fd6-a288-e40cb5978828",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3612f45-2de3-4fcc-b55b-b9e72132a721",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a98f78-f041-477f-9d9c-6182b8ce5a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aa976e2f-b1e7-4b6c-a2bb-ecd9a7471e7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51841d75-5b36-47fe-98dd-a6ffc99c5366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6504111f-86e9-4f6d-9d85-89f36ab26e4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68a11c46-5e04-4939-9444-15cfba56485d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caa8055d-2923-45f8-9359-46198a94d7d8"
            }
          }
        ]
      },
      {
        "id": "bbbc1eb6-e9d3-47b4-ba02-4100dc03fdee",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1d980c7b-f7f2-46a9-926a-c8ae38097c4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa3deee1-c68b-4270-81f8-0ea138c9a2e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d410bfcc-3f00-4115-b354-d6b3756a07a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5236ca27-04c9-4d9d-ae51-f5a4e43f19a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4267c710-f3c7-4390-87fa-93a633428977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b377fb9-7a14-45a0-989f-ea4b27e5b662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13689c18-3c1f-4d82-8231-686da7393adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474c3406-2655-4a95-be6c-4543492a9339",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47286f7-c5dc-4284-9ef1-71882a7f2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7404d14c-1a09-4944-85b9-31a301e05606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74a66d-8747-4c39-8336-b40270a80454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c95e0c-8008-4441-8246-3d026d9239a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f2c115-35ec-411a-9831-c3716ae7ea4f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3a0ba-751c-4f07-ba4d-0d63b7d5aa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6213edd-f7e9-4b5a-8ddb-596c369cb9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae1e536-d0d6-4bb3-bb5e-f1d55bc672a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e048902-c25e-4b71-9d64-f98e05b218cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2cc6ca-0987-4c61-8ef2-4674300eef75",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb30b09-5d05-4c92-ac65-aaeaf2d8bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f214d0-f547-49fc-944d-f7cf28027dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f3fa0f-2a9f-4e0a-b158-fa4032fea8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa4ae89-58d4-4b9c-8b0e-bb63911cfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23806aef-fc91-4fe1-9faf-6f7f6204177d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd2982-f407-4c32-abed-6a109f66f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be62a13-001d-406b-81d0-908dd1748e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d17814d-bb17-45dd-aab2-b0107f350271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73053792-1b6b-4655-aaa3-931ae4585364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d42fc9-245a-4aaf-8adb-f6522c4e7ed0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a338900a-f0b3-45b7-a09c-0e7bf507a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b68626-ff3d-41ca-a685-5c60433555ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2b9fa2-3f16-44da-8442-7b3eefc6d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "951e4022-1bbd-4b91-bffd-bb439e9bfb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16929eb5-0f24-4d53-9d7f-5b3c40d15998",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1137e-4782-40a9-802b-6918dc2e4615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92308da2-a189-475d-84de-abaa22b20440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03eb742-de1b-4b7a-8188-0b541149b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "addaba8b-fc9a-4ec7-b42c-b999248b31d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03a1872-1486-4e21-acb1-e463fb77190a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be48185-5481-44a2-82e5-e4f58fb95266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f517db1b-80f8-4260-aade-366fdc88e8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edfcf3a-158e-4456-870b-5a00715a431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0fdd95-9a61-435d-8788-f696c9c41bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d419e7-28a2-41e5-bcd9-74d84795d6cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4b05f4-94e1-4d7e-bf95-04aca50bd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76a2c11-91f8-4b86-ad9f-68a0aacfc717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7069709-588c-4a32-b426-79db2c4ed99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6848950-7dc7-4a60-86a9-47f176d17b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c13fcd6-bc16-4d25-a2dd-2f09854d829b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2935e345-13bc-4d79-86e6-28be1821c438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefdb4c9-23ff-4363-a0c7-67f29705c01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024841db-1541-483d-959b-7f596e5a6f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036a76ff-0b2f-4045-bd3d-b01adfeca485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d594bc-0188-467b-89df-ce415b001ca3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67ee865-ed3e-45b9-b551-a73271572eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2ff560-81b1-420a-8d1f-3356f3c14929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b1551d-a218-4a22-ae83-2109884f4b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfeff35b-4ade-4dbe-83f1-73317c60bf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86033a97-e073-4d5c-9281-452641625497",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b32697-41fe-44b7-8962-226f04406bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45036c89-229b-4f5b-af82-9adaa3b4f1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e335de0-a68c-4375-a642-c012e75f71ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43b15a60-79d1-41a2-8c57-26856afa48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83556f1-a680-41d7-9ab5-0147b736db80",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a82a8c-63d4-4822-b081-3dbcce6020b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166d2818-7fbc-4d5a-bdd4-5ac20cbb3269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73574430-c4ea-4959-8663-00c9a85e8eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c94c24-3bee-4f02-81df-709e19c9f949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecd66a4-6ee3-4df9-87fb-03ed9a489485",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ee200-6fb7-4c71-83d7-4ea4c09ca367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395a5bc1-272a-435a-8ecc-403f6d71d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574bb1e9-c7ec-4cc8-9f3c-705b8aa565a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "428464ef-c5df-4150-8ec4-31c26cb46e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ef672f-a283-4b97-b4bd-ebbb5da40220",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a600e1e-8401-4cb8-97f5-e34636da36b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfb478e-1b22-4cc4-94ed-bab78c236105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6109d954-cbbc-4204-8df8-306b85e10ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c6b4815-cf68-4a83-aae3-e9a4f210fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e50a7bc-7df6-4da6-b8d6-4c94429eee52",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5037e38b-0374-4051-b993-08ae53e8b9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaf110f-36b2-4465-8a4b-38c1bbf51fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c6f62-f2c3-4073-a5c3-ebc60c578de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c95d5b9-d18a-4e3e-bcab-858a84098051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd1f14-d7c8-4aac-aa4d-f3576be2b9cf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635afc7e-5aae-42fb-b332-67ed96d455a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4839d394-a6a5-4afe-9950-406894d8db3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deb3c9f-61d7-4932-bed9-84ffdb067134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b812732-65a5-4eee-a17c-8706645548ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169f1f1d-d662-428b-b067-8ef6dc87db53",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163b4748-b9e9-4ab4-97e1-34e513148329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ce220b-3ce8-434a-a0d1-df085c7651a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ee3d4a-d6b9-4a8f-9894-a97e49cc80a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1a831a-b53e-4182-b310-b7e20e0f3cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b3c5bf-95d6-432d-ae60-04ccb7159237",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773905fe-f687-4f13-a2fd-715305e72e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2819a5cb-265c-4039-a2b2-d563f075e151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906d0a3d-89ec-489b-a462-9ffd26ed620f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e53c6746-e9a9-473d-a570-77ddeb306583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4702739-5563-4678-809a-11dec1d8d205",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179d3a24-4f98-411c-b877-c6fc99e07038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425f0009-f8c6-4f95-a746-34fe8d9ba6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7b4282-cbe4-4c02-897f-9a2ede22b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95d588b-66e9-4a36-9983-d986d9b3677a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b55a36c-be5b-4db7-b823-91cf9aecfe9a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335c9d11-14c7-4557-a45b-a916794aed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ef8ab6-13fa-416e-8822-ee2fbd71101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10666be7-724c-4eec-a05a-0114cedf5a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5ecdb8-b62d-41f5-ad1c-033ae155ae27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c261b017-995f-4083-b334-ea4cea86148c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9cd5b2-333c-4208-abca-9099412ee696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c3fb23-6a50-4094-af7c-33d1b34123f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f8c928-4db9-412f-8c02-4dcec5fd7148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06c710d4-37cb-4796-8857-c72d7c29364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2702ffcc-9920-4eab-86ba-d0e52e3fd0a9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e715dd2-a774-4290-95b1-0b919d918c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ec64e1-ae94-4ada-9ebb-327e1bf497e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006ffb9f-cdef-4841-b379-145de4a7bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "265996a1-d2b7-4f4e-82cf-dac732eac7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8ea7a5-62bc-4c7b-b802-151c291cbd55",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91975928-203e-4217-a483-488ae4fbd992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3522d1-9c44-4aa7-bce1-f59449d98131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdff5ca-ffbd-4a36-b6e8-e8ab76c7119f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad028d1b-b5d5-4da1-bbdd-99bf396ac26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0d5bbf-9ac1-46f0-bdb9-14f2335c511f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cf6e8-ff36-48a7-adf5-db599a4c9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b70ebb-ff8e-4af4-b4b1-0e5d4bc203d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcef485-de23-4397-b6f4-6de039c317ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4bf059-7b11-4e53-9c2f-65a605fa5aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490f568b-7cff-42b6-9662-6574484cc18e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5695585d-dd9c-4c19-8a24-96b2e911e101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c3f446-150f-46e7-a275-1fb8cfe7e6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da9222b-0144-4adb-a2e8-ebdcac234ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d5cec1-24b3-48a5-9d6d-f62a8cbf46cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff69c843-9780-43a5-a51d-b8544f3db02f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d807a657-589c-47b6-81be-acb0a7ab45f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0e143c-d963-495e-9ce1-8a47fc2e7602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30caf4f3-9bb8-4a11-9859-6841c879b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17da28c4-c75d-4277-bbd5-b4af8be47bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcf873e-f9e5-4bf1-8a5b-f322184f70ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7989e164-72b3-4c1a-a2bd-62454302b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81578d00-2dfe-474b-af4c-17335d9891ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4188745b-7265-4eb2-852c-5181f53f5cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12747347-b40a-480c-9db9-802ee121f6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece8af41-75ed-4d06-b184-fb98fb24fe42",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3ee2c0-699e-4c7f-ba57-723be399e479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41dae9a-b999-41ec-90d1-efa852032b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ca9fd2-c64d-4a55-a3be-4d8719769d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b877a79-f097-40b4-80a3-fd3250431a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df43230-11ca-4a8d-b8b7-d28405cd187d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58442a93-ea93-4b0e-ae21-4c85f07801ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f85395-79b2-428f-9f59-86aaacc68966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892095e4-2c4c-41b3-913a-546e959b7341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d05ab7-14b6-4a1c-bc0e-2d630037de5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f910dd-8df5-43f2-9862-3728307de50c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6e9abc-f8f7-4729-ac1e-275fbdc211a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08ded48-f052-451f-b985-c46af218e22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3964f0-92c5-4c82-b9e6-2a354e952061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd112b6-04ab-4d73-a3a5-fc68e8fc65e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8693896-69ed-4221-96ab-57b3fafca519",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4f3f1-6624-44b1-921c-f615620cf3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83914beb-2176-4ece-97d5-d7ffb5d62e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7863623e-88a2-47dd-86ba-f93a86595706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea2d427-1378-405e-8b53-c1bcc669cb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32bdb5b-8288-4307-850a-c95427f3293e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8ceff0-d2d4-4f06-b908-6160bd7612ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e04e99-7991-4581-b290-a3523dfc23f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffebca2f-5598-488e-b04a-c5b263e515b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb72df7-4dcc-4f68-80cc-fac6cc742208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00351ca3-1af1-469d-a02e-303870d2e523",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afa3e9a-20fd-4443-8367-2587ddec830f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c226e6c-4bb2-4e42-bd8b-25ff1c6e6d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44546fe0-1ed7-4c9b-8441-7fbafebf0d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4568c3d-7905-40e6-8344-a24439f4bac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57d3f8b-7105-4f20-b1b7-a69a9ebfd5ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933c3751-5951-4f65-9de5-ee6efccbfc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a852db5-b159-4968-b954-bfca41d2f89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1493121-375b-4234-810c-bd4f82f486bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "622d9f4e-f65b-4e6b-b767-55ccca393114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02671931-2b30-4a1f-af82-0548abc4bed3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fbedea-7b25-47b3-95b0-cfeca19d0836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91d26f94-2a96-43d8-b777-a2b85706b42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43603954-b0e8-4465-8123-fb441f02f2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e5b2fc-b178-4925-a14f-81eb973fc88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b4123d-4289-4e79-ba62-0e376fabdee9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd041b5-6595-4d15-b75b-1a88308f286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391d73f2-51c6-43f3-a416-d2cd28e8146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb4ca2-415f-4ec0-9811-a90a4ed3f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1863b99d-0071-4020-8aa2-7d93fa3736e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7185e0a1-16a1-431c-9387-d943b9b4578f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e645e5-f3f2-48df-adb8-3d6b55b13ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065aad2c-6fc1-4c95-852f-ab4de03d5806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d61d1e-ff50-40d4-a835-5db13a0142db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b19c347-be8d-42c4-87fb-cb4f72fe4ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f3dcb6-5350-45af-8c0e-06374c86c548",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2af83-035d-45b8-a2cb-a5d3e40fff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265db7ad-593f-4960-ab75-b5744dff2dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f3af55-62b2-4387-b5a6-2390a274cff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2241459d-dded-46ce-8d7f-09467cd6706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7775be53-6a87-42f8-814d-c958f4eea7ca",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26ac8e5-1d6a-4503-b314-8e4d42cb5882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fc380c-8504-4877-9a66-1aa3a0235312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d907e686-7aeb-409e-bac3-61af4a941a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f39ad1-37d3-4e7e-9cdc-fa2479409d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87962017-700d-4850-a49a-211e24e0fc3e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48f47ce-950e-41b6-b780-f2fae92b02f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c2b2e2-488e-403d-a6b8-c95992f1d582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c22800a-28e3-48bb-b81c-7cf5c02c33e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1411ab67-e53a-454f-afdf-49f50491368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c5d91b-e13b-448f-901b-c3f54d4b1747",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e2bc83-15a4-447e-b979-0deb3dfc6a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58b4ba6-03ac-4376-acee-bfc5a8305b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb93eed-93dd-431e-894b-aa93d6e00a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ac18a-3dbd-4888-9eda-1ca1cf33b3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e304c5b-fe04-4496-84b8-1871fc6a4f44",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f073683-9eed-4877-8d6b-d0882fb37d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e5bceb-85cf-4d2e-ba65-ecf8cef6c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf2e45e-0d77-4db5-a7be-d755b42c461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da25249f-af78-45f1-9289-2f130fdde7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4498c04c-5a44-4a24-9984-48c8326072ae",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a3a6e7-9c01-4aa5-b667-a267f12642e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7695852e-08bf-409c-9460-561668257faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48966b-b7e9-4010-8f32-69a3cec5e9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec22e5ca-310c-4095-8c94-118039c6f393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4c1a8d-a26f-42ff-bace-8f0cb42ec208",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8cf23e-f1e8-4ae3-a30a-fc5308df5865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63bcbc2-7ea3-40ba-9c3f-d0e7a7b2aa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcbd0ee-53eb-4417-a349-35b61f101c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7961fb8-025c-4ada-abf5-e3fbd15f92da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46f4359-cc73-402b-ae99-8c58b6960392",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8810c99-721a-44e1-9844-bd15ba1f085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e91d36d-512c-4910-82b1-87cdfa6e350f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcfcc80-b584-4f78-bf86-8cccb6f71b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00737445-7e37-45e1-a63d-9611c2e88845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36313790-b3a4-4605-bb8e-d8749f863a86",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3db3a46-3c02-41e6-91bd-73fa08f8aebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d8ef33-6727-48fc-9f2a-3b00b9bb6d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3324c9e7-0b70-4969-8ec0-44ed2c771c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e845176-5930-46a8-88d2-1430d90b12f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a10808-c89c-4496-b409-81204583cd20",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a18c0-4ee8-41c6-a4f1-d0246fd0e396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5538e2db-eb2b-40fc-baa0-b065a62de715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76435b65-ed98-41b8-b0ee-90535b56e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03dee55-798b-400d-a5f5-ceb444ba0316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef813771-d166-4029-a348-b0ff0e02d7e4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920f0246-5167-4460-a9fe-3d310d1b6e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cece72-4e6e-4c06-bf4f-5214920f4d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456980b9-7979-4ca4-a707-cba8412299b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "999ad695-9ebb-4b46-8817-b121b77e196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9301c17-93e7-4a7c-8c43-f3f7d3cc56a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80290c-8e66-492f-8cb6-29c1631aca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1422dd68-576d-4ea4-b035-45b93c7a5028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07db7463-bc67-4b1f-85a1-a9b73c7c0826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec1c883-b61b-410f-aef3-b5d5752b3948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fce9e3d-b9bb-4acc-9637-f44c2ec8e3a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a15523-d08f-4875-bf59-3bc69914fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8819af95-acfb-4be1-804c-cf4a92500946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdfa22e-2994-4c18-a348-90df3c371152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde25a2a-e2a4-496f-8b38-663cf65ab0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d310500-4724-48bd-a06a-f023db3e2548",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e2a8e0-f72d-4b50-afbe-0cc380286675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794b359b-48e3-41da-b424-a32cdebfb96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb4e8dd-7c05-4096-bcf2-f41932f76795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed5ff8e-36b4-4afc-bd99-b09f45077f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b93afb-acf5-4154-8fd0-6ebc03566910",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affe5552-1f28-42f7-bfed-f9910ba182ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133ca26c-0c25-4f22-9c86-2fb9fbde30b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f4f4fd-cbf9-43dc-bf70-fb17ca6b8e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b665251-c3af-4268-b623-093ee7b4204c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce968068-bf73-4eb9-8059-a983584cc92e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b4a4b2-b469-49b4-b2c5-3e27e9f6f9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c25942-a6c8-4eea-994d-ba4b2683c651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2e502d-1386-490b-b09e-33f1d8989f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da50b6aa-c370-49d5-a72e-cd32bc8eaeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfd43a8-47fe-4968-a271-d1b68b6c61e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db31bf5-bcee-4d89-a096-fc7993a0a4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad1fd01-d677-4959-a0ea-9ca96e3b31a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad84f6-ff70-40f1-b0c5-a133693ce962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c66ea37e-3237-4b15-b4a4-4ddb4b0e54a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d649525-681e-45d8-965f-17ce5f9c3010",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ab799e-8954-45d0-b6f5-e9418c0afa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6230fb-94d4-4b3b-a2da-8c88c543643a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fb65eb-1ce6-4be6-9845-07b3900c3b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "17aeb002-329e-421c-8357-80ae5aaa6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b219845-6a6a-4430-b6d7-433a67f965d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2923a7-12af-43f3-a9c9-123bae18a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b81ba0-7b8f-4ea5-b767-cbd13e0ad6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c211b8-d98b-49dd-9b35-eafc44115851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c78e208f-670a-4f59-8225-efcce7ebd75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0db083-62e9-4461-bbe7-24a5323aecda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd3ecec-9725-4167-9942-5cd165d1c570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a0ed8d-1d74-470c-a1f9-9f913f6ba822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0db6ef3-7a6f-46eb-85c8-e6dd5c7a1cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aec565c-3af7-4cdc-871d-e041058e6f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3395907e-5c9f-454a-b85a-17aaef538912",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2beefc-3fe2-4097-bb93-c609455e4b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3693b536-1518-4840-8d75-ab74aa9a7ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f1570-20f0-40a3-b621-6cd37e0d10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dcad8f-29de-4ae7-9492-b5e36bc71da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fdd8e4-5601-446e-bae9-355e361d7ac8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab53b01e-01fd-46d5-abd6-89192df85af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e8728a-4c83-4a1a-b81d-0808ec3e39c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be8823d-6489-450f-8862-68b74a930b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaba9e7-320e-4dd3-8a7a-98fdcb623429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6607e7f-89ca-47c0-af49-878cddeda775",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d100ce-0b7b-4fc3-b6e8-dbc55db69435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b18395e-5be8-4645-9632-84416ef43f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0805c8b4-5a8e-4518-81b2-4da34eade164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c95866f5-1c62-4fc8-947d-085a075006af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6282a5e-11f5-48b9-9005-dbee99ca8ab4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98125699-8e9a-48e2-aae8-f44c92d354d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23168a94-40fe-4a56-911c-5723140c69d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe77f412-ad1d-4190-8012-e1709ec67a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "29713457-85f9-4075-bbae-7e8ec7158ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0bc554-0d73-4154-a1ff-e00cc158b9c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86ecf32-c381-4f88-aa4c-73989de118e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72804ad-025b-4db0-849b-51ea13b607e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb278d8-fb21-48a2-8f68-5f5c1bd55cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04fe06bc-6b57-4701-93cb-12faed4cd2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1815c2c5-d06a-4451-b215-c5e2cdd6810d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8049206-3beb-412f-871d-b24afc5caace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fa6a89-f0c1-4ff8-b5a4-0a1af416fc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b5389-a14a-4f56-800a-6dbb83c9dbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ae8183-a7ca-4bbd-86c6-4ca019281799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b98d78f-75c4-404c-9d74-00f40b000dfe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb5e9f-7f53-4a93-aa7f-24e1b0ec6beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097b5f36-5169-461a-bf02-9929b359ca30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baca8a0e-568e-409e-8c95-6a4ccce5c8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e5517c-ff21-4743-ba56-7e38021d9f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1095df0-2baf-4208-a49f-630a61ea7f48",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ce27f4-1244-44a5-a117-9cd79db23f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c36735-7e78-4be5-82b3-32975d8e2432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb75bff7-0f34-4bd2-9dd9-b357499f5a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2154e5ce-b94a-4f61-b49f-bfe63ff39941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a732c1-cf45-4747-b1f3-850424d2ec47",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32bc484-c4c6-4d5d-9283-ed57392d32cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331983a9-005b-4b42-887e-b1baf9284117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c9e3fb-0e95-4611-a84f-559a0ff86034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a251577-f067-495a-9f77-833ecd49ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6505a6-8e68-4513-b4b9-b567573e43cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96e9fe2-65a5-4b72-b509-7e97ebba938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31153122-a980-4e01-bda1-cd7295b663b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d197e228-e786-40c3-96f2-ec9104f06a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c9704e-cbda-4458-8489-cbbf38cc5221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee9a3f-3d76-4063-b06a-ce5b59eb890c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fc7bd-1f87-4875-aa94-8aa91cd705d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf31fe6-c905-4f7f-96ca-d17ecb08c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d0395-7d2c-41fc-95b7-df786ce14d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f2e60f-dcf3-41cb-9e98-9abf1a12e696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce314d41-65d7-4c2b-97e9-f968bfa9a574",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d2f68-9b37-4e09-b41c-dea8a9ae83e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9997e3-a5b5-4b8f-abc0-21d5518fdf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe2dec-e022-4bb6-803c-9486f1e7e36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4aa276-0f52-42b6-8511-844c30714223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff0d7bf-0aa8-4244-a838-4d6e11b727ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0341a0-72e0-4abf-a2ff-84efe6d6feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c590e3f9-d92d-4c99-9074-6c02a0c42ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf099d3-56a4-48d7-918d-aaadde2d096f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8589e7c-c6db-424d-bc70-99fedebef532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7112d340-cffb-4b52-b4fe-17b1c1c4e1d9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298df222-0af3-4653-af10-47d7a98adb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb733da-a576-4814-9b60-184987a368a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071a9aad-7c46-48e6-98ac-76733b657c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a521afb0-7d0c-467e-a7f8-1c18207c8b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec526675-0913-4a1c-b848-bf14d2e5023f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72369c6b-379d-46f5-8601-b78c111c64df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64dd219-e3b3-47c8-aba5-84dc932cea72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e6fd9-195a-4824-8a93-4e4426a99474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1a872b-8ccf-40b1-80a1-85250282ec5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b56d48-f609-4e50-8ba7-a449fad7d5bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b16c63d-d1b6-451b-974c-1a79ace2fc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecbc478-8207-43bf-bd22-f1b4436895d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d215b31f-45cc-4479-9106-4f9e98777c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76b61c56-6cfb-487f-9dd3-af30e1e2e0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab59ccbb-0f70-46aa-af5a-8cdb66c27761",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f3bbb4-fbff-440b-b143-c2c64bec1170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b78baac-f884-4e15-9918-45e5cf212943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6684afe9-157e-41d9-ad12-6edc6e3affff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f411aa41-ec0e-45cd-979f-4ba37f429240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35d1bb1-f677-4cf1-aff2-ca40155403c0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17871503-33bc-4c98-90c1-8a7ec39fb563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe9ac6e-7343-43e2-a763-32d2470fbc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e01e08d-28de-4b05-a268-e68b86180d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8374a587-d1d8-46c4-a359-cff2009b142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3acbea3-93a5-45a4-934b-13d7d68ea77a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e40c9-9ae4-4afa-987f-fa3c4d9a008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94a5cfe-bc11-498d-9f40-356d5e233a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17222e4-a5e3-450c-a770-c3b5bbbb77c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd68864-0efc-4479-952c-5368fa67757b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82614e6-473f-4340-a9d3-b8cee7935056",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83bbc09-9d27-455d-8d2a-9436d593f532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28f90a9-c8cc-4c32-9682-7777776d8619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d6890d-0d50-47e1-93d0-6458f068955f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b7bae5-2463-4e93-ab8d-c8ff28397993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f557f19-d250-414f-8f96-9aef79bfc79f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45983cc-0b45-4ae1-bee5-d051a971edec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2811a7-ceb4-4b5c-8624-579bd2c5eb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d63068-c14e-47c7-8649-9f04d923b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddabe65-870a-4b8f-b000-159e19cd5b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e095a51-0e42-405b-83ac-13c6dca0837f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5028c4fa-201f-45ee-83d5-d20121de9dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f04c40f-95f0-45d8-a225-5803c691a1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a2bf5-c25d-4ded-9e2f-22883861cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71384050-c494-44a7-a846-0f59f3e16e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778e44c6-c80f-4a58-b7e3-d9f3cce386b8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feaeafa-9dc2-4fb2-baa6-638878d4caa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b78240-a3c8-46f5-9726-c5254ea8948a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95aa28fe-31b4-4885-ae14-9156202ced07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7a6904-8d5e-457c-b5fa-8f83a210d7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae3ded6-ea59-4276-a88f-111cb7c10877",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bda530-a95b-4f5f-9eff-8a5bc957d1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f768895a-c568-4f71-90f3-0edc6ded85dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454329c9-a010-43d6-a31c-a592afd66cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "016f527d-0f44-411d-850a-a3429844220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994dc638-9ba2-4b28-b824-d71f39539584",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf71d28-3bd5-4bc1-8f6c-e0d8b526b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81637aab-e3ad-4055-986a-ad266d03a994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb2b1a-01d3-4598-90a1-1de8dbc5180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02964a7a-6946-4b1c-ac2c-8d5333ae9f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483942b-0f75-4249-aedd-107d3ecf8eb5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd72e42-0e60-409d-a16c-4b7ca704fd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb89a4a-7467-4217-93cf-bf54728fb96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713beacb-867f-4dc3-991b-447c5b7f6fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fe891b-4ae7-483a-b21f-d871692c455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63557759-dd17-47b8-8f77-d289966ef65c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb702e41-d2e8-454f-b288-240129dd026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073364f3-68e1-463b-a4b1-9f76c9cdeb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5635901-cac4-4c27-a088-8a88111c7efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a714f39b-58b5-4978-8c51-c68c143d9c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc61e59-ad72-4812-9871-fbe347eb0ccd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de52ca-3576-4f37-8369-eab542b9d744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890ca974-1e97-46a3-9dac-136cd14aca1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f926ec4e-5561-4baa-84db-70ed020b7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0be8d2f9-fe72-4809-98a3-babda05b444a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d126a0-e03d-4b3f-9bb8-69f674c0bae9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177ea123-51fe-4528-9fa9-28f904086ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798dbbbf-6d7c-4bdc-9f8a-97b010c821e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd8102d-accc-4f94-9b1a-c24fffb039e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "165e04d6-766e-48a6-86c2-18339dd973ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db117d4-0832-4157-8d1d-0b8f3b468ed7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0032f3e-0f42-4606-8c36-742f83447881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d6a74-45af-405e-840c-dc1afc77577d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d4d89e-e5cf-4019-926e-e3cdc0e398f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "059c535c-a51b-4293-8264-c882efb3d9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612c2a57-81ce-4cab-b687-cae3face85ba",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7c625d-871f-48c6-b7e8-fcebe00393be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf4767f-d881-4e61-bd80-c6a8e6b36a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edd653a-7338-49f3-8e18-b5dfcf52efa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb2b347-4edc-4422-b4d8-537e61239fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f8172b-7a6b-4f64-8161-31ae31b5724e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9390ad3-a2e8-4970-8cc5-0f4a3b71c1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a228b9-c006-4259-9445-7040b284070a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a112178b-9cf7-4892-876f-46db2190977c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e88430b-3325-4eab-83e2-92a4c7a459a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7749cd8c-5fa7-442e-a72c-dcd809373a9f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b5cb09-9bf0-4a30-8594-5bdaaf717be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74bc4aa-71e9-444d-9dbe-8a170b797e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9509797-fd7e-418a-a4a7-9e16b53caa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b2024a-351b-4b22-a01f-f7205864e98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4393caf6-ae43-4abb-ae8f-1532119bdddf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb78015-5da7-4f1d-8376-03a3b94eca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1d12deef-0184-4fcb-9f6b-0945a365d15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecba497b-cdc5-43fd-a0d9-6f0bcc797cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c919a802-629b-48c3-a47a-22bb50907adc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90c0b6c7-b80c-4af5-be74-cfb4fa634bae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0fd5ca3-6e40-414f-bd6c-4f16f69457ac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3296d89-703d-4a57-a186-d58354d02a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "261d52e5-ad23-4e82-9555-aaf0e84a8c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc06052d-cb84-4510-8431-67f2c1dbf400",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40e3ef64-e21b-480a-8bf0-c6c8c1be48c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91716cf6-ce19-4ea9-844f-c2f347774e14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef621a0-0208-465d-bd5e-f80347984496"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "429cd50c-ca45-407a-b3d6-c6edc4d47e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7a5421a-dd65-4cbe-abe3-59b13dc533c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ca3137d-55e0-4d7c-b989-9ce04d2102a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fe2c151-8518-4db2-91a9-5148995e6dcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a1bb487-1ee2-485b-a25a-ded7969acfd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3041f396-346b-4446-b6ce-5e1d21c197f2"
                }
              }
            ]
          },
          {
            "id": "213887e0-9336-4104-916c-6f837aa28162",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dad5d370-f901-4077-a62d-850be392adda",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd1f55a6-7698-4e4d-b296-a37afdefab9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00cb007a-81f5-4c5a-b852-d797291a053d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f23820-a945-4ec8-93eb-96db1da061ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56de8481-be80-4940-999b-1c6493a8a470"
                    }
                  }
                ]
              },
              {
                "id": "f4959359-8f7b-4c82-94be-45425ae3d871",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f64cbba3-1454-4bc3-8c33-6dc486ad96a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be596c16-2552-4930-b1f7-38d91c50c267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ec932b7-928a-442b-98e3-46badf0c5562",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "059b7d1d-ad79-47c4-9a1c-9f9c965c8a34"
                    }
                  }
                ]
              },
              {
                "id": "b5348b7c-94f5-4e97-a23d-9160e646ae56",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60e6095-8aa4-4e11-9ab4-1dd40c23d3bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f68cc1fb-a750-4e92-b536-114372a14ad5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "217e9a15-fc47-4e36-a5f1-e8259357ec82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40c6abf8-2fc9-4bca-99bd-e37df0b2b25c"
                    }
                  }
                ]
              },
              {
                "id": "5aa37924-b6d5-4698-97d8-9c8cb2eb1811",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8786d97-d92d-45fb-8e9e-6ab098f84042",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d378962-c7c4-497b-a1c1-d279a91fbd7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a11db67-bbe2-4d28-b4c6-5d1607638686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bafb43ba-ad55-479c-a065-360fa68f3e53"
                    }
                  }
                ]
              },
              {
                "id": "fc2e045a-6e84-45bb-b3cb-f3fddf289856",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad61b19f-840e-4305-b7d1-24ec282f58ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcf3c35e-bfbb-4f53-ab52-d0f44cdd39fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac685f5-e16c-41ff-9531-f32f9f8f322b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "69da15a0-73aa-4917-b018-4072296eeede"
                    }
                  }
                ]
              },
              {
                "id": "ecd85a96-4527-4644-9f17-c0c13acc439f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92210bd9-4787-4ae8-9149-9df478ce06ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c95e498-d0cf-412b-b59c-49b7e7bb5db5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfd489fd-3e7b-48b4-a0cc-af892aecd694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d998be08-b289-4caf-a3e8-738c02856dc6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea43ae71-8676-43a8-bb6f-757c9d9c1b80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdda83b0-c078-4b49-9094-50249aa7b1a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9489e3a0-3db1-49a9-863d-1305c15f78cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de356cc3-e58b-437d-a8a2-75f72230f8bb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1557205-dcda-46c8-8612-a8cc68e9d7cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2d24e9c-5516-497b-beb1-631e5ea1b315"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5630d7d-d031-41b8-bf1e-50057405d265",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1104d1e1-9617-4a57-9abd-0a2d46aeeacc"
            }
          }
        ]
      },
      {
        "id": "61bc77d1-bcec-4bfc-b93b-56d08d4337e9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "387c526d-3aed-46e7-a93e-dbe5ef067959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfddcd65-0743-4166-84dc-2773d79bd975",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1794861a-7693-4959-bdb6-7832ac1ae072",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2161c-8d30-4c0c-a02e-5f60be557e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d0bc1f-318b-4ec7-82d7-9afb8e2be3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3ff11e-d27b-4f59-acce-b1a7456a71a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b08d90-7a19-46f7-9355-1b55023a1e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb2c53a-8d3e-438d-a7ad-718cdec180bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cae5c0-886a-4148-be5c-dcbe553ef0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43824c99-a5e0-4c67-83ce-6e0da640edeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0b3f09-7151-429a-ab05-a6aeed9053ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a1d936-9367-40cd-84f1-b5ae14867a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbbc8e2-73d6-46f9-add9-c014adc7c0b0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68470ace-61ac-49f2-8c92-3b06a882d32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0190abaf-5468-422a-8201-50a104e8f119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26636d3-ab7d-48d3-aaca-f45867ec7c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b833acda-bf8b-4e1b-bbbc-0ccfe1829abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05b8b20-9fc2-478a-901e-4820045923a9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca40f76f-3abc-484e-b668-cecd84ed3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d277c47e-f7a0-449a-ae6d-f442e8fe8470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2ee247-2472-4b6a-a500-0577e0742842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c980e5-6877-48e2-81c7-1c1417fa4c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a9e6b9-9802-4bab-a479-aa7aaf43f4ba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309b5d3-b802-4677-a941-3033af3e0bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a07c5c5-e06e-4638-ad7c-1dedbddfa3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd94d57-655e-41ca-ba16-e112891dfa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32a7c35-4e3e-4a5e-80d0-eb710b88071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bf1fd6-1dc2-4ac2-b13e-e94e8e65b540",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b116c194-d956-4d50-af79-43ecd4df6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79ad27b-8d79-4045-847d-db4ef66963e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a29c887-ca4d-472e-a59e-969b8602aadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0893397-ca65-4e7d-8fd8-5592ab66ff72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcbffb7-daac-4010-ace2-3f2ea3c25b5f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce60b028-1233-48cc-b696-32d4082ba187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8afbdd-2fdf-4302-b21b-d6b92e37325e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e751b39-6441-4ad8-aa09-aa87ef281905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39de0f5a-3c16-4cd3-acf9-b4789efdd23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2d9ed-1fe2-4e9d-b927-74319e4447a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63189f03-199a-4ea8-b7a2-f94b39bd9fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566930ab-4b87-44d3-b58c-8df31d2d06a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308038e4-1953-428b-b8ec-0933b351df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d993f5f-0b94-46e5-9492-94c9e5cca7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae1d3f-45fe-433b-b4a7-4b7efeaed3b8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efac2bd-7cb2-4677-b6ca-858882c88a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3fc602-ab18-428a-a5d7-e05dfebf8e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f498be-82ce-4476-a25f-eb96b82f52af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e391b6b-e7f5-4ea0-80da-09bb29a50c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1920279-553c-47f9-81c9-21ac9fa42789",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534f588b-dc71-4107-bf37-0642246f45a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b77c443-e5eb-43a4-84ec-933e1d16c0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72808f73-9466-4282-be58-431ba05d19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a637c3f-9980-436c-b34f-89876a1358a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d77e6be-019d-404b-8017-1d9c175ed9b5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff043f8-6036-4ff1-b6c8-15c20d94ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8a638b-a09a-484c-bcad-6f1d25f491ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b344eed-d573-4083-b435-437ec999cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "60b1d48e-3e04-477f-9c63-e8526fc8979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d415e48-12f2-466c-9d9f-925a6fe316e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff23a829-ac00-4051-9487-4da67771ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aa7828-c26d-4e46-a2a4-42ac04349707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9655e122-25dc-4602-aa60-e10640f298ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd727ff9-9dd2-41af-bd55-e4d4c11690b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60406d6-a861-4c6c-b399-63882b1d98bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf47826-ffc6-40d8-a4b5-48af8ef2b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6e3411-e6e7-4fcc-9ae7-c63a97c0a226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b5bfff-dff7-4285-a98c-add59755df77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faab2824-1431-413a-beee-36f7c487d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f74cef-fa1c-4a23-92cc-f61b4d96e1ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd227a2e-296d-4f64-88de-d1d4bc2816a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0488a69-663f-4aa2-a2f9-4a7431ca2d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f12875-efa6-4e41-bbb3-db79e6838a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee5c8bd-2850-4548-8c9e-c44ec3ea6e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81008f5-5332-48c4-a69f-b4326edb8eb9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcac0368-4d71-421e-9b1a-28a9e1ef2ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf81d82-fdf1-4fb5-9478-1e42ceee8cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89239a76-2324-4795-8334-87411ad847de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f5f591-87cc-4461-81ff-319a10228ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d958b298-8abf-4531-883d-e7d7156db3d1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c04eb-94b0-45e5-8a62-b0b022e831ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514e9820-dd22-4861-be6e-12056bff33aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5858d4-dfde-4c01-a18e-5d58f34b3fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "895c2eb3-415d-4ab3-a593-5f607f82594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12083368-0951-4523-943e-58b852f910ad",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521844c8-b29d-4fd8-bd04-3326744c22c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b83dd2-06af-407a-aee3-316db6e2fc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a998b000-d748-4a11-addf-f92c890087be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b08b20-2a7a-422e-bf6e-987bce046d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c4a038-9fc3-4c9f-95b0-e09846e888e1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b442cec2-9964-4f5e-a20a-0d0caa39ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b283fbfa-10d2-4839-ba6e-0501677dae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47e90d6-b01a-4a4b-9094-bc9def44decb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "132871ca-42e3-407d-b74a-752ec00b3510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae8d94-59d9-46f1-b464-c76e01629388",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddd9f89-1367-41ce-950b-04c2945cc8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607acda9-3df7-4ab8-81a7-0ea922087637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18ce876-efa9-4443-b477-fad7f69409ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b5a16c-ff55-49ac-b343-727515ac21ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2feabc4-5244-4ac2-b844-8cc9947a7b90",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26b5759-5e28-46bb-b49a-6697623d63d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d6bdc3-9042-4fd3-b108-3746ee74347e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a4f74d-3485-4bd2-b3d9-41a94a4774b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b327265-74f4-4ee4-a38f-aad506a6f534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6db526-f3ef-4611-8010-b4502b205e6f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ecd43b-09a2-4a07-9bad-7144003b5d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b43323d-d068-461f-80df-225f0f33a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c559e9f-a31c-4643-b1ce-8d25f5458616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283cc0d3-d2f7-4a89-bffe-0eca6a8e0fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5018940-82dc-4e9d-84ba-520ef08849fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7daaa0-06a8-4f35-b227-d0726c668718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f33eb04-e54f-489d-a8a1-885a00c888c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814f2bc0-da0b-41ed-a501-93c2c3518a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f839cd-d25b-4524-8d64-71df7a3c0dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caedca9a-4e56-48f5-ac7f-83b118a7843f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340f47ec-2911-4057-acbf-b7e44be3ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf83f6-3982-4cc7-a606-a22099be9b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b84cf27-c17d-4f8c-bb36-e2d60af935da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fba13b0-7961-4224-98d0-50d47fe0e710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8bbecb-b49f-4b35-a6c5-0fddf095596b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c60915-7b30-4f0f-8d84-6ba98b018239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2824d609-953a-4947-ac18-9e6600a2dd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52aad3c-5b7f-40f5-b583-8067d0804207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382a39ca-7f21-4379-a364-f16374bc4430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba761bd2-b569-46e7-8aa4-ddd44693f398",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e299d4-9f3f-41aa-badc-164c161e4fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bd6adb-2a28-4185-a9d4-2da8d4c24bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0bf625-f1d1-41b9-bdbe-dfcda09d9470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cad646-fc65-47da-8e93-546d107a8674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ad8bbe-39c9-4379-910c-7c2b7b76da55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb5ff73-2e5c-4c32-b221-72e5eff69d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0895021d-3608-4a1c-a752-8659f9150037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e849e6-c282-4bca-a241-c6d3b8818a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947223ca-32e1-42fb-a8fa-743cd130d767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f488f838-2737-4b87-bfbc-003aae4e5a2b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f681fcba-4326-4efe-a713-edd502e231b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a667cf6e-e55f-4371-860d-499ab16e1f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dff853-b4b9-4119-91e1-c4abb0ca7da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba282ade-a835-47f0-b77e-671c4fc9bf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb8d340-cf61-47ed-9410-1625f6049de3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf96e53-70f2-40d1-aedb-10d5d7b504c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a192288-df79-4ae9-8acb-692771c87a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bbd33e-efb1-4c0d-9213-c394ecc85ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba3ee9f-a37c-4dbc-9f7a-ff8f7181a5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860292fc-074d-40e7-b153-a579efe3b0f6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9c901d-3dfb-405b-8293-071b8f92caa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614e2dc4-0ea5-40e2-ba82-42cb5ad408dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab46881-2687-486b-8cd0-7fb0984323fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "038bcfdd-693d-49d6-8088-58f7e293a0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139cf316-53a5-43a5-8df5-cacdf3456d12",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08449e99-e9ba-44c1-9872-d5de56bd30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a09c0ed-60ef-48ad-b69d-d8491bc27cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721c4bf4-2104-4dde-a2a2-fee4c1515c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6855bd-d315-4a06-9b39-ce232f3d82d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa3e3c2-f97e-4a53-8ba4-374e282ea64a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc763eb-3ef2-452b-9275-ef2cb800e829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebb1cc3-0b7e-4b74-8354-c6a23dfcf02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98ab20e-195b-491d-a3b8-97d5e8dc85d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c8cac0-e269-4abe-b6bb-fc63edde749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf9aab-08a5-408c-839f-db5142ff398b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8d46c3-ec68-42a6-90f3-999759fbb611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82c9aa3-221e-4548-9d81-6fce37f9a323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a610bfc9-8225-4689-b098-7f890f7f9dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e041036-187d-45ee-b94d-88b7f4b13aff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6017cda-9e32-4690-a033-07d56f1dd2a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "602ed811-98c3-4df2-9d6a-a58542f0bb12",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d3bc82-51d7-4e9b-bad7-5d36b70c0128",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5495d07a-381b-42bd-85a7-087e7fde45d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b7cade-45a5-4600-a23c-68e0fdfaf93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b30c051f-4222-4cb3-9114-5933e061de96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "458f41db-66e4-4b56-8f4f-46c07badb819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25a6553b-3f9e-4ccc-a9cd-896d48e552f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85681ff8-7186-4495-8fb8-6d567097f4bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be1fda81-c733-4e7f-bf62-1957e23045e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1373ebcd-7f1a-40de-862e-c8de8f9ee211",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f8156b2-7409-4d08-887e-9d6128921c65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d68ef97b-4494-4c23-83b0-e7d5a2cd4e70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e2b5724-c9a5-4e85-b0de-9fd36b35a597"
            }
          }
        ]
      },
      {
        "id": "a3a2a456-12b3-4730-b9af-c4a4326be3a9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "47828caa-1215-46c2-be7a-acb850321a0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d700b985-aae1-431f-be94-8f2f365e05f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87fc4684-e0ef-4772-a274-bf82de52db40",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41957eb-d69e-487e-bce8-63da89709a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7311b3-06a9-46af-bea7-0accc2447734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68567385-a18c-40f9-9152-073a8127bddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9c031e-679d-45d5-9d12-bfc0e7825992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ce9bdf-af08-44b9-9ec3-902a852bd8ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109e0fc3-3710-49b6-b2aa-6434345121f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb67138d-7540-4c58-80b2-6538432a1b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd3fee5-9c03-4177-b7c9-c706b1acd877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "addc6ae6-ecf8-4d6a-929e-86d1a72a6f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c31caa9-d8c7-4544-bbb3-7e12ce9fbd28",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a8670d-2b74-4f47-886e-b4dc8a2adc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1e88c6-9524-4005-be88-3ed85ab5ce37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea236857-7b3d-48fd-ac96-68a24d60407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7280007-e8fc-4c13-9d3a-32a33ef237b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedf2a32-4db7-4aad-a460-b96d8c73cb3b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3cc6b-ab80-4b7b-9278-24976b591945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68e1a31-e079-4280-b576-68ad654da6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924a6d19-f05e-4f7a-a347-9d5b798bc8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca14d317-71e6-42e8-9673-71929aa5c80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b8b15-856a-463b-a7c4-e546966c4e4d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ab4a07-89c9-444f-acb0-0431c7bf9c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dace162d-58fc-4923-9532-2a9bce4b5b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e704419-731b-4d4a-99af-8270807eb30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea372221-5a90-4922-9a63-77e877e018fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a51247-e304-4bcc-87f7-8e865dbb6962",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3532e2-e66e-4ac8-80bf-895ce65ff425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e56c86-e3a5-4a63-903a-7f390496d7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15feaad-431d-43cf-900f-ee08d8cce609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d44abca5-1b8e-461d-b28e-56d69f11ac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449a42d-dcb6-4681-a84e-b521f26282e2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b7927-7493-4f43-8321-aad805173f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672dd93d-79be-44d5-ac3e-d1d3a4b1aaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea995c-e249-449e-a6b3-3007b815ef28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de9f422a-fa61-4111-a8ca-045b14ef113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e705b16e-0497-4d06-b9b3-7afabb6caa7d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392f7680-fa5f-4507-bd1b-34443999f8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a05f837-7ea2-4852-9f6e-906814e16e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a18bc-2f38-4ee4-868c-cc72831a7a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2ea9b0-7193-4a67-ad73-7553ef808078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7bc4f-760c-40e6-b073-f3813c4ceab1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdf0745-f96c-4319-ab9e-ed95c5f06b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e54633-e37f-43c9-a2a4-65c879a5b1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0d8df5-7672-465b-a3a1-db91083b03c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d413c525-1e88-4294-9140-245b5be22498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897133aa-6e2a-4457-b09c-d189308bd174",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9c7ef1-1af3-43c8-b697-c89710d6d43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54969226-0c69-4c97-a3ef-e96947b0bdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144fe692-4d68-41df-9b41-b8beb84bf963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7cd044-a0bb-44f0-9756-f3b7c22f0d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc8dda5-2313-4ada-a10c-a797f035b1cd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e6614-2861-4a47-b171-55472b593da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9a252b-3db7-4be6-b4de-3b2e6afe5f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790c85df-0c43-422e-bff2-3a6d79949c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f42ce8c0-a6f4-403c-a872-ec20ff5e480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d7649e-8ee7-4a6b-b411-714491273dd7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b6140e-3971-49e3-b873-e0ba7c1cfce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379b8689-2146-4683-bb8f-e4224d61a0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9518c09-399e-4b36-9b11-452513acb976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18d7d0bc-683c-44de-9988-b1b3f7bc7856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de569a54-24ae-493c-a729-f4385789c601",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656d4edc-ffc1-428d-9932-3e5165faec56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec01576-3b5f-4f79-95c8-249b9aff06d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de58cc36-c3e8-4680-b9eb-2cd691620353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d710fac0-8037-44dc-8e52-c833321c5f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8400be-80a9-4eef-9c38-897a3bcd51e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d22d57-5eb9-4a44-a1ad-6493228ba274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e714fca4-656f-43b8-81be-dbe680cbc855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee466601-9fc8-4d0c-ae03-8adee9751170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8724a6e9-b999-40f2-81c8-8d4db7a139ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75219e37-33c0-46b4-81a0-f0ef2314ae36",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64206d90-b912-4d4e-91ab-b08a50d8944b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d09c932-2982-4d18-a3de-db48a562cf34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de8e186-4fa2-47e4-86e3-5186e2705243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60fbd43-df1f-4ae1-a0d8-1f96b2647ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a6e59-3b9d-4fa1-a5ef-5464aa118f38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7659ecea-0083-45f1-8ecd-553e404c3779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830cf233-2731-4405-9cd5-b7846a93af77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7cc9f9-275f-4dcd-a443-9c9d6633665f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdef56f-f566-4b49-be38-86ce83105bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e882bd-1a1a-4d04-a3ed-15693ad3c61c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a11960-9b71-48a4-be2a-0b6b3788cd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fd495c-9e1c-4cd3-9331-f9ce99db4fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd87f75-d3d9-48c5-8391-29e76284626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcd9e4e-7ae3-4917-b48b-d769e83cac74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043d7875-4f74-49b6-9987-2c19144face2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391c8d84-713f-4d57-8597-5e7c6a98821b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e0b5b1-3211-4b2e-9ae5-72998e568d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece7a4d-a20c-47fa-854a-d37751583bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a089298-1da2-4655-b278-4435bb0cefdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238cc34b-4d4b-4ab7-84ec-6aa29cfa4480",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb852b7-6f25-45ea-ae79-36d2ae9cb764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2d5431-8778-4725-95c6-438ecf5b69ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd8b5c1-66ae-452c-a3a3-57e76d7d3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2874f2-5166-4f83-9e67-d9b5a59d4fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2c9ae3-f61d-44b9-a1e3-8b176280e407",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b182fa5-afca-44a8-943c-67e13d3ccd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb388028-8276-42aa-a7e2-c0366bc4986a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7395264-04b0-467d-b727-fce559a0df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8763f469-4df0-47c8-8c87-a4e29891671f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750f94bb-600e-49f0-bcbb-a790fba6451f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e88292e-4465-4e60-a183-6ae447e4e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f954e2-bfc1-45cb-b2a9-7cd54f40d8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5a9b3-9b4c-4b1c-a19a-491d48ffd67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25fc8d0-158c-477a-b9eb-5d7cbe61d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48add96-6f5e-469c-bb2b-f86ca66ad84d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a5141-c1c1-4bae-953a-c26dac32c854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34224b5a-141d-4447-9524-37559ec57f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a3fc6-e393-4af9-8e0a-4be8667157a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b324c82c-01c5-4960-9f18-981111a01fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b065ead2-bcbe-4724-9a92-69055f13bd62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01051483-273a-422e-a379-4fe2dd850cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99abb57-a6c7-4145-affe-f0480d950a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b3551-5e84-4b69-8b87-3d9c81feaa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af8bfe8-987a-4cd5-b51b-5383c90c7196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453d70a3-c959-464e-a418-fd584fc4a0d8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb02c8c-7415-47e6-a8df-2f4b09b04366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61776860-e373-4781-9bb3-df83c3b89417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07403d63-3de0-4cef-8ee5-6ade95176d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf33dde8-d856-45f3-8a51-9292fab58be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aa85aa-18da-43f3-96fb-aaa370815fac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50df439f-bf9f-4a61-a2c1-35ec094ff441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63ff5a4-ab0f-493f-bc12-6d84391e0a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4227e2-dc9e-449d-a2c7-a69c986bce89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae0e7fa-809b-4efb-bc8f-e01233f3ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1390ac9d-aea1-4cce-b7ec-3802e97a9710",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739f71f7-46ff-44d9-8804-137c8c80f866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7274f8d7-9b2f-49c3-b991-81d817935940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25170612-130c-419a-a2ab-2e8b5cbdad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f98c5cb-a2bb-41a4-9004-2d93f427d752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789bbc36-68e0-4430-bf6a-7733a413218e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec62b88-deb7-40e6-bc7f-94c7eb524bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f3cb9d-ffb9-4a6d-9b17-2c8492f9b3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46afce2f-783c-4d83-a6f8-ebb3d3d08dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45280b27-7083-4476-9426-aa142067245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2ee562-4adb-4a90-ba42-b259c521770e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd99b56-a687-4ab6-b318-1757b108475b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83640c5-f9a3-4499-a59d-25f45c90158b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c4608c-cf25-45fd-8e00-a1350d2b93a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67eb0706-e09b-4156-b670-16e8e19e081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633a2199-f46a-4696-abb3-774ac145bbc8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed8fb2-4ec3-4533-ae05-ec44a4f793a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155d25d-4201-4438-8507-32676a7643f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb4ae9-f59a-419b-9dd6-e37ff8708f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e67a41-512b-4ea7-83b3-776f6838115c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f520ea6b-40a7-4874-822b-63f2717f8c7b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b669795-7f24-4a81-882e-e737cc32dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0aaa45-83b7-45a2-abb0-8fabf6f0ba83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84608c24-dedc-4cd7-b58a-95878385eedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9978ccd-81cd-4eec-99e5-c91e6bff30f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae7aeb-0ab2-4939-9b90-a4cf6e97b496",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc28e42-7f35-44cc-92a2-cee26fbdd225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa740a0f-b4a9-462d-9b51-65209ff3add6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3401db-1a61-42fb-9a01-4b92430e4b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad4f726-228a-44f5-a33f-6ca2c916f263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cdf322-c906-4a74-8fd3-d997078e2601",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349efce9-77f1-4dc4-bb9f-449128b77818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd308b0-b04d-47b5-ad7e-131a91e249e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a243e8-3a9a-416b-bd64-cb8144a005b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ba83da-f8a1-4460-bdf2-b24e06237292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028dfdcf-01bd-4591-ab3f-1b672d02f205",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f34b26-856b-4133-85f2-9873156c7619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de477bd-4595-4810-9ced-d965fa1a892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aea223-813a-4ac2-ab14-cf04b09b51e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e0b3e8-1a7d-4842-871f-d41e2b261988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a4ae1-e916-46de-8fff-114313c7f9a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3c8f71-a513-4431-a418-ee2a19186518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fd2ed5-3185-41a9-a3fc-3cb9d1b6d76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c05864f-bfc7-4659-b687-79c5b580a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0f3843-0158-42c2-ae66-7c47a1e45a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6502be-3ce4-4f9d-924b-f98399443ff0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138f8487-1338-43d7-aa98-888d00483bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9f6d94-c42f-451f-8097-0d427f378843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb00da56-1852-4b0c-846b-3cb36d11a132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc749eea-a741-4d24-822c-6ca7cf2c0b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d857ae38-0b3f-4f97-a9ba-1f99370570ed",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518309b-0f9c-43c9-9126-451a90f195ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0770d5-36a6-4ae8-9a3b-8c7297871dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639a64f0-f7fe-425e-b156-e80d498e5a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4379f601-ba59-495c-8a09-1989d7bf792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73728f7b-4809-4e47-a416-dc257fcc6167",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05574e2a-08c6-4861-883b-86ca30f76e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f327e99e-0928-40e7-81b1-098d09adf97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55bdd47-85c7-4186-8aec-d3522e1f8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb8417f-73e0-41cd-94c9-e8f32533474c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75405b3d-7cf4-4619-8661-4bc61906fb01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59ec8474-e109-44d8-9cbf-2b34039f6b1f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267997ea-6f32-4739-b1ca-52e054255ff5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "10389934-4849-4e70-8513-6bded8607952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed50a82d-0fb3-4fa5-89f0-b87729f51af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a70c127a-ea34-46ed-b53b-e43e4c2bfe26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6afc9d84-e56c-42c4-9b86-60dea7e5f6df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f386618-b290-4e73-a9e0-9a105d245067"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "805c2ff6-0054-4d85-8362-6006b2e43964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7ba1d23-7953-44bd-90b1-d5b4007eaea0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e466592-d14c-487a-8eca-186f8996c261",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "748738f0-409b-417a-9cb4-1e6456007eb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00c3c1ed-1163-4d5f-b01f-3fdfa45d81e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aadad4a1-c650-4485-b963-84bd3861d205"
            }
          }
        ]
      },
      {
        "id": "f83ff84e-475d-487f-b7fd-e548481aa182",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c055ebc1-8322-4ded-b1b0-27859be53b2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10b6466e-aee5-4708-8824-e6f294027e6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9b7375e-cfe9-40f0-acce-26704e978004",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e22d0d-1b82-47bd-b73e-84ff0f3c6ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035a10b5-6cda-4d40-a653-41e49982e681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a01d17c-9b9a-47a4-916d-b4b3a2ceecc9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b9084c-859f-4f7c-b6d6-527806068991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89c895d-2952-4b81-be5c-7ad4243e1706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb1835b-cbb3-4564-a550-2bacb5a318cc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060e590-bd60-48de-be68-c29c5ca5e033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c81b22-5728-4c35-9344-5574ef559e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d2d232-d79f-400d-90a4-445aac717a64",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eaf8ea-8dce-4e05-a3fa-de90f2005aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262134d7-53e9-4fde-a0d6-22c11294d646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0166cc2-e91a-4916-93cd-8f5501072397",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe250cce-57bf-4979-94cd-36937ac1ca45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3057c33d-3e19-4f47-bf29-9da669667e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23906d2c-ff3b-4325-aaa8-020fc6b89824",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc6c308-b2e6-41cb-be4d-646b58088554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc54f06-c8f1-49a4-8e77-08f22e4c1c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5294bce2-1d81-40a4-a825-8ab891d37d65",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0969c418-47aa-411a-9bf7-a75dbe400955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90e5719-f14e-4fe7-82a4-5bf68d455ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a13e1c-5d88-4cff-86ba-536d915fb8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5d4fed-ee68-47d2-8fce-0d6db5c61fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609fa7ae-21fb-4131-b6af-54f9f3edcbf1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945021e3-5423-48ab-b4ef-dfd74628f49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed9269a8-a2b1-4717-ac59-86f1014812b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b4cd69-4d6b-4af1-8db6-c1e3a118f6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebc580c-6feb-4074-ae87-d83239ece4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8584f959-0eca-45da-b2ce-70c55e80979c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae775e5-3621-4c6b-b41e-1bec5a4c3f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d659f118-a753-44c6-bfd5-63cd6d683131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe2a797-5ef8-43f4-8309-46cc36a890e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4289be0a-d55d-493f-8003-56f9bc306f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f23cfc6-e6fc-4013-85cb-1af2fb2c6c7e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aaed9d-952d-4596-9fb9-288824f5155c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ba0b87-875c-428b-b64b-72263e471761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aea763-6df1-4f44-9055-ac3babeeca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3775225a-365f-4a04-a520-648fb19aa513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d075e6d3-e566-4a7d-a863-05a815c70acd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfe2734-83a9-4a7c-9eb1-23650ab1fb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaac2ca-4231-4e51-ace6-d1ead9e1b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f462e20-3d05-4af9-9cfe-d6ad137c44ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e1ef4e-1b2c-410f-a9ab-7631668bf0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be49d8a-3cd0-42ca-9636-92e4ff9557ba",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7147ef30-fdcd-4bd2-a530-475e6c498c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905a2837-d502-4647-9a8f-87b1003539a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0fdae6-410f-447a-81f4-375f6b30e395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1b6d1b-4610-49ec-bd3a-6896e875b267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e89b12-35bc-47b7-a890-d3467ce039c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b3760d-a716-41b3-ba39-2eb5a667a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30069c3e-d07e-4a93-8e14-e54460fa7cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60230c43-5913-4f0b-b3b6-62b00b76d058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca3e194-6a94-49b3-88e9-c6c2d263f3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4184a862-6224-4de8-b99c-b31e0c8d254a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c98f2d-b519-4550-ab90-59a4010c2674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db31a37d-a6b3-4638-8836-e23d4ab7f322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e1e9c-0d9d-4038-b679-1c96e39ad381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce06c555-33cc-439b-beee-8b25f50994cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb82e956-5948-42d3-b3dd-cb76933b8cc4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12d7af0-d7ff-4fa9-97d6-0d11cacb742f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de69d86-564d-42e7-a11c-6a20e5994267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e57e26-8a47-47ab-85b1-d9b020185ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919a2b00-f8f2-442d-87b5-7ba0cb4850cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa588b7a-1974-48cc-84cd-b7054afba0f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c0894-b33a-434c-b0f8-35e441bdef8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ed5a0a-e269-4105-a4da-4e2be5c16347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3b98ee-4dec-4e37-bc71-4a9719d8026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5313de-eba1-44af-8904-aa13f8044eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cbb674-69ba-49cc-b632-9b728015dc0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b2a25-ea63-444d-a82a-9511966ed1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548dd726-5c25-4800-91ef-cd232a5974b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a9891-4239-4309-a636-1d6eff7f3b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f58d7b-a3da-42c4-a847-ab0c809201df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2863d438-2f58-43ff-91fb-93d273e4bd22",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c223dde-c21b-4131-9c1d-9e9c160049c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3f32ef-10e3-4925-882d-955a8a53326c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cc8e36-c7f5-4033-837c-b5caced9f2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2704f88d-44aa-4644-ad5e-3c535238505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de303dc-6326-45e7-b946-4154d4e9a011",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180f9de8-de8b-4f50-8e22-0b66e0e075d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cb8562-2555-4419-8ab5-7ff354e4f685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023a3c7f-a96f-4057-8fd9-5f0fba2d149c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89061848-7c08-40d0-8207-1d72f4145c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a687a832-cc96-416a-8b09-ed74c72271ee",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4ff403-647e-4b88-849a-659fc574fe61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264d7ea6-0b74-4c9a-ab5b-d141eebc28c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f894ddde-55bf-49f1-b3c1-009a5dbdc2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180d2a2e-3b1c-41f2-b319-305e8d4bac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3115d283-e6bd-433c-b340-63f1c8b39d89",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583a024a-8d2b-4666-95b4-210b5a7a9cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e289a7-2270-48cb-9268-944e6467213b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fb2c22-5678-46ed-938b-69d2b6045732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035a8fac-349e-4fb9-b141-750b76efc0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb9b84-5c19-4eb8-bc9f-ea474e1ff23e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354a7e37-e1ac-4cb9-8963-95bd9b63a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff25108-6f19-403e-8cf7-77c4ee998a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b61f47-8e79-4d70-b461-6f656f9f8885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0c5d79-6c7c-48ce-9660-9f4c0a81eb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0d3623-0b6b-49ab-a9f3-84ef8dd3ba72",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca312ab-e58b-478b-bf88-9bb9f97de65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445b4dea-834c-4a7b-b90c-de72b33fad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa285c81-39fc-4e46-9516-c6a1c9be54c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767a5891-db79-4bbe-b590-50f39ba121fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26287ea8-8009-438b-af84-3527c2da22a8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e630f4c-3013-4240-9e07-c15470cf0029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97be8923-9bc5-49d3-b103-223d736354d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5920346f-9b7c-4306-b857-212eaa93395a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f1b709-faf1-46ea-88d1-dfe71ed63cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46569414-85bc-4d28-8b94-f60fa639fd4d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b79747-9678-4ea4-a3dd-2d971515ba68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef633de-b3df-4c82-a803-0597661f562a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d46042-ff13-48e8-acab-2e61f71c1870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2252b0cb-d399-4805-a47c-6076c66b8293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eddd56a-b007-4a7f-9030-ff0f4d985713",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0eb3ee-6f93-4099-9584-f5f47472a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4efb0da-99b7-4b7b-aaf3-1d9f8e7d7d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665ef80-37f5-4053-b6c7-ea259cb7d21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27017bd6-c43b-4d41-ba07-048af07951b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea00dff-df7f-4536-ad37-6700a8329a30",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafbde49-f71f-4fc6-b05b-a27075ac9214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ebe003a-cbb5-4b7b-8b09-72d30eddf898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba5f82-b945-4d1c-a105-8f2853d1966b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bb21a4-5ba8-440a-8f50-53a3917a29c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2919e364-b1fe-4c79-81b0-4ee60752bb68",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e0feb4-8722-46a5-9707-0db744b5c1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7f6005-34a8-4f5f-8aee-25a1f8f23f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2ce7bf-fc22-476b-a9fa-ca99b2b923ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a537b2f5-e6ac-4316-b22b-7faf2ede0d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a07000-3636-4603-b661-3389b7c9be99",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7db108e-9f03-46b8-b484-84cda614e114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7390fd8-3315-4102-ab06-1ccbf52340e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbbebf-1b5f-4faf-b64f-97dfd4688769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369d67c3-87cb-400e-8711-21e90690b91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62864a-d837-4e99-8495-d5272c6e7355",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba2060c-acd2-4511-8873-d73fd4beb658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de00c99e-20f6-42ff-8f31-800663cd7ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2162cd3a-0e32-4e9c-8574-0e3b0cc1e448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f8c858-1d33-4025-954f-934c8c87a094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ac34f5-2fa6-4b26-862e-0eef63e62b3f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce621dc-9413-4759-bb29-9bf892084f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b860bc35-4722-41b4-8dfe-6c7aff76ac40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f0b0b4-f215-4a47-9b8f-fffce83123d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72603c37-0d40-43ff-b2f7-049bcf1dc8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee1cc8e-9a8a-427c-9c47-71313660e100",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1166ba22-9b81-4d0a-933c-89e47803abe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ebd9dd-99b0-4bec-bfa1-b9e09e77ebe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2d43c7-f28b-4f5f-91b5-6e98f391b800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d5ec89-35f3-48ed-8341-ab39a1406a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b1b003-88a3-499e-86ff-fd684351202d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17000469-45aa-417f-a454-d25a55604d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e05ad98-03c6-4fa1-a17e-972ac5392121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42601869-85dd-4063-9b42-a8bd2c88222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecaef2d-c691-4d5c-a3a5-0212167711fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4aa0ff-d7ad-4bbe-9098-5ee20d86f463",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de107011-c549-4b12-a0c0-13aaf92c2d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1f0318-5095-48e6-969a-b9646d9e9818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d4a13-1a1d-49a1-8323-4dad45455d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da16286e-3ffb-493b-b850-b901a018a42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bb1ce2-0598-41e7-8854-32f5175b7161",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b49a0a-4cc9-454d-b120-c134c0bee49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fff4c48-437e-4bc8-ac0f-6ef067e9a3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb01f04-1acf-466f-ada1-ba0f6dffafbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd90747-5bd5-4fb8-a3e9-35e42a99aca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a27438-f709-482c-b81f-a6f4525f2006",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edebc0b-1ebd-4ffe-b34a-81533dfcaa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021ca7d0-5a57-4914-8265-b9c9a4921c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d155ce9-0c95-43f3-bd7f-0f93ec695045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf4a9f2-5496-43cc-b63a-5e3d74a44081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4108ed-8dde-496c-b51d-2b3e2acea47a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d77d8-a81a-4759-a14f-cd5b4dbcc65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26148513-8708-4431-bb72-d25153dcfc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f57404-278c-49eb-935a-8156110f87f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e585fe-9557-4ced-8226-b366e3593ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ffd4c5-dbbe-40b8-b83b-fda2d2a9d5ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fccd988-0996-4ef4-ad9a-c7ec2238f22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295b1b13-e68e-4874-993e-d151555a4bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0c273d-4155-4369-bd95-6f659e2fa712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d94a18-60e1-4ed2-986d-5240f87d6b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac47845-1059-4bf4-b6ae-7bf553059148",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d931cce7-af91-4597-aa12-2679c77cd9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dc8915-1111-4acc-8afa-1650f30cc1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4d6122-c69b-4f38-aeae-41dc60404e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240127d-41f7-4007-bec8-a0eb6e446733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a31ced-aa26-4a17-91e7-5677a518dda5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba72ce3-4b03-4d91-b4de-27460964e497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270d42a9-2a18-4b33-916f-9140931f1f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84499b45-3e85-482c-9fed-943fbb1f34d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8ecc79-d8e9-4f0f-bc5f-deef70ecc20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033221f5-6adb-4bee-87e4-7cd175f52bcc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e167c5ef-064b-42f7-8850-f944b920a0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cea2f72-0d00-4e62-ae61-578f8a0bc00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f8b1f0-6784-48fc-8c9e-d6159d479b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4879f258-0853-49bd-baf8-c3dd5bf3edfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d46474-53ae-4fdf-bbbd-9327a36adfa6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd253024-cb87-45ad-ad10-0473b5d7377a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebb7bbc-df74-4fff-ad21-81e57e86b5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f092dba0-c766-4244-a651-488a61a62fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dcb930-ad10-47d0-ab62-b51cbb415999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492980a7-9525-493b-8e0c-86ac7db2fc3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf574a1-885e-4286-b07d-c34e9b84adbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ebd083-7a80-4457-9aff-f5a916b07fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d3b047-61c6-445d-9be5-9d5a1b5c80f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165e9483-2432-4438-b207-f74ecacfda2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0a8fa8-1c48-4233-85e6-0f53908ed9ca",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b1298-cf8c-4649-88d8-76be2d55c4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9081da-0dc5-46c7-aee6-f7b81d235734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8d2f9c-440d-4952-95e6-aa07c0c4c93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e4de13-b057-41ce-bcc7-d00bdd0b28fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16cd1e9-b0b5-41ad-8981-c065bde92b3c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315ba14f-f512-4629-b2e1-fc761360c589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221c8a8f-9a9d-428a-aeea-7d52686d10f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4974b0b-6aa1-414f-8b28-3eba241da02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5907efef-c868-4243-b0f0-84a5c85f3c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7023b9-32cb-43c9-93ef-f75cc9e00af5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b68c138-f511-4b06-9e4f-33e30ee64caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0802f817-eb0a-4485-b88e-53d8ccdcd172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7f8d4-96d5-4db0-abea-85de87fd1017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a02af5-ee92-4889-9fbf-37ba5e816788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6165d088-b7c6-4729-8b55-64ed7c09cbf0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf19fd1f-c646-4eca-92b9-bd8c3a9c710a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88d9ba4-c0cd-428c-aa9b-22fed13629d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fc1c98-bdec-44e1-bd46-b82980bd95c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43525660-2f1d-4e31-8a88-a1729a30498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20277ce-b9cb-48a4-886f-19a01c0eb1c6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e22f1-6de0-422f-b558-b86c322d1c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0553ca-b29b-4fbe-a18f-743c913cd7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba842389-cfa3-44db-9c69-d27084d2cf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4860de42-acea-4bb3-92d6-23e44f5018b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9b279e-6ca5-456e-b818-07b34a263db9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef57f08a-ebab-4389-a4b2-5d1e3cc2e953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4512cdba-62f3-46ff-81e8-fdcf0f0e0825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1729e491-3c72-48b5-9598-614753db0419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e06c60-a3c6-461d-b4de-2370ad8bdf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1768a3-3c85-4bb5-a40c-c9ebba220008",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526cfd78-654a-491a-81bd-7ebcc2fb28c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2438d3c6-1e62-4fdf-a001-c80c215d297f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e43787-16b7-43e0-9f8b-e4da141c4ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f11960-26ce-43dd-beaa-7169c9e6591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5746f1-d5e6-4d5e-a3c8-6f527d69cd34",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5820bbbf-4618-4cf2-9732-9b378f33e168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1db09d-48e3-4427-b485-76134fed8af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6736bb9a-8b89-4804-af1e-5336ac4e29f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a49784a-10be-4d25-8232-330a3e87a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f03edc4-f34e-4021-8a61-d4194f81f771",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09ca158-b862-4d35-a209-a1e536e2d39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0221edd-2322-429c-9a1a-807d9bf4e393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7640d-5220-4714-bd9d-1c35f8089ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35679c75-722c-48c0-9a7f-77799df059e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68913bcf-0787-4bac-834e-e37a61fb4b5f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f419fe6-7bd9-4e28-941d-2c440326d8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b005d30-f526-44dc-9633-fad9b9bcd413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e059b63-9c49-4a2e-8a11-6fdbe04eb15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa4f546-c71e-4dc6-a0cf-5403ba95edbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed20f6e-d0cf-4141-9649-57cb46865f88",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8b4fc7-e1ec-473f-9c8e-5167718014c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa62587-9e2a-4579-a4f4-38794acc8bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038bbaf9-e68e-47de-9d9d-0aaae77fdcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb13465-cf93-4536-b9f6-958e9542a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07678ce0-a7c3-4472-85f1-fb3e7a513e17",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb1baa0-0270-4cb1-bace-250d6f785b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbd7c08-86a5-4e41-b7f8-7174e49fd613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a70f9d-3c70-42d1-b727-6ba216208240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f236477-86aa-48e3-94ec-df6c26150d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57be06c-5aa4-4a40-a81f-20c1d1e87b25",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1373bc-cd73-4dde-90cd-2baca2afdea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54290ee-976a-442e-891b-468c6df82cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c977eabe-91c1-4a55-9c50-0df43d83a2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d5ddce-06cb-4bc5-b91a-808eb003f564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48a34de-1486-450b-a0bc-74a728197a7a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857da0ec-c84a-4ba5-8817-f6f0bafed310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65568f2-4794-47d6-af5c-8c6563131872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf3e8c3-c750-492e-8983-3270bbefe3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb5d785-edbc-40c8-8ad2-4c219ff9c5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d3f25c-c7af-4d91-a4d7-4071238a0b2c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3fd5ba-a109-483d-8007-98f618738d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47f9792-0614-4a87-a8e1-1425ed54a3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8b76f-51c7-453e-b62f-d32a8607b573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00331d6a-595d-4198-8aea-13822b52d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c6d2da-5cb4-4be0-8839-c5887824d836",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaae104-8aa3-4f01-a632-2b63b46f826d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f9ba38-7a50-475c-831a-9851c702634a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa0e5d6-997e-4455-abdf-8ef83170e2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeca61a1-b2f9-453e-be16-1810ca4b42ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e937c8a-d811-42a4-a922-2abbb4469bb0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60deccfe-39c6-448c-bb30-c489f8b6b687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b51f9e-7d3f-4ebc-b8ad-6d202f6dff49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957f9f54-d7f3-43d8-b9c9-60dfdc2550a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081ca1fa-04ca-4782-a05f-2a22c768deef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b62573-155c-4d09-8637-87266357f5db",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905c7c2f-239c-48ae-8154-679b5671cf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe20b456-12d5-4ac2-960c-c61da35431a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c58e60-9a02-4ac3-91c4-d4e1f6ab016e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8bb1fe-6946-446f-a2f1-ed9b1d254b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c362635-974f-4936-9c93-cae4d682970b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857f3b35-a6dc-4e3f-80cd-89102b78f6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122efe62-ece0-40e0-81c2-bd946b841201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9cc3e7-3e2c-498f-8ddc-bf3bc2b4bfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f721f3-1224-4931-b6ab-ac47b68982a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2f83d-363d-46f4-88a5-0a25c2593a9e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a69a74-14df-417b-af11-46abc80420c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a14f38d-16c9-4c90-b780-8f42a8d7daea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e90780-9370-475e-96a2-af118608c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43eba296-68a4-4262-9bb3-1c85a9acec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a38a6f-7652-49b4-82b4-ec68bea6690a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4347d6-c0f9-4f82-9d7f-01874d8fe7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4cf4d1-5d2b-40ef-9e76-e136169bfcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216edd6e-7c47-4941-8aba-ce9576495793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a0ad21-c451-4889-9491-02aeb5fa110c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d9042b-7fa8-44cb-aab7-f30eff7498ab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfd8a91-4794-4d8d-8956-f6d2f5c76258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ca4557-1942-4635-b4b5-758f64fa87e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddacdd5-16a3-4018-b158-318c60fae59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5667660-7050-4cae-8325-29275f8e63af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe3752a-9c89-4c31-99aa-fb036c132fc6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d74a5ca-9279-4efa-8fce-a5a3dfaa6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e45f9f-6544-4026-8b64-ecd466e9e478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6d85ba-c22d-4eae-97c5-4c213cc2685c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6d603a-6132-4264-ae71-890bf5afe340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4fbd31-c618-43b9-919b-681e43027c24",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbcb931-28ec-45e2-826c-2bb8ead0e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17386ab-0208-4c0d-a72c-777ee4e2d76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c6f24-3b8e-4880-896e-a348ce993d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b585ff2f-dea3-44f7-ab86-0320556c3092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a314a1-2057-45e2-98c8-4eec46ee1b2f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148435bc-0caf-4eea-9309-ba8df51363a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff73ae15-fab6-4c81-be00-598de5982728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5ddf91-94d8-4ffa-be9e-7331a9e26e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7c591a-f247-4910-b83b-4f039755cc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5f59d5-f38c-4d39-b6c0-b4a172f6a6bc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26169619-76ed-49dc-b593-90eca55e1540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b03e8e7-9dbf-4138-ad08-c2dcab47129a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e9809-8885-4e41-b7db-a86644bf7dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360902ae-1905-4515-965d-c7e051a58173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427546da-fe62-4fd0-b100-00c209678a5c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0650318-79f1-483c-9c3c-f3604e07128f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bfe5eb9-5880-45bb-8527-8478c8d1c11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec9a162-b034-473d-8554-73e4cb554a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75257a00-3244-4df4-9adb-4c12b15de729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec1f58-d297-4321-9963-73b331ade76c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfe2aaa-a743-4ffc-96f3-907c5b670747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d2d049-c856-4181-9101-e11c5570b1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10ec4ed-0429-47b3-bee3-16ac84a44fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b3b119-64ff-42af-83ae-6d3d46298e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ec148-ba19-46a5-9563-7207e6024a3c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8e3b3f-0e28-4c97-9f43-c6e97a9b0a0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e59eefb-341b-4e88-aa6c-e8c4f82c494c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e41217-f65c-416d-964e-89e2c604e7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b286aa95-33b2-48bd-b0ba-4017e036bd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2423dd33-63e5-4dcb-acd8-563565fa07ff",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32282c8f-3bd6-441c-9e9f-783c0c8bedde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1fc7a9-3c49-469f-893d-a20c4ff911d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbadef9-aea5-4fb3-bbf8-bcbce2bd5b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe110b3-eb0b-4702-ae31-3d6b160222e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54409fe2-08e9-4e61-bcbb-f4a7e0e58800",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e0abcd-8e6d-42b5-b3d1-39f7f2efec7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d672470-a60e-4d9e-8f38-4906827fb67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f739235d-d8f8-4b36-8369-a8fe8f26aa84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4afa6d1-2284-4821-b9cd-167ad5455794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9723d2e1-605a-4e90-8877-9cf092bce443",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a1a54e-f8d9-4151-b8da-e5f70615489f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f38c8c6-dda9-4864-9cdc-0a05b67df3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ff45fb-8636-4314-bcfc-f09ad7eba498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265b0d76-cb42-4acd-905c-b6cd024271cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e572c2-b641-4a6b-baec-c93128e9d563",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a8a271-269e-4852-9ecb-d870b9779318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c322245-1fbb-46fd-a5e8-fd2a746f3365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbe8ca1-87c6-4844-956e-927eef8b84e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f793d205-309b-45b6-b29b-3070e3685cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0c6e03-438a-49c9-97e6-19d3e358cc10",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c229dc3-537b-42a9-a194-f3311163f381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a9d9ce-4b4f-4296-b969-8b5a1ac7e358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b683b45-b2fd-43c5-b588-9bf094697da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81c41a8-0ff4-47f2-8b08-fa9edc176fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a56ff0-198f-48bd-b537-77cb508f9f11",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb33beb-706a-416a-bc57-a33cfd5bae71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed18980-1dce-4c7b-afe9-c5961d829037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfafdfca-2be4-45bd-a533-1d6edd2ff6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd005eb-86c4-4ae1-9c3d-5ab69ff5505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac00837-7f68-4c4c-9a33-409f67787bea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd809f11-12d7-4ab3-80f2-26a3d3f470d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463d5216-5a80-413d-8a89-177788e174c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c032814-d101-459e-83f2-d36e38d00549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562bda33-cb73-42d2-a264-7e0965868470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23be0c54-9fc8-4561-8c2b-4ae765497035",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db82eb13-493c-4a5b-b018-d6197e928ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6043c8-97c6-4f11-9c7f-200f48e7a524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c12e25-333e-4b72-9405-31016eb97e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4925f75c-3aad-4614-ae80-b36d423db32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9121a-1305-4a04-b47a-8960b7d613dc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02d1a7e-bef3-4c04-b7bc-78c28454a470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae04a9e-a33e-4617-a2a0-aaf6095adbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f228749-a9bb-4363-83d7-2407d4bf4ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc2f9dc-6e58-4ab7-9853-a2b14ce2e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867ef86e-817a-440b-be4e-e4aed7cfda8e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7351f69a-3ed4-4350-b492-c090d2bf9c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c2b35b-48e0-4460-9707-5f3133982881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ade69-e1e5-424f-8425-5853549c8b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c602fd-9d9f-46d8-a557-dd6c10fc23a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d4c782-88b2-40a3-98de-6de4a96446a0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4891db81-53e9-4ddb-a781-c6fd0d68466b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfae610-bef9-49d1-94fe-012c324a0743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a0b7db-908f-4ae0-a7d8-4483d0314960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a93c9e2-6fcd-4167-b394-3b21b63d894a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24895eaf-6df3-42a5-b334-51124b165d61",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6cd3ea-9ea6-4703-89c6-a0c4cf4cb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267a1be7-ba3e-4b4c-a89b-d44bd4ef706a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83a3396-631a-4d0b-8c39-6d13d3559daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f540f221-127b-49ae-850a-9be8acc5dd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d05ae75-6957-4464-8add-a58f901e2d8b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740b729-f7a9-4ada-bc99-c8f2e535e17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1331828-1f1a-44f6-a294-a8afc5a4fd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ce506-e56e-47b0-b907-d518c256a759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4d71e0-b3be-463a-8669-a4878a0371d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b252aa68-8d1b-45b4-a131-e0f7818a3181",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cefc72a-006b-4285-b680-7b56b31480b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351b8605-741b-4807-bb14-ca392c583d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d3bfc-3da1-4990-aa2f-baf8691cc6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f011aa2-c605-490b-a3a3-ee0d593b3039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d448e7-cadd-4ed8-a2d5-8c4c46d96152",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba6063-7dac-47b5-8e60-a3d91a7565e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0943e020-c3f0-46fc-b86f-e595ab1beedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711628af-e77b-4689-a9e3-84a540e7c39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c3a77b-5a49-407f-829e-b80b4fb6bf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2064d907-f461-43da-a6e4-1e9f6ba6f047",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56679ff8-f658-439f-9f60-19e87febbef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56e01a7-8d1c-400e-9161-a210de55b4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da187b52-485c-4eae-9756-717762fb97cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3c1713-4459-4c53-b218-9ad1de3e6142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8496fe02-afeb-4f15-bf78-fb4eda6197b2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f2854b-9c3f-46e7-9834-e1ca5a42b2e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49778b67-a967-4ae5-8ccf-0487648c4bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ea1e5b-e059-44a5-839e-c8e48df98e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebcdae8-5619-4b0c-b31b-67324823053b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c094f-5b92-4386-ba77-b7be07b5bf58",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb03b6f-d013-4ec7-b15b-55c88b80d5f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece3bd40-9858-4498-9d4b-e4cf1713c5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1b82ff-88a0-470d-af18-50f493ee3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28873376-4f18-44c3-b6b7-0b8059410bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fe3219-d67e-4bc5-a911-d14a4213f800",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5582a2-27a7-486c-9303-fc48195ab3ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66991151-231a-4a7f-b8cf-19de8605cd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5051f67-c8d9-44bd-b766-2ffdf76998d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3083e93d-d02d-40a7-8082-b80088679e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69db9fe-5d73-4517-b2dd-55fc42cadd66",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937b410e-290a-4874-a4fe-3e8717b1641d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bbb9700-82b9-4073-ba28-a0829df64f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae8ad8d-e999-4dab-a76e-530c3707bfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57476862-cbed-4bb4-9ff9-3de2f8e2784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c2d1fc-244b-43cb-a36d-2cefaf64cefd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf5d7b8-d572-493f-bade-44718fa9f001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01eb629-e1ca-4a47-a632-e0f63217cd69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59b2eb0-6fc1-4034-b462-80713678b829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c0fa0c-0de8-456c-97eb-3be49e268ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9acd2c9-22c7-4988-9073-3fdaf1d7f09a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3037b935-11cf-4c84-a56e-a75a23f3a47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e92c0cf-9745-4b76-9f59-e4023cd67843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3917e1c9-cce2-47a8-911b-dc76f827f8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa6759c-df29-4ac8-876c-041658784f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4586f4-d852-4f55-afd7-7a3fbc9eb659",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d46c2f-26f8-42e1-a0b6-1f7659e20124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621491ed-7834-4cac-b230-a78f3b13748a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914c447e-18e2-4069-bd3a-bf2df05ae928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c569d381-bd76-4066-a1d9-551ce88aa192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a57cbd6-4d2f-4483-aba9-af5e658cbfa1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6602fba1-0866-4538-a314-474c3b694ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bbab8e-eb52-4a89-88b6-ce35616ca655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00443c4-c61e-4438-b022-ab5be8d92040",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526918fb-3961-465f-a3a2-4e047853199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a72b3c4-9f08-48ac-9d8a-cfa4dc9f8617",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b21c5df-9e37-4699-a57c-2b8c63615091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d5cba8-7a0f-4518-beb4-87fe2505eec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb322f5-801e-48de-80c9-7f1c78002a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34190ff-43b2-43c3-8ab6-4ec7bb575ac9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea59b9c4-cc63-42e0-a108-2e39e9d74fab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3973625-82a7-4b45-842a-01e1fdfd2f36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed2ed624-5d0b-491f-aa23-ce3bb116184e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0077d8f4-ac60-4c62-a545-6de8f88373de"
                    }
                  }
                ]
              },
              {
                "id": "e65ffb33-68ed-41d5-bd51-5b7f83996616",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edaf6090-a731-4832-baa5-d78f76b4b91d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f171099-b814-4f4f-b466-dbf536dda5f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1b3f06d3-6c26-43fd-a6a8-c4850b5e2691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e5d91f-0714-4400-9c11-a44f22168200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c400bea-b27a-4638-850f-13d03567b81c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a2535eb-b04b-499f-b23f-dd19b0a7bedb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c79fd1c-e8f6-4b75-81a3-153ff8ec24bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "423b5c9e-bb13-4536-b20f-4c66d62e1c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "407b8534-4757-46a9-a6ba-29b9675c4d9b"
                    }
                  }
                ]
              },
              {
                "id": "80b68d8d-ab07-4580-80c2-1c27553b65bc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c6901c46-78f7-4615-8178-2fbd10f01667",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d38830e-ce3b-41df-8e7c-7de80556d17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2e96cd47-91fd-4e3f-ba99-90cab7f732b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aef9171-1e5f-4108-b284-f904c58e4d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ba5782-1a3b-4086-8dc6-6558b8a3b748"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b16238b1-0642-46e5-a775-7a251524eef2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5af0b786-9b7f-4e41-bd6c-fd49c86f0d93",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6a19aa6-5efe-4713-b632-31b785fc9390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0ed750fa-2fc2-4bfc-9f5d-4c686333e13f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb544bfd-cf3a-4646-be3f-4b23674d9a92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1895e7b8-8870-4c9e-8996-40d91cc8daca"
                    }
                  }
                ]
              },
              {
                "id": "6f576a2e-eaf2-4fd7-b2bf-d027b384c3f1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cec5c36-5d11-4953-bb87-1ad22ea79203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf8e0443-280e-471d-8c33-76374f5e57c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4fb6aa3-e47d-44ab-87db-5febba208981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b7b9253-2db8-4827-bfd1-bd202a2cac91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c030fc9d-a824-49b1-91a4-ad2236fce8fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac8f4a6f-9d66-4ee6-9b06-1a78c66bb5ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed70e748-17b3-41ce-ba50-258585310a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5042bc2-7385-4862-bdc4-9292dbdf381f"
            }
          }
        ]
      },
      {
        "id": "7fe6f3a2-c62c-43c1-a3ab-79e82c65b32c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9c82172-d164-4507-8b65-1c6eaa3141b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fb93d69-69cf-4e7f-82d7-1934bd4ad45e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e681a256-9940-4af9-81c1-790e0f25230f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc54062-1e86-4d61-bd80-15e86e55c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "46db48b8-9c01-4830-84e1-df8599fcb40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1296d14-b022-4b2d-9941-edd69e33c437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04b6ab66-f6f8-4eca-ace4-a257a08e2090"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f6e5147-94d8-454e-b1b0-1ed76f45c6df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fcd74d4-8287-4c18-a11c-09cc8a79dd6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "842ba703-1448-4259-b914-23fdc1b519d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d12d6565-1c63-4c03-b518-816a89339a76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79039beb-a237-49b9-a760-21f7210c9a39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9bc5b3d5-813f-4ee5-bec8-461e5f59eb44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e672cea3-bd09-41af-a213-ded6debe163b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19b40948-cc24-4523-9be8-f631b0bc35ff"
            }
          }
        ]
      },
      {
        "id": "b63bfcda-91e0-4e4b-ad3e-ff0ee595e018",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c0128c1f-7070-42cc-a4aa-a8cf563a1396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fce90bd-ee74-4bb2-acd2-7a6a9ca174c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1796b1de-92be-47b4-94c7-cba99e5c97d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa72374-c38b-49b3-9d78-7793826cb212",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27281e1a-ad72-4cda-a64d-5031f718b2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abf0523-7d41-4a0a-bfd8-b125fadb4746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff68473c-360c-4128-ab45-2297ae5a8b32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5774ab14-3574-4943-8c06-d7072db2fcf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc645c3e-5eae-4093-acdc-697d0f669f0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b7ca9d-04f4-4a56-ba6f-d785126910e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0a00ed9-c89f-416e-b17b-016dce841277"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad6b060-893f-4385-be74-3411514797f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58c406e5-29c4-4b92-bbd3-01fe44d4ab91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bd50984-fec1-4647-b187-4b53da5875e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7633031-5f61-4172-b168-2979907c0cdb"
            }
          }
        ]
      },
      {
        "id": "30ebdb0d-e4ad-439a-a751-292ccfb12401",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ff365f38-6831-4f75-a83b-176398dd2542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93f96675-80ac-4840-8626-285bb708caef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84e63646-120d-4197-87f9-fc0960272355",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3ac52d-3d83-4f72-b8a4-b5c96330d644",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f881d6d9-5ec6-4848-8eb6-63c4eab6db73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc1f31-3e72-42e6-8a22-8d64891dcc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e6a99de-6861-4b8d-a0e9-94ca2703f208"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2e9b57c-49c0-4772-9729-50c09a9d60fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fd2465f-0072-4342-90d5-d3768a4237ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "978e76c4-201a-4c0a-a2bf-efa6d2e1af91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd448bf1-6d37-4f16-b00a-f22120527fd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68ea7325-b55b-473f-9dff-8bc4a1432f4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e40feb1d-a687-40b6-a48c-831b446ec06b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1718cce3-e7a2-46ca-abda-ce804bb450ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34bb4526-b377-4f8d-8f60-fa73a315c88e"
            }
          }
        ]
      },
      {
        "id": "375b78ae-01e7-4247-91ea-c3298107ff83",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38c65a6b-603b-4eb2-9dfa-42da72aaf83d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a8db9ec-3290-4772-8c50-c69e0f1d89d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4307ea87-7c78-42b4-be0f-6d7bbd05d7a7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e6d4175-af8a-4bdf-904b-c8fcc6c3e5d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a53386ed-2799-48d4-a41e-3599569658db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 341.38732394366195,
      "responseMin": 10,
      "responseMax": 8335,
      "responseSd": 997.8347427925257,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694824311018,
      "completed": 1694824420381
    },
    "executions": [
      {
        "id": "8649ea93-e7c5-407a-9820-ef12af053aad",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c6eab553-4e3d-4c1c-bf9f-70e43ac7ec65",
          "httpRequestId": "fcdebeb7-a19a-4d96-bfbf-ffaf90c6fbcf"
        },
        "item": {
          "id": "8649ea93-e7c5-407a-9820-ef12af053aad",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c38254be-bbfe-4d53-95ce-ba5dc4b71e1f",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "090f5a72-df3e-42ca-9d3b-3b21a1191d4f",
        "cursor": {
          "ref": "9d38d6bd-67c7-4ad3-a325-c4426ef526b5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "214ce087-90ca-4cdc-8858-0b5717b0813e"
        },
        "item": {
          "id": "090f5a72-df3e-42ca-9d3b-3b21a1191d4f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7cd278b7-ed8d-47f4-aad3-456f6ae032ee",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b4a12848-3da1-49c1-8f88-8c475dcc9107",
        "cursor": {
          "ref": "73288f24-0b73-4076-b614-001737a2b0c5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2df1092-9771-4363-a7b1-6bc71b59b48c"
        },
        "item": {
          "id": "b4a12848-3da1-49c1-8f88-8c475dcc9107",
          "name": "did_json"
        },
        "response": {
          "id": "90a054ed-969c-43cb-8eea-7dad511f9d9d",
          "status": "OK",
          "code": 200,
          "responseTime": 1546,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcecb28e-5beb-4471-8b34-f2b85fe6a8b5",
        "cursor": {
          "ref": "55fa1145-b383-4c89-bb24-e0daf7fb6afb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92df108a-3aea-4a5e-8cb7-f185a781b097"
        },
        "item": {
          "id": "dcecb28e-5beb-4471-8b34-f2b85fe6a8b5",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a35f090-8c95-4900-ab9c-02740bddb879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcecb28e-5beb-4471-8b34-f2b85fe6a8b5",
        "cursor": {
          "ref": "55fa1145-b383-4c89-bb24-e0daf7fb6afb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92df108a-3aea-4a5e-8cb7-f185a781b097"
        },
        "item": {
          "id": "dcecb28e-5beb-4471-8b34-f2b85fe6a8b5",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a35f090-8c95-4900-ab9c-02740bddb879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28bd96c-0e7c-4205-80ab-3657dc245334",
        "cursor": {
          "ref": "ca3dc8f3-177f-4444-bba8-b48c6c07fe80",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "58b744b2-3c4b-4965-abe0-d67bd7380134"
        },
        "item": {
          "id": "a28bd96c-0e7c-4205-80ab-3657dc245334",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2f037527-79d2-4298-a1f3-02e5719d0744",
          "status": "Not Found",
          "code": 404,
          "responseTime": 340,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096b698-b8ab-4aa2-8e23-8f0ac2d4d582",
        "cursor": {
          "ref": "e0d04e84-37e4-44b2-8a8e-5208d6c616ca",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ef1cd10a-ac75-402b-acd6-03da90991605"
        },
        "item": {
          "id": "2096b698-b8ab-4aa2-8e23-8f0ac2d4d582",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c3a4646b-d0e5-45c1-bcc7-90f2531d9e96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 324,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e3b2fb-1030-4b56-b651-04b4f59e3764",
        "cursor": {
          "ref": "4d42b1cb-21b6-47dc-8c4b-438fcc441784",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a023cdb3-d227-405c-8950-89c0c1758a7b"
        },
        "item": {
          "id": "f2e3b2fb-1030-4b56-b651-04b4f59e3764",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b5592165-e374-46da-9965-224b9dff26aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3612f45-2de3-4fcc-b55b-b9e72132a721",
        "cursor": {
          "ref": "cfa79dd3-2fb2-42b4-8b1b-29a379989f29",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "576347e7-23f8-4fa9-9b14-a17bcb25956f"
        },
        "item": {
          "id": "a3612f45-2de3-4fcc-b55b-b9e72132a721",
          "name": "identifiers"
        },
        "response": {
          "id": "0ab179e4-5499-483c-a2da-cb699a3ed736",
          "status": "OK",
          "code": 200,
          "responseTime": 1169,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d410bfcc-3f00-4115-b354-d6b3756a07a4",
        "cursor": {
          "ref": "46099bfb-7108-4fc0-b684-0bc58b75301f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bec79016-90e1-4048-9316-f2c35d6d4f78"
        },
        "item": {
          "id": "d410bfcc-3f00-4115-b354-d6b3756a07a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22c6156c-2188-4038-8e7c-08a549c3e649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474c3406-2655-4a95-be6c-4543492a9339",
        "cursor": {
          "ref": "338ea8b1-7603-435a-8bab-02260a53eebe",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3de44bf1-315d-4d75-ab3a-c8d8207b561b"
        },
        "item": {
          "id": "474c3406-2655-4a95-be6c-4543492a9339",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "faf91ce8-c093-471f-8172-597107347d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f2c115-35ec-411a-9831-c3716ae7ea4f",
        "cursor": {
          "ref": "bc105f05-8ae3-4da5-a47e-ac2d892497b9",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e5445f15-5eb9-4b8a-a92b-b1d1d6d4e548"
        },
        "item": {
          "id": "f1f2c115-35ec-411a-9831-c3716ae7ea4f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3926762e-e38d-47f3-a52c-1c19af3f2fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2cc6ca-0987-4c61-8ef2-4674300eef75",
        "cursor": {
          "ref": "7960ebf9-4813-4051-bee3-e187f8af4237",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a597b351-57ad-410d-b9a4-faa856fdedde"
        },
        "item": {
          "id": "5e2cc6ca-0987-4c61-8ef2-4674300eef75",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5055305c-7931-4f09-bb7a-3a4bb32e4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23806aef-fc91-4fe1-9faf-6f7f6204177d",
        "cursor": {
          "ref": "6b059fb7-c568-45f2-869a-81cfc3596a44",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4fca9603-525e-48ba-b446-49624e365356"
        },
        "item": {
          "id": "23806aef-fc91-4fe1-9faf-6f7f6204177d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0ec02b2e-f0a6-4f69-99c1-5b8c67610a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d42fc9-245a-4aaf-8adb-f6522c4e7ed0",
        "cursor": {
          "ref": "65bcaa9e-fc10-41a5-9239-22adcf888003",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca97f943-da54-489b-a6f8-a4e59fcda679"
        },
        "item": {
          "id": "44d42fc9-245a-4aaf-8adb-f6522c4e7ed0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e31442cf-d6bc-4ddf-9030-1685a76f763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16929eb5-0f24-4d53-9d7f-5b3c40d15998",
        "cursor": {
          "ref": "48106bfe-c0ed-41b2-820b-66f54c851915",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0b8f935a-9f30-427c-b170-150a8072c7ae"
        },
        "item": {
          "id": "16929eb5-0f24-4d53-9d7f-5b3c40d15998",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "595371bb-2268-48e4-9d27-fee9795e2d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03a1872-1486-4e21-acb1-e463fb77190a",
        "cursor": {
          "ref": "6c393e2c-cb51-4094-a78b-3a11263bd0d4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c0c20590-a116-40c2-8dd1-a78389d40cad"
        },
        "item": {
          "id": "e03a1872-1486-4e21-acb1-e463fb77190a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bc1a707a-bc94-45fe-8470-72f22a7733c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d419e7-28a2-41e5-bcd9-74d84795d6cd",
        "cursor": {
          "ref": "962d8980-bf4a-4a76-bfa7-72cae754939a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a4266669-22ca-4f6f-b330-7fc5fff6ca64"
        },
        "item": {
          "id": "b6d419e7-28a2-41e5-bcd9-74d84795d6cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e1a6f491-a5ab-49d7-be61-22bd89749c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c13fcd6-bc16-4d25-a2dd-2f09854d829b",
        "cursor": {
          "ref": "0bf09368-d32d-4a08-bfe8-e8f16b131f3a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bc59f60c-fe52-4cd4-a922-0f810ee07c20"
        },
        "item": {
          "id": "0c13fcd6-bc16-4d25-a2dd-2f09854d829b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eb130b25-7c3b-42da-ac10-d7107378210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d594bc-0188-467b-89df-ce415b001ca3",
        "cursor": {
          "ref": "9e8b8190-9d1c-4b59-a4ab-bf77021264f5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b9fa0c98-972c-48ff-a05d-ccc4da508f8e"
        },
        "item": {
          "id": "25d594bc-0188-467b-89df-ce415b001ca3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "20ba5a5f-add2-434c-8c53-9392006abae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86033a97-e073-4d5c-9281-452641625497",
        "cursor": {
          "ref": "767cefa8-8db0-4792-91aa-8e5dc69f66a4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b7723ff3-93d6-4639-b1c1-1f578e50f95e"
        },
        "item": {
          "id": "86033a97-e073-4d5c-9281-452641625497",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a5982273-8ba8-467b-96bb-347d8b653bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83556f1-a680-41d7-9ab5-0147b736db80",
        "cursor": {
          "ref": "ba6a791d-83b7-43b4-b428-202898573ae2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b06f99c0-ff15-4b5b-87f1-aa6736dde9fe"
        },
        "item": {
          "id": "f83556f1-a680-41d7-9ab5-0147b736db80",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4046f197-8d3d-4cd7-aa4b-774e48695a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecd66a4-6ee3-4df9-87fb-03ed9a489485",
        "cursor": {
          "ref": "904b615f-4c1b-43d5-a182-67275ccbfec7",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6bdbab73-c204-4384-b5db-8ba94aab419b"
        },
        "item": {
          "id": "5ecd66a4-6ee3-4df9-87fb-03ed9a489485",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "52ee30b1-c662-4330-b48a-ec4790c7a6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ef672f-a283-4b97-b4bd-ebbb5da40220",
        "cursor": {
          "ref": "fa7c0b6b-7e28-46e3-930c-f6fb400d495d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7bccec7c-0801-49b1-b680-6cb27180732a"
        },
        "item": {
          "id": "94ef672f-a283-4b97-b4bd-ebbb5da40220",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d52ef6d8-9e51-40c1-814d-d54ec9910e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e50a7bc-7df6-4da6-b8d6-4c94429eee52",
        "cursor": {
          "ref": "e34e19c1-896b-4a57-9ef7-36fb7a55845a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "98c2f2dd-87c6-4941-9b7e-9b644f829dad"
        },
        "item": {
          "id": "9e50a7bc-7df6-4da6-b8d6-4c94429eee52",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f6de667-d92e-448d-821e-dccf5e4840bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd1f14-d7c8-4aac-aa4d-f3576be2b9cf",
        "cursor": {
          "ref": "878b008a-b162-48fe-a1e3-1cd64985b392",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ed865a04-b402-4e81-80be-af34894b8fa8"
        },
        "item": {
          "id": "ddcd1f14-d7c8-4aac-aa4d-f3576be2b9cf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a62c808-1e9e-4616-b1e2-32c7b095f1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169f1f1d-d662-428b-b067-8ef6dc87db53",
        "cursor": {
          "ref": "f2e4af37-73c5-4453-8675-2deffa90b775",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0113bf92-7b92-4dd0-bc47-0d59726a9741"
        },
        "item": {
          "id": "169f1f1d-d662-428b-b067-8ef6dc87db53",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b006567c-1de8-4741-a2a0-9455a0a48d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b3c5bf-95d6-432d-ae60-04ccb7159237",
        "cursor": {
          "ref": "c82dc117-92d2-4c3c-a628-5a8acde528c6",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1c1b5aa2-8a26-4bf4-883c-e339e2099afe"
        },
        "item": {
          "id": "81b3c5bf-95d6-432d-ae60-04ccb7159237",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a4685671-bd3a-473f-a59b-63b17f70f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4702739-5563-4678-809a-11dec1d8d205",
        "cursor": {
          "ref": "58dcbc02-5146-4ec4-9496-b751b1cdd63c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b2420ead-31cd-4e05-8f6c-142827da19c7"
        },
        "item": {
          "id": "d4702739-5563-4678-809a-11dec1d8d205",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "42e13aa7-316a-4850-ae38-bca715a49801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b55a36c-be5b-4db7-b823-91cf9aecfe9a",
        "cursor": {
          "ref": "41067f06-fa42-46e9-a2a7-e965e438ac75",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95663dec-69c3-4c17-888b-945c206256aa"
        },
        "item": {
          "id": "5b55a36c-be5b-4db7-b823-91cf9aecfe9a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6296d9d8-ed87-4bf2-adb0-eb72af740348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c261b017-995f-4083-b334-ea4cea86148c",
        "cursor": {
          "ref": "caf03343-eed3-43e9-b2b3-cd5626764670",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0dd180a3-b760-4f23-b86a-9d135e1ef2b1"
        },
        "item": {
          "id": "c261b017-995f-4083-b334-ea4cea86148c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fcc9d27d-acce-43f8-b3d1-32642c509cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2702ffcc-9920-4eab-86ba-d0e52e3fd0a9",
        "cursor": {
          "ref": "70ae06b0-967d-4b2f-832c-8518f419c153",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8eb9e1c1-61a6-4f47-a792-71fa6f8a2fed"
        },
        "item": {
          "id": "2702ffcc-9920-4eab-86ba-d0e52e3fd0a9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "374ff189-2a0d-4fce-b114-4ca26971fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8ea7a5-62bc-4c7b-b802-151c291cbd55",
        "cursor": {
          "ref": "965a5464-9242-48e9-80e9-5b21357ab0fd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5f17fa4e-301f-4fb0-b1e0-dad3df329380"
        },
        "item": {
          "id": "ec8ea7a5-62bc-4c7b-b802-151c291cbd55",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "81957a2b-3c20-4870-8e8c-1dae04821849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0d5bbf-9ac1-46f0-bdb9-14f2335c511f",
        "cursor": {
          "ref": "d090d45e-50d7-4d42-8e4d-77bcc65e3dde",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eeb4c713-d9e6-4732-8d1b-721e488ac324"
        },
        "item": {
          "id": "fe0d5bbf-9ac1-46f0-bdb9-14f2335c511f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40954bcd-4d24-49a6-ad86-f036af42ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490f568b-7cff-42b6-9662-6574484cc18e",
        "cursor": {
          "ref": "032fc0bf-56df-48ac-8b24-fb4e09e4f0f9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9c514615-2ffc-49a1-92de-947816bf872f"
        },
        "item": {
          "id": "490f568b-7cff-42b6-9662-6574484cc18e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "13057232-6b0d-4e43-81ea-bfaeede4905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff69c843-9780-43a5-a51d-b8544f3db02f",
        "cursor": {
          "ref": "1649eb7f-292c-44c8-a139-784d95e49c77",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6c54d3ef-1d0e-4cea-b71f-684656b94e61"
        },
        "item": {
          "id": "ff69c843-9780-43a5-a51d-b8544f3db02f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4f53f4f3-6f00-4b09-91ec-62fe2f52817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcf873e-f9e5-4bf1-8a5b-f322184f70ef",
        "cursor": {
          "ref": "e0bb09f6-c4fe-4f96-8775-f4d53f62b9a7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fca0bfa6-fe7d-48be-8ecc-c246d6fb6f20"
        },
        "item": {
          "id": "9fcf873e-f9e5-4bf1-8a5b-f322184f70ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "045de71e-802f-474a-a96e-836874b40b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece8af41-75ed-4d06-b184-fb98fb24fe42",
        "cursor": {
          "ref": "3c64af76-4cbd-4a6a-848a-cf0c317b0071",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3f2d2a3-6e45-43e2-861b-92490fa6c0dd"
        },
        "item": {
          "id": "ece8af41-75ed-4d06-b184-fb98fb24fe42",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aec22ed4-b4b1-46aa-a2d1-f6e7a541ec0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df43230-11ca-4a8d-b8b7-d28405cd187d",
        "cursor": {
          "ref": "112ed38a-c3e8-4da4-944d-ebc6245d62fc",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7ef5acb8-6974-4d81-8f4e-bbd11c9235f3"
        },
        "item": {
          "id": "8df43230-11ca-4a8d-b8b7-d28405cd187d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1cd8ee9d-d37b-408a-92db-c0f39310f6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f910dd-8df5-43f2-9862-3728307de50c",
        "cursor": {
          "ref": "53783015-d325-48a6-98f9-55851cda85bb",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d4556b61-7093-4a6e-8a8d-f61fb07776d6"
        },
        "item": {
          "id": "50f910dd-8df5-43f2-9862-3728307de50c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "91aaf0ef-4614-4389-94b8-78bc23fa8449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8693896-69ed-4221-96ab-57b3fafca519",
        "cursor": {
          "ref": "9e822281-c96d-46b2-b15c-e485b087bd8d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "96b0669e-729a-4b6f-a746-75ed33391c04"
        },
        "item": {
          "id": "c8693896-69ed-4221-96ab-57b3fafca519",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "22a91a7a-ec8b-48ca-94d0-11dc2c99e6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32bdb5b-8288-4307-850a-c95427f3293e",
        "cursor": {
          "ref": "b7441738-a7da-4263-bcf4-c7b0c4f41072",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4c6183d5-3bf1-4e3f-8846-ca05aa0243a3"
        },
        "item": {
          "id": "c32bdb5b-8288-4307-850a-c95427f3293e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96ffc3a2-a160-4cb7-8bf1-96b1e4c2dcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00351ca3-1af1-469d-a02e-303870d2e523",
        "cursor": {
          "ref": "6f233a19-27c0-4373-bc6b-c62154a86e26",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c73ed13-bc54-4e18-a46a-910e9f7e5409"
        },
        "item": {
          "id": "00351ca3-1af1-469d-a02e-303870d2e523",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1a991267-25ac-439b-9ecb-e8a79fc7bf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57d3f8b-7105-4f20-b1b7-a69a9ebfd5ea",
        "cursor": {
          "ref": "d3cf8b8f-a05b-44b8-9ef6-32c0554d4e9f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53857d00-05b5-4389-831a-d9d2ee6306c4"
        },
        "item": {
          "id": "f57d3f8b-7105-4f20-b1b7-a69a9ebfd5ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f6f632e5-99cb-41e7-9d32-cdcc126237a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02671931-2b30-4a1f-af82-0548abc4bed3",
        "cursor": {
          "ref": "d3829fdf-7602-4cc6-a2ac-9e7840f98e46",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6855dd10-9f3c-4e60-b364-c4c8eced1d79"
        },
        "item": {
          "id": "02671931-2b30-4a1f-af82-0548abc4bed3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "22bd0ef4-19b5-4729-9ec0-6fd8121b0b05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b4123d-4289-4e79-ba62-0e376fabdee9",
        "cursor": {
          "ref": "632dbc7e-fe9f-4ca2-84a0-bbf4138be3b5",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c399cd0-c083-4909-99b2-b3c56ee17e09"
        },
        "item": {
          "id": "51b4123d-4289-4e79-ba62-0e376fabdee9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1f98f5be-c984-4d6e-998d-00ac948b3dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7185e0a1-16a1-431c-9387-d943b9b4578f",
        "cursor": {
          "ref": "24a22d70-00bf-4a4d-928c-8febd5946646",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c35c163-05df-484b-a952-1bc2cd154216"
        },
        "item": {
          "id": "7185e0a1-16a1-431c-9387-d943b9b4578f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f59f05b6-77b6-4b87-9206-90fe0d4bc1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f3dcb6-5350-45af-8c0e-06374c86c548",
        "cursor": {
          "ref": "46fb1068-74f0-4ed1-80c2-1d3cb1b719b1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "85162a5e-b8bb-480a-970b-3df3c719e50e"
        },
        "item": {
          "id": "e7f3dcb6-5350-45af-8c0e-06374c86c548",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b01f22c8-1704-4a50-bf48-288f19248c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7775be53-6a87-42f8-814d-c958f4eea7ca",
        "cursor": {
          "ref": "310f00be-9d7a-4fbc-8ae3-bc85f3e1c522",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cf926197-4ccf-414f-a815-c5e93e8070d0"
        },
        "item": {
          "id": "7775be53-6a87-42f8-814d-c958f4eea7ca",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "47e45d58-38b5-45de-ba83-5192d633466c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87962017-700d-4850-a49a-211e24e0fc3e",
        "cursor": {
          "ref": "7f7857ff-6e11-4aaf-b37e-460ed3766d1c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2bd2c022-d4a2-425e-a14c-19275e0ae409"
        },
        "item": {
          "id": "87962017-700d-4850-a49a-211e24e0fc3e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b110f718-1688-4451-b099-f993f581303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c5d91b-e13b-448f-901b-c3f54d4b1747",
        "cursor": {
          "ref": "dff9c491-49df-467f-949b-d16bef5eacc6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0a5a2b18-491f-4de9-81f1-f41e112a14b9"
        },
        "item": {
          "id": "14c5d91b-e13b-448f-901b-c3f54d4b1747",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1631699-3a21-4dfb-9e3b-67d84ac5b398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e304c5b-fe04-4496-84b8-1871fc6a4f44",
        "cursor": {
          "ref": "31a99cf9-0c0d-412a-9029-da8b57c1b199",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ec854050-6e7b-4283-83e2-bc4a4161d88f"
        },
        "item": {
          "id": "3e304c5b-fe04-4496-84b8-1871fc6a4f44",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4fab4c1f-d6ff-4b63-991d-3db1967265c0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 584,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4498c04c-5a44-4a24-9984-48c8326072ae",
        "cursor": {
          "ref": "6183f42c-2b50-482d-8f83-9225ff7aa434",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "17221c40-f6ef-48b0-baec-adb6cbce7728"
        },
        "item": {
          "id": "4498c04c-5a44-4a24-9984-48c8326072ae",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ac3f2f70-ce20-4649-9b59-647eb549f93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4c1a8d-a26f-42ff-bace-8f0cb42ec208",
        "cursor": {
          "ref": "60cb646f-2fbe-46cd-972a-b424514ce79a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "92b92a83-6da8-42bc-bbc2-ea584d7c1a6e"
        },
        "item": {
          "id": "bb4c1a8d-a26f-42ff-bace-8f0cb42ec208",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7fcc2c26-4f85-4192-b0a2-ff05629bf263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46f4359-cc73-402b-ae99-8c58b6960392",
        "cursor": {
          "ref": "56dbda59-8651-46e9-8626-082c60331bc4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b9366cc0-89e1-440f-8fbb-7fc589250874"
        },
        "item": {
          "id": "c46f4359-cc73-402b-ae99-8c58b6960392",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c846de87-1459-4487-8364-f8b3df8ae1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36313790-b3a4-4605-bb8e-d8749f863a86",
        "cursor": {
          "ref": "2132d06f-3b64-41db-945b-171b188a1281",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b22ab32-1c9b-4943-a6da-07ce01f38801"
        },
        "item": {
          "id": "36313790-b3a4-4605-bb8e-d8749f863a86",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "75301b7a-cc6b-4cff-ad40-2c51009121ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a10808-c89c-4496-b409-81204583cd20",
        "cursor": {
          "ref": "9d25870b-5811-4ec2-8054-8fddd8cb76ce",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e015b275-c753-4b3e-8a46-ead8c487b059"
        },
        "item": {
          "id": "61a10808-c89c-4496-b409-81204583cd20",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f15fe5fd-96f4-4282-84ce-e53ca00d10ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef813771-d166-4029-a348-b0ff0e02d7e4",
        "cursor": {
          "ref": "b0b1da1c-2e4e-41e6-ac90-137a74ddb055",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd184238-edbc-4b0d-ae55-c8311aabe250"
        },
        "item": {
          "id": "ef813771-d166-4029-a348-b0ff0e02d7e4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3985e1ee-401d-421e-94bc-614834435f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9301c17-93e7-4a7c-8c43-f3f7d3cc56a5",
        "cursor": {
          "ref": "3d2e4809-fb2e-48c5-b456-cf2095e0db59",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9efb786e-33d6-4ed8-adc8-cca754eb515d"
        },
        "item": {
          "id": "c9301c17-93e7-4a7c-8c43-f3f7d3cc56a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8f152a32-eda4-447f-994d-3ed016768eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fce9e3d-b9bb-4acc-9637-f44c2ec8e3a9",
        "cursor": {
          "ref": "1aef261f-fd0a-44d2-8209-fe30ec6b3bc9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5cac442d-c3d2-4269-b2e8-6353e740fbe0"
        },
        "item": {
          "id": "2fce9e3d-b9bb-4acc-9637-f44c2ec8e3a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7c87c490-8905-4f1f-a073-8e729faab129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d310500-4724-48bd-a06a-f023db3e2548",
        "cursor": {
          "ref": "2bc8594f-d349-422e-a1b3-b9b5274019ed",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e351bb3d-879e-4423-b884-77138e625450"
        },
        "item": {
          "id": "8d310500-4724-48bd-a06a-f023db3e2548",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b6192363-3e69-4796-aa5b-bcea2a3f7892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b93afb-acf5-4154-8fd0-6ebc03566910",
        "cursor": {
          "ref": "c066f800-b375-4c22-b499-37096e9bd658",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e029ddd-08c5-4ec2-956a-90231adb2bbb"
        },
        "item": {
          "id": "65b93afb-acf5-4154-8fd0-6ebc03566910",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d77e5687-cda5-4f60-a4bf-876cc3aed2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce968068-bf73-4eb9-8059-a983584cc92e",
        "cursor": {
          "ref": "0b82fdd1-b4df-47b8-95f0-143a3f609218",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "17aaa220-538c-4b00-adf0-46f1b9b82daf"
        },
        "item": {
          "id": "ce968068-bf73-4eb9-8059-a983584cc92e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d457fba4-514c-428c-a039-5b6dda2500a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfd43a8-47fe-4968-a271-d1b68b6c61e5",
        "cursor": {
          "ref": "96313182-f1c3-4457-a22c-a7a12bc480a9",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "868062c6-d3ae-4780-b580-501e90c995b0"
        },
        "item": {
          "id": "ddfd43a8-47fe-4968-a271-d1b68b6c61e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "200cb554-58ae-494b-9ce0-9cd3c3eadeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d649525-681e-45d8-965f-17ce5f9c3010",
        "cursor": {
          "ref": "f7232373-9782-455b-b9de-7ec1d38c559d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e271cb22-48e0-494c-81ba-51865a5a20d3"
        },
        "item": {
          "id": "1d649525-681e-45d8-965f-17ce5f9c3010",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5f68cbd-ffcd-4dbe-b87e-b9afa39533a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b219845-6a6a-4430-b6d7-433a67f965d6",
        "cursor": {
          "ref": "21b4f1ef-552c-42c5-a832-7777616ff906",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a446ff24-c6a7-4af0-b4a6-d98de0e3fbb2"
        },
        "item": {
          "id": "1b219845-6a6a-4430-b6d7-433a67f965d6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1667324c-9d35-40cb-9ed8-7d93a5e945cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0db083-62e9-4461-bbe7-24a5323aecda",
        "cursor": {
          "ref": "1badb596-e071-4cf1-8349-4f26877bc889",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "285bc947-11a1-4a77-b23d-d373a12f7859"
        },
        "item": {
          "id": "da0db083-62e9-4461-bbe7-24a5323aecda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "316d5d04-e9ba-48d7-88c4-beb1bac9059c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3395907e-5c9f-454a-b85a-17aaef538912",
        "cursor": {
          "ref": "51bd879e-a539-4243-9813-1e1581528ff8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4ef67aff-d78c-44c8-a488-7be5ae774324"
        },
        "item": {
          "id": "3395907e-5c9f-454a-b85a-17aaef538912",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a50f8223-5e42-48cd-a357-80fa9bede028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fdd8e4-5601-446e-bae9-355e361d7ac8",
        "cursor": {
          "ref": "b40934c6-c8db-48c6-a939-b73c57591038",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0a4b9e70-827f-4719-b08a-1faecff82ebb"
        },
        "item": {
          "id": "d1fdd8e4-5601-446e-bae9-355e361d7ac8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c7d8c752-bea1-459c-ae82-1efb7aded470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6607e7f-89ca-47c0-af49-878cddeda775",
        "cursor": {
          "ref": "82300089-bdc6-445a-b6f7-55f2bd0cac08",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bcff789-cef1-4f95-abd6-efc3e544fe04"
        },
        "item": {
          "id": "b6607e7f-89ca-47c0-af49-878cddeda775",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fcbe9cb0-e207-4bc0-b1a7-6245fbde81c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6282a5e-11f5-48b9-9005-dbee99ca8ab4",
        "cursor": {
          "ref": "c38a2ad3-cf98-4c8a-9f13-2402368330d2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f0e1d33-c270-4ff7-b9e5-ff49f4de8bf4"
        },
        "item": {
          "id": "e6282a5e-11f5-48b9-9005-dbee99ca8ab4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "81b5610a-3620-4f35-af99-e4fc79bdbbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0bc554-0d73-4154-a1ff-e00cc158b9c6",
        "cursor": {
          "ref": "41a66677-ca49-4a0b-9112-5be56d89767d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e4aa214f-8eea-4a46-91da-a3f0926c3cfe"
        },
        "item": {
          "id": "ac0bc554-0d73-4154-a1ff-e00cc158b9c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cc84e54b-0476-4d96-8c4f-675bf37f26d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1815c2c5-d06a-4451-b215-c5e2cdd6810d",
        "cursor": {
          "ref": "d0e689e3-269a-46ba-a47f-c76f69cb074b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7463101-fb68-4711-8052-9772845cf21a"
        },
        "item": {
          "id": "1815c2c5-d06a-4451-b215-c5e2cdd6810d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2126af86-bf7d-46b8-8655-5367d3067f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b98d78f-75c4-404c-9d74-00f40b000dfe",
        "cursor": {
          "ref": "4ec79d7b-6391-48f6-88fb-fffeb7e8acb7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8d59ff95-48a6-4b7b-bf01-bf423b280add"
        },
        "item": {
          "id": "3b98d78f-75c4-404c-9d74-00f40b000dfe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fad04575-d3c5-4074-b154-7aec7ab6ba46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1095df0-2baf-4208-a49f-630a61ea7f48",
        "cursor": {
          "ref": "9f057bcc-5c04-400c-8f72-9033da4a9561",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dfd51842-1792-455d-ad5f-10f4527f68d8"
        },
        "item": {
          "id": "a1095df0-2baf-4208-a49f-630a61ea7f48",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9a4fd9f5-2949-4870-b37f-e06e7ccdfe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a732c1-cf45-4747-b1f3-850424d2ec47",
        "cursor": {
          "ref": "6da1f90e-2094-4772-b61b-8af48ea2c93d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3e94e385-96cb-4473-97b6-27002d32da04"
        },
        "item": {
          "id": "37a732c1-cf45-4747-b1f3-850424d2ec47",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad300c4f-023c-4479-b4d0-4efec0f4b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6505a6-8e68-4513-b4b9-b567573e43cb",
        "cursor": {
          "ref": "202ac4ab-836d-45d2-bce5-81d96018053e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b62404d1-cea5-433a-9e31-2521065db52e"
        },
        "item": {
          "id": "dc6505a6-8e68-4513-b4b9-b567573e43cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7d15aaa6-ec1c-49f0-865e-ac812e29b187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee9a3f-3d76-4063-b06a-ce5b59eb890c",
        "cursor": {
          "ref": "e9f1c6d4-0d94-44a5-b762-bc2fa90d9796",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "051af036-1d07-4e7e-9c60-c0d8d36582db"
        },
        "item": {
          "id": "47ee9a3f-3d76-4063-b06a-ce5b59eb890c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f6577b3-70b6-4aa4-ad76-b5fb72d1a7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce314d41-65d7-4c2b-97e9-f968bfa9a574",
        "cursor": {
          "ref": "a21b1cf5-d1e6-4088-bc58-4907a99ee97c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b35e1c96-c5ed-4788-8606-f7db990aaca6"
        },
        "item": {
          "id": "ce314d41-65d7-4c2b-97e9-f968bfa9a574",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2e73b97d-ca7f-434c-ba61-ee2c778086af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff0d7bf-0aa8-4244-a838-4d6e11b727ab",
        "cursor": {
          "ref": "7bb69084-d391-400a-aedb-f67b9c7bda68",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "722f86d7-60e0-447d-b9e2-4fed7329f1db"
        },
        "item": {
          "id": "aff0d7bf-0aa8-4244-a838-4d6e11b727ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fe346fd6-4237-4e11-8d21-28b2f385e054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7112d340-cffb-4b52-b4fe-17b1c1c4e1d9",
        "cursor": {
          "ref": "dce4aaeb-07dd-4be0-86ee-9e46d0880278",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "02da998c-d13e-41c0-bd35-56313aad724e"
        },
        "item": {
          "id": "7112d340-cffb-4b52-b4fe-17b1c1c4e1d9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "088eba9c-a88d-4020-be56-721dd1f6753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec526675-0913-4a1c-b848-bf14d2e5023f",
        "cursor": {
          "ref": "03b7c082-5279-478b-a546-9026d0ae26ec",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "afc7f6a4-e130-4f16-a22c-2ee702b2e2dc"
        },
        "item": {
          "id": "ec526675-0913-4a1c-b848-bf14d2e5023f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "15359aa7-fec3-427e-86b5-6d7948d3e7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b56d48-f609-4e50-8ba7-a449fad7d5bf",
        "cursor": {
          "ref": "e69bd062-da45-4855-bccf-e33f0cefee79",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d835a8a2-bbfc-4ce2-9754-434513d77806"
        },
        "item": {
          "id": "75b56d48-f609-4e50-8ba7-a449fad7d5bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b829abaa-b620-41d4-bd46-9d28b7da4e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab59ccbb-0f70-46aa-af5a-8cdb66c27761",
        "cursor": {
          "ref": "0ce6af20-b040-401d-8c33-ba7247ef3363",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f8b96200-923f-4f06-9f48-185d01db00d6"
        },
        "item": {
          "id": "ab59ccbb-0f70-46aa-af5a-8cdb66c27761",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c7130e5-1d68-4a71-bc76-5cac8b2baded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35d1bb1-f677-4cf1-aff2-ca40155403c0",
        "cursor": {
          "ref": "276582e3-3717-448b-990a-8bb331d5efe3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10694cf0-491c-4878-80c5-2b1200f9a1a1"
        },
        "item": {
          "id": "b35d1bb1-f677-4cf1-aff2-ca40155403c0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "78b521e8-806d-4f06-8131-2954e9e43305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3acbea3-93a5-45a4-934b-13d7d68ea77a",
        "cursor": {
          "ref": "bf8b0a26-e4bc-41f8-bfef-a9e47cb9b7e9",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b76fe87f-362c-4abf-abe6-4d6cee0ab596"
        },
        "item": {
          "id": "d3acbea3-93a5-45a4-934b-13d7d68ea77a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06c2eb13-f3f2-4a82-83b8-d584bd4426ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82614e6-473f-4340-a9d3-b8cee7935056",
        "cursor": {
          "ref": "7a597b9a-36f9-4a26-bdfd-326eecf5a06d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d09886d2-a9d7-4378-9f31-e61778715f47"
        },
        "item": {
          "id": "c82614e6-473f-4340-a9d3-b8cee7935056",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "95ff869d-a6f5-47ba-b5d7-2efa053c3a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f557f19-d250-414f-8f96-9aef79bfc79f",
        "cursor": {
          "ref": "2dc390c6-abe2-4d94-9b7f-bc5a45de5b27",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "06704a1c-3e3f-42ca-8b58-a2bf914a6ea1"
        },
        "item": {
          "id": "1f557f19-d250-414f-8f96-9aef79bfc79f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ce4e362c-60c0-44e5-a30e-22458d925488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e095a51-0e42-405b-83ac-13c6dca0837f",
        "cursor": {
          "ref": "ad4cb619-c320-46f4-a6eb-010443170d77",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fd5ad6a5-7246-42ea-ace2-7f36183bf675"
        },
        "item": {
          "id": "7e095a51-0e42-405b-83ac-13c6dca0837f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "615dd607-5eff-4947-b74b-cf93c1b8fb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778e44c6-c80f-4a58-b7e3-d9f3cce386b8",
        "cursor": {
          "ref": "cda18c0d-059f-4775-b2e1-2251271127d1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1576e642-efff-4eb3-81c3-0e648cef2f01"
        },
        "item": {
          "id": "778e44c6-c80f-4a58-b7e3-d9f3cce386b8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "74462176-a953-4bc1-9561-fadca19dafce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3ded6-ea59-4276-a88f-111cb7c10877",
        "cursor": {
          "ref": "c4cfe966-b3c1-444d-8862-77b61e434cdf",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "601c6d70-ae6b-4beb-8769-20252e50176b"
        },
        "item": {
          "id": "9ae3ded6-ea59-4276-a88f-111cb7c10877",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ae6120a9-1479-4445-a65b-3821bb7662a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994dc638-9ba2-4b28-b824-d71f39539584",
        "cursor": {
          "ref": "b79240f1-efd2-4c99-8299-8a28a1dd1686",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b281d26-1042-4861-b89a-36422afdf402"
        },
        "item": {
          "id": "994dc638-9ba2-4b28-b824-d71f39539584",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a87c4196-90b4-41c5-a397-3ac1f28ce423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483942b-0f75-4249-aedd-107d3ecf8eb5",
        "cursor": {
          "ref": "49c3db2e-9168-4da9-aab5-6b5ab22d7741",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "59416a1f-b2bc-4862-98c0-0770d768a20e"
        },
        "item": {
          "id": "0483942b-0f75-4249-aedd-107d3ecf8eb5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a1f49ad-b11b-467a-9951-b2486b38faf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63557759-dd17-47b8-8f77-d289966ef65c",
        "cursor": {
          "ref": "1cb1a40e-db45-46b7-8b32-619a637ca198",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3f9623a8-bd47-4b9a-a26a-9201c17c57a5"
        },
        "item": {
          "id": "63557759-dd17-47b8-8f77-d289966ef65c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f8f6922f-21b0-4eb7-b43f-b1549f9e35b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc61e59-ad72-4812-9871-fbe347eb0ccd",
        "cursor": {
          "ref": "868d97c3-ffa4-4aed-b777-4d69b04db4f4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "afd3965b-85f4-453d-a83d-b2b1328f3f34"
        },
        "item": {
          "id": "2bc61e59-ad72-4812-9871-fbe347eb0ccd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a0f9e778-23af-483b-8970-bb8419a066aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d126a0-e03d-4b3f-9bb8-69f674c0bae9",
        "cursor": {
          "ref": "3cca81fe-0488-4000-a17f-715854a3308d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "da937cec-d428-4d20-8a58-590e10193ef2"
        },
        "item": {
          "id": "46d126a0-e03d-4b3f-9bb8-69f674c0bae9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "49f3fc9d-01c9-4e4b-a35c-655906e65c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db117d4-0832-4157-8d1d-0b8f3b468ed7",
        "cursor": {
          "ref": "c70332e1-6e30-480d-a7db-1aca503dcbd0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dcc18c2a-d8a4-44dd-8419-47e151c52776"
        },
        "item": {
          "id": "4db117d4-0832-4157-8d1d-0b8f3b468ed7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e079301-958d-4901-9ce2-3d8e66b49d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612c2a57-81ce-4cab-b687-cae3face85ba",
        "cursor": {
          "ref": "3c6d407a-03a5-4097-8d98-f0d1d2097ff2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f51803db-4953-42d4-859d-b065c2ccb163"
        },
        "item": {
          "id": "612c2a57-81ce-4cab-b687-cae3face85ba",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cedff989-1fe3-447f-af9f-7a33a9388831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f8172b-7a6b-4f64-8161-31ae31b5724e",
        "cursor": {
          "ref": "97800e0a-f3a1-4a00-9099-9432421dbf72",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cba7b39b-9907-4029-94ea-f34536ba4317"
        },
        "item": {
          "id": "59f8172b-7a6b-4f64-8161-31ae31b5724e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d1ffd32c-aa0d-4772-a535-3b0196d85932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7749cd8c-5fa7-442e-a72c-dcd809373a9f",
        "cursor": {
          "ref": "b44ec555-8327-4d97-bf4f-b5441080a1f4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "12b88edc-e812-4fb7-a9e6-f8b79fe1381b"
        },
        "item": {
          "id": "7749cd8c-5fa7-442e-a72c-dcd809373a9f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f61d02b-1614-49e0-b6c5-5f1984e605b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4393caf6-ae43-4abb-ae8f-1532119bdddf",
        "cursor": {
          "ref": "baa2d18a-4e88-4432-a4a4-8b2399cfa501",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "382e4fde-f47c-4c5b-8020-8c72c8a36b27"
        },
        "item": {
          "id": "4393caf6-ae43-4abb-ae8f-1532119bdddf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e949aaf2-5be1-4811-b16a-032cc05c22f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fd5ca3-6e40-414f-bd6c-4f16f69457ac",
        "cursor": {
          "ref": "e0a97c7d-2029-4db2-af65-320db8651984",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d58b5951-8cfe-4a6f-bbc5-5f312f69b7ca"
        },
        "item": {
          "id": "a0fd5ca3-6e40-414f-bd6c-4f16f69457ac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f5f55474-d81d-4099-893b-08c9f6c2d3de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad5d370-f901-4077-a62d-850be392adda",
        "cursor": {
          "ref": "345d174b-ef89-432c-b77a-6a5480add20a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad58fcc1-fa00-4546-a13d-cade61697e4b"
        },
        "item": {
          "id": "dad5d370-f901-4077-a62d-850be392adda",
          "name": "credentials_issue"
        },
        "response": {
          "id": "588ee3c8-18ed-444d-b788-d318601ac068",
          "status": "Created",
          "code": 201,
          "responseTime": 8335,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4959359-8f7b-4c82-94be-45425ae3d871",
        "cursor": {
          "ref": "3f0dba5e-72ac-40e0-b2c6-e1041d0678f3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e01cd597-325e-4f21-bd63-021684d72771"
        },
        "item": {
          "id": "f4959359-8f7b-4c82-94be-45425ae3d871",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d8ca7d9c-a7d4-495f-ab09-0ef6b2f6a7a9",
          "status": "Created",
          "code": 201,
          "responseTime": 7916,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5348b7c-94f5-4e97-a23d-9160e646ae56",
        "cursor": {
          "ref": "b8ebd679-faf2-4c33-8539-842768e26297",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a1f50af7-add5-43c5-90a0-1401f83560a3"
        },
        "item": {
          "id": "b5348b7c-94f5-4e97-a23d-9160e646ae56",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "50cad46f-9eff-4981-87d5-c7c605dd2a5f",
          "status": "Created",
          "code": 201,
          "responseTime": 7323,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa37924-b6d5-4698-97d8-9c8cb2eb1811",
        "cursor": {
          "ref": "6a583a03-cffe-4aa2-94f5-a5d8f7441a6f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7a31bae3-b1fb-4cde-929f-947f5fd8bf41"
        },
        "item": {
          "id": "5aa37924-b6d5-4698-97d8-9c8cb2eb1811",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6b1a0e6f-86c8-4469-a05d-863864762dd4",
          "status": "Created",
          "code": 201,
          "responseTime": 7083,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2e045a-6e84-45bb-b3cb-f3fddf289856",
        "cursor": {
          "ref": "49464a89-45de-41ce-acbd-1d551995cbde",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a41de1aa-8aa1-498a-96c5-77c9d86b9ccb"
        },
        "item": {
          "id": "fc2e045a-6e84-45bb-b3cb-f3fddf289856",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e0fe4fd3-16e0-4b92-87b9-48f2f9a52a14",
          "status": "Created",
          "code": 201,
          "responseTime": 7502,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd85a96-4527-4644-9f17-c0c13acc439f",
        "cursor": {
          "ref": "0a54152a-61fc-4e86-b6eb-4e8869d08f79",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12e1dd4a-52f6-4c16-9b70-4b6a345ea902"
        },
        "item": {
          "id": "ecd85a96-4527-4644-9f17-c0c13acc439f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0f3e42dd-0930-4f65-8fbc-24c1d1ad579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1794861a-7693-4959-bdb6-7832ac1ae072",
        "cursor": {
          "ref": "b4165036-da3b-432d-8b2b-d519c58201fa",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4bdd65b5-e81c-4df8-96a9-37203ae1461d"
        },
        "item": {
          "id": "1794861a-7693-4959-bdb6-7832ac1ae072",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff6ae95d-5f11-43c4-b64f-46b2a6f9c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb2c53a-8d3e-438d-a7ad-718cdec180bc",
        "cursor": {
          "ref": "1e0a6e47-c2a0-4a77-8387-8b7c4d49c63d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c8f1b67d-42d2-4aae-b8f2-6c0d177d33d1"
        },
        "item": {
          "id": "6fb2c53a-8d3e-438d-a7ad-718cdec180bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7cc2c2d6-fdb9-41b9-8b30-be2901a10a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbbc8e2-73d6-46f9-add9-c014adc7c0b0",
        "cursor": {
          "ref": "7128c0d0-ffe2-4d44-8c1a-12bf1778ff24",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6ae129d8-3e4e-46c2-875c-8d9c9f1f08c9"
        },
        "item": {
          "id": "7cbbc8e2-73d6-46f9-add9-c014adc7c0b0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "987d5623-c560-4a92-89c9-a3a21520bbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b8b20-9fc2-478a-901e-4820045923a9",
        "cursor": {
          "ref": "586556e9-9589-45c7-a942-e4eee2801fa0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8ab5d295-c546-4c25-87ef-f2501e83229e"
        },
        "item": {
          "id": "a05b8b20-9fc2-478a-901e-4820045923a9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4b2d211-11b5-4550-b987-b4020fbcc6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a9e6b9-9802-4bab-a479-aa7aaf43f4ba",
        "cursor": {
          "ref": "0af95382-37b1-4ba2-be74-dee9d0db7004",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e6b234ed-fbeb-4bf3-8c32-5ae0cbfb1db1"
        },
        "item": {
          "id": "c9a9e6b9-9802-4bab-a479-aa7aaf43f4ba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56b64109-941e-4fe1-91b1-90304ae21f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bf1fd6-1dc2-4ac2-b13e-e94e8e65b540",
        "cursor": {
          "ref": "a5632624-d883-4b0e-b497-66c0f3583592",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f48e91c6-b936-49c8-b3b3-32d74ac7ad66"
        },
        "item": {
          "id": "79bf1fd6-1dc2-4ac2-b13e-e94e8e65b540",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e7364ec-b7fc-4fb7-92d0-9daba6d86600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcbffb7-daac-4010-ace2-3f2ea3c25b5f",
        "cursor": {
          "ref": "2eb086cb-0f25-41cd-afaf-2d58deebde17",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "af3edd1e-fa0a-464c-9285-9ac1abddf182"
        },
        "item": {
          "id": "9bcbffb7-daac-4010-ace2-3f2ea3c25b5f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6a39307-2ded-4c9e-acfb-b2b807f41bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2d9ed-1fe2-4e9d-b927-74319e4447a2",
        "cursor": {
          "ref": "fb8678bf-404d-41a0-9099-811033561ebd",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ab35d437-574a-4e2d-8fed-80db431dcd8e"
        },
        "item": {
          "id": "7bb2d9ed-1fe2-4e9d-b927-74319e4447a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d9243a75-cc84-47c1-86a1-40d40386a512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae1d3f-45fe-433b-b4a7-4b7efeaed3b8",
        "cursor": {
          "ref": "143e5c6b-515e-42be-99c0-55f8636d7153",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f5ef9a3b-7ed3-448d-8ab0-46ed5d248700"
        },
        "item": {
          "id": "66ae1d3f-45fe-433b-b4a7-4b7efeaed3b8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8f78552f-bfe2-48a2-9b3b-bbe7c7e966f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1920279-553c-47f9-81c9-21ac9fa42789",
        "cursor": {
          "ref": "75ba44c7-8f35-429b-9c2f-66d216c875cc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f16719d4-9ce2-4a81-9135-6b9b244b7ccd"
        },
        "item": {
          "id": "f1920279-553c-47f9-81c9-21ac9fa42789",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d20d8afb-3058-4c5f-b192-003ac69512f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d77e6be-019d-404b-8017-1d9c175ed9b5",
        "cursor": {
          "ref": "d6884183-6f81-427c-83fd-7a8a68f05e55",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "72597f06-d149-4b24-8125-85b63c045f64"
        },
        "item": {
          "id": "3d77e6be-019d-404b-8017-1d9c175ed9b5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9863bfe9-6642-4aef-9b07-fb2bb4c7c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d415e48-12f2-466c-9d9f-925a6fe316e4",
        "cursor": {
          "ref": "b938c0eb-f819-49e9-936b-b690e3ec9e08",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "31922709-6f01-48a4-b17f-49886d7b9843"
        },
        "item": {
          "id": "7d415e48-12f2-466c-9d9f-925a6fe316e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "53d55b9d-477c-48aa-ae71-15ffa45786fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60406d6-a861-4c6c-b399-63882b1d98bb",
        "cursor": {
          "ref": "92505c02-19fa-4815-9b70-cba6625189ad",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "28f19e1e-0250-4467-9f02-74b9a130d45f"
        },
        "item": {
          "id": "e60406d6-a861-4c6c-b399-63882b1d98bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7796bdc9-5177-43a7-97f9-5f68dcf9cdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f74cef-fa1c-4a23-92cc-f61b4d96e1ac",
        "cursor": {
          "ref": "cc2e1b53-0961-4150-9109-db4151de1331",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "427e4287-b2af-4a61-bf58-b18d014cad17"
        },
        "item": {
          "id": "a7f74cef-fa1c-4a23-92cc-f61b4d96e1ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59deb512-6968-49f9-9803-21dd6171f2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81008f5-5332-48c4-a69f-b4326edb8eb9",
        "cursor": {
          "ref": "c0a44ac6-0416-4f47-a2e9-fed9d84ecae0",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ae152e57-4e94-4ae7-b983-1d268cb7d23f"
        },
        "item": {
          "id": "a81008f5-5332-48c4-a69f-b4326edb8eb9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d775349b-e20d-4928-8b6c-a58f1ef9b2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d958b298-8abf-4531-883d-e7d7156db3d1",
        "cursor": {
          "ref": "b42e0865-2f37-4d45-be03-6e006fdde582",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "263db0ea-d412-4304-8b4d-e79a0defb68c"
        },
        "item": {
          "id": "d958b298-8abf-4531-883d-e7d7156db3d1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "13aa7a82-5486-4c2f-8d13-1f04a905660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12083368-0951-4523-943e-58b852f910ad",
        "cursor": {
          "ref": "64360a41-5995-4f17-a269-7967fca205e4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5ae0a40e-3437-4048-959a-55893cba04ec"
        },
        "item": {
          "id": "12083368-0951-4523-943e-58b852f910ad",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cc43b8f3-23e3-465f-93b2-0e7d1eebfed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c4a038-9fc3-4c9f-95b0-e09846e888e1",
        "cursor": {
          "ref": "5c095313-dfc4-4dad-b154-58f332b1db79",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c6be88f1-0a18-41f0-b784-49cf32268804"
        },
        "item": {
          "id": "21c4a038-9fc3-4c9f-95b0-e09846e888e1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "711082f5-5e2d-400e-8d22-8d62fa611444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae8d94-59d9-46f1-b464-c76e01629388",
        "cursor": {
          "ref": "78fb38a6-b678-408f-b592-c0103cd29e4a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fd855be9-4ce3-4028-a9ed-521dfc0c7e1f"
        },
        "item": {
          "id": "fcae8d94-59d9-46f1-b464-c76e01629388",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "da053a2b-0f56-49c5-961e-f2610590ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2feabc4-5244-4ac2-b844-8cc9947a7b90",
        "cursor": {
          "ref": "f6479c5f-58a7-4396-ad97-b2cdb4473119",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "181ff450-d464-4d73-b6c0-f503ffd0afd7"
        },
        "item": {
          "id": "f2feabc4-5244-4ac2-b844-8cc9947a7b90",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07fde13b-d098-4a07-bdda-0ddc8698805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6db526-f3ef-4611-8010-b4502b205e6f",
        "cursor": {
          "ref": "cc232de6-0822-4e2a-b11f-5a79c475cea6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2cf936e3-0461-4fde-b620-3635f3ee4dd9"
        },
        "item": {
          "id": "fd6db526-f3ef-4611-8010-b4502b205e6f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f56f0f0-5d1b-4438-be33-44e94c39d7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5018940-82dc-4e9d-84ba-520ef08849fe",
        "cursor": {
          "ref": "0d54ee3d-ee5a-40fe-bbe3-ddadfeb8558d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dcaa5c45-b203-42c4-8ec3-4679f5661fae"
        },
        "item": {
          "id": "b5018940-82dc-4e9d-84ba-520ef08849fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14693a29-013f-4f9e-bc41-90c7a73a5c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caedca9a-4e56-48f5-ac7f-83b118a7843f",
        "cursor": {
          "ref": "3b7cb337-85e5-43d4-8925-ef0f5d5efdad",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0a3f78b9-973c-4aa3-ada1-3b8ef4d12c9b"
        },
        "item": {
          "id": "caedca9a-4e56-48f5-ac7f-83b118a7843f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eab667f2-4673-4218-9b88-98733a1cb6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8bbecb-b49f-4b35-a6c5-0fddf095596b",
        "cursor": {
          "ref": "4e8ca3fb-a276-4e19-a04e-4266a20af94f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "636a437f-a0ff-4e17-8800-14942052311e"
        },
        "item": {
          "id": "9c8bbecb-b49f-4b35-a6c5-0fddf095596b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f47290a-7abc-455c-8828-f862837ddbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba761bd2-b569-46e7-8aa4-ddd44693f398",
        "cursor": {
          "ref": "5ace6033-8eab-4448-a2b5-a472fa546f74",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ec30ddc0-b7d5-4ca8-a624-9b769a89a3fa"
        },
        "item": {
          "id": "ba761bd2-b569-46e7-8aa4-ddd44693f398",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "81d59acd-644b-48fc-b16a-fb7728193fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ad8bbe-39c9-4379-910c-7c2b7b76da55",
        "cursor": {
          "ref": "47a0ca8e-3abc-4dc9-9694-325e5a2c0131",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da1a38e4-adc0-4afe-aae9-f524049d2555"
        },
        "item": {
          "id": "a9ad8bbe-39c9-4379-910c-7c2b7b76da55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3ef53070-1b5b-43b5-9bc8-de0ad88d1114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f488f838-2737-4b87-bfbc-003aae4e5a2b",
        "cursor": {
          "ref": "43d2738d-dc98-4458-bf52-ae0170ae77bb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e84dd67-2b8d-4014-8ee6-7d4dbf4d69ed"
        },
        "item": {
          "id": "f488f838-2737-4b87-bfbc-003aae4e5a2b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df920c0d-e82f-45ac-aabd-071876b5829c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb8d340-cf61-47ed-9410-1625f6049de3",
        "cursor": {
          "ref": "400a748b-8445-4e5b-bf63-a8581f7b2f69",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a92147d0-8cf7-4794-a5bd-cc95a454e4b3"
        },
        "item": {
          "id": "dfb8d340-cf61-47ed-9410-1625f6049de3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e220cd8f-7f77-414b-9c2a-aa78e76d93d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860292fc-074d-40e7-b153-a579efe3b0f6",
        "cursor": {
          "ref": "43acbe54-52c7-4515-9eeb-62ec92b94df5",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f0a630d1-54ae-4cd5-bbb9-4d85cb67e008"
        },
        "item": {
          "id": "860292fc-074d-40e7-b153-a579efe3b0f6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cd2ef184-a420-4d8f-9900-f5e8210f2674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139cf316-53a5-43a5-8df5-cacdf3456d12",
        "cursor": {
          "ref": "710930e2-8573-4a44-bd56-a4de550287d5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "47985c97-dcdc-4f65-887b-bd6f85f62533"
        },
        "item": {
          "id": "139cf316-53a5-43a5-8df5-cacdf3456d12",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e112fb80-a954-43c1-b130-a4a267330e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3e3c2-f97e-4a53-8ba4-374e282ea64a",
        "cursor": {
          "ref": "21bad1d6-3dd7-4fc3-b9ae-9d273231a592",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "766dd8ca-872e-4b08-8a31-8a939b202684"
        },
        "item": {
          "id": "daa3e3c2-f97e-4a53-8ba4-374e282ea64a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bfed33f5-b63c-4c16-b753-bec0f2d6d702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf9aab-08a5-408c-839f-db5142ff398b",
        "cursor": {
          "ref": "e5f631d2-8558-4d49-9b88-5268d79d440a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e50aa8d2-e7f4-4309-af2d-9ce1e861bd2a"
        },
        "item": {
          "id": "5edf9aab-08a5-408c-839f-db5142ff398b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a9bcd9c8-c7cc-405a-b6e0-87a70717491d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602ed811-98c3-4df2-9d6a-a58542f0bb12",
        "cursor": {
          "ref": "6ba36ac3-4f46-4621-a182-657b6fc77018",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f8e7e151-cd13-4850-818f-5162c04e93e5"
        },
        "item": {
          "id": "602ed811-98c3-4df2-9d6a-a58542f0bb12",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf239e07-2e89-40ce-8d3b-272351bac23e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc4684-e0ef-4772-a274-bf82de52db40",
        "cursor": {
          "ref": "b79c2515-95d5-42b3-8b4a-521b2e9ac8f6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "848db4dd-c095-4f55-ae9f-8d0fc1a4ca5c"
        },
        "item": {
          "id": "87fc4684-e0ef-4772-a274-bf82de52db40",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10fe03d1-da42-451d-963a-7243a34fc24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ce9bdf-af08-44b9-9ec3-902a852bd8ef",
        "cursor": {
          "ref": "2b32b341-76a7-4d6b-b1c5-8fb897d05392",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a49c93bc-1b6c-412e-82ba-63167207d448"
        },
        "item": {
          "id": "55ce9bdf-af08-44b9-9ec3-902a852bd8ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "42c5b7a6-18d3-4cd2-97e1-f9cc01d77fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c31caa9-d8c7-4544-bbb3-7e12ce9fbd28",
        "cursor": {
          "ref": "e5fab1cf-548a-4b04-a180-725969634646",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d680889f-c3f5-4329-b706-18fec13134ba"
        },
        "item": {
          "id": "6c31caa9-d8c7-4544-bbb3-7e12ce9fbd28",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d80a541e-7d95-48e5-b172-592283e05adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf2a32-4db7-4aad-a460-b96d8c73cb3b",
        "cursor": {
          "ref": "782ebb34-b9d3-42ab-a7ea-5f84c7210093",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0fd03273-784a-4e44-bbad-dc2db12ec695"
        },
        "item": {
          "id": "eedf2a32-4db7-4aad-a460-b96d8c73cb3b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c6477ac-5e21-4fb4-8f98-726a65842ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b8b15-856a-463b-a7c4-e546966c4e4d",
        "cursor": {
          "ref": "5a268f7f-9559-4722-9ac2-28a116fa4b23",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2e6985a6-5e6a-40a6-a57d-36bec91c218f"
        },
        "item": {
          "id": "a34b8b15-856a-463b-a7c4-e546966c4e4d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3112aba8-6896-4ee4-9684-23b1fee7241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a51247-e304-4bcc-87f7-8e865dbb6962",
        "cursor": {
          "ref": "cf5484a4-9c7a-4439-bf31-6c0906f7e1f9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ebdcf5e6-7b04-4559-aa32-e8c35939e290"
        },
        "item": {
          "id": "d0a51247-e304-4bcc-87f7-8e865dbb6962",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "da3d5c45-44c1-48a6-bd14-0db3b8c9ded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449a42d-dcb6-4681-a84e-b521f26282e2",
        "cursor": {
          "ref": "dff45451-6f1b-4b2d-9001-ebbbb7b887e8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "deaee872-1d65-45d8-8c66-4128dcb82c74"
        },
        "item": {
          "id": "4449a42d-dcb6-4681-a84e-b521f26282e2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "16b1ecec-22a8-45b6-8434-a07964bc5b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e705b16e-0497-4d06-b9b3-7afabb6caa7d",
        "cursor": {
          "ref": "def48c04-15be-433a-a632-2f6b14a2a4cd",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "45f96b68-8c20-4520-9dd4-d8b0cbd5cd8c"
        },
        "item": {
          "id": "e705b16e-0497-4d06-b9b3-7afabb6caa7d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bd6b795e-222d-42e9-b3c4-b0827ac9af8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c7bc4f-760c-40e6-b073-f3813c4ceab1",
        "cursor": {
          "ref": "70054493-904c-4528-b49b-b07566f2b649",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3b3134cc-1436-4d84-aa7f-a344aadafced"
        },
        "item": {
          "id": "52c7bc4f-760c-40e6-b073-f3813c4ceab1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a95e7ff-4277-4998-9bc0-1c91bf558913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897133aa-6e2a-4457-b09c-d189308bd174",
        "cursor": {
          "ref": "caf7f535-da20-4853-bbcd-7b672ba4c00f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2bcb66b2-0023-4cc6-9ab6-7c4436b86cf2"
        },
        "item": {
          "id": "897133aa-6e2a-4457-b09c-d189308bd174",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "84eecaf0-8735-4269-88df-e0190b952fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc8dda5-2313-4ada-a10c-a797f035b1cd",
        "cursor": {
          "ref": "7fe1f5e8-81ac-464f-bde1-e114d12f0aaf",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5fd61aa1-6168-4b21-9af2-d95d20b26007"
        },
        "item": {
          "id": "5cc8dda5-2313-4ada-a10c-a797f035b1cd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23eadde7-abe8-454b-9995-975bb7f223f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d7649e-8ee7-4a6b-b411-714491273dd7",
        "cursor": {
          "ref": "b909ce01-ad23-46b3-830e-94331be08202",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "028f896f-046d-49f0-81b6-7ed294cb4619"
        },
        "item": {
          "id": "79d7649e-8ee7-4a6b-b411-714491273dd7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a7d605af-9cc1-4bbb-82a6-44fd058bb23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de569a54-24ae-493c-a729-f4385789c601",
        "cursor": {
          "ref": "0ee27ef4-73f1-403c-9de6-072d3910fe08",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1ab21ebd-1118-46e5-a7a4-252df9bcec45"
        },
        "item": {
          "id": "de569a54-24ae-493c-a729-f4385789c601",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c156c8e-1195-4bcb-9dde-4298078aaa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8400be-80a9-4eef-9c38-897a3bcd51e6",
        "cursor": {
          "ref": "21ffeeda-da4d-458d-9b75-3c69be7d41e4",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b9dd01a2-efd0-4b44-81f1-1b90b850372c"
        },
        "item": {
          "id": "db8400be-80a9-4eef-9c38-897a3bcd51e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b979f34-cca3-41fc-8a33-b62be999c8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75219e37-33c0-46b4-81a0-f0ef2314ae36",
        "cursor": {
          "ref": "dd2cbc1c-9922-4529-9308-3d8c06d9a36e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11beb822-ab4f-49b1-b957-45534a564ae5"
        },
        "item": {
          "id": "75219e37-33c0-46b4-81a0-f0ef2314ae36",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6e022baa-dddc-4770-aa96-e90e23a620d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a6e59-3b9d-4fa1-a5ef-5464aa118f38",
        "cursor": {
          "ref": "61668f1b-8cfc-4353-b5cf-357740c89b38",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "533d7eb0-db5d-4846-a3a6-48dfe5a788bc"
        },
        "item": {
          "id": "9d2a6e59-3b9d-4fa1-a5ef-5464aa118f38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "25e706e7-8b4d-4e77-8500-a1bd8d58f191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e882bd-1a1a-4d04-a3ed-15693ad3c61c",
        "cursor": {
          "ref": "6e8945b1-e068-4302-893b-c2c1e90b78c1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e671ef28-eb36-4e44-85d9-6e05b2ec71ab"
        },
        "item": {
          "id": "19e882bd-1a1a-4d04-a3ed-15693ad3c61c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa030046-2398-450e-b2c6-d279668854a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043d7875-4f74-49b6-9987-2c19144face2",
        "cursor": {
          "ref": "35ee90ca-86f1-4d6b-ad54-2262a702fb4d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7a50ee26-73e0-46ee-abb2-30f88a6df13f"
        },
        "item": {
          "id": "043d7875-4f74-49b6-9987-2c19144face2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97c117ad-3979-47b3-972f-d0beea73c39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238cc34b-4d4b-4ab7-84ec-6aa29cfa4480",
        "cursor": {
          "ref": "a82605e9-7562-4a7d-82c3-435281e9da3a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b5d7c3f-3851-4466-932c-a9428b506eb8"
        },
        "item": {
          "id": "238cc34b-4d4b-4ab7-84ec-6aa29cfa4480",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d484c32a-62eb-4f15-9277-8f3a077c3e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2c9ae3-f61d-44b9-a1e3-8b176280e407",
        "cursor": {
          "ref": "0d2f43bf-5088-4502-8621-40d0ebad1250",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1d0089b0-660b-4b0a-aff1-1369403510fa"
        },
        "item": {
          "id": "9d2c9ae3-f61d-44b9-a1e3-8b176280e407",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9446ac39-eaa9-46a1-bea3-a4fdb102dc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750f94bb-600e-49f0-bcbb-a790fba6451f",
        "cursor": {
          "ref": "04da2b2e-f50a-4e05-b46f-dd9805ae384f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "98427a2a-5808-498d-807f-7e7a830d9ca5"
        },
        "item": {
          "id": "750f94bb-600e-49f0-bcbb-a790fba6451f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe5f096e-b476-4c2b-aa81-85746eaa9094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48add96-6f5e-469c-bb2b-f86ca66ad84d",
        "cursor": {
          "ref": "ae139e99-aeca-49b4-ab94-a45ff8305bf6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0e4b6095-0ad4-4ea9-a7cc-02df447c3bec"
        },
        "item": {
          "id": "e48add96-6f5e-469c-bb2b-f86ca66ad84d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c296f3fa-f3ac-4e88-abbb-fe5d929bfc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065ead2-bcbe-4724-9a92-69055f13bd62",
        "cursor": {
          "ref": "54a19c32-6335-41b8-a59f-c43a9fb881c8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd3ce4d7-8276-4f76-b307-1bd0728b77e7"
        },
        "item": {
          "id": "b065ead2-bcbe-4724-9a92-69055f13bd62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d5e584e-ef7c-4abe-9b3f-5d20600a1432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453d70a3-c959-464e-a418-fd584fc4a0d8",
        "cursor": {
          "ref": "73e2c227-4dbb-4dda-8e18-ec4c74652341",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "487426cc-260c-44f9-a73d-cd2bda79ce41"
        },
        "item": {
          "id": "453d70a3-c959-464e-a418-fd584fc4a0d8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb860cb3-6e23-4ba1-b09f-d7aa0f5fdee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aa85aa-18da-43f3-96fb-aaa370815fac",
        "cursor": {
          "ref": "eb00f506-11e4-488a-b50f-8470bbe7c439",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "969e3117-7ae8-4e2a-8d6b-eeeab745c452"
        },
        "item": {
          "id": "68aa85aa-18da-43f3-96fb-aaa370815fac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "94f76a1b-9147-49f3-86b0-26e3fa18989c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1390ac9d-aea1-4cce-b7ec-3802e97a9710",
        "cursor": {
          "ref": "631ec959-73f8-4c08-abfb-541013500c54",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "016a9ae9-2192-4207-83ef-d704538e2c32"
        },
        "item": {
          "id": "1390ac9d-aea1-4cce-b7ec-3802e97a9710",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "44f23eb1-4229-4f53-8fb6-bbd5264b2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789bbc36-68e0-4430-bf6a-7733a413218e",
        "cursor": {
          "ref": "4a7014e6-d548-4c9a-a18f-415123579eb7",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "24d02909-7b09-4a04-b712-4a3b714055e9"
        },
        "item": {
          "id": "789bbc36-68e0-4430-bf6a-7733a413218e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d77e7f68-fce6-4db8-a264-6440f78c2ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2ee562-4adb-4a90-ba42-b259c521770e",
        "cursor": {
          "ref": "ed39744e-d91e-49eb-a40e-00fc7e27bced",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "933ce445-e950-4ad1-999e-b75d233f4808"
        },
        "item": {
          "id": "6c2ee562-4adb-4a90-ba42-b259c521770e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ab0e91b-66fa-4171-9d43-9e26f53f704e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633a2199-f46a-4696-abb3-774ac145bbc8",
        "cursor": {
          "ref": "75e6803d-f0d4-4636-b0c8-ba79fb39c38a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5a012afa-2207-4c04-808f-fa8357a8b100"
        },
        "item": {
          "id": "633a2199-f46a-4696-abb3-774ac145bbc8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba8e235e-fb28-4970-b945-2ecf59bab781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f520ea6b-40a7-4874-822b-63f2717f8c7b",
        "cursor": {
          "ref": "f3c04cc2-a6b7-4c81-952e-b04e7fe12b58",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "316f9e1a-e96e-42b9-ad2e-3b1bc5b61044"
        },
        "item": {
          "id": "f520ea6b-40a7-4874-822b-63f2717f8c7b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "92ee01be-85c7-4730-a7e2-e02c4647105e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae7aeb-0ab2-4939-9b90-a4cf6e97b496",
        "cursor": {
          "ref": "ab24fb3d-9ab3-4ec8-b366-14800d336d67",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "49f4d593-1681-4ec8-898e-d73f9c2e164a"
        },
        "item": {
          "id": "15ae7aeb-0ab2-4939-9b90-a4cf6e97b496",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd08a39e-f1bd-4c9b-a398-0064dea18728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cdf322-c906-4a74-8fd3-d997078e2601",
        "cursor": {
          "ref": "ea5d244a-e741-4e44-8a84-9fefb68ae06c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cf11ce24-8ff0-42f0-a9ac-6424ec06d84f"
        },
        "item": {
          "id": "a2cdf322-c906-4a74-8fd3-d997078e2601",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2e4cf354-884f-4eb0-bb3f-edce91a2e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028dfdcf-01bd-4591-ab3f-1b672d02f205",
        "cursor": {
          "ref": "9332fc6e-3c7c-4cdf-bc41-232356f74dfd",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ffc192f0-3dc4-4603-b099-359c01ee0e4d"
        },
        "item": {
          "id": "028dfdcf-01bd-4591-ab3f-1b672d02f205",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a90021e2-f879-4fba-8b21-f4fa6de3fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a4ae1-e916-46de-8fff-114313c7f9a6",
        "cursor": {
          "ref": "646c5f24-e0fe-4ac0-a860-dc0d2d9b9226",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7907f068-c36d-4d82-94f2-6c0c5b05e41c"
        },
        "item": {
          "id": "567a4ae1-e916-46de-8fff-114313c7f9a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "34df8bf7-e46f-43a0-b005-4b971e70f794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6502be-3ce4-4f9d-924b-f98399443ff0",
        "cursor": {
          "ref": "4f4b3ebc-4cbe-4b7f-89bb-2dae33478c6e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "19d1e8a8-5ee9-49d5-acdd-49d2b979d389"
        },
        "item": {
          "id": "ad6502be-3ce4-4f9d-924b-f98399443ff0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f7beb95e-27cf-4f9f-81c2-85fc2b4e6368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d857ae38-0b3f-4f97-a9ba-1f99370570ed",
        "cursor": {
          "ref": "6a478109-6708-4db4-b35b-3024e7fa1c81",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "380a3487-841c-4e2a-9934-28fbb7088fad"
        },
        "item": {
          "id": "d857ae38-0b3f-4f97-a9ba-1f99370570ed",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "55bac1f3-89db-4151-a926-3f4d5aad0d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73728f7b-4809-4e47-a416-dc257fcc6167",
        "cursor": {
          "ref": "8f8c1a23-768d-4993-a917-50c97bfb1f4d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "90fdb310-0dc4-4773-92fb-e3b66e5dc63a"
        },
        "item": {
          "id": "73728f7b-4809-4e47-a416-dc257fcc6167",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b2392d71-49a1-4cf6-8f46-e6d220f055a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ec8474-e109-44d8-9cbf-2b34039f6b1f",
        "cursor": {
          "ref": "ef9930ce-0b2d-49a9-89c7-6ff608940cf9",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d6f2742-0cc6-47b4-b5a7-998cd208bef4"
        },
        "item": {
          "id": "59ec8474-e109-44d8-9cbf-2b34039f6b1f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3bdcfecf-10eb-4156-bcfd-2caa8dce4063",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b7375e-cfe9-40f0-acce-26704e978004",
        "cursor": {
          "ref": "cac58cbc-46d7-42c3-b33c-92dde098f804",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b9502135-f7a5-42bf-b4d6-d55e68f4762d"
        },
        "item": {
          "id": "c9b7375e-cfe9-40f0-acce-26704e978004",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "671722e7-a29d-45cc-84bd-259ec51ce9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a01d17c-9b9a-47a4-916d-b4b3a2ceecc9",
        "cursor": {
          "ref": "2f87da99-7693-477b-988a-d6eb92e4b221",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a261774c-e1ce-4705-b253-96aa4bf508eb"
        },
        "item": {
          "id": "5a01d17c-9b9a-47a4-916d-b4b3a2ceecc9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eed1bf32-2e95-4e5e-a35c-bbbaa5b8ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb1835b-cbb3-4564-a550-2bacb5a318cc",
        "cursor": {
          "ref": "d1e489dc-6fd9-45aa-8322-1f5bc2c6f66d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a461545e-cd44-4cf2-b639-27b74f18098a"
        },
        "item": {
          "id": "2fb1835b-cbb3-4564-a550-2bacb5a318cc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d1d4a3b3-e182-4a1c-99b3-843bfd308dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d2d232-d79f-400d-90a4-445aac717a64",
        "cursor": {
          "ref": "70422f98-911e-4a9f-8790-e468f2ac6b0b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9e2e97e7-b285-4a1d-8600-430ae3bdcdb9"
        },
        "item": {
          "id": "11d2d232-d79f-400d-90a4-445aac717a64",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ff1da5ed-0dc8-4441-8dc1-3be11e7e294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0166cc2-e91a-4916-93cd-8f5501072397",
        "cursor": {
          "ref": "1433180a-c1f0-4df5-87a9-11e307254b43",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8362123f-9c76-4bb9-bce5-b8720f9d2bd4"
        },
        "item": {
          "id": "d0166cc2-e91a-4916-93cd-8f5501072397",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "81dc06b8-551c-43d6-a59b-96e2bb168bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23906d2c-ff3b-4325-aaa8-020fc6b89824",
        "cursor": {
          "ref": "ec77d5dc-7e8d-4a43-a952-72d090a66407",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6358c3ba-6066-4e00-a733-5e0b255c5651"
        },
        "item": {
          "id": "23906d2c-ff3b-4325-aaa8-020fc6b89824",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e2ecbc0d-79c7-4368-9dde-2dc363383951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5294bce2-1d81-40a4-a825-8ab891d37d65",
        "cursor": {
          "ref": "9d2af166-b152-4780-ad11-742b77f3198f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce6bb2b6-e1a2-4dde-af72-a0752bd8a734"
        },
        "item": {
          "id": "5294bce2-1d81-40a4-a825-8ab891d37d65",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "60d1d351-2f00-4004-9c49-3a40ff2f7d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609fa7ae-21fb-4131-b6af-54f9f3edcbf1",
        "cursor": {
          "ref": "2782f923-ade9-4458-b3d9-71f09a3817d9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3296f870-9dc3-476f-8e3f-641d529367bf"
        },
        "item": {
          "id": "609fa7ae-21fb-4131-b6af-54f9f3edcbf1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af7043b2-cd77-4713-800d-6c1ff075a3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8584f959-0eca-45da-b2ce-70c55e80979c",
        "cursor": {
          "ref": "3908c3fb-d115-440d-b911-17d72e8c0806",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aef3b111-97a1-4ab9-b3b8-9dd337a0c2b5"
        },
        "item": {
          "id": "8584f959-0eca-45da-b2ce-70c55e80979c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cf02262c-235f-47bc-8538-df6c945058aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f23cfc6-e6fc-4013-85cb-1af2fb2c6c7e",
        "cursor": {
          "ref": "b3c25740-ba8f-4d48-bc78-af6f7d49fe2b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bb6dc540-e929-47de-bfdc-7c98a7bdcff7"
        },
        "item": {
          "id": "8f23cfc6-e6fc-4013-85cb-1af2fb2c6c7e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "38f61132-3929-4b4d-9e55-3950e53a5bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d075e6d3-e566-4a7d-a863-05a815c70acd",
        "cursor": {
          "ref": "284b8f5f-ee03-4b37-bb80-6b06b4f21c37",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "31d51c8c-8492-45ec-a170-8b476ff999c7"
        },
        "item": {
          "id": "d075e6d3-e566-4a7d-a863-05a815c70acd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8ec71548-6955-4de9-941f-7ea67c22e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be49d8a-3cd0-42ca-9636-92e4ff9557ba",
        "cursor": {
          "ref": "891e2fa6-429f-4d56-8280-7746b8cb612d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c767e51b-e40e-42df-b9e5-bf066d2fc05c"
        },
        "item": {
          "id": "0be49d8a-3cd0-42ca-9636-92e4ff9557ba",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0a581808-d4c4-4796-824b-87490647e13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e89b12-35bc-47b7-a890-d3467ce039c9",
        "cursor": {
          "ref": "12329fe2-aa5e-45c1-9650-a278fae30367",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d1a3702e-2688-47f0-9f1e-3b25359ed3c3"
        },
        "item": {
          "id": "b5e89b12-35bc-47b7-a890-d3467ce039c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f5a961b3-c5e0-49ff-9c77-881923640813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4184a862-6224-4de8-b99c-b31e0c8d254a",
        "cursor": {
          "ref": "6bdc6f4b-130e-4de0-ab78-bd088b63424c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d50c2085-1dfc-46de-8cba-c2990e3e304f"
        },
        "item": {
          "id": "4184a862-6224-4de8-b99c-b31e0c8d254a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "38f92f2a-e9b5-417c-861e-f126003b0a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb82e956-5948-42d3-b3dd-cb76933b8cc4",
        "cursor": {
          "ref": "0685386b-680a-454b-8585-9c75ae9b4a38",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3c224b4a-1ac4-4456-a116-80c16814e56c"
        },
        "item": {
          "id": "cb82e956-5948-42d3-b3dd-cb76933b8cc4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "75b93b5a-f78b-4250-9efc-059db9447e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa588b7a-1974-48cc-84cd-b7054afba0f9",
        "cursor": {
          "ref": "fc5f82c0-e410-4ada-9b80-8aedcbb50834",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6ae82d2-59c0-4f2b-ba3c-9de2958073d1"
        },
        "item": {
          "id": "aa588b7a-1974-48cc-84cd-b7054afba0f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0d7daef2-43ba-4fe2-b7ef-5095ebd7bf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cbb674-69ba-49cc-b632-9b728015dc0f",
        "cursor": {
          "ref": "56290806-0604-429a-8e2f-a40755422f9f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8cb1e23c-dbaf-4d90-8019-8431a4b91c34"
        },
        "item": {
          "id": "10cbb674-69ba-49cc-b632-9b728015dc0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0660ac89-e077-46c9-a950-a70052991c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2863d438-2f58-43ff-91fb-93d273e4bd22",
        "cursor": {
          "ref": "7d29ba78-a56f-4372-8e5e-134091cc2ecd",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "356bb578-ce8c-46b9-a26d-4822a743066d"
        },
        "item": {
          "id": "2863d438-2f58-43ff-91fb-93d273e4bd22",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d0f39122-2093-443c-b384-2fb994fc4194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de303dc-6326-45e7-b946-4154d4e9a011",
        "cursor": {
          "ref": "bb3f1e96-f9f6-458d-afc6-54d164fb302f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1580deb7-104e-4dfb-942a-6cdfe0881394"
        },
        "item": {
          "id": "5de303dc-6326-45e7-b946-4154d4e9a011",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "efe25c3b-0c63-4eb1-bad7-dc2118e74bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a687a832-cc96-416a-8b09-ed74c72271ee",
        "cursor": {
          "ref": "6b5d1ef4-3798-40cb-ac37-dc6cb38ac944",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5a7aee44-fed9-45bc-82dc-29d7c6659737"
        },
        "item": {
          "id": "a687a832-cc96-416a-8b09-ed74c72271ee",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "177d9d77-c056-476f-98bf-7fe23eb9c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3115d283-e6bd-433c-b340-63f1c8b39d89",
        "cursor": {
          "ref": "af6bac34-bb42-4713-a1c0-ade2a72026b8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a10a8aef-87a3-41d3-ba38-87b36e09b151"
        },
        "item": {
          "id": "3115d283-e6bd-433c-b340-63f1c8b39d89",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "00adaa25-a1ef-4614-9d97-814b199fd731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb9b84-5c19-4eb8-bc9f-ea474e1ff23e",
        "cursor": {
          "ref": "f35fdc5b-b642-46a6-b31a-2d43fb186f8c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6c05a5bc-480a-4241-916d-84fddcc9bfe0"
        },
        "item": {
          "id": "afdb9b84-5c19-4eb8-bc9f-ea474e1ff23e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f8c63a41-95e6-45e7-bd34-e6b3cf0cf104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0d3623-0b6b-49ab-a9f3-84ef8dd3ba72",
        "cursor": {
          "ref": "1ab6a90b-92a1-4af5-be09-51d4f93da816",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b92f89ac-d15d-402a-b1a1-cc362e1ec551"
        },
        "item": {
          "id": "cf0d3623-0b6b-49ab-a9f3-84ef8dd3ba72",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b629acc-2eba-4adb-a32a-ecbaec6e901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26287ea8-8009-438b-af84-3527c2da22a8",
        "cursor": {
          "ref": "6f6b75ed-e0e4-42d4-a849-a1e05edfafe9",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b3fd21aa-95e1-48ef-9244-95b5dc059452"
        },
        "item": {
          "id": "26287ea8-8009-438b-af84-3527c2da22a8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f7d46933-1b95-40dc-b1ac-4a2d0a66980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46569414-85bc-4d28-8b94-f60fa639fd4d",
        "cursor": {
          "ref": "dac9683c-fea5-4b6e-b61f-1130f7284e93",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0bcd9234-c4b2-4cad-9959-f3ef1c4507a6"
        },
        "item": {
          "id": "46569414-85bc-4d28-8b94-f60fa639fd4d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e0007c2f-4b08-4620-acdd-27d5c31bb263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eddd56a-b007-4a7f-9030-ff0f4d985713",
        "cursor": {
          "ref": "5f359bd8-49bf-4399-8b57-1307061d21fd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "12a77c10-37d0-4e00-904d-02ef8a08a13d"
        },
        "item": {
          "id": "7eddd56a-b007-4a7f-9030-ff0f4d985713",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c2983dac-d29a-4b84-9ca1-fc559ff9d0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea00dff-df7f-4536-ad37-6700a8329a30",
        "cursor": {
          "ref": "292be790-3c2d-4933-a214-28175b3d1843",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f8cb6104-2b78-401b-9393-77a204c2f8b4"
        },
        "item": {
          "id": "aea00dff-df7f-4536-ad37-6700a8329a30",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "daa135af-0e0e-44a8-b5a2-9bc131a60f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2919e364-b1fe-4c79-81b0-4ee60752bb68",
        "cursor": {
          "ref": "7f68f324-32a7-45d9-aa21-d23229fc073a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7927b8dc-fc5c-42c1-bd33-fbfb2c0882d4"
        },
        "item": {
          "id": "2919e364-b1fe-4c79-81b0-4ee60752bb68",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "986f831f-951e-45c7-9a26-6100d9b1533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a07000-3636-4603-b661-3389b7c9be99",
        "cursor": {
          "ref": "fd10ec31-1641-426f-a343-fceafcc667e2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "06100abe-7fbc-4f4f-9f2b-60b9f2b697df"
        },
        "item": {
          "id": "34a07000-3636-4603-b661-3389b7c9be99",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "31696d9f-c289-445e-a0d2-295f2f973d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62864a-d837-4e99-8495-d5272c6e7355",
        "cursor": {
          "ref": "0d6213d3-2d90-4a44-a90f-540c655af92c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "97ba9400-4ddc-4229-90ef-1a8e36a03317"
        },
        "item": {
          "id": "0c62864a-d837-4e99-8495-d5272c6e7355",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1af4822-a2ee-4e5f-92a5-ae82ecc8f50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ac34f5-2fa6-4b26-862e-0eef63e62b3f",
        "cursor": {
          "ref": "d16e3908-36e6-41e5-9f67-af801d5748ff",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "534aa04b-4a3c-4c5c-b304-7043551b4532"
        },
        "item": {
          "id": "47ac34f5-2fa6-4b26-862e-0eef63e62b3f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b93c77fd-ceaa-494c-9d6f-64401f3ff9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee1cc8e-9a8a-427c-9c47-71313660e100",
        "cursor": {
          "ref": "1e3ceca6-acf8-42de-a63a-a877acf47514",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "511675c2-a265-49e2-96d3-e49cefb74251"
        },
        "item": {
          "id": "4ee1cc8e-9a8a-427c-9c47-71313660e100",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "20f64046-f9c9-48c5-8438-8c5291e5ad92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b1b003-88a3-499e-86ff-fd684351202d",
        "cursor": {
          "ref": "13c8cd61-36af-4721-a7d7-0062696df9a7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "14561ade-791c-45cd-be73-5ed69f9a56a7"
        },
        "item": {
          "id": "f3b1b003-88a3-499e-86ff-fd684351202d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c9696322-b5f6-499b-84b6-8351f4e7039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4aa0ff-d7ad-4bbe-9098-5ee20d86f463",
        "cursor": {
          "ref": "36af5a7c-c830-4578-9417-6f8d90fa4a2e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55850bae-c9d0-4be7-9c91-a59dd8d7c8e9"
        },
        "item": {
          "id": "ed4aa0ff-d7ad-4bbe-9098-5ee20d86f463",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1cc7cfc0-5a55-40de-9b49-3b9209b642e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb1ce2-0598-41e7-8854-32f5175b7161",
        "cursor": {
          "ref": "21a08873-6d70-4085-a97e-d478659a81e8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5ca7b00e-bec1-49ed-9d9c-96df9b60ee75"
        },
        "item": {
          "id": "f2bb1ce2-0598-41e7-8854-32f5175b7161",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "59e43f3c-0d9a-4a56-98ce-0f64d4bec000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a27438-f709-482c-b81f-a6f4525f2006",
        "cursor": {
          "ref": "c08c8753-9567-4e24-8801-990e48b70d4a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9ecff5f0-538c-4f12-9811-3a81b6ba1e0f"
        },
        "item": {
          "id": "72a27438-f709-482c-b81f-a6f4525f2006",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "30665309-36e7-4e69-a4a8-305d7f2b8169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4108ed-8dde-496c-b51d-2b3e2acea47a",
        "cursor": {
          "ref": "a3dda7e0-b1d3-4a52-8e4d-0c1af1e6ebc1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2d1682df-a79f-4668-bc58-9592ad68c9e9"
        },
        "item": {
          "id": "fc4108ed-8dde-496c-b51d-2b3e2acea47a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eef01262-adbc-4b6d-acbf-bbc069d55a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ffd4c5-dbbe-40b8-b83b-fda2d2a9d5ad",
        "cursor": {
          "ref": "04b2093b-15a3-44b9-92e2-ccbfd64263f2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "69adbb7e-3cf2-41ef-bff8-1769e35e8803"
        },
        "item": {
          "id": "53ffd4c5-dbbe-40b8-b83b-fda2d2a9d5ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "62e85f23-76f4-4262-b725-923eee69708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac47845-1059-4bf4-b6ae-7bf553059148",
        "cursor": {
          "ref": "d5b853d8-581f-4c78-aca8-a50be63c97ed",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b1dbf98e-65aa-4f7f-9ba0-d716a5751040"
        },
        "item": {
          "id": "aac47845-1059-4bf4-b6ae-7bf553059148",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9061e4ac-7829-4d36-9579-7f1ba100208b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a31ced-aa26-4a17-91e7-5677a518dda5",
        "cursor": {
          "ref": "5fdccb1e-4e66-4119-9339-760841fc5657",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b83c5b8a-8727-4918-9d5e-6903cec789a8"
        },
        "item": {
          "id": "25a31ced-aa26-4a17-91e7-5677a518dda5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2c980c88-6c8c-4ae5-bb67-fd798963b6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033221f5-6adb-4bee-87e4-7cd175f52bcc",
        "cursor": {
          "ref": "1568a1bc-9c5a-4ef9-9bc9-480c8c7fc96a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c300f522-1ecc-4f31-9668-f1b45d8397dd"
        },
        "item": {
          "id": "033221f5-6adb-4bee-87e4-7cd175f52bcc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b460923-3189-4a13-8fff-c353c8886350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d46474-53ae-4fdf-bbbd-9327a36adfa6",
        "cursor": {
          "ref": "d0b48c96-79c9-4f62-b441-a978c49a8b40",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ea0c627e-b16e-4119-aba6-547d84bc3e12"
        },
        "item": {
          "id": "22d46474-53ae-4fdf-bbbd-9327a36adfa6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48cc0a0d-9239-4429-a657-5d163d2f14da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492980a7-9525-493b-8e0c-86ac7db2fc3d",
        "cursor": {
          "ref": "21ad5742-29a6-4774-ba98-88e220593896",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4e15b27c-c2aa-466a-9d7f-ec37c7c6a39f"
        },
        "item": {
          "id": "492980a7-9525-493b-8e0c-86ac7db2fc3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f8ece196-56a1-4da8-af87-bba5873a5b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0a8fa8-1c48-4233-85e6-0f53908ed9ca",
        "cursor": {
          "ref": "0dfd73eb-764c-4d5d-b903-f96f452f335f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "01c246f4-74d4-4b05-88d1-a556ba32d5b9"
        },
        "item": {
          "id": "be0a8fa8-1c48-4233-85e6-0f53908ed9ca",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "014d0176-e8e9-413b-bb69-952131e760a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16cd1e9-b0b5-41ad-8981-c065bde92b3c",
        "cursor": {
          "ref": "838e1276-f401-49d2-ae9d-7ea371150c44",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "53c39022-5f67-40c2-b010-8eab06afb3b1"
        },
        "item": {
          "id": "f16cd1e9-b0b5-41ad-8981-c065bde92b3c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d6597f5f-7cdf-43db-a75e-273738f10ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7023b9-32cb-43c9-93ef-f75cc9e00af5",
        "cursor": {
          "ref": "275539cb-1dcc-46b0-b40b-2dad328d6add",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "58a2870f-4d18-4800-825c-726a8d716476"
        },
        "item": {
          "id": "ed7023b9-32cb-43c9-93ef-f75cc9e00af5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e108a315-efd8-4bd9-b3ff-e5b164e8dc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6165d088-b7c6-4729-8b55-64ed7c09cbf0",
        "cursor": {
          "ref": "bd394045-5458-48d9-ad83-369e1a963eb7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77220703-0b65-4a9c-bde9-05ce1492df65"
        },
        "item": {
          "id": "6165d088-b7c6-4729-8b55-64ed7c09cbf0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "91c09993-3e08-4d7d-b9ab-d759a172cacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20277ce-b9cb-48a4-886f-19a01c0eb1c6",
        "cursor": {
          "ref": "c28753b1-4c3a-42bb-b062-4b3353d6905a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0fd25270-59c2-4a87-b8a6-4276432a365c"
        },
        "item": {
          "id": "b20277ce-b9cb-48a4-886f-19a01c0eb1c6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d0a34d54-efeb-4436-a8d8-2d02a1c181dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9b279e-6ca5-456e-b818-07b34a263db9",
        "cursor": {
          "ref": "1ef46282-1a9f-4248-ae06-03f0d8fc7777",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b871b5cd-0a72-4516-969b-349532f19ce5"
        },
        "item": {
          "id": "de9b279e-6ca5-456e-b818-07b34a263db9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0348ca31-cc87-41dd-85ec-5207cf38aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1768a3-3c85-4bb5-a40c-c9ebba220008",
        "cursor": {
          "ref": "6cc715d7-0e4a-46e6-8fe9-fbfd2eccd674",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ebc42e96-6944-458d-8e17-fa1e8648c608"
        },
        "item": {
          "id": "ad1768a3-3c85-4bb5-a40c-c9ebba220008",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b131e233-e915-4586-8fb3-5470e9743db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5746f1-d5e6-4d5e-a3c8-6f527d69cd34",
        "cursor": {
          "ref": "7334db4e-5650-419d-9483-a618cdc6aefc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e507faf2-1b65-4fdd-94a0-0677f7735795"
        },
        "item": {
          "id": "de5746f1-d5e6-4d5e-a3c8-6f527d69cd34",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fb84a1a8-a889-4dcb-8289-d31634b7f1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f03edc4-f34e-4021-8a61-d4194f81f771",
        "cursor": {
          "ref": "7f35f43b-f05b-4470-8126-ca74451b530f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "762be731-1357-4a8e-86a9-fb1c986b4639"
        },
        "item": {
          "id": "6f03edc4-f34e-4021-8a61-d4194f81f771",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f4928be8-4e86-4edc-95a0-acd883b5a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68913bcf-0787-4bac-834e-e37a61fb4b5f",
        "cursor": {
          "ref": "1c066c17-83b0-4003-8c16-59e2e96d0d50",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "069da836-c9fd-4320-8969-9ca38f98e31b"
        },
        "item": {
          "id": "68913bcf-0787-4bac-834e-e37a61fb4b5f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc45ec77-64f5-4a22-a72c-6e175a4fc828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed20f6e-d0cf-4141-9649-57cb46865f88",
        "cursor": {
          "ref": "5827fe48-9027-4105-a2d1-372e5013ae69",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fd9f31af-8dba-4676-9ad5-25420af53311"
        },
        "item": {
          "id": "5ed20f6e-d0cf-4141-9649-57cb46865f88",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f0c8de70-5295-4615-8850-f6a958c8e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07678ce0-a7c3-4472-85f1-fb3e7a513e17",
        "cursor": {
          "ref": "7bf5dbc5-bbec-4fc0-9666-561f0895562b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9f24fceb-262f-486d-94b5-f075a475d4f5"
        },
        "item": {
          "id": "07678ce0-a7c3-4472-85f1-fb3e7a513e17",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a2b85f4f-3d13-44e5-9ea4-162af648b976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57be06c-5aa4-4a40-a81f-20c1d1e87b25",
        "cursor": {
          "ref": "b94ae4d3-d1e4-449c-805f-27074fc802ab",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a66d205b-f7de-49c0-a182-d80f375bd5db"
        },
        "item": {
          "id": "c57be06c-5aa4-4a40-a81f-20c1d1e87b25",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "99d7b458-6a02-4e30-8ff7-5625831c11ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48a34de-1486-450b-a0bc-74a728197a7a",
        "cursor": {
          "ref": "81a7cb9d-7945-4f38-96ce-7e82aee7f832",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29fc1f93-2f56-4a71-95c8-bf00e9275686"
        },
        "item": {
          "id": "a48a34de-1486-450b-a0bc-74a728197a7a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4466271b-4bd0-4d2d-a1a9-c2ef3f589835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d3f25c-c7af-4d91-a4d7-4071238a0b2c",
        "cursor": {
          "ref": "a2120a4f-5ccd-4b93-9d2e-91984cc927ec",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "59f2b93a-a001-4a2c-8d62-c5a20dfa9f65"
        },
        "item": {
          "id": "79d3f25c-c7af-4d91-a4d7-4071238a0b2c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bf625e92-184c-4c9e-a0c2-fc5c2097a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c6d2da-5cb4-4be0-8839-c5887824d836",
        "cursor": {
          "ref": "abafea87-e35d-4640-a275-19c93c8ba7fb",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8d196cc7-401d-43bf-b8fd-46f15f2794ba"
        },
        "item": {
          "id": "21c6d2da-5cb4-4be0-8839-c5887824d836",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2cbcc6b4-5e0c-4b48-a87d-53c783a5d8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e937c8a-d811-42a4-a922-2abbb4469bb0",
        "cursor": {
          "ref": "c9cf2454-7149-4886-9824-86bc585e725e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ce8dfc38-ad03-41fc-a1d1-5923bfc7ecb6"
        },
        "item": {
          "id": "1e937c8a-d811-42a4-a922-2abbb4469bb0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c4d51dfb-f133-44c6-8a7b-846b4d2f63be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b62573-155c-4d09-8637-87266357f5db",
        "cursor": {
          "ref": "ca04b029-c51a-4326-aa9f-f72addaf622a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5a7abc59-ee27-40f0-9989-aedecfe68f98"
        },
        "item": {
          "id": "b0b62573-155c-4d09-8637-87266357f5db",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0daf7799-5cde-4882-8df2-0e7f1276375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c362635-974f-4936-9c93-cae4d682970b",
        "cursor": {
          "ref": "0e2d80e9-530b-4d94-8fa0-3cfa6a4fc21b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3456feba-cfcf-464d-b434-4d5a8312782d"
        },
        "item": {
          "id": "3c362635-974f-4936-9c93-cae4d682970b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e4cb2547-50ef-40b0-a21b-b09d3b89cd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2f83d-363d-46f4-88a5-0a25c2593a9e",
        "cursor": {
          "ref": "872b7fa0-8087-4c65-b02e-897649b629cb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b96adb26-d396-4b1f-a7f1-471186f3bd36"
        },
        "item": {
          "id": "adb2f83d-363d-46f4-88a5-0a25c2593a9e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "02a228ad-ef53-434b-885c-e68afa7eef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a38a6f-7652-49b4-82b4-ec68bea6690a",
        "cursor": {
          "ref": "2844482f-d5f5-4284-9aa2-a22ef4fe9b2a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "356246d6-64b8-4ad1-9b2f-e1d638efbe28"
        },
        "item": {
          "id": "d7a38a6f-7652-49b4-82b4-ec68bea6690a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dfe4d974-f66b-4001-90af-9770b132ff14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9042b-7fa8-44cb-aab7-f30eff7498ab",
        "cursor": {
          "ref": "a7a08611-6442-4c3f-9720-eb35eb697a26",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6f5784e0-f8c8-4b4b-a4a5-7ffbf19e5be1"
        },
        "item": {
          "id": "c0d9042b-7fa8-44cb-aab7-f30eff7498ab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4e7fa6c8-559c-4ee3-a464-a067b24133e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe3752a-9c89-4c31-99aa-fb036c132fc6",
        "cursor": {
          "ref": "92f1352e-14a8-43b6-a7a7-bb1e1958afd5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "54f86c7c-2499-4a17-92bc-6ca5d0bda175"
        },
        "item": {
          "id": "fbe3752a-9c89-4c31-99aa-fb036c132fc6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c14f1ed1-ac5f-49af-b3e9-e93f3b81023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4fbd31-c618-43b9-919b-681e43027c24",
        "cursor": {
          "ref": "a56b8f6a-1e75-44ed-b6b7-6858680ddd5e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7acdeffa-1b04-4fe2-b0e0-9fb56126e6db"
        },
        "item": {
          "id": "af4fbd31-c618-43b9-919b-681e43027c24",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3ad4c230-e0a0-4d17-8be4-28b175073eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a314a1-2057-45e2-98c8-4eec46ee1b2f",
        "cursor": {
          "ref": "14567f80-8e9d-4980-86b7-5e2ccaf3f29f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20de5e1f-8365-4ffd-8f72-b980dff45549"
        },
        "item": {
          "id": "67a314a1-2057-45e2-98c8-4eec46ee1b2f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b0767ba-be27-4abc-83aa-5026dc90e862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5f59d5-f38c-4d39-b6c0-b4a172f6a6bc",
        "cursor": {
          "ref": "40aa6f28-13e2-4ed6-af19-3a25d5b4f526",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "360c609e-d2a3-4882-95a8-cbbd67b32631"
        },
        "item": {
          "id": "ad5f59d5-f38c-4d39-b6c0-b4a172f6a6bc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "080e926c-2379-4e73-9ea8-6e64e1a31137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427546da-fe62-4fd0-b100-00c209678a5c",
        "cursor": {
          "ref": "0f7b31f0-2b80-4de6-8c11-06bf7ac98d49",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "13bc3678-9361-41d7-be3e-ced576fdd744"
        },
        "item": {
          "id": "427546da-fe62-4fd0-b100-00c209678a5c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e089319c-14f8-47c2-bbf8-afe569cc7a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec1f58-d297-4321-9963-73b331ade76c",
        "cursor": {
          "ref": "261e630b-31d7-4f73-8adc-c6fedc07eaa0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aa1da136-d710-4adf-9552-68317307d410"
        },
        "item": {
          "id": "6cec1f58-d297-4321-9963-73b331ade76c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4491c23e-a5e4-4d93-824d-c486c5b40e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ec148-ba19-46a5-9563-7207e6024a3c",
        "cursor": {
          "ref": "ddcf7a04-500f-4567-a0ff-1b687269f38e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5e1bdf4f-88e0-4b45-9c20-d3bd86d77172"
        },
        "item": {
          "id": "0d3ec148-ba19-46a5-9563-7207e6024a3c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7c02a310-530d-42b3-b258-385b32874f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2423dd33-63e5-4dcb-acd8-563565fa07ff",
        "cursor": {
          "ref": "a6dc3761-ddd4-473f-aff6-b60337777495",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fa288242-7197-4c53-bea8-88c92e92003d"
        },
        "item": {
          "id": "2423dd33-63e5-4dcb-acd8-563565fa07ff",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "119cf081-6431-4d91-a8f3-92aee57f1f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54409fe2-08e9-4e61-bcbb-f4a7e0e58800",
        "cursor": {
          "ref": "c4b224f4-b5c1-4eb5-9964-911d4cc74879",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7c0a1296-184a-4fe7-bd67-9dae32c9eba0"
        },
        "item": {
          "id": "54409fe2-08e9-4e61-bcbb-f4a7e0e58800",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "875cfe5f-4eed-4b39-aedc-af2c7ab22acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9723d2e1-605a-4e90-8877-9cf092bce443",
        "cursor": {
          "ref": "e02d9e8a-c32a-457c-9383-dd2dbc380a29",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7077b55d-e3af-475c-8720-76106e06d415"
        },
        "item": {
          "id": "9723d2e1-605a-4e90-8877-9cf092bce443",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40237648-e1dd-4539-9834-a954cc37c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e572c2-b641-4a6b-baec-c93128e9d563",
        "cursor": {
          "ref": "84dec49c-c307-4f19-a5c4-3f38639aa387",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9f376113-b78b-42f1-85fc-f7bab75d304b"
        },
        "item": {
          "id": "36e572c2-b641-4a6b-baec-c93128e9d563",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "80524906-9daa-42c9-8486-320dedee08af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0c6e03-438a-49c9-97e6-19d3e358cc10",
        "cursor": {
          "ref": "dc6bcf07-24c5-4816-81bf-757055abeaf9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "588812be-2861-48c7-905b-b57914ce87e6"
        },
        "item": {
          "id": "1b0c6e03-438a-49c9-97e6-19d3e358cc10",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bed43b8f-b71c-449f-b937-0eecae9dfdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a56ff0-198f-48bd-b537-77cb508f9f11",
        "cursor": {
          "ref": "c88d7be3-8984-41c2-8187-6231c35d3c93",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0468a609-6a9f-4cb9-9e6a-7985875a79d3"
        },
        "item": {
          "id": "99a56ff0-198f-48bd-b537-77cb508f9f11",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d99ad9f2-8754-40b9-8bc5-f1a024cbcdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac00837-7f68-4c4c-9a33-409f67787bea",
        "cursor": {
          "ref": "a518c5a4-76d6-4e3d-a0c3-031a4d934473",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "34518bc6-d4b1-452d-bca8-b905fa5d2cb3"
        },
        "item": {
          "id": "6ac00837-7f68-4c4c-9a33-409f67787bea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a8650683-d676-4e92-9d31-5ff5b4555cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be0c54-9fc8-4561-8c2b-4ae765497035",
        "cursor": {
          "ref": "5636bfad-a778-4763-a3b8-951525fb4fc1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "65bdc4bf-528f-40c3-b666-96b1f3d1ff39"
        },
        "item": {
          "id": "23be0c54-9fc8-4561-8c2b-4ae765497035",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "474b8221-ad81-4e75-9682-726a2cf56930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9121a-1305-4a04-b47a-8960b7d613dc",
        "cursor": {
          "ref": "c58db22e-dfe1-426a-98bc-9c4a972381e8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fbae3f55-5962-419b-aede-f77515e3b090"
        },
        "item": {
          "id": "6cf9121a-1305-4a04-b47a-8960b7d613dc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "32a6d144-eaa2-4bf0-919e-afd3c3e70557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867ef86e-817a-440b-be4e-e4aed7cfda8e",
        "cursor": {
          "ref": "c302b036-43bd-4f9e-a2f5-eff9b3701338",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d1861041-0066-4d1d-b5fd-550783644641"
        },
        "item": {
          "id": "867ef86e-817a-440b-be4e-e4aed7cfda8e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6cb14bd6-ba58-4548-bb3b-d830f466ab95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d4c782-88b2-40a3-98de-6de4a96446a0",
        "cursor": {
          "ref": "a8433c3a-75dc-4184-acdf-9394b7b2e9a7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c35e843e-9eee-4c63-95ec-917dd79e3913"
        },
        "item": {
          "id": "52d4c782-88b2-40a3-98de-6de4a96446a0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4363813b-5d4d-48cb-bcc0-92ffb8c1ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24895eaf-6df3-42a5-b334-51124b165d61",
        "cursor": {
          "ref": "5d2d58d2-d7d8-45dc-8206-d90f56c1d418",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a2338fa4-d369-4327-bb7c-8b641b84a2c9"
        },
        "item": {
          "id": "24895eaf-6df3-42a5-b334-51124b165d61",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ce8eb5a5-7733-4b6d-83dd-e6417049edf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d05ae75-6957-4464-8add-a58f901e2d8b",
        "cursor": {
          "ref": "1745da46-5f15-4534-996c-e61a073e8c7b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "779093be-abb1-406e-b865-a9d0b14fac37"
        },
        "item": {
          "id": "7d05ae75-6957-4464-8add-a58f901e2d8b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7b6cca38-abc2-4c41-9677-52f187c4f053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b252aa68-8d1b-45b4-a131-e0f7818a3181",
        "cursor": {
          "ref": "cc5d152c-86f8-46ec-8fb7-0e7af328c470",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f90edef8-12e3-4a94-a9ca-3f33e30b0a22"
        },
        "item": {
          "id": "b252aa68-8d1b-45b4-a131-e0f7818a3181",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "592ffe21-4677-4513-ad07-581ee93b1f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d448e7-cadd-4ed8-a2d5-8c4c46d96152",
        "cursor": {
          "ref": "75b199a3-06e3-4dc7-92c9-a97cb2c65356",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d1627681-a0dd-4d94-a60e-896f7278b7bc"
        },
        "item": {
          "id": "e3d448e7-cadd-4ed8-a2d5-8c4c46d96152",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b90e0358-43bb-4fbe-936a-e8fc3a66581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2064d907-f461-43da-a6e4-1e9f6ba6f047",
        "cursor": {
          "ref": "a3e66903-fee4-462a-a25a-0456f9492ff2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6ebf832f-930e-47d9-953b-7d4f2633fa87"
        },
        "item": {
          "id": "2064d907-f461-43da-a6e4-1e9f6ba6f047",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d97a4801-1abc-470b-a4ed-0af7824235aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8496fe02-afeb-4f15-bf78-fb4eda6197b2",
        "cursor": {
          "ref": "df8f7dbd-178f-454f-8d0c-ae932ef2c12e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aaf1e4ae-506d-4b9e-91b6-6783f13e1db0"
        },
        "item": {
          "id": "8496fe02-afeb-4f15-bf78-fb4eda6197b2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32a54075-2f7a-44b2-ad84-4325e71caec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c094f-5b92-4386-ba77-b7be07b5bf58",
        "cursor": {
          "ref": "2f25ae91-0624-4840-933d-f48062a89894",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a30d3bcb-51fe-464c-ace0-de2c80a3558a"
        },
        "item": {
          "id": "602c094f-5b92-4386-ba77-b7be07b5bf58",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd8a744f-8b66-4108-80b2-a2ddadae756c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fe3219-d67e-4bc5-a911-d14a4213f800",
        "cursor": {
          "ref": "9868221b-9c8f-45c3-8ebb-b1a42ac380dd",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "234eafa1-bcad-43a1-8329-8fdcb9dfc73b"
        },
        "item": {
          "id": "e5fe3219-d67e-4bc5-a911-d14a4213f800",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c41a05f6-0b3a-4709-8f48-6ce165e54846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69db9fe-5d73-4517-b2dd-55fc42cadd66",
        "cursor": {
          "ref": "f5ad6d5c-1b6f-4c2f-8437-3bbb72421493",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a0261e3d-1933-43b1-bb85-8ac54067d663"
        },
        "item": {
          "id": "f69db9fe-5d73-4517-b2dd-55fc42cadd66",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "633a8156-ef04-4f47-a3fb-85b2753504be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c2d1fc-244b-43cb-a36d-2cefaf64cefd",
        "cursor": {
          "ref": "4363818d-e433-4852-9b86-9e9eebaf84aa",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f9dbc34c-c57b-43d4-9425-cce3703e818d"
        },
        "item": {
          "id": "22c2d1fc-244b-43cb-a36d-2cefaf64cefd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d36a600d-d57e-412c-a303-2433ce17a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9acd2c9-22c7-4988-9073-3fdaf1d7f09a",
        "cursor": {
          "ref": "a82697ae-af07-4bc7-adb1-ebbcebe58ebc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7c4e24e6-b80f-4a2c-95aa-356c50e07643"
        },
        "item": {
          "id": "c9acd2c9-22c7-4988-9073-3fdaf1d7f09a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "74f7713c-210d-418b-8125-a8149adff4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4586f4-d852-4f55-afd7-7a3fbc9eb659",
        "cursor": {
          "ref": "de9092a3-9927-482b-8fde-a19b60632322",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9219a83b-290b-44a4-9eeb-e208d53c4407"
        },
        "item": {
          "id": "dc4586f4-d852-4f55-afd7-7a3fbc9eb659",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4afec6d0-bb26-45b2-af62-68beb4da4803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57cbd6-4d2f-4483-aba9-af5e658cbfa1",
        "cursor": {
          "ref": "e6531870-337b-4e18-8ba9-1d2766dc2d1a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b132d8ce-2bf6-4874-a3fa-53e6732a0b04"
        },
        "item": {
          "id": "6a57cbd6-4d2f-4483-aba9-af5e658cbfa1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "80d2a5d7-a10e-435d-bb45-cfdf02f17b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a72b3c4-9f08-48ac-9d8a-cfa4dc9f8617",
        "cursor": {
          "ref": "f72ec413-ca1f-403e-a5d8-12a99c65efa3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ae0dc03a-4b5b-4b06-8ec8-84e00a14884f"
        },
        "item": {
          "id": "0a72b3c4-9f08-48ac-9d8a-cfa4dc9f8617",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c83e0890-9560-4bcd-9755-e2ebebbcdf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaf6090-a731-4832-baa5-d78f76b4b91d",
        "cursor": {
          "ref": "f71d11ea-7b88-432a-b237-6bc0da2adb2a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "510bee29-becf-42c9-8060-6e3784bcfb43"
        },
        "item": {
          "id": "edaf6090-a731-4832-baa5-d78f76b4b91d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dc3332f7-af79-40a5-befe-141a5a3fac17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6901c46-78f7-4615-8178-2fbd10f01667",
        "cursor": {
          "ref": "385aaca2-5d2c-4a1f-a41f-e9275e09f7c0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b95fd8ea-2638-4817-821a-d67926550b16"
        },
        "item": {
          "id": "c6901c46-78f7-4615-8178-2fbd10f01667",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "170222c5-e680-4a4b-ae22-3ad0cc0bd5e4",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af0b786-9b7f-4e41-bd6c-fd49c86f0d93",
        "cursor": {
          "ref": "6b8f3d6a-8b59-467f-bcbb-f0c0861cef5f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "16cc7412-c6ee-4f10-b5b3-beb04686dba8"
        },
        "item": {
          "id": "5af0b786-9b7f-4e41-bd6c-fd49c86f0d93",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8438c795-45c4-4417-bc6d-bb3d8c69fa32",
          "status": "OK",
          "code": 200,
          "responseTime": 1690,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f576a2e-eaf2-4fd7-b2bf-d027b384c3f1",
        "cursor": {
          "ref": "5e04e356-8fa4-463e-9084-30949ccc3904",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "23e3489d-a4a0-4a56-91eb-bc8d250c5e98"
        },
        "item": {
          "id": "6f576a2e-eaf2-4fd7-b2bf-d027b384c3f1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4f296f19-1c39-484f-b67f-1aadf4004140",
          "status": "OK",
          "code": 200,
          "responseTime": 1556,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e681a256-9940-4af9-81c1-790e0f25230f",
        "cursor": {
          "ref": "e5f57676-829d-497e-b2a8-eecf460310d6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "35aff48b-759c-4441-9634-634844a7f4ce"
        },
        "item": {
          "id": "e681a256-9940-4af9-81c1-790e0f25230f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "544bb60d-f3a5-41e2-8067-a1108beb7600",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e681a256-9940-4af9-81c1-790e0f25230f",
        "cursor": {
          "ref": "e5f57676-829d-497e-b2a8-eecf460310d6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "35aff48b-759c-4441-9634-634844a7f4ce"
        },
        "item": {
          "id": "e681a256-9940-4af9-81c1-790e0f25230f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "544bb60d-f3a5-41e2-8067-a1108beb7600",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1796b1de-92be-47b4-94c7-cba99e5c97d7",
        "cursor": {
          "ref": "52fff4bc-c106-4168-9d1e-4950c971e95e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d727d7f-b36f-4e5a-849f-d09f72605ca3"
        },
        "item": {
          "id": "1796b1de-92be-47b4-94c7-cba99e5c97d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5feb2d5d-e709-481c-9d36-cc01fda0db65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e63646-120d-4197-87f9-fc0960272355",
        "cursor": {
          "ref": "305c2d53-6daf-43e5-89d3-4be8527b39e2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "23fd144f-2331-4bd5-8279-b1fc16ca0cf5"
        },
        "item": {
          "id": "84e63646-120d-4197-87f9-fc0960272355",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1eda7edd-086d-4863-bdbd-af84af7ec1af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}