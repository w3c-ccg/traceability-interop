{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2c99b3ac-23b7-4f87-bc61-0fc0137e273e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c43653f6-4a86-4752-8322-ee3b8b21037c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dfc9548-378f-4796-831c-aff59650da13",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e07c8726-6a97-4f7b-82fd-d98c4981f9a1"
                }
              }
            ]
          },
          {
            "id": "d1bd2211-2f70-48bf-bebf-bb0ddca68713",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20c5deb1-021f-4dbe-90ee-934ddf22b53e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b7579ee-072f-4948-a9ad-06da1b2ed252"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "184576dd-82f7-425a-94a2-f66e13af3f75",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e7289aaa-d3e6-421f-8df1-e8226dbe6413",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a39a81dc-87ba-4fe2-a770-8e2e189c6867",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cadd89a-3941-412d-80b5-9e402912d78c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3091f29c-acf9-4af8-bf1c-5b8f864f2b45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12ad369c-dd72-47ea-bc98-5a24aaebda18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1315b1e-0fdd-4752-9108-b410dbdf118a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8dcf9fdd-c449-45f6-866d-7a2955bd5ff8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e74aaa6-ce06-45a7-b598-1b255a0d3743"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d29cbdfe-7280-4c60-99ee-010aae0324c2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "64a65994-3581-4bf3-a010-056b2b9d3a9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6443e08f-fafc-4a70-93f0-e43ac2fa33c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cadfaac0-1a1e-49b1-8eb3-655d7f9f4ca1"
            }
          }
        ]
      },
      {
        "id": "f6e9cd37-a3c8-4881-8754-d155a9fccb2a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7790be49-8287-41e5-bdd6-8d137c636963",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95c2c239-124c-4b43-aaaa-fa9b132b8220",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25f67f92-b88c-4c76-967e-a895a19c02d8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23f2789-00f5-4742-9cb9-6ff0660f394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49d279f8-3b47-4b18-aa69-4a8f0b187abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d2f9f-f7f6-47f1-bf25-f995040922de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a34fde-17d3-4583-923e-af55502042c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69a1fa58-85d6-48aa-af3f-107f33470f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126f215e-d8d2-4bef-b52c-c73716595d1a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f07b788-6728-409b-a5f5-f2307c58b410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9da1b86-f92e-4af9-b014-5db2feab2567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66f978ea-7504-4ef1-a7db-db646f5bb72d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba925af7-1c16-4d39-af0f-d5f393382632",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458def48-cadb-4668-a62f-413efd8fe107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f147b101-832c-4119-a848-5aa25befc4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1a3c3-f325-49db-8eaf-b3d7fe387362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c41517f-6261-4b85-85b2-c8eb42c3ba0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fb91b0e-a44a-4e9b-b632-3a455869d2fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4561ce6f-af04-4e6d-9179-204f75df019c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5faddb2c-1e83-49b2-b63e-efefc366b780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9bd94598-6bf1-418a-9ec5-7569d7d5457e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "785c33a6-2f9c-43a7-96b8-77035d2e078f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4be4e212-4185-4297-8225-18e2815690d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d23ddaf-9557-417c-be87-04da8f0a5181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3869516e-bb74-4c7c-894b-4c5d5faa697b"
            }
          }
        ]
      },
      {
        "id": "2552a371-874a-4ae0-a9f9-528e015e90af",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79430065-55d5-4690-b351-f00abb71a413",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbd6b33f-7e5c-4325-9de6-6762b45af10a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7ba9bac-5d3d-4115-80b5-f6552be52ad3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f5418-2402-487b-932e-2aae1f4a3935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501e6db8-c7f6-4e7d-86a2-533a273c7847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32d164-c5f5-4b89-ba5f-0395bd795818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b86351-2e04-4670-89b9-968fc9621326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c706bec4-4e9c-44a8-a169-1bdf9e43d036",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b9e5ca-a2e9-4acb-9a6b-126c07e40a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8343ea5-7138-4316-b750-2f19bef2cb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24234f62-7009-40a4-9d90-f30a55369f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7a4112a-5034-41f2-8a69-dc5374148adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bf497a-c4d9-4a2d-99e1-79e8eb0f1d1a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea4186a-dd1e-4add-b759-03ac8b0c3d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56447efd-ce0e-40a1-8be1-7c03522ee9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6c9dd6-36c6-4b9e-96db-6ab3d6b13c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7070bec8-edac-4732-88a9-576bcc910da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360cda69-fc93-4346-b27b-eba912b037a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ea6b16-fc46-4d65-91f8-59068b24277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d058b1-ccf0-473f-96df-957415b5547c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4dfb37-cc69-4c17-a0cc-8f6af12ef101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba89bd4e-c18b-4c57-9f6a-5c02da75ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f074b80-b1c0-4b22-b9d2-9fcb9a49b0dc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e977ca55-9df9-462c-a73a-6106131e6f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0e066d-afe2-4751-af55-5fe43b3155ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb653a0-7fd4-407e-a958-f016add53413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56f4e19-a2b4-4816-bc6c-51f2b5893ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b14da08-51e5-4247-b4a9-cfaf30fe8565",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d1ac75-6d13-4ad2-a3ab-0f7ed7ccb586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5707ae-1b48-47e0-8bb5-dbb87330e07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db3cbc4-8ea0-4359-9c67-13b4c2a6575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87f5b4ff-b3b8-4de6-91cf-f25e8f73a6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620781dc-e715-4812-8f16-9454c122d322",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e62360-c5c6-4506-ad5a-849c860dd307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9326b194-899f-4947-9b61-eba1d1ea0c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e483ec6a-311f-480e-a124-e7c78b884712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8e775dc-7549-49fd-b584-88a2db0df597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4bbfa0-a841-4828-bfa2-a06d1926141a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae5b6c1-01a6-4eee-b45c-5aa464431410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051ce888-a17e-47ab-b439-9063cbff47df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd8698-5e23-4fef-b87a-8cef5e81daba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e715dbc-8376-4e23-9f4f-8f89a9f601dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b397a-bc5a-4018-9aac-bcab37e427d0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f83931d-24f7-4000-b153-76a83f8779d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e89b9b-f91c-444e-a144-0b202057bb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fc7ec-80a7-4ef5-ac27-00860ef066ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac4f276d-9a24-4aad-896e-c127cbf700b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db8020c-30bc-41b2-a647-be0a9ce7a848",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9abeef-a751-40f7-9802-08097196fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729dc725-43df-4c04-82e3-0b256a00cbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e631b501-b4a5-428c-81d3-a21616938056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d81d4d76-9b2a-4215-9202-06aa07b6fcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bd47cc-964c-47c9-b9b0-b190e4e53af7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5f976a-6751-45ce-9140-509c028b61a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e22110-c9b7-4c6a-a0f2-655bc6b4fcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830eec6a-cc44-4cf7-92b7-fe4c1ab9ee39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a5fd1c5-70eb-494e-9ade-c04ea00eed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63ceb13-a266-41f2-8f3d-965e128f3254",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc2dbd-e1df-4793-8a09-6c5ac9387763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5dba1e-5050-4234-9967-2bf1670bd051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3adea5-967c-4ac9-b49b-935cd42b7e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f844275d-0821-40d0-81f3-d0116174adf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f176484-9586-4360-8ff5-fe03b191b343",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b833e-d53a-411f-b5c3-26968e38da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3d872d-24a9-4823-9a21-3477f8fcfd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc3a58c-eb5d-4edc-b872-ca70e7ca10b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d017a69-bcb6-4e88-b3c5-ced88fd9945b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974aae84-b649-41a4-8841-0d4ad72002ad",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d72bd7d-e0ec-46a7-aebd-8e0ff41747b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb169370-065c-4a00-8dee-56afa8240117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c894f18-9bc7-40a4-a5f1-b88cdcdb4064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf3678d0-6b51-47aa-85b7-4ae605260425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a2cd8a-6014-4593-8689-95c806829daf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f01683e-5b61-4b27-9c67-a34583ecb49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e982dd-948f-4165-9bea-aef4e6c3afde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30866d4-2c49-47ab-9257-2d85838d068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc415196-4f59-438d-9934-6e2c2ffb1d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5118dd3b-1b52-44b1-bba4-646a30c31c11",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfe74e7-5deb-49a9-bf45-e7e58b55e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2290fc-6a2a-49a2-a008-6ccb7249f0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51d9727-71c0-4285-8e29-216f792f979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb2aec2e-ebab-4a84-93fd-20269739f00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471d30b-d504-403f-99b6-328590b4d14c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b8293-c334-42b7-ba8f-11057c0d54f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8acfa5-09d7-46c1-b453-ccefddc6a8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c824249-b8f9-4e0f-8aa7-c27b10a33473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd7eb7b-b615-40a1-a1f2-744805233221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd34e7d4-701f-4a5b-a27f-e40e74cbb581",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ceeaa-0485-43a2-9fe0-6f4db1da81e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8398eb-686a-459a-b90e-f7868ed119d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4575bc-da3a-48c1-834e-42a0c9e59de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b45cc5-2bd3-4211-bfec-7b7dc90883d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26763ca-589a-43ef-8df8-48e235e97e48",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d581ae-4539-468e-b86c-7d4503345eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f845ae-cfa9-4a8c-9551-9e5f62500d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1b711e-34f6-4aae-bf3d-10a9d007200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f7b895-6a8b-4a7e-a24d-d2395e640a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcccfe99-d6ea-4ac5-8531-bd41cd0ba71f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041f161a-512d-4b1a-930b-4605efb96fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b694a16a-6de7-45e5-9b6e-cf45d3186187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91663ef8-5e87-44b2-8044-5d2117698d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff4480a-2b47-4020-835a-36a5afc930b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10a9c2d-9bcc-451c-9541-97c0dd5c864c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a8f9d-258a-4a00-8a13-942189faf39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa54e58c-f59c-4d08-8ceb-c1a50179cc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609a42f7-0d75-409d-911c-cd8847c37856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad335c5-9244-439a-b569-e1d8e7db5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d582eaf-99a1-4acb-8090-385a1cf82000",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad038ea-e383-4136-98e5-84b56f301f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4393b1f-9212-480b-b310-11ec29ba280a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc6a116-0b42-4163-b83d-b56aa5577c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "775061c4-332d-47b4-b78e-eed568023566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e72875-a314-4c0d-b5f5-6683f113ec14",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f85553-fe37-4eb7-a90a-323abaf764e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e08e83-47d7-4c71-b813-4b15ed2022cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e8b78b-bb10-4362-808d-8d302c644f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fd651a-6a51-4b36-b46b-ecd70a15306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8f1645-6a26-4047-a7a4-c04b3996679d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527e7144-f341-4685-95f8-c916a55d89c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caac63a-dfd5-45b8-94eb-fb74649d6fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146d570e-1593-41fc-bcb0-c666fbe4ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdcd06f-c81a-4ce0-9c78-4d930701451c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb60d196-3c81-4880-9a40-b46297077e12",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169cd622-402a-4143-9a00-2f02d3f2fd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacc7206-3bab-484b-9fad-1a7d781d020c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7a02dd-4f72-4b42-b800-a52b03ba8e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c036ad-2be0-4e01-a970-9ecc5a86d45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af701da4-9a90-431a-bdfb-8e7fd9af52a2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6046294-08f3-43f5-8ae6-006b8d446d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74b01c4-850f-448b-a3d2-9f0597fcbd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41951bf8-b55c-4858-a864-f1fdbdf9f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6384eeae-a946-49af-a340-5ec130a5b5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1da595-f739-4eaf-ab71-3bd8281c9596",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2aceb7-138f-4212-9795-59f5ede2ca3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2be4fd2-bc6a-4a05-87d8-74f11becaa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efbc46c-eea8-487e-abfb-90b95bc16897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3988bccb-d376-4190-9f2e-cffbe8e577dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825c13b9-9682-4996-8c3d-95ec2518cb90",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d5f711-eb40-48e0-bc7b-7ca199be739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f4c474-57ca-4e81-812b-11f91fb5f83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a7d78d-1ac5-405a-8700-792d412708b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d4808d-b222-4506-856f-db4b3b3e243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15834226-8f9b-4b95-9a52-379c610737c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01008137-329f-4d06-b6b7-325e4914444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fe6627-20e6-4cea-9f2d-f94ac4effd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedf7e76-b965-4f63-8e42-440a39013dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3646b6d8-716e-49c6-bdca-60f2dabf4c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad0fbb1-9372-4b2b-88fc-e6a25094851e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d96814f-88ec-4fdb-a272-17b70c7549bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a83e763-5024-4280-b427-db4334717c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c86063a-4fab-4d6e-8973-7f910112fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da29d33-1b0c-4e1b-a344-0191414df8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f927cd3-58c2-4ba1-b89d-350b504af760",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc498246-c0ce-4cb9-ad76-39e60509807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cc7ba8-a2db-432d-b4d8-4c6c80b177c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab43fffc-6af4-42df-b402-5391b2c1370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "706d95af-5964-474a-8635-f59e43aa43e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c3e264-6590-4b06-ae96-3e378faa98c8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115a3db-9f1b-4159-ba44-8d579c241e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944305ed-b89e-47ad-8081-49e2663c2fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0842a4b7-0da1-44ec-a472-bfced23b8d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d0432c-6e64-4b36-afc4-400558112e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2625c30b-9a00-4fa7-a301-0be0a9a8004a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1c7c6d-a374-4a59-8bd7-e2a8ae36c329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae56070a-59b9-4985-bcb3-9fd84fa33cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c423c89a-2669-4916-a322-b3eeef0cfe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabedf0c-86a4-4abf-8ec0-5b65c6df2ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b5517-c506-444a-aab1-f29b3f1b5a03",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b379562-cde3-46e9-9292-821e95f322bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9a8fe7-715f-42e9-b3b6-a181aac1467c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47080346-b529-4f59-bbc0-19dd4d61ea21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9643f822-d743-4144-add3-0ab532e10ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60f979e-4bde-4e5d-a067-b2c6f371cb17",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7552f0-e345-4e5c-a9df-de5fe338c65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7652131-f6a1-4ebb-93d0-38c996c73529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e09ac84-62d6-4093-826f-ec908cd6cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "26567471-51a9-4f89-a0cf-a0ad4053522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47c31bc-a04a-4601-8c49-9e82ca8e7195",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86be367f-32fe-4676-abc2-c84aded78854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6cd4a75-c819-4da6-8030-ec7134ab01b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b549faf8-1e3e-4026-babd-9a5df05c7923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4e8e51-a79c-4657-b92b-fb4e3b463fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ba1fe-f0ae-4215-b219-32cb573e7464",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c579c8b3-157f-44da-8b57-3773ec6a95c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b83c99d-70cd-4e75-8073-0545875b2bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76423882-5cc2-4c8d-892d-8c2c8a93ba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "013033c0-7d8c-4820-8e22-fb17e3f1b21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fc0993-cb75-4ac6-b65d-979a841a1a7d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242e5ac9-dcad-4224-ba93-ff6d15299a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee570d7-0449-4c4d-9ffe-eb99c3a46f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5bc682-20c2-44f8-9ff0-d89c8bcd9d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03147c6d-781e-4d24-b219-a6e0a4bc551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87741e05-a586-4ae4-8485-afbbbeb1b129",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2d134f-146b-44d3-9067-c07384212835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eed9033-8cb5-4cc0-a967-3a37bfd3b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b6c18e-1309-4ac3-a59b-329c9b09ece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9eb51d-9ff1-4c41-a21b-4c9217c7aece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cab3e5-d181-4260-a892-963253201166",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc7ac3-833e-456b-842e-63b6cca92afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f2a518-9fb1-4e5d-96e9-8646680db476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dcd740-0fd3-40ac-931a-8dc3701fa968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b55f977-90d1-40c4-8fb7-4f09df5bf400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e1ce07-e7d7-4065-8f9b-9c35610d8609",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf178e0-4015-424f-8868-4d5b7168446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c88708-b657-459f-9761-94f8560eb6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd159e3-a786-42df-bd81-2ceb57441960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c79fcb0-f24c-40c5-b549-aa2ba3973bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d9d6a0-4fb0-48ec-b43d-3706fe1a4af8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c1428b-cb55-4a76-8341-8b46db214f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f9b56-3bc6-4075-9519-6df36ebebf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b427b3-3713-4f47-a050-c1116a7f137f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f0db9bc5-b343-4cc5-8514-464736a4133b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63920613-b45d-4cf1-92ca-c3af54f44a7e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79504683-194d-4fa0-9c8f-ee5c27f8172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c972ccd-e09a-403b-8e8f-91d5efcb9c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6bf1c4-a5a8-40d1-b4af-6d47c2f41010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc9a325-cc57-4acf-b0d1-d8bc50a889b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0f2508-b30f-4229-86ec-8740e3a171ca",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91273da1-36a0-462b-80cc-7ce4c62fb063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab9ae3-734f-4406-b414-4f6134958104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc72122-0223-4117-ac76-c07e3be57407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "821c5f2f-d10d-4238-8675-9b3829b73c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a96116-e963-4262-8e93-947497f9c924",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1555589b-320e-4ea8-9bbe-63cbda8a9d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f804bdb-71bb-4c7d-bf8f-64176f3bb799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2758092-32ab-4ccf-abeb-bb29f10da30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8a0666-998c-4f95-a84c-5ea166ae397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1ecf0c-bb12-4063-ab4a-36cdec22373e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5099790d-9543-447f-90b7-78afb0fc7cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd6c722-6c25-4b13-8475-f1d6b6130b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbcbb80-b7d2-4b27-9571-0b40519f14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e77ad8f-1b14-4574-9ac6-a0843cd51f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78fe7e4-7ea5-4b0f-81fc-2221b89255f3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e6ff53-7f0e-474f-ade6-348f904f043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ba53d0-44b2-4867-b79f-68dbd1f64b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aca9847-9535-4cdc-af42-9ad28fe41327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "484fd419-af00-484b-9064-1ddb74f1fa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e962012b-92cb-4763-9cee-50b3b3fea684",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3b97d3-3c78-4323-90ce-4864fa0b4ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70914ea-a74d-4439-8267-d5622fa19993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e18eca-02fa-458c-a8a7-e7537e2088b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d63e78c-aafb-4ee1-b74c-6831a01396ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dcd4c5-a30a-493a-b82b-57b6158d7cf1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7470266c-b3e0-49c5-8416-9f036d483cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbd96d2-783a-4597-b07c-5b54e16276c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754653a5-e9f8-4bb6-89dc-1a56a38ef5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68778f22-3926-4381-8073-d24556988293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3633c4-3104-428f-9140-3f2293ee842d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8016da3d-8c8a-4de3-a361-a2ffa5a8aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e981c91-87fc-4191-81a7-0ade329e86c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77a868f-54b8-4317-8b7c-de55264c2bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eee33fde-525e-4126-a023-cb1bcf05f856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f74d41e-f072-4dfd-afc5-913754fcea65",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11de592-9cbd-4a43-a0b6-3b0c345f4a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aab0737-a791-4962-8e50-4e10159ca770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd25caa-de44-424f-ac23-69e44b633968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f94a12f1-08bd-4363-ad17-34f6490774ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014112f5-d80d-4156-8e82-79cb458d9b00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cbff50-2d71-4a00-bade-3bb6aaeef730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b150b8-4ada-4433-bcf5-57f9f7c5cc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68229514-fd5e-4500-9dc5-d429779243f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "602076b2-b5bd-4cc7-9a31-33dab0ffc596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d31aa1-67c2-4298-a6c1-f1084a404710",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cf0602-e137-4bda-bd75-8b827bddfda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0004eff5-a884-490c-ab23-e2c51a826359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc266ec7-b4c7-4e42-82b3-af9c01e56a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d65368-0127-4757-a36d-4c723e91b490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29dd8d2-1840-4dd7-96b2-f57d46853dcb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb04222-a20f-4b2f-b6b0-299d07dce0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91f36d2-e9f6-496c-b15c-1fb33e36b957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fc7adf-9ed4-4ce1-9909-6f6035956263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b476b0-d74d-497d-b60c-5de2a1e2c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9b047c-c2d5-4ba6-8ea0-02b7c62b0c6e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a07681-c269-4424-99e1-1e0842aac626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d3f80d-df7f-41ec-9446-01da45bb9134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb056d13-91bb-4589-809b-9881ba8f964d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c18e664-bb04-42f5-b5d7-1a4e455604d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb0764d-74bd-4075-8f7a-a5d1b47ab785",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd75fb98-85a7-4304-a342-1bac6a2a8def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccdd85f-e52c-4c34-b1ca-7f9649d4e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86c055-5c01-48b8-98a5-8c6b1ed4bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "862675ac-cf11-4f96-a11f-23cc3f1c9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5539542-042b-4fd6-a806-d70cc66271ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e0a3ae-d9b8-4e56-a113-1d7085b07ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c6276d-5fe0-4c77-9dd0-637869a169e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2fd067-afc3-41c1-8f32-3899edbc5c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b177255-fada-4c4f-a38b-8eddba6b87d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778be29f-2bad-436a-8ea4-a29483bb952c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd9ce10-5b1f-4c24-b1ab-ddfa02b0b988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9785610-e152-49f0-92bf-765a364a4e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f13be3-cc01-45ea-ab30-a6e674872f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46698901-f9f0-4c56-9c53-da429a8bf509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b5c5a7-8e7a-4fa0-801c-114d0a66ef5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03471e25-0a9d-410a-b9e5-4d228c5b6208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9428a762-944c-4cda-8219-aa9b36180700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e553ecfb-4f3c-41d6-897d-23f78e54e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f06d46-5264-4624-aa80-25a8e9046d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32632e08-a09b-4c16-9524-5d2455ee27a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60af922-9ec8-42c0-ad54-134513824a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b2049d-bb14-4cb6-afe1-e6ba6e47de19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab5bce-ecb8-4d8b-8014-49a737c64f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c265676-d12a-4126-8585-1c33c2ce1c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca0ee7b-0498-451f-a9f0-625bcfef7fdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0add82cc-fdc5-4974-8e9e-08d3dc9b83d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a742277a-de8d-4724-9e1d-2cf92334e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c788da8a-3e33-42ca-9316-da20dab66415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b42c8a-31c7-4704-84d8-d6b6d427c349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea683f03-8a73-454d-b777-d3441f51aef3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ede040-31ef-44f7-a056-f41c451ed0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5593d3-1f12-4d3d-98e1-52fc2e8df028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60d7e98-628c-41e6-9f0e-f8311bd5d2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "33491366-d036-4961-a93a-826396380e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e296a914-9378-4b34-90ca-23b60d9eda37",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4f0958-5737-46e2-9171-a0ff35fea3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49d1f40-e2b5-4ce0-956a-93a95f16c7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3432fabd-8bd4-4649-a503-adc3f2397d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a72143-3410-49cd-b6f6-e427c6cd728a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b293285c-4ad4-4380-a4ec-5e38a1e70f98",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6653106e-c232-430b-9053-955ad224a903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10910fb-4c1a-475f-b444-616c4e7e4cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eacc49-611f-4cd7-9b42-23af10dbc14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f677d5be-fd87-4e70-8c0e-06bd66ac38d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bb68d2-9215-4e5b-a6d0-e08875a824b3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f9743-3921-4f0d-a0a4-5b5600669967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f3ad5c-b31d-4c02-81db-ff632f6d3d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3286ff-f540-4b82-9e46-06057ee0adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6efb5797-98e8-4b8e-8086-6dc0862003c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb9e0ea-3c1d-420b-b4cf-0585053d6fb6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8383ea5a-2a5b-4397-8264-61d3b88989db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355b9bfb-4ab9-4447-acbe-4e913abb3b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b808c8fc-9f1d-4035-8981-6b81f51740ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36fe8415-6ec9-4826-a829-edfc39e737ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae2bfd4-a59d-4eac-9020-a23aa27638a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a12d79-01f9-4fc6-8b9e-a1f7c32eec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e767d4-1f17-4356-856a-c77ca4493dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a76e10-45ec-4c04-b89a-94e717c04c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1d6102-7058-4f34-936f-3cbf663bc5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75b81f4-bb99-4e36-b0e8-3e4eec5e383f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e30a13-cbc5-4d93-9803-5716a50c116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff417bd-30d3-4d76-8fd3-e0e19de24793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca43485-6552-4d8b-95c1-088e983da146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6e547e-378f-4d9f-8d8d-e28f0fcc6c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b7a06-c4d3-4427-8a98-b8ff10053886",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd289a7-8e60-4a42-946a-811e63e35e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e09df0-c00c-4212-a501-2fa31dde40f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e1524-0026-4e7d-9a4a-a4704b58bc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f695907a-3022-4224-a8ae-5c8e0d08eaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00288777-5c54-4083-a3e5-50b947474a68",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea4471b-ea30-48c0-859f-a3948ab725d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f513155-ed32-4b2b-8a6e-21827c18467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aaaf06-3071-4203-89c4-6c18551829c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e4ccfc-4a43-4c3d-ae7c-e7e1c47045ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1687a0-18b4-40fc-853e-41abb444830c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e02e9ff-ef4d-40c3-b5c8-40701abac500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a72c0b-f5e3-44c0-9bb2-8c60025c9019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc0444b-4d96-4e23-93cf-9611d6065efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bfde29-1788-4bfa-863c-cee6cb81e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60b05f-b81e-4ef7-afc0-947b0f846806",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088cbf43-3cfe-43fa-86bd-60fda7d3a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5548b0a8-50ce-47ec-86f2-c567b7dd8aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f4ac1-ac7f-4293-8b15-380e4344caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ef631d-784d-4287-a29e-c5801d8fb16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341db254-3fe0-4f8a-9f1a-813a6f22d98d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8082b471-1089-48a8-9745-b38b3aa00b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00516582-b0e0-4cda-8980-9c560a599088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02a3a5c-a7a4-45f8-8176-6d35e866d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3e8f8b-d72a-4968-8fd1-289d471fe6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53c732d-33b9-414c-b7ea-dcd272712f88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd593488-e1f4-4c10-a197-57b1cb9522d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a94659a-8336-4884-af94-0a0c887dd3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bd729e-1eca-41e7-ba6a-4f1b417b8289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a55ea19-d600-496b-abba-e40f47a4559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70462fe6-c2f7-47fd-b05b-3702c71225a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f25fd-394c-4fe9-bb01-feef37852d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f70feb-f6cc-4613-9ad7-4c28efb937af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509c2dbf-0cdb-4fb3-9473-67b7ee512b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd1cd49-4faa-4e99-a868-3dd5755bc74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004f46b0-74ed-462c-b866-43f781023c09",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058a592b-4c8b-401b-abd5-468ce7cad1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab3848c-5c41-4c74-8341-599f60337cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d160c24-a3ea-40d1-82a3-0ea286f40917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8795ad-9e3f-485b-9707-8657693e6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a86e5f-4d44-42f9-81ad-930d076e0ad4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2617b370-cfcd-4586-b5dc-63b3b23a0466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b19f7a-437c-4f74-988d-f14a4ab06e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe227a69-dc8d-4499-b58a-29ccdb2c0385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce4e24e-5346-4352-b799-c6f984481764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494aca85-72fd-4834-8116-d0ad3e1dcfa6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c41605-7e38-4e97-b575-a29cdd5776df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bbecea-e7b7-4ec9-9541-4e6e0ecf4cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d123e2-d9d5-4a7f-87d4-bb32ac6a882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5fc134-7d03-4170-8443-b61b089a01ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8898993-6709-498a-8aa9-dc12efb28b2c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9e729-f940-4636-be8d-cdce9cb73d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754579e2-e0bd-4066-ace7-9032a8776ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e16b34-7f81-4535-84e0-2793804e20c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6370ec0c-52b9-4987-a50a-0be65b78bd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e21c8-cef0-44cd-b336-01eb7b292256",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed99e0ca-3d63-4ea5-8b69-c3b4362c412b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d9a4a6-9cce-4070-abb5-66f78d389eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72483811-0aaf-4e51-9956-21a679b8fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6130960c-6580-4553-92e8-7475405fc732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1728e8e2-e0b7-44d8-bdc4-00a252f3e96b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537f26f-e8ee-46cd-8a04-cd3757a3484f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0dfa4e-80d1-4bdb-ba26-51dedc2c0299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ed74d2-7e4e-4e8f-80b7-eb30f57f1b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5692757-260c-4d77-a3e3-2972cfec4c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cfd23b-3e71-4cbe-a095-75f41f0d2ec6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f43a3a9-a676-47cf-ad2e-4b17f536bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6c00c9-71db-4223-a122-4c84ee27d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fec6ce-2c4d-4417-a521-9bf240c043fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e811ec-1389-400a-b5ca-773b0d222883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b7642-e20e-4f82-a1ea-63339558c315",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e15040-9ce7-45d4-a374-425e35b8ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c75b25-c15e-4358-917f-0b7f7819ba72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2544583a-9706-4ff5-91b2-da7001504cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d46816f0-feed-4dd3-b1af-be8717c0db92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacc6515-d157-494d-9981-9594c6a63c34",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f37c62-880b-474b-aafa-2d387af8c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9b5915-da91-4613-af97-6a531cab196a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5230dc4d-cd1c-416c-b05b-99b7c38f3796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f0d5c1-6a32-4944-8594-6589a21c170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9361398-babf-4384-be5b-6e987c974200",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698ef3ee-a8cb-44d2-b658-abac3c5b2671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cdd8a6-2092-4243-8431-6f0ed14bc905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9e3df5-0ffb-4af2-af57-3b228758b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d15a0d5-a27a-4e5c-b0f8-b2407d669511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877d3a9f-e982-4140-8207-9222260103b7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b1062-10f0-4b9d-93e3-3f8fcece50c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aa32ab-01ee-4131-80d1-37320ca0cf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d7547-e3db-4a40-bfc6-096a842463e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6c0668-9788-46b0-8acd-43e504bb51f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8df986-b26c-4acb-9c45-e069c90158e4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e07ae7-640f-4722-bf2e-513922fe17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fb01c0-f6a3-49df-ac9e-3cfbcdbf3a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dce0e64-07a7-4a10-97de-655ab182f957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a06b6cd4-cf48-471c-b0d2-702f2eb5d08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58abe223-39ef-473f-9da7-2af2b2f6db7e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92b419-792c-42f4-9364-84732cf90dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39174a0b-e62e-4106-8a76-fc919e0ea1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ebcc60-3496-4947-a0e7-675ee411fafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb91b7a3-502e-444f-8236-422c5312ea19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e32d99b-af22-4f62-a233-4b224107a156",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7e3598-ea5b-4646-973f-063694e18f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899c7693-4eb7-4178-b3aa-eda0800335e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ee28e-c310-43db-b575-0c217f59bea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6836a20-1854-463c-a90b-7045423c0795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89beb4e1-ae74-428a-a924-87d043ba66e8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a477fe-a604-43ef-b7b0-f64f2551840f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebf30ae-d514-45c7-b27f-43865158aa81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b6edb1-aac1-4764-8f01-2f70d3963539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36a9a151-60f4-422e-b2c0-8a83024da1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a11813-93fb-4f5f-8ee5-4bae978788c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12aff925-9e1f-4b3a-bf89-37f6ef5e184f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53db0a-8c21-48c4-888b-d3fa61b064cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffee4b4-a735-4414-b897-9013624a02c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c535b2fa-ced1-46fe-a793-a7d35c0807e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a9efa-4cf9-45c8-b25a-982819f9e60a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324564b2-be0a-435a-ae04-f72738c813b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "353b17af-726e-417a-a815-15d673ee4256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30072f06-6567-43ce-b66c-1b25665d6286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9231c3-27e3-4a6a-b2d3-52f4844e2213"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fda7e9de-89c8-4ccc-8a13-019eb77c9f71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10591437-429d-4a61-962d-5b1042053737",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef39d765-d3dd-400a-b4e4-e13f98cd53f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0edf3ee-266e-483a-9ca5-1bbb0387400c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e55a9e7-814f-4497-a8e9-c2789f4799f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb15fd38-5319-4528-be02-9d661d4cbc3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad764bc8-9332-40a7-939d-8c54a707c519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2f04473-3b8a-40fa-8b45-6f6d881abc52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50de8caa-0fc9-4c23-bd85-f3054fabe20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe980500-4b90-4dd4-a2ea-326ba0553aba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b42392ce-2b71-4126-9033-7afd6b2b4f7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a056f17-90c4-49ee-84d9-6b15d4a4f74c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f85a0682-a86e-48b8-ab1d-4cbfa22de3c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "203a81e6-f10e-4a70-9797-2e1a72fb6e8f"
                }
              }
            ]
          },
          {
            "id": "1d598df7-5a92-484f-991d-d71e98e485f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b73710ae-4841-414b-a956-cf10946bc326",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca7c9c29-1786-45e2-b574-d3c3583b518f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "005ac96a-5a3f-42e1-946a-4f1b04b2627e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12234d74-54b7-4e80-9d13-abfc94b71eed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "409a3d7c-9b0f-4947-a93a-63f99fe0691e"
                    }
                  }
                ]
              },
              {
                "id": "0068872e-6c6d-45a8-94ae-62ce7f5c9c78",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c234d0c-6ec8-4c48-8b1e-d6354b4e464d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f99431e-0737-44f4-ab54-8fd1d25f4c0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb627c52-7ef0-494f-95e0-7cf85fa57fc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c19995f-2e6d-4d1a-bbb9-5c8e08b5fbaa"
                    }
                  }
                ]
              },
              {
                "id": "de8b5fcd-712f-40ab-8b83-5f0a616d41fe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5285702b-4efb-42f2-9555-51a605bc1dc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c26d2f9-2318-49bd-aa35-b3cf55db77f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1ba57c9-da1f-4ae5-8921-0cde6256f2d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8b8293f-f58d-4713-914d-c4f0d7267882"
                    }
                  }
                ]
              },
              {
                "id": "d800b6bc-b7a5-407d-ad6c-6b3039d915c8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaa272d2-0ad2-4a9b-9ff0-e922d5aae3ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "273831e6-2b98-429d-9eba-901d88843825"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777593f4-b24e-4c70-801e-360260beb1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c7d0e8aa-532c-4186-b6bd-486ecc5aeec5"
                    }
                  }
                ]
              },
              {
                "id": "15c112ac-292a-40f8-87bd-2f480e91c643",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ffb94c3-b726-4c7d-bf88-53896c08f41e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6a3be8e-a043-445a-8760-11c89c594306"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a1feec2-5255-43e9-ace4-4b6badbbb674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5fb06ec-caa4-43db-9ac9-6854c407f95d"
                    }
                  }
                ]
              },
              {
                "id": "1a859419-0593-4d48-aaf8-f71a6ddddb8a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ab28767-f3d5-44ff-967e-3e3c1bb963d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a96deb6-b8be-443b-bd10-01129fc9ca52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bde0580e-1b4d-453b-9d6b-0d3202af776a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54eb7bd9-dd68-4225-ae87-b9dbaf7d760c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b25dd22-2f0e-4f81-88b5-009246d6044a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b848e7d4-579c-413e-9117-aea956ac83f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "203d276f-8a1e-4046-b8e0-0652ab150d35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f740dc2-fa6b-4ff7-ae8b-1518f950eb78"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49664b93-2834-43f2-820f-13b628818331",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b80855d-407a-44d1-afd5-35a412f31578"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caea4565-dc07-4ae4-b286-16379f064783",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f6a04a6-82a5-4e9c-bc2f-300e39a34080"
            }
          }
        ]
      },
      {
        "id": "c54a5966-e128-4b3f-99dd-03b2f370f6ad",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "519edc39-da68-456c-b836-808ed56e75e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5926c962-f227-4ce6-aa36-4aa04c29fbb8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf4cf3c1-0609-4b90-99e2-234b2831039a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9069586-1fd5-48a1-8b8e-a64e2f622d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553b6d5d-47b5-41da-8b3a-1c04adf1a300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7acc12b-b542-4893-af2b-0bd2e35be10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "86006d27-76be-4a4f-a532-278e6ad12a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21b25fe-333f-4d6a-b955-79a7a5c5528c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ddd8e-f666-4ccd-afdf-0dea0a180018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c146602a-52df-4468-9163-df4278934b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8318b9-42a8-4c22-b256-da4960a940eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea387eb-48f6-4872-921e-f1dbae63e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e250f17b-7b82-4d34-8810-62ba99f61b58",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f75416-37a8-4aba-b568-4f0b8c2fa2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c6d7b0-9e17-4ab2-942d-6d901c5d4a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eba88a-c9be-4b9d-9479-3264975a0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a004ad-36c1-4419-a037-8928dbcbd89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab71764c-8ebc-45a3-9e0d-3ead91946a52",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a564a072-5373-40f9-84e1-f89ca1b0d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c593d785-a5a5-4a4a-b4b5-98d08bf823d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f2b4a4-79f3-41e7-9d27-751f66468579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ec4ec2-44fe-4b88-a7b2-f2ea624058e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4c303d-bc57-41f7-9dd7-ae665ea98b96",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e670ec-92f9-42f1-aa10-c9ceccbca78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e52f29c-9204-4605-9350-a6bb776d7906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eca9fa-011a-448b-beec-94f8236aae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46675c5c-2545-4fc6-a843-711401d7793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9ed469-1f20-40c1-8b6a-8055110795cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef32418-8fc2-4b01-afc8-8d52fb8d067c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a48fc4-c0be-4684-ab8c-7f696a7a4528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcafdd7a-b69c-4faf-bbff-5dffc838860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "893ac604-3e55-4c93-8114-d34459b847f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b96290-c2ed-434c-8272-125a63244423",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0032b23-58d4-4b61-9cc2-dd16cd95940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8021aaec-6aed-4cd4-a47d-d7f4aaad1e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedcedcb-2af4-430d-ada9-7035067a49ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "135aab4a-7986-40b9-87ca-ca5ef6eae754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba6ff74-36d0-41ab-acdd-c9444152d398",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb89966-9a61-42e3-a671-1498789c13d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82704e5-6888-44a6-aed7-39e35c2091f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e97aa7-9258-41d2-bc0a-6e30922a29ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14a0156-b510-4148-a663-a13a4a530df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357ebc57-6427-42f8-ab19-0584889b24b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2870dd5f-8481-45a8-a962-e5a14ab38b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7ab572-1e6a-45cc-a659-863e7a1eac7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040be64d-c0a1-45da-9651-d918eba108b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5432cf2e-3aea-4ad9-a5e1-c8661da17ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c479e6ff-018a-4f86-a7d9-4b7b2aeb9ae9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c410bc3-2282-42b7-9da9-0da672009964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaf7012-5410-4eb1-8341-959f92c77099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92af02a2-db19-4102-968a-b4ede377ce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d03d61c-170b-4adc-a82f-a9775449cfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1a8f16-8798-42a5-a61f-79bc29bf6f01",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6612449-b814-491a-8d0c-d02e5b0c6560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f4cd40-57da-4f4b-9fcc-279ae330a753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5786d43e-0537-4a12-a560-aa9fd0b7c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3899fc-99e5-4a9a-86ba-15a09c1ea234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833562e9-155e-47e6-ab04-41867aea9ca3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27403a52-b4fb-41a6-9b97-5c2aa9f27f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a195f2-1a04-4821-adf0-a594e53c274e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c0e8ea-13ee-4dc5-b191-c7849a9111bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df4fb501-fc26-4fea-8949-e05c11263d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eedca01-49a4-4fa3-a95a-ee8d026f0ac4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1416fa96-e1da-4f3f-9e0c-87d17dc7f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55c059a-b912-4788-86e3-630d3d92fac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66052bbc-57d6-4d70-8a52-7b31edb7a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff21916-a271-406d-95e8-3f8340e3f091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2807c-213f-4826-aca0-bd728d07b30d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa56eab4-88d3-490a-a49d-e0d103c39aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7329477-16ed-4e7e-a376-91f134ae114a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3f7a85-9731-4e27-a6bd-765342218a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3a1ab0-25d2-46a6-a258-a34f5e6b3262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb2ef57-a353-4d16-bb94-3e3110100501",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30835d7-d1ae-441d-9cbc-d6b003963f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec58c44-1343-45f9-b0ee-9e314559fb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f98de27-415a-463c-91ad-45ce8a42ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4294fd-6926-4d86-a440-e6c422d9c9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e9689a-0902-4637-948a-fc0f245eb9ca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb82ec8-9715-48a3-b7a0-18a8501818a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d6aeba-845b-4f97-92df-aae0691f7ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e535ca-83ce-4fdb-8438-15e5ddc31107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "621edc88-3199-44ba-9cbf-0603c248036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59aea10-c618-4ce4-9472-52cb40467f7e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ba6f7-d174-4415-9090-348063094eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67982e5d-cb38-4cca-a7e0-580a22c83a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca2e5c9-9354-4505-82cc-5e447b3af6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a09756-60a9-457c-b979-45e329a17ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08d31be-9325-47d5-be9d-d9f975a67eb8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82efa51e-85de-497b-af0f-70b47cb6b438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d09948-a294-4600-9976-e6ee9a2915f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7b09a1-3c7d-4708-bacd-cf7e287e303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18a1055-19dd-435f-a977-1aa2904cd71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20845c67-d07f-45c2-a31d-944cc22d2ed9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58602cb6-928d-4474-b307-d86e86254577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c821c962-8977-4dc0-ae7c-ebcac2e1c5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a1320-71bf-4c4a-9b7d-c32aa6baebf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df445a85-9409-4267-b665-0b52886272ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc47b4e-1335-414a-a994-364378e91a81",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37303d-b787-4737-b2db-2e054f8aefeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f17b9fd-03d4-4a9d-a057-41d9db256956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2ff2f-70dc-46c7-80c6-b42ddfa3534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3acd6b2-4462-4e7e-ba71-046ceb75e0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1487163a-281f-49e7-bb37-08f3e3dd5746",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e958f1-6c00-45dc-9c1f-8666e873444c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a83e4c5-0592-4651-8dd5-25be91240b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c4b0c3-b413-4c12-b0b3-b3e2ffe7089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebf87aa-bc4b-46a9-b638-c8ec3bbb5153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261d7562-21bb-46ac-a405-d42cdc37a2dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ce270c-d4f1-415b-8c65-c578eb7d9628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8389035-ddcc-42e7-8151-42d68409e7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b72552d-9545-490d-9cf4-2f416c6b00b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f719e96f-a926-4d77-854c-a7fdbc55920e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe744221-7d7e-4c6c-b9e3-5baa688c6fe2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3cf1ef-93d1-4d95-89da-20731521fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ecb52-b31d-4c6e-b3aa-4c32da76c6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68a7bfc-b0aa-46a7-880c-aec825431af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ade1c9a-8f69-4368-a1a3-f152d9eb7d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a4bdee-a7b4-423c-a48e-440884fa69fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4693dc61-6131-4c03-a2b0-b7474a7de2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da1e9f9-d467-4b0d-8110-7c8ec0edc0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e4d91d-2775-43a2-b2d9-8dd75dcf109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca86100-485f-4d09-9a12-e6ca4c09d95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ac7ca-9557-4b14-92ee-d2313e6e52e1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10eabfe-06c4-4768-86f1-195abddd853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a808ac82-3592-4c18-82c8-082960e47bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4503eb97-117c-4b4a-b549-bbc8dba5c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "799c515e-4080-453f-84db-d3b63268b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6b2928-a52b-4c27-a0b4-6beb441db599",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed119e6-d524-4b37-b820-e2d535129502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e0cd2d-907a-4c37-a74e-6d09f5c3798e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcb9bbe-c572-407c-9077-e39ddcaa0fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d3a323-6e08-4bbf-be00-36715f6402ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30f46fe-db89-41d4-8268-3ff01cca6414",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af109714-2d17-45e3-846a-95103b54c219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467f4eaf-01ee-4f67-a113-5fc752de28dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e369af-2d4c-4313-9788-ee92a5adc74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "017ffdf1-9195-4330-aee4-263b0a3df727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d6fa62-c38c-4c47-aadb-7ce658d9a9b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af008629-c954-47a6-b2ab-762c32e44033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059895e5-3d8e-4960-8c10-3f6d546e322a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f04063-068a-451e-8f6c-6dc2c99999f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "379da3ae-d484-4a10-9d31-aac0c8217a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6265dc5-51e9-4785-b0f6-ab7e4aeac077",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ed923f-7aab-43f9-b104-f004cbf81a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0273152a-6e4d-4729-9466-59b7dc409deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156c6f8c-20cb-4454-8372-5511af781e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67f8b85-77e5-4ac5-9448-914bceefb241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426f5cc-46cd-4508-b1b2-33f9048cf036",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c08e3b1-1d32-4d81-b98c-6ec6832c04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822e3b45-38fd-4199-8707-94555a633ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7e8c0-8b7b-40c5-8f99-0b756c60df2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa56950-1615-4ebc-b697-d251612a8ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa55432-fb05-4e03-ba08-0f387a01c7a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534310d0-6edf-4722-8366-747d7cc2a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4492de55-3513-46ff-9b31-3141b9662ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47aa333-d390-4828-b3da-d72081f4ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6ec20a-9eca-4d82-af4b-3422b328dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1070a199-f2d5-4015-9d7d-21e3512f69bf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7989ac4-f92a-43f2-83d9-6a0a448e560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b9c5ef-2f6d-4593-88f6-a8893d281bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae355b8-ad64-4714-bca7-6cfc03064650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c951ba-1704-4207-8de4-57c0102fb433"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51e8c206-d99f-4765-a331-70e60b7fb575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3c0908d-08fd-4331-a42e-6a2c9f38d5e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bdf86e-235d-46a9-b636-417e49f4d2f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5e561e-d590-4c25-a610-92f08dc6de0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68e246c-9054-4cf9-903e-2b6e8bfdf4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d426d3b2-d021-40a5-b48a-19079f07e627"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "813475e0-ad27-4d96-bfb3-ae344969792d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46e7ea1e-caa7-4449-a943-ba389a3f37f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e9c4dbf-b5aa-47f6-a4c6-621db5fafe12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a11872e-f248-4dbb-8cb9-d91b51f2216e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a7d1b84-c842-420c-b884-b590e8ec630f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dc783a9-faa1-474b-9a10-a35fe54610b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7de0f2a-572d-4f0d-8704-e26ed439d4d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d3c00d9-6f87-4d8f-ab51-1f77a6e7561f"
            }
          }
        ]
      },
      {
        "id": "e985832f-5413-49fc-abf6-26b071face69",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f4e958a6-0768-4eaf-92f7-4ea5e6e7275a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "865aa4cd-d56e-4406-b0f6-b7f8b31c651b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac9db22e-80ce-469a-ab2c-440fcc94cd65",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8755a561-e1c2-4d37-a563-c324a02a8ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b95fa1-3aa4-40fa-8657-458758703602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc89e29-3c92-48e6-a26d-10f27631c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc63e33-9619-4758-93a4-07090e66a24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99a7b76-57be-4314-a374-2ccab11403f8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a0596b-91a8-4485-853b-ec2878621884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02de619e-b398-47b1-a72a-ea28476f4f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83d5da0-3397-4a8e-a260-ec16bfc465b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e377328f-c842-4ebe-99d4-f22ab41e07b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca49e6c2-c4b2-44d4-a3f5-31ea47acd866",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570bb76d-bbbf-4804-891b-c995c5fe7d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89b5945-e567-411e-a998-67fd70072df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d98b4f-a3a4-4e96-8b07-70f71c0cab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3886e06d-70cf-4fae-a862-4d1d9b7ddfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2197c4b4-d2af-4cc5-8557-4f5940bf331c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31426765-4bf3-47ba-80fe-cf2c30f25160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e494c41-57c3-46fe-a45e-94a7547dd32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407f88a7-d8a9-4cfb-b68c-d9e839185ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6edbc2-5487-4478-9d4a-186bffd5d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa34266-9eee-43f6-997f-34a5d2bdacf4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee540aa2-b987-4165-b843-c4ff07f889bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10467f75-0737-44d6-8109-cb86f80388bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a665d-4b2e-4710-931a-3db73eaa1856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2296b051-cdc9-4abf-ad5b-32391a4fc43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685d4591-3d5d-4c18-9aae-6ae88da19c70",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e69d314-25d4-4e60-ae88-f84cbe0a0bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8333ea51-1bfc-421d-b201-81ae4de60ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43d7913-a74f-4dbd-af3b-3931b600134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ad9dd9-0d3a-4630-805d-0e4ec032091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6ffd49-4257-4090-b1b8-179ea78c42fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402f9ae3-9e0b-4424-b3f8-9eabf02f64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9955234b-a245-46db-9b35-b773d936277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55efa00f-ad68-4c5e-9c91-9c32f98962ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ae4bec-2447-4f2f-b11d-6465c1320a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6123c5-d3f8-4df7-9c25-03092c32f03f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65df505-3424-4466-bed0-6ba6dc5f7917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be941355-1229-4e90-a365-b8c6b52cb085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19ff8fc-7bd8-4f2c-bebe-f35b9bf14bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e7f88e-54e6-4d82-9621-012dc71b43f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e427fbe-603a-4fc4-ad18-c33bdaae43a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29adacc3-c719-48b8-919a-8cc4226dd29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ef5e89-3f6f-4022-bb55-65b3c26b08b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b119cb63-c9cc-446d-b030-ada1361bfde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67dc77e3-a19f-415d-8fdc-f1409e4f02c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b4fc1-75be-437e-9649-665c7ec59863",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da436454-e09e-42e2-a0e4-1ae0287f03eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a290d65-419e-4483-9b46-3888fe041a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17cdabb-30f1-49c8-8b40-6a5df2803e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0076bf7-5ae1-4ebf-924e-0d4d060223fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed4d2b5-c932-4fd6-85aa-a6428fb30322",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ee26a-c549-4d69-afd1-85c1038b4629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac0df1c-249a-42bb-83bf-8b88009c9855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e3680-f250-49fe-842a-1cef28c9fc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8583743f-60b9-4993-aacc-ae6255603ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4faf9f7-0dc2-4200-ac79-ca5447218fe2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb5c788-6857-4c0b-8564-3697628b9248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0c94ed-745a-4ad0-8fe0-c3ccbb6f7064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d59059-d72d-405a-8ab0-26f61766427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e40d9bbf-377d-49a0-ac83-a7c77dd55d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d58932-c383-4a84-96b3-bf47de2c4e2a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d932e09-2a6f-4d33-abd2-5b8a17df0fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045f574d-6036-4edd-b0f7-6fcb780e3c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c399548-bb90-4cde-b582-8bfe2d61aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df1ef8e-fe15-45c2-98bf-2835dd293168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542fc8ad-b471-43f8-b0be-f7894370104c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47818f05-5013-440f-aefd-6a1119cce2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5123d8-7782-445a-9361-8afb867b0dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6d6699-3fc2-4497-9d9d-062048aba63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1d99c9-0dfa-49f7-901a-66bc57b6480c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1815ec30-7eff-4298-a757-887976d2051b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a6c842-0476-4d9f-adca-687bb0e4035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b6c2db-26df-4350-8e4f-3c2753f76962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33895825-33e6-4455-ac7c-21b7623d8956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f2e962-c9e6-4efb-9078-5f556f311726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4b05af-79e0-476a-9b63-4006a8d78e49",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a512ef7-f26d-4a02-9a26-77221120be66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043a4012-5f1e-463e-9625-dc62aed8cc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76890d3c-0045-4f5a-b67a-8c56832100e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23560cd6-6d30-4ea4-9e91-00aa3a8e22bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf37e12-57f9-4ccd-b676-9de4bbc3caf3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e06d5-d106-47dc-b328-c0b85722229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f298168-c7e4-4f2d-a04a-cf3c8b996f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf9852-ee27-4ff4-937e-9c631b87a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d9e88a-af7f-448a-a988-43722f1f5817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42df306e-e294-446d-8e30-d2c8de26c819",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6db7174-0956-4676-845c-0a64f2be25e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439a09cc-7851-4a5f-af7f-c7b6234dafcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e5151-cf51-464f-8142-63978f17ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95aedcd1-6bb8-4412-b976-ea43af0b462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daff5f60-b684-4e2b-82ff-57fe4dcbfd53",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c58ae-5cf1-4fa6-9604-b53c8319fc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b30415-6529-41d7-9af8-cf2065baa941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2f79dd-e63f-4490-9cf2-5af99cf52154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72730e4f-c214-4e42-84d4-074d18f9af57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ea935a-417a-43b1-b36f-c2a450ec3c20",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d834347-7124-438a-b851-316b35794147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14faaeb5-e22e-45f5-a9a7-bdcdd0cbba07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf4623f-b3bc-49cb-88b6-baeebeda385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa453d5e-ad57-4058-8af4-da2b337a519b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf2dab7-1ab4-4942-8d56-ee449a57c648",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a689e2-5804-4971-a4f0-cecac8f038dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27280757-81ca-42c9-ab69-371c215d9a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90be6292-1dd8-4bee-82ad-6c0bb835cba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc651203-957f-4d49-b5bf-25d77806562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78231dc-cf0f-422a-88ec-e70964ff971b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e65a99-abaa-403f-a37c-3151d31e7450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a95cb73-de19-4767-830e-e427c84ed7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2b135d-1652-42d6-8ef6-f5003ac1bb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9219ea10-e8e6-47c1-82c8-30b6d85a7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce62794-db45-4c7c-8e85-a3f185b911de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b1dde-618a-4933-a702-ed46b6b5a65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17f4628-256f-4f0a-983f-5a0eb6db9dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39af4e03-4efb-4fed-b0de-51c0cedf0bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae4c48e-7b56-4639-8359-b7f5d5c31377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b7d568-be24-4335-a25d-987efc9e95bc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b4bcbf-a426-4e22-8a6b-0caec7aa25cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3d35c0-4ec9-4f20-8956-b56ff28d508f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7daaacc-6e42-4ed2-aa83-6732fa5cdf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6812afda-6427-43dc-856a-bc9801c6492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eb3848-17a3-43be-95b1-325512978e3c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cf5254-530d-44bc-ada1-a2edc6f32aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283ea400-be83-42a2-8d49-ddbeb3739880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e1b640-a76c-4054-b49b-2aaeb1afbb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa5d1ea-921b-455e-8533-2e4b2d2b229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa155040-6460-4b6d-9ac4-1c1bd849b4ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb2ca1-19e1-4cb8-9fce-a0daf0b61d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e2cedf-2bc1-44ba-a823-82ee7d7d18f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8255569e-9eae-423e-bf23-0becbd396703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2ce08d-e2c3-464b-b445-f5a8fa6e6572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf49a1e-046e-460e-a150-2091c43e7c9f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f20b79a-b350-4718-aa43-9480f50b536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03896890-7111-4297-94a4-e10633ca1bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1de8a2a-e438-457d-b4fb-69ef795815e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2b0cb1-0018-475b-9910-7bdb558e7621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffdfa86-433e-4ee8-8cae-ef69d72f4149",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1fc7c4-f266-4c69-9db1-d913e5f94028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c6bb68-cf80-4460-b309-0df7faaa34a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695f7a6b-db51-4571-bcc7-5974777aafd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be69f0a2-7634-4301-bc3d-357ca8dddd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a006dc0-6d72-4ef9-a77e-0eda36694523",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4140905e-ca26-489a-bfbd-29fb1b6c2aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dbd41f-8e3e-4f19-9118-01c87992ae75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec898007-361c-4ebb-ad15-ca2595570502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a386a46-9640-4737-98d2-2182a9bcfebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3fc5dc-0534-4cf3-bb6e-e3ff7ac51c4a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db1a8d3-e464-4b1b-be09-6696efcf2e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec80ee04-4374-4c6c-98b3-a393d9bdcf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a70092b-bfdd-414e-9bd1-fb362de2c558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa76162a-23b7-4769-8fb0-0e2d2249cc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595c4edd-77dc-4a0a-b3ba-e8e4493450d8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31bdae4-5959-41f9-b8fc-da81b94031f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8e05ba-aefd-4a9c-b42e-583cba6da65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9526f870-96ac-46e1-b11c-f89ecc6668fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "991a0b09-9556-4f53-9156-bfa4172c6d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd432c1-5697-46b7-bb96-082ecf2f04d2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1c5d93-a3e4-4d6c-8e84-604c2b86e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974c0e58-4e46-4d2b-9edf-d4025bfb8fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe30758-a7f7-4053-aada-2fddb7db596a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01534fd-381e-4266-942b-f3488f5330cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67cd0d2-6f98-4558-a9dc-891a6bbb52a1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c3e79-bdb7-4be7-83f4-d75324a90cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47158c01-1ae9-4bfd-bb4e-f34e8822de78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d63788-4b06-42ef-9862-d3d6bd4e1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac7553c-c409-4699-85fe-e671c3a65b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba8ea7c-3303-4dd2-b763-a015173b4233",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53b19f9-9928-4f2f-8e2c-6cc7b7c53bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb7445b-ae74-45b0-8356-dfed7d76f3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e57180e-da4d-4fae-8c4f-6fbfb9eb06fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d8fe9f-bf68-4410-a7b9-d3369fdfa286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885ea02b-e9e2-4566-9bcf-c1c1f1c09e24",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a7ddf0-ca66-4210-81ab-b1ae3a2f4bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1733f492-e05d-4adb-b76c-750ae7950323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96063900-5ee8-4e17-a15b-d1dafc125561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e10629-8320-4b4a-a7f0-be0611b4dd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc881e24-379b-4b34-9ad2-655fc4c80199",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eea79a-a1df-4202-9cb9-1994e42b4aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa861c07-7115-46b1-901f-49fd7157166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92661357-23e9-4573-a435-018d021fea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116ef597-6473-4e66-b80a-f2c0edbc10b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4c980f-ec02-4c87-b713-348fc2589b91",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb2e88-bbe3-4427-a3f0-14b33fbaa3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4df728e-88a0-4d95-884f-cc855f5c1fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7a58d0-4c49-4e76-b333-ea18b48d5f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7b2d26-da4b-48e4-9f8b-4783e5afeabe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df211930-4c9a-4991-ba82-0daf161828e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff80f925-5716-49fb-a732-39e8cf35cb05",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f7ad3b-43e4-46cf-b7a5-f51386cb486d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5564eea2-51ce-4cb8-b298-67efb774d040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e105f169-f147-432d-b0e8-be36919fd13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb642214-465f-4290-abe3-a152132d3e95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f26725b-9b1f-4e5e-85f8-abcad21db24e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f46aaf85-e707-4644-8512-5b255d99b236"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53b0db20-0313-4f37-8cc4-1251ea661ee9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e09b47f-c1df-4445-83ac-9568a472c78d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1abd959b-401b-4eb7-845d-883261789ff6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5d9ef33-f949-4e2e-9bbb-fad3775342ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc002fd-31b4-4a6e-bc91-9a7b4c19db39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd59f53a-bb93-4e87-9e97-844123df0a23"
            }
          }
        ]
      },
      {
        "id": "ada0dea7-d2c5-4993-983b-ad1583486c0c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dcf74d8d-ea6f-428f-aa54-34dc8724698f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3926edf1-2dfb-43de-98c7-bf49e56cddcb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28ccefb9-0e27-4c26-809c-e494813e36e2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c752ac0-edd1-427c-97d7-ca26c5a559f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecb5f15-1f19-40e1-b330-5aa4db18e75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3a7e4b-5110-4ef9-aa0e-d2ba191cb776",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5526651a-28b4-4086-8e81-2ee26a0794d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e3f232-4cbd-41d7-b9e3-8cf53ce87cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47322061-6c99-422b-9507-33d9d8e2f0a0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbed337-e049-4163-9fec-656c63ba085a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ba7d60-d3df-4ae5-bde2-afff004eb341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9749e720-b42c-4aeb-b45c-5c7d1c76d6d6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10556cea-1994-478d-9db2-d7e7304fc252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bbc402-c05a-47b5-b1b1-b2698b508e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63de2385-9897-44b3-83ad-1706f99cf06b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3154af90-e7b0-4794-b505-bfd901da13a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ded11b-9cad-48bd-b584-1d09f0382bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8a88ce-ebb2-40eb-98d7-dc9fa52d53d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4232b9-0470-431f-9594-039b75327041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7a1fbb-13cb-4e4f-8073-914614cb9717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a978e55a-7db5-46a4-891f-959fc6b220cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5437032-ee41-4d73-a345-13b9f015b84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f0a19d-478c-4245-ae28-ac79c8014d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8079cd-88a1-45a3-8af3-f0090c5e3755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daef7a3-1a00-4b6f-9a39-b6bd5c072705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677670d2-c36c-439a-9ac0-69fd67a4744f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c43c59-dcfa-4a5b-9fe9-3ba0b339ae43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0462e660-193b-4b23-b0b7-84ddd8f3e43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2668844b-268a-4e90-aa17-925ff68713cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4c6c2a-1cbe-4a86-b18e-2bc8e33c6e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57e1a66-2f0f-4def-81ab-fa5b3ac7f281",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6f85e7-6f41-4665-9689-7f0d2b42c014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2ed0ce-faae-4f18-a8da-7a9703f9e3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb99d4bb-631d-41a3-ae65-fa934fe4d7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b0ea2-045c-426b-b8c2-8f8c3cc3f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da72aea0-8e2c-4ec9-82d5-a532ecc40625",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8329074-15ee-4b1f-9d2c-ef0cd6f6dae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a35e64-5ec2-4992-a27b-6c4a8d0bc598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3474f3-8b22-41ed-acfe-95979f506c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7337c54-9cd2-462a-a556-289395846c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ae4ffb-8c7d-4745-8de7-8bbe63cef746",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f03689c-4260-48fb-abb3-1175454d5f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3464596e-c964-4ec2-8ac4-92699a366e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed89894-7731-4fb7-aec9-0e29a62890fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87dd9e-a09a-4cea-a8e1-c90f6803ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6956d67-08df-4b93-b815-5ea7714b9255",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e0fd4-01ad-462a-a173-015dbdcd5798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5206163-519c-4cc2-ad5a-b2ad3920dbbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f158e0-a7d0-44d1-811e-4003779b922f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02fc8c0-219b-4a6d-a71e-215b09a5ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7908bf2a-cd4e-4a33-8964-178c89449d50",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b1e991-3eff-47a8-8aaf-d2bb63ecf290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4baf320-1749-46d2-aa38-a7528918f684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ee43d-9849-40e2-9757-a4f4744313c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a2aa5a-1919-407a-9297-1afc8db9de5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb7aa1a-2a52-4c9c-8d32-25560b2b3dfc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ec24f5-d173-41f1-b38d-f17e8d0aff44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bbd01e-7398-42d8-86ff-48dfb9d3da85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971a2d01-3bbe-4308-955c-5a283594c852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9dd04f-ceaf-4afa-bd49-317ecc36a929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b72422-eebd-42ce-9b7a-66d68d7c7e21",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f46936b-465d-4e01-b636-54c0315447bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403ba769-606b-440d-9d22-a71afeb137c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584f963d-1191-4542-82be-0f5eea9cec65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55b0e20-ac80-40ad-9465-2e31cca5aa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c0a4af-da33-4a0e-bcdd-5bb381811ecf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752c1bee-a6ad-4fae-b40c-3c48df420b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aee5173-57e8-424b-aa82-25b8d0d46a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44d5c60-e340-4e9a-b12a-fa7524061b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db0032a-17df-4545-af08-5cecc4e55fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2136de57-fcd8-4b8e-bbfc-d7afa46a28a1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea330aa-b497-41dd-906a-842e1929b96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0a4aeb-9d37-413c-9a25-464e46b334fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e914670c-1023-4828-ab4b-5e48a2df3f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1427a3f5-3073-4e71-acda-6772d11f0843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4f4df-fa13-4650-b504-73569fbaade3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07305722-3fba-45c3-b5ca-6ebc7164b6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a84b147-8e08-46ea-8047-d7023aff8e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735496f-5a09-4054-9f3f-6d387f3a2d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97df74c-89a4-4593-91e2-21315304a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e69775a-e063-4ae6-a6ab-52c5a7fd8baa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56306dc8-b286-413d-9aa0-6df5a9b88f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52507c6e-bd89-4fa4-968f-153a211961b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa570fb2-4638-4c7e-8fe8-95290dd70112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ee1736-8be4-4d11-9370-b0e291cbc908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66ce221-1fb9-4a1d-a219-21cc6e1ea642",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137b44b9-3f52-4f31-a81a-6f3d7d4d9cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a030392-1dad-4d1b-9e3c-b731c6b00f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7145f6bf-3f84-4b0b-babd-887f799e72a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579111d2-5c22-42ab-84d9-018569309ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f068bc22-06d1-4c46-880e-e5bec0a05703",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7731081a-f96f-4e5b-b1d0-aee20c6e70fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a068e0f-aa46-4093-8e6f-8c43a80c9967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017a732d-c9c8-4040-92ed-0a0f9d41a060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8a91b4-f32e-45d9-80b5-ee43cdc61a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b8c376-6955-4912-882e-9da65da67a82",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d319f-bf32-4d10-bc19-d20fad9635cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d100c898-c856-4393-8e5e-363cfa968f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4277759c-162d-4f15-8d15-b5ea108fbe2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec600a8-91e5-42eb-b025-8f5a2f128fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bb38ba-dba8-4bda-bb1d-a2e1490ed9d1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd46892-1650-4e24-af5d-0a8937190de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd8410f-e6b6-4746-9da9-1f14be8243d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb7f921-954f-405a-b2ec-00ad63572f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1594d725-e10d-40c9-967d-12db363d978d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca323d8-1be2-440d-ad97-b423c9982cd1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8bfc5c-c9fc-4534-a11b-f5b08491d71f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8883116b-ce42-41b3-97e9-a3e68f6d9049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533fad76-f98f-471b-99e6-d308cdd6203b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0849da1c-9b40-480a-8453-07280bb1d957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc59ac2-135e-4bb9-9de5-0ef32ab69f7a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328b3da4-72be-4ac0-9371-82306de8135c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0380f3-289d-410a-ac44-bcebcf72433f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454fb0af-e0f5-47e8-b07d-49bf98abcf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e7ba24-9060-4702-986c-468c587d8789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abfb3c4-70aa-469d-ae2b-35905d6d6ff4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afc24fb-b76d-4dc3-95ad-cd41c7647670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1fac1a-1827-4807-bff3-f97a07d5ceda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c55471c-8c02-4e06-823a-0cb09948ff9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7daee11-33a5-4682-a7ca-678051f9d45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0acac-10b3-47a1-a674-c8dbe6efb65d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765ee089-69d8-4b0c-8ef5-2131c6696981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a9285d-96e5-457e-9f39-ab0e1950289a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00cd6ed-fc44-49cf-8c9f-8a399e68b46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bb7a11-d693-416c-a16b-648de76a9e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4ff5ba-0222-4fac-8652-90dcf1947bac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e91632-5181-42b8-a02e-9a7f18d41ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a2ff22-f9a8-4f79-820a-6a15a7eff79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0b19f2-8497-4f90-bd07-ed96b32e3488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650a4857-f5f5-4e94-ad86-06af42af8b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b37a95-d194-4277-8e63-304d08d4ae46",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b99231-b40c-42ac-9dbe-55a8c2fb3e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a40f40-bdca-4cca-acc5-e1ac023bd0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2286b89-453f-4ab6-8027-541e2347189c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32621a0-995b-4ca4-83df-03a8ca888f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33cafdb-fe09-40a6-b7c8-169ed2af59eb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedb561e-46b3-43d5-8f2f-72e0520c961b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118c06e1-c25e-4c84-af2c-0587a96741ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca43d7e0-0c9d-4ce0-8bf7-06bee795aa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484fe218-898b-49d2-8f5b-977f9d1e5a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad4922-03d7-4064-ba25-5467b31d0c03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12db1d33-67cf-4c05-8314-2918e2e344c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3275b1c-d232-4d8a-abc7-d7f5725005a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df9726d-0bff-4e80-9ad0-005537cede96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b154d7-1735-4c2c-aacc-a282f6c974d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf14f0-e8e1-42c7-886a-e62c87c002b2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93f2ec3-e4db-4b9d-b733-723583b2f9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4106684-a9ea-4ba3-aeb6-344f9a51b643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dffbd98-40f3-4391-be37-21b871c8e9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361c69f6-3155-497c-929a-dd40d413b2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78a1d6-0d2e-4d45-8bbc-f3bf46457efb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b7f769-0d41-4397-aaff-6acfff21f06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e0179e-01b8-4f17-b3fc-36f89fa76fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa257040-f86f-47b9-908c-c6d962bc71d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c7103c-73a4-417e-9086-b47dc02a6cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b86ec-e9a6-48c0-987f-0d012ff8c5de",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99afc0bf-075b-4735-9b7e-f1201c0caddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bbb9ee-8f9f-4f92-9e04-3fefb436f4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d78c984-57b7-4bd3-ab62-3b8b3bef00ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b424c858-dcce-48d4-82e4-7d2b548a2e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff800a8-0c26-446f-8d88-6186387efcc6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d590072-42fc-4b98-98ac-56b889bf2975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953bc09e-a8d7-4046-ba78-84de127205de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dbed94-0e32-4c8d-a4ed-cf05410e3e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f41d24-611e-42a6-94a3-17922512b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a530b99b-d7e2-440e-ba07-e246be9584c6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc1455e-a4d7-49e7-a498-76da555b0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75661bd-8b7a-488a-9c57-56979beb0329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c73d5c3-3af8-4146-8cec-3200e6a316da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b8e260-08c5-4390-843f-98350577b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1527033e-03ee-43ff-9aea-425a844eb891",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2745e383-7e62-446b-9cd5-c8e57ede5ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b77a0-239a-464b-80c4-f25559d77e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf9d061-a94a-489e-b9e5-bdc7f6b8de6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37474bd8-4daa-4fb0-8f5d-70e8ef363452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7599c45-f4a4-4206-9bf8-6c026852472b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0b970d-1e5a-4938-ab1c-9d6c1b2d54a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adff4d4b-0e12-420a-904c-e244864bad88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baa3cef-a0b6-4a67-82ce-876c3cc85226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a922266-5c77-40e6-af8d-642df64834d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b445a1bc-5c1d-4579-8c5c-62f6a6698d53",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c00296-816e-4f58-9740-d76b24e98b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422f0d00-efde-4d3a-8634-9d52412fb986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d7bf97-db6e-4c03-83bf-15b2e0291ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4741cb97-7640-4d87-9766-129efc78b7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5291be-f147-498b-8476-824e4b654908",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0f0695-fdda-45bb-b239-9e42def56948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34a9d3b-d928-44fa-81e6-0c5ffc63221a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e74f7a-c614-44ad-9b7a-63b9197b4492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c164c977-61c3-4099-a890-4d601dedc9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced9135e-38e4-4d26-9057-51a63d8e0e66",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7221df-6820-414b-9b0b-c0ec5a410efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44ea65c-7720-47b1-9c46-1130768eb7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29157dbc-1f91-4ebe-9de0-b8f41700e27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b67b5c1-2f7b-427e-8164-cbdb00e5d327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498af9ed-9875-47d0-b53b-e1e49131aa41",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0657d0f3-0352-4add-a419-708527a6882d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2533a384-d21a-403e-a1f0-d69e263ab36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac05dce4-2d08-4c6c-bf9d-1d7ce7be5a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a69a4b-5b8d-4197-8975-ea13370db463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a43477-5a70-416c-955f-4e02eebf94ca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faa03bc-0fcb-461d-847e-ae13aff6a80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab661c10-03a6-4682-b085-ae9add5fd265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd120bb3-b082-428f-8e2a-f7fd091a283f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ee4168-0874-4c6f-97ba-2cd6d9346de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7901c625-54e6-4926-8260-0b9790f8673f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb488a-0ed8-4006-b7f6-0293f20ba741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84f448b-4380-4be3-a833-2fe77fdaa864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e3a1bc-dee5-4025-964c-5ed2a712ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04819977-6c8a-4175-a993-3d382d950129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1ae320-0f4a-4742-8faa-3dc861f53c62",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cafa62-3bd9-42f6-aa8c-55536d1b167c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c522c779-4fc6-4d70-8a91-c2d22a066135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa2f6c0-bff1-453b-b039-5eecfc0aa3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3669e92d-d2ab-4e57-ad3f-90a52f5fa596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ed6331-b194-4c63-82be-b2aa79e0351a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65312eca-6146-4bea-9da6-debdc1365f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8993c3d-877c-46a5-8b8d-2bd382874e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cbd1a1-2c2a-4be2-ba0c-d87b2dde0ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf0acf0-abfb-4fbe-a45a-467091ba1e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a100003-8d07-4383-852b-5354266ca8e1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e132ca-f160-44f9-810e-d54436c9f2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098232ee-d586-4a8f-b3e6-79204da15689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39e737b-baf4-400b-9e0c-54b2631640a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0c73a3-d65b-44d3-bd11-24c9d5709135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52a85c-91d5-4459-9001-00aceda22971",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb19f7b0-4937-40f4-8d52-9af6365d4a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a0be50-9b7b-44ec-af24-3583e9c9723e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b1a898-49ec-4f4a-b709-3dc788691c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d644d2-ab98-47af-9373-8b145cab78f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5efc85-e426-4f2a-bbea-946e79c984cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097fe862-db6a-42ad-a553-8ed3c9cf6ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223dedfa-45fe-4f1a-8dd7-c404c59ce5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aea7a7-eff5-4dd4-9ed7-a311adbeb7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da1a420-275b-4f56-b81a-e5e856f4e281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b767828b-1c1e-42a9-a466-fe0fc1f09117",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b183f63-ce51-4a29-aea6-f81253ec0907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0524e100-fb98-43dc-80c3-eaaa2d12cc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a80299-46aa-4c4f-bfa9-ff13931b2092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54069a2-dc30-447d-8a48-f97b4b0ba712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2422fa1e-63ee-4f09-aa35-64fb6ed63dc2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b83666c-bc8d-430f-b9d4-86800fa33a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c7f977-daa8-4aee-959d-3e80f33d4833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f712616b-ed6e-448b-bfe8-6881022b42db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808c9338-3ea4-4e0f-9e79-72bee5c27854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d80d7d-43fe-45dc-8b54-1c4addc3e6f0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedfab1f-586c-4dd8-8010-baa7d39278a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dc4920-7d44-47f7-a8a9-0d0ab0c64a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29dfdd-515d-417f-9574-3fd508c4c3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d14e333-cbfc-4398-967d-8a6c2c084156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5094b8-f7fb-401f-8e0f-2553dcfbebaf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787d65ba-1c31-40b9-b0e6-ae0a717df8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33592e8-419f-4317-9335-5ba620468ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a16ee-b53e-4ddb-9cd7-b8e3d832eaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6b22a4-2e8e-4f16-be76-52ef42e46f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c31a70-b755-42e7-ae8a-c7d9e8d600ca",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08717f4f-4f64-4ed6-8514-07051b935be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f513f2-c916-4356-b0b7-56095e871173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566fd353-5617-400a-8c1d-cdfb8a33156a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471d22bc-b177-434a-ba1a-8b19669a12d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6c6d2e-e3bc-4b0b-8efb-c6c0ee503248",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eb8c99-225f-4f2e-abf5-1eb0a5a92d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b876d9-1cc2-4bf2-aad7-bb7226415ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17da6c93-c8ef-43fb-b784-22505e8a05e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b963437c-6982-4b48-b705-1e85259ed750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c53dda-e3b9-4e6b-93b2-5e70fbc9ccd3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7302c1c2-46fc-4105-b90d-72158726bc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e3e6d0-a19a-46de-9e31-f0866d18449f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c534ae5-5da1-429f-88b1-c2c5f6eba9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48521cb-4bdf-4340-ad57-474e6b24d640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffbb55a-360e-497d-ab53-5930c9f8c0cc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b14e9c-0c99-48fd-882d-ea19248f05ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4d6a10-f8ae-4457-ae92-63b689fe6436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c340172d-ba9c-4370-b6bd-3f0aaf72e9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434b8d98-a490-49d3-ae6f-0e571f1cb45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb80ecda-c22f-476c-8eab-5fecb5a5a8f4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a212b58-b74f-4b25-b49b-37641bc0cbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de864adb-c14e-4ff1-8d30-aaa949f245b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6342a496-a3f2-46d9-94e1-d9549fe96254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da7580b-a8fe-46c3-8ea7-64dddedfe997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7984b1-0f0d-4e0a-a72e-08b45881a074",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb5aa1-3575-44e5-ab29-86b4d649a7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53766750-9e6b-4bda-a546-e0aa5dcb2cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144c9037-cf18-48bf-8677-4666b4c097be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bcce71-47fb-4dcb-866c-b7fc5898d243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5b1670-92f6-4a2d-aab6-e63c8eb1dcda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970097f0-d33e-4db3-aa5b-caa38d33bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635e7994-ff8e-4411-a14c-f2878a2941ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2b2a15-36da-4edc-9b4a-611d4133b100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2de51a4-4eb1-4176-9ba3-c8403a541b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120334a0-9ae3-4fe5-a478-4015fbccae01",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f158264c-6c37-4a4d-bcb0-a3b795b310d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10547c3d-f783-4417-a404-876a5822723b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b178ceb6-1f1b-4aa1-92fb-888e4a909b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdc2088-39e9-49c0-a08a-d48abc30efcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c53295-54cb-451f-99a9-0ecaf0c4a01f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53e5f6-5c7d-4cce-bcdf-980cb07b3f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef800dc1-68b7-4907-84ad-c06d8ce14f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9543e6a5-1ea2-4159-af3f-400a89401026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfede0c5-5d30-4e8f-9741-6b2223f4785d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128af3c1-dbce-4240-a2be-27ce9cb4a0bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8a249b-4417-480e-8f96-27e46a3ac6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9620bc4-3c12-4815-a3ea-f5608c660720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4356918f-ae9c-4bce-b42f-f4bc7a93f686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab87b9f1-1f28-4510-a2e8-7a2623798859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70f32d-ba96-43ea-b31a-2320a6ba5c6e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994780cb-7a53-40de-a509-fdf9304871d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b7ed93-642c-40cf-9e07-2eb422ceb126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5b6f55-15c6-42fa-aaa6-313d5d972f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08153c4-d86e-4bf5-b5b8-87451abf3aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d5f491-a523-49f1-95c4-43eafe1006c1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc45c73-2c67-4dbf-b405-58f8029bded4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41560e4-3ee4-4ec7-97a2-9dfa4e0f972e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9248c-52ae-409d-aada-6e23556e2605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5e3042-959e-42a5-86d3-8b925bc974b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c650d-a849-44ff-89fe-c280131496ec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309fd69e-813e-4019-81be-4ce73a910558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aface7d-1bec-4ae2-a545-88087fac0d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd809e52-c576-4e07-a88e-7e89482daba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ae359e-1762-4cc5-bac4-f0024b94441c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4730acbe-aa4f-490c-90eb-c0a91c71d13f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e11d29a-9e5b-4291-a93e-e6b1309646ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1019364-e88c-4320-8d9b-21326be5baa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762b901c-a5f8-4523-9a29-c007b97e805a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea17d922-0a39-4e3e-90ad-9a0cb7447547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823a328b-9eec-469e-b627-f69943489f13",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58701de5-306b-4c28-9531-2b8a73609f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bb29e9-7397-4d54-9974-177dc572bb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639d2780-b776-48d8-a628-1c50483e0912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102db2f2-c072-4779-b1ec-eaca86cbeaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a2cdb3-5f7c-4336-9773-9534c484c884",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939f675b-d226-48dc-9bad-0d624717a550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7802ae6-875b-4039-a4a0-cc1117e29432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173dd64-6be3-409c-87f6-905b2274d8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1aa675-bcd0-4fed-8196-1502f5f00717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3347e707-8e26-4cec-876f-7723d1834a48",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b9bd71-9d72-49e2-a74d-044a8dd0e053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5432a5-9e16-497a-ba17-8f12407a3402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd9f7f-d079-444d-9e69-3ee0cc32fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8d2b6f-850f-4c08-a937-2ec9cbbe8426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80e18f0-5f16-4d03-88d4-22d779fe354a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454ff17c-4954-419d-bde1-6748ea129775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a5a521-c567-4bad-aefb-7bd4fedbde21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4515054-6320-4de2-bd32-2c28908d1914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5810deb3-9b5a-42a3-8038-3395f3906280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7ce76c-4327-47e5-8e02-9ed922bb979d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e72b49a-1ff6-4ead-a502-e7b867129a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1376dd-05b6-4581-ae8b-12935b5b220f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5af636e-f51b-40ad-b90c-fbd6f64f4dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ed6025-1980-4517-ac94-28c79cfa5b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dd2c39-2572-463f-8a88-18b54948195c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652a6e54-1dd5-40be-b9d8-83eef3053037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d48a4b9-d399-4ef3-a83b-4ccf655b0bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dade1f-871d-4a69-ac1b-e0259067bb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f0d601-b7da-4bc0-bd3c-135fdc866a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18530e66-87bf-477f-9915-f1fce72dead5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e9a9d-932c-435b-ae74-09f75ca6ef34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410fe4d4-8642-43ea-8555-37a0a1edcaf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe66809-68ec-4f21-b3f5-f7d37363dd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9feef640-57cb-401b-8c53-119cda54c51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015c7237-caa7-4891-8b75-95aa9a8ea301",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5903e8-8b2c-43c5-b7a1-b26c4be90265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62915d9-a900-47d8-a13b-79c4b21d5aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b0e74d-de46-4977-90b6-cd21bd0e9de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7d9729-e8ef-406d-a89b-1706c2072629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ddaa3d-5d98-4b3a-8e94-670f77b88d67",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ac4259-6f30-49f0-b9cd-d54d3bf9bc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9ed233-fded-4854-b87c-c6c5e7e986eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72c73fc-178a-4cf9-9a95-bf15d68c371b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9354abfc-d445-4b71-872a-e706098dd09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f20403b-b5c6-4406-b701-67fbc0036118",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620e613b-9afa-4347-ad9c-28788410bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e70f09-8ac7-4bb2-8a8a-14400accf155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd226e19-c0cd-440b-ad01-3b5e83877205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcb6937-7181-411c-a559-9ff11da818c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3559eecb-b15b-4a0a-8460-ab6eab97f1e6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8546b3-d334-46bc-b338-045bd28be0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd97217-60a6-44b1-be0f-8a04a0d94f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe6eb1-902b-416e-96cf-f68a75cf02ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041db90a-372c-49c0-ad01-978f7f182220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c1e5a6-a72a-4922-b6d0-ed62766b0d51",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09853c0a-3f9f-42df-a3a2-001151d41e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da6b64f-77ed-44d2-828e-5770ec6805f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566889ec-5e3f-4d3a-adfd-13e87cc6a30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc308bcc-c48a-42a5-83f4-709c2c8dc8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9d1940-a6c4-4ce4-a482-5c7ef660eac6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e801dd-14f1-4a67-9fcc-14fab6fc316f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa44c838-b0c6-4438-88e1-43c7654908ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eb547a-ce6b-4ded-88aa-e9c111f18f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdd8ddb-6fa8-4520-ad80-e933061a8b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4255c6-b6a6-4924-87f2-042b07e467e9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350df568-0583-401b-ba08-57d187661074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362ee9ee-ccff-4bf0-abd3-2306e3cde8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bcb1b1-72db-488d-8423-0573047a157a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87d6f9e-ddd6-40a1-a73c-20b4b683ffd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03425ca-dd29-4e7f-af3d-cc874921227d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeaca25-805f-4061-bab9-bf3536765592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4390aa-313e-43bd-8998-294b70d3fe63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44760395-e4a9-47d5-b81c-fb00c2a47724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a30844-3d6e-45d0-90e4-3214e3f5816a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb8ae1-a7b6-4689-be47-bb34d597a772",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81613ed1-3d39-4baa-8e68-42d19c27b6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5897ec2-78f2-429d-98ca-ef114ecc7661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3741e3f8-5093-4a90-b173-522d90f53d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff28103-fc70-4f39-b89b-ac97f5278e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e4796d-36e0-4e19-a38d-fd3639ffa0c2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f92825f-820f-4502-85de-adf52669f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890da975-f689-4ecb-872f-9e40833a0a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d13db9-a9a2-4e9f-90e5-298004f411de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a04f0a-f8a1-458c-9bc3-bcf0cd5d3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf21ea7b-d019-4f63-b6ec-53eea2db3a9b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fbe637-5a24-453a-9e6b-91ba45e32e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ee055f-dd19-4375-9955-95ed959251af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e1823e-03f4-4236-bbd3-b095bcc6fd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a52c70-3c49-45c4-8af7-fbd5327af9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d63076-61ad-411c-87ff-cff184184665",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890616f4-8305-445c-9755-a6d0715116f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24fa13fb-608c-471c-a708-47ae94028a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc2969-1380-4103-8330-8c15ff25912e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3af51b-b985-44a8-aa0c-d0ba2af64061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f3a092-7a13-4f16-9909-d0e54f9fa792",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb66d169-b60f-4174-b64d-131cebbc55fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31510af9-28e0-4c87-9776-065d72ae4228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8efb3ac-6fa1-4a75-9e2a-4eed80a66566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d5f0d-b5b9-4baf-8b1a-df6a200976d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65638e75-8529-462a-b5a0-626bcfbb63e0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424edc4a-99ed-429a-ba65-fcffc1c3de69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98190b42-c4ff-4e65-8a0c-790a031ad401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e85e91b-d0b3-4e21-99ea-69d7ac0fb60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f4d034-0210-493d-87eb-8e6a926e0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf57612-807e-4e81-95ad-869044bc8941",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044249ef-3f44-4697-b4fc-1015a5a31261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f851f931-aa92-43ac-8e18-8fab237d14c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138cf7ca-6ca2-4cbc-b8b4-5ef27d14ead0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3778918c-52fb-4a4e-87e1-5f1db85abfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f945b-8b35-4959-9da4-9c7582aa41ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6afb05-a539-42b2-bcf9-ba8b45bb6f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecace0b9-a2e5-4e1b-bbf9-8353252d8eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb338e9b-b3d5-4c05-99cd-5fbaff2284be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7fe2bc-70df-45fa-9829-8c2f4c5479ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b7017-77ec-4000-a20d-5a407fc97b00",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee09d0-6184-46db-903b-bd83e858538d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb1263b-2164-4612-aa64-2bbfb1137572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4436a908-c359-4f1d-b65e-5c939a621d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceff0490-15c7-4708-9ab1-8431ee7971a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ace7842-8335-476c-892e-e2c2a8c24a06",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28ffd65-6611-4e51-9268-baa26dfee1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298bd9cd-5afe-4dbc-8ca7-cad67410bfa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f11ee2-00cb-4b7f-b667-45cbc5876c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b523f09-3862-46c1-b615-8d26c89fb6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3c5e2-ab18-4ff7-ae7f-d279c8b44237",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63d1d17-b552-4955-b243-3f8e43fc1892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175485a2-8409-4844-9ccf-519d3a145991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0261e8-3e04-461c-bfd1-a8d518be5675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5f1fe4-9f02-4729-a545-81c51d2b8c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d036454b-652f-42f1-ad79-67cb99a1855b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece71dd1-17e3-473e-83db-e209c432332b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db207ad-249e-4fe8-9cb2-ebc3742b2011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435bf176-b3f1-401a-a011-720f9de4fa4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2139c498-02c3-437a-aae2-3e7ae9f77f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43441004-275c-4553-9025-9574e2b2efb6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44100f96-b199-469a-9824-f8db3e453f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec7eccd-f8a8-4929-ba14-24c3e8fa88a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae18c30-2088-4bb8-947e-455e611589f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf201fd-fbbd-4bda-8254-a522d4175f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbc9417-7de8-4a12-bccf-c58ee0b9df12",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c207e63-8c85-4018-be1b-8b84e6e73dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e34bc1-4159-4bd4-9903-0d8e4586ef55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b47b14-a722-4b87-8382-538d8bc19972",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cc682b-b6b2-4891-9178-af145e582ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404fc669-d62a-4ec6-8476-7f708a7a21a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4477c3-0ac1-4eaa-a7fa-2ad4b61621dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4dcdbf4-ae84-44f0-971f-2f6dc8d48df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cde19c9-9292-4f8d-a1e2-37f3dcf52953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428dc22c-1c43-4267-a7fd-aedc09dc223c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f324f3d-c0c0-418b-b96e-dcabacfd8794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba0b8a1-9647-4678-8b18-d995267fabd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce3f5b4e-12cb-4760-b9a5-570bb6e52481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cb608c7-2421-4e56-9b3d-9930bf8dfdce"
                    }
                  }
                ]
              },
              {
                "id": "0042de10-ce64-4b54-a0dd-da47af585670",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70863ad2-bf10-477f-8df6-65913bfad38e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276bf310-d9e5-4fde-84cb-9027ee6bdc14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0b3bfcf-d478-41de-9d67-00cfba4ffa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9f853b-4287-48f2-9810-f9dfb2d49547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31eadc51-cf88-4cd1-81e5-7f1221c9b80a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8158876c-b986-4b6a-8eff-38b4cacce4d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6ba06c4-1dbb-47bb-a8c0-bd23f68c0270"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f43d502-f139-4045-9ca6-1c2341cdb82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfd006c6-7261-4539-ab04-d1e48f42f8e1"
                    }
                  }
                ]
              },
              {
                "id": "3ad25fc8-af23-4ead-9409-7938ca1e51a3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3f33380-718d-4d33-8549-7c35aa01aff4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1210ae2-8760-4041-8c9c-9dafcdbd6e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "753e22c7-0d66-4d01-9787-db0d08ca53bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dd7d97-bbb3-47a9-89ab-2a056d76d6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56323561-dbc1-41f0-a5f6-c2e7f7bb329b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cab754a7-ca96-48b3-b8ff-19ae6aee28b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d9bb5f8-8b73-40af-80a8-6667ec5027de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39086272-eb42-4fa9-9589-f5dd0a2d51ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3ec9eed-b04c-4fec-8d8c-cc09e25dbb30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "428bdecb-3ebc-48e3-b586-910ff1042c9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d34b0970-9f59-46c3-8e35-e51f9317ff77"
                    }
                  }
                ]
              },
              {
                "id": "a534fd72-eed9-450f-bd19-6c099b41d895",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2091f7-8bb6-4935-ab3b-9039d2546e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba497e6b-d8e0-4f03-aa14-92284f818ca1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39cb8065-4d4a-4c7f-93de-f2f34574a6ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1371fa63-557b-45a2-8117-ab83c78dd05d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e83fe55f-df9c-4f3f-a296-b1bd52f3153f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d126c4c5-5fc7-43c2-a260-d920aee700e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b2b9ce4-0fed-4c93-bbf3-ccf6b01a8284",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9956001b-30b2-4e50-9c1e-604fe06e275b"
            }
          }
        ]
      },
      {
        "id": "07ee0882-627b-4c57-be63-078cc3b33fbc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ab4a8bb2-dc21-427b-b6f8-08756e2c4f66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2d149fc-6549-4139-a0d2-36c8aefeb620",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54fdd14d-547f-4030-982c-b12be74448a0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7a2dd-2c2a-48a7-9c45-d6c84c5e88db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "45ffc483-a9cb-4a45-b1b2-b8a3a5bbc767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b7b896-91ac-435d-b8f1-2c1c36bae5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f00bb5d4-cc29-4bd7-b095-c2293ad7c1f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc2985ab-dc78-4683-8e61-d10610ae83d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1394091-4996-4c9a-b7d6-ba6ec2fcca20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d12a8395-fb35-4b71-8652-d3cabb0e2683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f716e5c7-551b-4bb5-8746-bfef12d668a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c679870-bcde-440c-b4e6-4373c4c3b5ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1c7db7af-244e-4e26-a913-54832f33b935"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16b17152-6fe6-4c86-aac0-eaf436fcb229",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab6149f7-a72b-49c5-bdd6-19f3c76797c6"
            }
          }
        ]
      },
      {
        "id": "41444618-c142-414b-ac74-c97272410e01",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "12aca2c2-3927-4d74-9c04-b9b7dbb5dbf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4229e84-2109-488f-a710-9dd03632e558",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb920d88-1eb1-44aa-83cd-b7c7400d6d20",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4da158-08f3-4218-9711-6aa1ac1aed3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e785639-41b7-42d0-a259-fa15757679c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0b10f-cf7e-4a84-99ea-9475bacec309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42bbce35-20b1-4984-b5cf-668e7649db5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c52a47cb-9a88-45ac-9b4f-b3bf992355fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa514cc6-05f5-41f5-b3ed-c766d55c77da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31f2932b-68bd-4812-9a09-5285485b9157",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "229523c2-81ed-43db-bf6e-83a47ca3e693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e9611ba-258e-473f-a417-c0b21e40f067",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b46a8b78-5333-41d7-a0b1-6e8e36b14bf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9423d1c0-b872-49ca-8a77-72468f59c0bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8caa6489-02e1-49cc-ba0a-9ac7ce78e1b5"
            }
          }
        ]
      },
      {
        "id": "284609e8-8db2-4bf1-9a44-545a5044330b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df439c54-920b-4732-8019-507d408360f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a7b2275-7010-473f-be08-26567b846c1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92caa129-abea-4b4a-a3b9-2b484e220b03",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74421b14-705d-45b6-9338-0b6d5a762fc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14647371-96d7-4e08-a5c0-c22680b4c84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3fc735-8ad7-4ef4-8c23-7b2028e4fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ba7481a-13a1-491d-b49e-68d138702bec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b48b414-5b87-4922-94be-03ee7259b384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80facbcc-7215-4bdd-9253-0a7041270757"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c5d5635-ce71-4a67-b23e-0273368cd2c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c0519b3-84e1-404a-8a69-40707686bdc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc8d12a-944b-474b-b6db-32da16d1b38d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89ed2519-62a6-4c20-b496-88c0a87b893a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c17d0a8c-7216-41b3-ba28-f29c2aa823b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01182a98-b839-408d-8e36-4a4ae58fee5b"
            }
          }
        ]
      },
      {
        "id": "6857dba7-573f-4834-a84e-cc2688a20ea5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e9df818-c804-4bdd-b037-4131a0b4d466",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80d75186-23d7-4121-9b73-6422c7902487",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "342d19c2-2d9e-4ade-9730-2f7a32436d87",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b83ae0a3-54cf-4144-8074-cc232b004d88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32608ea0-993b-491b-90e9-99f23b3ec8e9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.612676056338035,
      "responseMin": 7,
      "responseMax": 552,
      "responseSd": 34.43739954184864,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694824311797,
      "completed": 1694824327551
    },
    "executions": [
      {
        "id": "c43653f6-4a86-4752-8322-ee3b8b21037c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0e66bb7b-91b9-4c46-8a6f-89535f56baa9",
          "httpRequestId": "063cfb5d-68f6-491e-bd1e-aff341552c7e"
        },
        "item": {
          "id": "c43653f6-4a86-4752-8322-ee3b8b21037c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f60971c9-185f-46f8-8513-a92d4e85d01c",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "d1bd2211-2f70-48bf-bebf-bb0ddca68713",
        "cursor": {
          "ref": "176d1c49-5432-4b41-a7e4-61e2de4c5a37",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d0549c9d-ee5f-4a2f-9d91-0332ea202d74"
        },
        "item": {
          "id": "d1bd2211-2f70-48bf-bebf-bb0ddca68713",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "23b2ac66-153d-40de-8fd7-b9d164941b32",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a39a81dc-87ba-4fe2-a770-8e2e189c6867",
        "cursor": {
          "ref": "8a20cb99-baac-4a14-8e9d-dd964267b88e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "02420976-4452-4fe8-8c45-0f102742f719"
        },
        "item": {
          "id": "a39a81dc-87ba-4fe2-a770-8e2e189c6867",
          "name": "did_json"
        },
        "response": {
          "id": "05184433-df8b-4098-a14f-9ded22a18d17",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f67f92-b88c-4c76-967e-a895a19c02d8",
        "cursor": {
          "ref": "271b5555-2814-4357-b0a5-91b7c06ce79c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91abc46f-60b5-46e3-8f78-87188665ab58"
        },
        "item": {
          "id": "25f67f92-b88c-4c76-967e-a895a19c02d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "d91cd9b3-a9ed-4667-ad34-d1ccc708c6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f67f92-b88c-4c76-967e-a895a19c02d8",
        "cursor": {
          "ref": "271b5555-2814-4357-b0a5-91b7c06ce79c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91abc46f-60b5-46e3-8f78-87188665ab58"
        },
        "item": {
          "id": "25f67f92-b88c-4c76-967e-a895a19c02d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "d91cd9b3-a9ed-4667-ad34-d1ccc708c6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d2f9f-f7f6-47f1-bf25-f995040922de",
        "cursor": {
          "ref": "bad9cae6-435f-4f66-8c5e-e2669fb941c1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7dbc6d43-d8b3-4704-8bf0-be6d22c72580"
        },
        "item": {
          "id": "a41d2f9f-f7f6-47f1-bf25-f995040922de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d424055b-5bf9-4c1f-82da-69e066d2ada6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126f215e-d8d2-4bef-b52c-c73716595d1a",
        "cursor": {
          "ref": "d4f0e501-a9fd-4887-a57b-89645b862689",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f87dea12-3dd0-4673-8d3b-65aabfdeeb42"
        },
        "item": {
          "id": "126f215e-d8d2-4bef-b52c-c73716595d1a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "34e76c81-d3f8-4a82-8bea-45cbd35a5144",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba925af7-1c16-4d39-af0f-d5f393382632",
        "cursor": {
          "ref": "87c6c928-3a59-45fe-adf7-ee49c76199c1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88d701b1-a2a9-4de6-96f3-360ad94ea7d1"
        },
        "item": {
          "id": "ba925af7-1c16-4d39-af0f-d5f393382632",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dcc4a50a-b8a0-42c5-9958-7b26aedeaa79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4561ce6f-af04-4e6d-9179-204f75df019c",
        "cursor": {
          "ref": "a1c2a07f-955f-443f-b393-8d3f82c05a84",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "de437099-d9e7-4b51-917f-dfda66643ae1"
        },
        "item": {
          "id": "4561ce6f-af04-4e6d-9179-204f75df019c",
          "name": "identifiers"
        },
        "response": {
          "id": "6b5b2802-74fa-4432-974c-35f8b2a6b706",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ba9bac-5d3d-4115-80b5-f6552be52ad3",
        "cursor": {
          "ref": "f5ef835e-fbe3-4bee-863f-0437224e723d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ea0577aa-4bca-4961-9258-ce0d2b7a283f"
        },
        "item": {
          "id": "f7ba9bac-5d3d-4115-80b5-f6552be52ad3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0ad0b132-c8ba-43ee-824a-ef71835838de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c706bec4-4e9c-44a8-a169-1bdf9e43d036",
        "cursor": {
          "ref": "9b647173-b796-4a2c-beb8-93b42fd2571e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "65714a99-0fc1-4de7-bd73-1cac5b669ab9"
        },
        "item": {
          "id": "c706bec4-4e9c-44a8-a169-1bdf9e43d036",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8dc603f6-c66f-4790-8cbb-8f133d6a0457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bf497a-c4d9-4a2d-99e1-79e8eb0f1d1a",
        "cursor": {
          "ref": "bc979bd1-44fe-447a-8b3c-6de830f318d8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "01ff95b6-0cae-4ee1-bf18-875ec407398f"
        },
        "item": {
          "id": "45bf497a-c4d9-4a2d-99e1-79e8eb0f1d1a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aaccfaac-0d43-4c23-beac-f2c613ffde0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360cda69-fc93-4346-b27b-eba912b037a4",
        "cursor": {
          "ref": "afbb4dd9-157c-4a79-8af5-770bc0b799dc",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a40a4879-adab-4b8e-9bc4-64c6bbf3f8d7"
        },
        "item": {
          "id": "360cda69-fc93-4346-b27b-eba912b037a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6d79d824-b6c3-434b-a56c-9a4938a1fe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f074b80-b1c0-4b22-b9d2-9fcb9a49b0dc",
        "cursor": {
          "ref": "467ca49c-a8dc-4420-bd84-a66a88eff4e1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0bac0b24-ccd2-476d-b6bc-7f3aec132331"
        },
        "item": {
          "id": "7f074b80-b1c0-4b22-b9d2-9fcb9a49b0dc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "163b412b-35d1-4c91-bcad-644277f7c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b14da08-51e5-4247-b4a9-cfaf30fe8565",
        "cursor": {
          "ref": "467b9515-119c-4ebb-bb94-2c3ff5b2784a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "12209bb5-ffe8-4818-ae25-9f7f89fab9e2"
        },
        "item": {
          "id": "7b14da08-51e5-4247-b4a9-cfaf30fe8565",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d8cbb80d-c96f-4e2a-be72-1dfcbe6dd7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620781dc-e715-4812-8f16-9454c122d322",
        "cursor": {
          "ref": "46b022cb-80f4-4b99-8b82-f541fda79ddb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a9d6b337-a564-4c12-86ac-e2a495fefa31"
        },
        "item": {
          "id": "620781dc-e715-4812-8f16-9454c122d322",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dac36714-69cd-42c4-bdc6-da61372a2db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4bbfa0-a841-4828-bfa2-a06d1926141a",
        "cursor": {
          "ref": "8bf27f26-689c-42e1-a8fa-51fef72d2461",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1b771f06-8453-43f0-92b0-2cba36e5b25e"
        },
        "item": {
          "id": "ba4bbfa0-a841-4828-bfa2-a06d1926141a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8af6082c-9800-4f05-aef4-3d050ace8363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b397a-bc5a-4018-9aac-bcab37e427d0",
        "cursor": {
          "ref": "17c206ad-d142-43b2-b5e9-4b44022a8545",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e7dc1c7-60d0-408c-a994-8359c3dc900e"
        },
        "item": {
          "id": "2f9b397a-bc5a-4018-9aac-bcab37e427d0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1b3ac005-7203-4467-8a5e-d030e7f53d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db8020c-30bc-41b2-a647-be0a9ce7a848",
        "cursor": {
          "ref": "b4a86499-4392-48f9-b3b6-8c96c312e230",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5aae2bc4-d5dc-4ed6-9a8d-c4c5460ab404"
        },
        "item": {
          "id": "7db8020c-30bc-41b2-a647-be0a9ce7a848",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7fb78e18-9372-4736-b252-d02e148c974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bd47cc-964c-47c9-b9b0-b190e4e53af7",
        "cursor": {
          "ref": "b2d496f8-3b12-45c7-96ba-55234b8a1950",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "676eac58-094f-4c5e-b29f-d64968bf781a"
        },
        "item": {
          "id": "a9bd47cc-964c-47c9-b9b0-b190e4e53af7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9e2fea2-5a7a-4937-be12-cb0b663382aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63ceb13-a266-41f2-8f3d-965e128f3254",
        "cursor": {
          "ref": "67c6db04-74a8-4f51-b1b7-f02ddc2a6a0b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae97567e-e221-44d5-9c4d-0387792fc559"
        },
        "item": {
          "id": "b63ceb13-a266-41f2-8f3d-965e128f3254",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7e3d8640-607c-4ff1-b71d-d890ca31ec1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f176484-9586-4360-8ff5-fe03b191b343",
        "cursor": {
          "ref": "2b04edb4-9f2c-4098-b713-cfec24ec97a5",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c712397f-a193-4986-9daf-8bced4293038"
        },
        "item": {
          "id": "2f176484-9586-4360-8ff5-fe03b191b343",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "afcc7164-682e-4fc2-a095-379b3586af62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974aae84-b649-41a4-8841-0d4ad72002ad",
        "cursor": {
          "ref": "5ab25da4-d49d-4fee-be72-2c10b824d162",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "155b68ee-7525-4a8e-b54d-602ba9d50a86"
        },
        "item": {
          "id": "974aae84-b649-41a4-8841-0d4ad72002ad",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dc290d5d-e01f-4f5c-bf51-2542ac12b1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a2cd8a-6014-4593-8689-95c806829daf",
        "cursor": {
          "ref": "c95cbe40-e221-4cba-abb7-514178c6b8c9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "db5bd845-6467-4c51-9934-154d90daf474"
        },
        "item": {
          "id": "55a2cd8a-6014-4593-8689-95c806829daf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d6d14667-08e1-44cb-81ec-b942c9860e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5118dd3b-1b52-44b1-bba4-646a30c31c11",
        "cursor": {
          "ref": "e81b563a-2c51-4e87-b3eb-0d2d17025086",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ffd9465-a188-45a1-aa73-ed7b846991c2"
        },
        "item": {
          "id": "5118dd3b-1b52-44b1-bba4-646a30c31c11",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90240336-20cb-4372-8001-bd973c02cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471d30b-d504-403f-99b6-328590b4d14c",
        "cursor": {
          "ref": "66fc67fc-9071-4ab2-9824-35c90be951e9",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "50202c31-3277-4e55-8049-d82cdc52b520"
        },
        "item": {
          "id": "d471d30b-d504-403f-99b6-328590b4d14c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f54ffda3-05e1-4a17-a43f-db6eb09f5b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd34e7d4-701f-4a5b-a27f-e40e74cbb581",
        "cursor": {
          "ref": "ee63ddaf-93fa-4079-94d2-6d11aac8882a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6599d37c-29aa-4578-bc7f-dc1c36b80bfd"
        },
        "item": {
          "id": "bd34e7d4-701f-4a5b-a27f-e40e74cbb581",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0b7a818d-14ae-4a41-882f-73afdc7edf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26763ca-589a-43ef-8df8-48e235e97e48",
        "cursor": {
          "ref": "2b4d1edd-c280-477c-9f5f-1ce97ad8fe53",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f3475388-770e-4b84-9906-b96144e9f3a9"
        },
        "item": {
          "id": "d26763ca-589a-43ef-8df8-48e235e97e48",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d305bffa-e737-4d0a-be4e-48c89e999e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcccfe99-d6ea-4ac5-8531-bd41cd0ba71f",
        "cursor": {
          "ref": "b58a8a7c-1068-4374-9b9a-b9c393b7019b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "346dbc5c-c686-4191-b8b1-7d146d395c57"
        },
        "item": {
          "id": "fcccfe99-d6ea-4ac5-8531-bd41cd0ba71f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "84101ffc-0615-404f-a23a-4d5aa852f3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10a9c2d-9bcc-451c-9541-97c0dd5c864c",
        "cursor": {
          "ref": "1c75a5b8-bd1a-4baa-8aa2-68b0a3cb8ef8",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "29b307dc-d0a4-43fc-a582-fda3547746bb"
        },
        "item": {
          "id": "b10a9c2d-9bcc-451c-9541-97c0dd5c864c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d685a465-d4da-46c2-bce9-bcd7bd99d34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d582eaf-99a1-4acb-8090-385a1cf82000",
        "cursor": {
          "ref": "5f19648c-e1ea-44f3-82f6-56cead12f965",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0f340b73-eb05-4f86-864c-d2aeded16f15"
        },
        "item": {
          "id": "9d582eaf-99a1-4acb-8090-385a1cf82000",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a188b04b-ebc7-445b-937f-0cc60d3d0aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e72875-a314-4c0d-b5f5-6683f113ec14",
        "cursor": {
          "ref": "2a0377e4-60e7-437e-b3ec-5e455975b088",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a594bc23-3e7e-4fcc-8043-8d76c955b43f"
        },
        "item": {
          "id": "a9e72875-a314-4c0d-b5f5-6683f113ec14",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d55dbc78-82d0-48b4-a70a-907960207a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8f1645-6a26-4047-a7a4-c04b3996679d",
        "cursor": {
          "ref": "28704034-ea55-446f-8fa7-95935ddc9a20",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da2a7888-67b4-4ac5-acac-2d9e1ede6cc7"
        },
        "item": {
          "id": "2a8f1645-6a26-4047-a7a4-c04b3996679d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bcb6d7e0-6a62-4b23-ba7d-11e7aa6875be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb60d196-3c81-4880-9a40-b46297077e12",
        "cursor": {
          "ref": "eec4dc1a-a457-47f0-8781-4e23d4016f9c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e7deb55f-ee9a-4ec8-8d80-0ffc8f3b49c8"
        },
        "item": {
          "id": "bb60d196-3c81-4880-9a40-b46297077e12",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f01cc113-bd13-4549-aa39-ed713e648430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af701da4-9a90-431a-bdfb-8e7fd9af52a2",
        "cursor": {
          "ref": "c98b8972-3061-46b2-accf-32f9ca1d856c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c946431-28be-47ea-a30f-c8737c2452e8"
        },
        "item": {
          "id": "af701da4-9a90-431a-bdfb-8e7fd9af52a2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2d89727b-3259-4b4d-8cce-f72e59d4cdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1da595-f739-4eaf-ab71-3bd8281c9596",
        "cursor": {
          "ref": "4a92f1cc-78a6-4841-b14f-cad57a9735b1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "902a5177-ec0f-4fa7-8f71-c785319b418f"
        },
        "item": {
          "id": "3f1da595-f739-4eaf-ab71-3bd8281c9596",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e8fc4762-e6d4-4b60-b3ea-20e430b5717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c13b9-9682-4996-8c3d-95ec2518cb90",
        "cursor": {
          "ref": "e9fbf6f1-6481-436b-a9d8-089fe9a05c31",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8aa500fb-0754-4251-999c-4ddc215e1e0a"
        },
        "item": {
          "id": "825c13b9-9682-4996-8c3d-95ec2518cb90",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "732cfe3c-08e2-4233-8cc6-62703825b7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15834226-8f9b-4b95-9a52-379c610737c5",
        "cursor": {
          "ref": "db8354e5-d2f2-4590-bc2a-f9c83ffb1fb2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd9dc093-c527-4061-b7e5-021ac655c19a"
        },
        "item": {
          "id": "15834226-8f9b-4b95-9a52-379c610737c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c6f1cc90-c64a-4ac4-9881-2358b6008b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad0fbb1-9372-4b2b-88fc-e6a25094851e",
        "cursor": {
          "ref": "91e95a10-1336-406c-a0d6-ae5ef83d191d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e45682aa-14e9-437d-b529-bcb8a55268f5"
        },
        "item": {
          "id": "fad0fbb1-9372-4b2b-88fc-e6a25094851e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "44654c47-8b37-40c6-b1ec-5881b260e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f927cd3-58c2-4ba1-b89d-350b504af760",
        "cursor": {
          "ref": "43aa86cb-04d4-4c31-afa3-b332b6a50399",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f1fe858-fc97-4c9a-ae74-9e1ca1d0b9e3"
        },
        "item": {
          "id": "0f927cd3-58c2-4ba1-b89d-350b504af760",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ac619e52-8dcc-4572-9394-26ebc3988c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c3e264-6590-4b06-ae96-3e378faa98c8",
        "cursor": {
          "ref": "afab1e79-a4cc-4f01-8f91-1385588e898f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "78384159-4406-4ce8-91e0-f3042b08e1c8"
        },
        "item": {
          "id": "57c3e264-6590-4b06-ae96-3e378faa98c8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ac2fd191-3837-47fc-b16e-7ca3862b6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2625c30b-9a00-4fa7-a301-0be0a9a8004a",
        "cursor": {
          "ref": "bca672bf-103b-47b3-8316-102352a07120",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6c559c46-0552-4f39-a711-015b6b129da8"
        },
        "item": {
          "id": "2625c30b-9a00-4fa7-a301-0be0a9a8004a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ddedb631-65c4-4510-b5f0-1f5c3af09066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b5517-c506-444a-aab1-f29b3f1b5a03",
        "cursor": {
          "ref": "f4456342-8776-4669-aa93-492d4aa5606d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "325a502c-3bff-4845-a331-974eb1d0024b"
        },
        "item": {
          "id": "2e4b5517-c506-444a-aab1-f29b3f1b5a03",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2fc855b0-cde8-4d17-86df-ca45e8ea73dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60f979e-4bde-4e5d-a067-b2c6f371cb17",
        "cursor": {
          "ref": "10ce2b62-7520-4c2e-9c0b-b256bb611f38",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe68e4fa-3d32-402f-8ab4-4d668773919b"
        },
        "item": {
          "id": "a60f979e-4bde-4e5d-a067-b2c6f371cb17",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f881cb9-ce8b-4870-ad33-aed701ff31ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47c31bc-a04a-4601-8c49-9e82ca8e7195",
        "cursor": {
          "ref": "9564f604-97eb-4da8-8267-770b358f9162",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "234a2693-a987-44e8-8a0f-d2480a428f5b"
        },
        "item": {
          "id": "e47c31bc-a04a-4601-8c49-9e82ca8e7195",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c5626912-d6e5-43e4-ac21-231cc633582e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ba1fe-f0ae-4215-b219-32cb573e7464",
        "cursor": {
          "ref": "6436fe7f-9821-48f9-90c8-b18cb4f52e99",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1596e916-52f9-44f6-9e94-32ef56e1dab5"
        },
        "item": {
          "id": "a77ba1fe-f0ae-4215-b219-32cb573e7464",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1e502c4c-bc87-4d7e-a89a-42f541aee49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fc0993-cb75-4ac6-b65d-979a841a1a7d",
        "cursor": {
          "ref": "a91261fd-2ea2-4f60-a1e5-89e1d515e898",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9563d19d-ead7-4d6a-a648-64527f6b592e"
        },
        "item": {
          "id": "59fc0993-cb75-4ac6-b65d-979a841a1a7d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7b195db2-c6b4-450c-b69a-8f1c8d966f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87741e05-a586-4ae4-8485-afbbbeb1b129",
        "cursor": {
          "ref": "4297002b-4cc6-4be3-9d12-7389fef36aea",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "67ef32e6-9122-4f98-8639-32cc42364d3d"
        },
        "item": {
          "id": "87741e05-a586-4ae4-8485-afbbbeb1b129",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "45e3503e-2cad-4cdb-aa70-d5ace7e72f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cab3e5-d181-4260-a892-963253201166",
        "cursor": {
          "ref": "9f0cd39e-2919-4009-9465-a9d4bb451191",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "48757f10-635a-4b81-bbcf-12c4ffe90603"
        },
        "item": {
          "id": "86cab3e5-d181-4260-a892-963253201166",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "447a2b32-d7d2-4777-b5dc-07f20035153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e1ce07-e7d7-4065-8f9b-9c35610d8609",
        "cursor": {
          "ref": "6a0c219b-cb15-4afe-b4a7-a3921bbf5102",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "acb61bd0-c840-4576-8b02-14aca771d23a"
        },
        "item": {
          "id": "11e1ce07-e7d7-4065-8f9b-9c35610d8609",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a2d01e65-94f7-448c-90df-a3b644028da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d9d6a0-4fb0-48ec-b43d-3706fe1a4af8",
        "cursor": {
          "ref": "2b49e234-6a43-463b-8164-cc9e6ea68ef7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d6b6bc3-ae3a-4dba-a6cb-a3a88aa0a4e0"
        },
        "item": {
          "id": "91d9d6a0-4fb0-48ec-b43d-3706fe1a4af8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ebc907b7-791d-4ee6-a3ff-90f539481b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63920613-b45d-4cf1-92ca-c3af54f44a7e",
        "cursor": {
          "ref": "81347a65-b650-4563-aaf1-91fe5920a361",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4cdd700f-6bbb-48f7-903d-1c6accf20bc1"
        },
        "item": {
          "id": "63920613-b45d-4cf1-92ca-c3af54f44a7e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4dfb40a7-2a58-4cc3-8cca-7ada1e7b1180",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0f2508-b30f-4229-86ec-8740e3a171ca",
        "cursor": {
          "ref": "62bfd324-b5a5-41fb-a3fd-f608a0017666",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2b795e46-4fee-487e-9dba-a770a75c2198"
        },
        "item": {
          "id": "ff0f2508-b30f-4229-86ec-8740e3a171ca",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "99476f40-6d3d-4be5-a3c0-07d21a0dbb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a96116-e963-4262-8e93-947497f9c924",
        "cursor": {
          "ref": "fb47cce1-c80a-4d09-a419-bc3ba8277346",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6d55ce9d-6505-4602-b398-083f61f7ff2d"
        },
        "item": {
          "id": "d8a96116-e963-4262-8e93-947497f9c924",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4b224633-e16d-47d6-adff-243e80f052e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1ecf0c-bb12-4063-ab4a-36cdec22373e",
        "cursor": {
          "ref": "b97cc279-4479-4dc6-ac43-ba1d79c3d278",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dcfd3c56-8f4a-4d5f-9344-7cb751a47107"
        },
        "item": {
          "id": "3d1ecf0c-bb12-4063-ab4a-36cdec22373e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7ef67fe7-531c-4351-8ab2-b79f2544a506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fe7e4-7ea5-4b0f-81fc-2221b89255f3",
        "cursor": {
          "ref": "5a1d5c42-a959-4b87-ac41-907be9ddb579",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e733d7f-c2c1-446f-bc4b-6c1bd88bdfbd"
        },
        "item": {
          "id": "b78fe7e4-7ea5-4b0f-81fc-2221b89255f3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7e1759d4-af1e-4638-81c2-125f1f739b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e962012b-92cb-4763-9cee-50b3b3fea684",
        "cursor": {
          "ref": "725f1429-efd8-44f3-8910-1cdd120b5ead",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f4d337c5-1368-4d49-8618-07da37f181bb"
        },
        "item": {
          "id": "e962012b-92cb-4763-9cee-50b3b3fea684",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "43f4855b-ff75-49b9-8aa4-a31c950ff473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dcd4c5-a30a-493a-b82b-57b6158d7cf1",
        "cursor": {
          "ref": "a30eee18-f367-4be9-8e5c-f1fb45d82589",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "059a1848-5d2c-4472-bae5-3e5020ea3e23"
        },
        "item": {
          "id": "55dcd4c5-a30a-493a-b82b-57b6158d7cf1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26949724-b63a-4278-93c1-386513b3105f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3633c4-3104-428f-9140-3f2293ee842d",
        "cursor": {
          "ref": "f4054b9f-ef3f-4648-8606-dc5cb6face20",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a18b8021-2eaf-4d55-ae3f-6c2528af6beb"
        },
        "item": {
          "id": "1f3633c4-3104-428f-9140-3f2293ee842d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "18e1a84d-9566-435f-baa4-a7f73b0393a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f74d41e-f072-4dfd-afc5-913754fcea65",
        "cursor": {
          "ref": "59a64846-36e3-48d1-9715-4fdf35d55c7f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cedba2f3-d43b-4a31-a0cc-fa6973f0369e"
        },
        "item": {
          "id": "7f74d41e-f072-4dfd-afc5-913754fcea65",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5cdaceb9-d7a4-4454-aedd-7d77f8e00ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014112f5-d80d-4156-8e82-79cb458d9b00",
        "cursor": {
          "ref": "2fb174b9-f7c8-49db-9551-f46140903d48",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aabe3ff5-4264-4f9a-bbe6-b2c9a213352c"
        },
        "item": {
          "id": "014112f5-d80d-4156-8e82-79cb458d9b00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "efdc4f63-fc52-4e5f-a67f-3d0478df6bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d31aa1-67c2-4298-a6c1-f1084a404710",
        "cursor": {
          "ref": "0552d956-fb28-44c4-b20d-1212d0ca99fc",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0a3e85ef-12db-41ba-baa1-fa985040d4b8"
        },
        "item": {
          "id": "24d31aa1-67c2-4298-a6c1-f1084a404710",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "88810d1d-ddd9-4f71-9bfe-37d1d9eefbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29dd8d2-1840-4dd7-96b2-f57d46853dcb",
        "cursor": {
          "ref": "d3298794-63ea-4fb9-8d91-0ac94f08d450",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "398a6627-3544-4b55-b7e7-bd6eae62127e"
        },
        "item": {
          "id": "b29dd8d2-1840-4dd7-96b2-f57d46853dcb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ee210f00-931f-40c0-b093-225385aacd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9b047c-c2d5-4ba6-8ea0-02b7c62b0c6e",
        "cursor": {
          "ref": "81f6b116-7126-4245-b632-16e5548111ca",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e0094b1b-7f6a-45af-aefb-303b150e00ab"
        },
        "item": {
          "id": "2b9b047c-c2d5-4ba6-8ea0-02b7c62b0c6e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2a76de3-7f66-437e-b90a-45a892e9445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb0764d-74bd-4075-8f7a-a5d1b47ab785",
        "cursor": {
          "ref": "f6ab3498-d356-48dc-a94e-75ec8bb72e8d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bdd71583-a644-42ac-9409-c3b577a953ec"
        },
        "item": {
          "id": "fdb0764d-74bd-4075-8f7a-a5d1b47ab785",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "64ed345e-2246-491b-a61d-6d284276fb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5539542-042b-4fd6-a806-d70cc66271ba",
        "cursor": {
          "ref": "b0270843-78ae-42b5-b6c7-96a6af9c38a1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb3bd836-440b-4f62-8451-5219c79ae7ce"
        },
        "item": {
          "id": "a5539542-042b-4fd6-a806-d70cc66271ba",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fb51d074-1294-4d5d-8264-1e1fe25017ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778be29f-2bad-436a-8ea4-a29483bb952c",
        "cursor": {
          "ref": "fa93d77c-3c37-4da1-a237-54776efd7071",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a493e7ff-ccc4-443b-bccc-575cd9d14547"
        },
        "item": {
          "id": "778be29f-2bad-436a-8ea4-a29483bb952c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "28abbc7f-22a1-4b00-b0b6-9baff2a1701f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5c5a7-8e7a-4fa0-801c-114d0a66ef5a",
        "cursor": {
          "ref": "ca9dce91-d741-4586-a74f-34033aed4158",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8824fa77-a079-4759-893d-2de30090a8a5"
        },
        "item": {
          "id": "56b5c5a7-8e7a-4fa0-801c-114d0a66ef5a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "115824c0-8fab-4b4f-9f3c-5009e925d42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32632e08-a09b-4c16-9524-5d2455ee27a2",
        "cursor": {
          "ref": "d5f2713a-1b7e-44e1-8a3b-7ebfa27eae5a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7bd1cc4-75bb-4236-b160-787770099a0d"
        },
        "item": {
          "id": "32632e08-a09b-4c16-9524-5d2455ee27a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f208b25e-5d1c-431d-a978-0e882b4d99fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca0ee7b-0498-451f-a9f0-625bcfef7fdd",
        "cursor": {
          "ref": "16d68ef5-9325-4b3b-bd49-494c18060be0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cb6f241e-566f-46be-964c-83e307857d43"
        },
        "item": {
          "id": "7ca0ee7b-0498-451f-a9f0-625bcfef7fdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "70b30d11-c5aa-4e6e-aae0-c05f3f66a2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea683f03-8a73-454d-b777-d3441f51aef3",
        "cursor": {
          "ref": "7334a024-4306-4ab8-a505-4738ea387d46",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea2065a6-e08f-4f29-a03e-87b2d7ec78ca"
        },
        "item": {
          "id": "ea683f03-8a73-454d-b777-d3441f51aef3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ccffb935-02e4-4540-85cc-d83c3cdc4d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e296a914-9378-4b34-90ca-23b60d9eda37",
        "cursor": {
          "ref": "44e6accb-eb17-43b6-addd-dadba7b4ea5b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1b64d7dc-fdc8-4846-82d7-d7c1589b6553"
        },
        "item": {
          "id": "e296a914-9378-4b34-90ca-23b60d9eda37",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d0eb5d84-dd4e-4d84-b53e-4fcc66b2d6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b293285c-4ad4-4380-a4ec-5e38a1e70f98",
        "cursor": {
          "ref": "a8a39c98-5075-42c6-bdfd-9dc5db74d69f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d1adf34-eca6-41aa-9ce1-4e8e9a785d05"
        },
        "item": {
          "id": "b293285c-4ad4-4380-a4ec-5e38a1e70f98",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "46265e29-33b6-4da4-8b57-f12dea79b6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bb68d2-9215-4e5b-a6d0-e08875a824b3",
        "cursor": {
          "ref": "f561a7c8-28bd-495a-b6be-18d8524c53ad",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "489c9251-5fa7-42a9-a772-8612e75d3987"
        },
        "item": {
          "id": "89bb68d2-9215-4e5b-a6d0-e08875a824b3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "da307021-e919-4d38-877c-b6ef9da7128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb9e0ea-3c1d-420b-b4cf-0585053d6fb6",
        "cursor": {
          "ref": "17fb5035-c85d-40c3-97a2-0add5c2f8274",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c5f11df5-1379-4f64-a695-fd9a0c5577a0"
        },
        "item": {
          "id": "ffb9e0ea-3c1d-420b-b4cf-0585053d6fb6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "378ab67f-866c-4970-9d1d-b5016c50c1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae2bfd4-a59d-4eac-9020-a23aa27638a9",
        "cursor": {
          "ref": "913cecba-40f5-4dde-8420-fd523641b435",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a390fcf5-d648-48c6-bb6d-8a3ed6516d49"
        },
        "item": {
          "id": "2ae2bfd4-a59d-4eac-9020-a23aa27638a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "07a69335-ef91-4cf2-b74a-ca1440e3421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75b81f4-bb99-4e36-b0e8-3e4eec5e383f",
        "cursor": {
          "ref": "b4d0de0a-0b05-45f8-b889-f0f844760f5f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "78220df4-2bad-4933-87cd-46681cc09892"
        },
        "item": {
          "id": "f75b81f4-bb99-4e36-b0e8-3e4eec5e383f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27291814-8cf0-4028-9016-56e1b6315c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b7a06-c4d3-4427-8a98-b8ff10053886",
        "cursor": {
          "ref": "b73e274f-900c-465d-859f-44448e749700",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3790c5dc-8706-4e79-9868-241ab27b0bc8"
        },
        "item": {
          "id": "f71b7a06-c4d3-4427-8a98-b8ff10053886",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d2206d2-c350-495c-a638-9f66b81ceb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00288777-5c54-4083-a3e5-50b947474a68",
        "cursor": {
          "ref": "b60cabe9-e19d-43b2-a0b5-af870de9d4a8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "111e1222-abfc-41a5-b1ff-3f3dd75af6c3"
        },
        "item": {
          "id": "00288777-5c54-4083-a3e5-50b947474a68",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "506b80bb-57d3-459d-9065-6249a9e51829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1687a0-18b4-40fc-853e-41abb444830c",
        "cursor": {
          "ref": "2aa4c191-3e6b-43a5-b491-92c1984e4aba",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0fb5edb8-bc5f-4ec0-9801-49b5502cdec9"
        },
        "item": {
          "id": "5c1687a0-18b4-40fc-853e-41abb444830c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "618830d6-8895-4da1-b1a2-92a98c759f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60b05f-b81e-4ef7-afc0-947b0f846806",
        "cursor": {
          "ref": "c9d3fc2f-c269-4b8e-b389-e5c4cd28009b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea315562-b7cd-4aba-9012-964d8cd586c9"
        },
        "item": {
          "id": "5e60b05f-b81e-4ef7-afc0-947b0f846806",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6bffc62d-9ce7-437c-8373-125a87556475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341db254-3fe0-4f8a-9f1a-813a6f22d98d",
        "cursor": {
          "ref": "113482a2-f3ea-40fb-b7bf-d540f565f8f4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "731a88cf-fc71-4ae2-943f-12d231474f7c"
        },
        "item": {
          "id": "341db254-3fe0-4f8a-9f1a-813a6f22d98d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d88d63d9-82c6-4829-8deb-382c3522b75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53c732d-33b9-414c-b7ea-dcd272712f88",
        "cursor": {
          "ref": "143e458c-617a-4878-b862-b2007eb29e72",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "985fe272-59f8-4951-b96d-0409dcdae8ef"
        },
        "item": {
          "id": "d53c732d-33b9-414c-b7ea-dcd272712f88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "da049610-0726-48ad-a8b1-aeef79962118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70462fe6-c2f7-47fd-b05b-3702c71225a0",
        "cursor": {
          "ref": "9c2046eb-4319-4a65-8409-cdce33502367",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c2d9b68f-e0cf-4376-87c7-18244959eb34"
        },
        "item": {
          "id": "70462fe6-c2f7-47fd-b05b-3702c71225a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b3e09ceb-4ae7-41e6-9b3d-0e13d9214593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004f46b0-74ed-462c-b866-43f781023c09",
        "cursor": {
          "ref": "b327992e-479c-4cb9-8367-6a863460d505",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "53dfe429-40c5-49f7-95cb-9b1afd1fd7e3"
        },
        "item": {
          "id": "004f46b0-74ed-462c-b866-43f781023c09",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "feff3c7e-86f7-463f-8680-086b10dd36a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a86e5f-4d44-42f9-81ad-930d076e0ad4",
        "cursor": {
          "ref": "e55ae53a-a439-46d7-968d-01805e0dfa3d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "091f61eb-6b1a-4d9e-a9bf-a7c8f1739b04"
        },
        "item": {
          "id": "82a86e5f-4d44-42f9-81ad-930d076e0ad4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1b6e821-2630-42b7-803c-84ed4ad3b894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494aca85-72fd-4834-8116-d0ad3e1dcfa6",
        "cursor": {
          "ref": "c78d8cc9-9d48-4026-9a61-1eaf6fd29586",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "131b2a4e-b307-4b7e-88f7-1ef6899e8674"
        },
        "item": {
          "id": "494aca85-72fd-4834-8116-d0ad3e1dcfa6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "685814b4-216e-4859-956c-23fb2c218ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8898993-6709-498a-8aa9-dc12efb28b2c",
        "cursor": {
          "ref": "9ac9f245-d2dc-40b8-a644-9ef3abf9642b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e39e5bb7-e645-4602-802d-f6446e7b6c3e"
        },
        "item": {
          "id": "f8898993-6709-498a-8aa9-dc12efb28b2c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4924234-4f69-4e7f-83c8-7a5287041ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e21c8-cef0-44cd-b336-01eb7b292256",
        "cursor": {
          "ref": "cb8345bc-413f-4bfb-a9d2-8a74fffc868e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eadaaf0e-320c-4faf-a393-38e93d538f4f"
        },
        "item": {
          "id": "6a6e21c8-cef0-44cd-b336-01eb7b292256",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a713c0d5-77c6-4c3f-b3a2-95372c87ec77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1728e8e2-e0b7-44d8-bdc4-00a252f3e96b",
        "cursor": {
          "ref": "9d3ca26b-b2b2-4a22-ab09-b7811c47be5a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ddd204dd-045a-4d3e-b9f2-030955d889ac"
        },
        "item": {
          "id": "1728e8e2-e0b7-44d8-bdc4-00a252f3e96b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "880e04a9-d98a-42f6-96d0-523debcadfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cfd23b-3e71-4cbe-a095-75f41f0d2ec6",
        "cursor": {
          "ref": "53a61bb0-7d13-43d0-bce0-3ebba5757449",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "01ab47ce-2ca7-460b-a485-96985e95736d"
        },
        "item": {
          "id": "a2cfd23b-3e71-4cbe-a095-75f41f0d2ec6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "67a761d8-f4cd-4d51-a6ad-c05412d4a42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b7642-e20e-4f82-a1ea-63339558c315",
        "cursor": {
          "ref": "fa617279-0cec-4467-b505-95166c00119f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e6479c6c-1f55-45af-97b0-7d77079337df"
        },
        "item": {
          "id": "b26b7642-e20e-4f82-a1ea-63339558c315",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c742108-44f7-4cd7-bde0-4c2e51dc08f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacc6515-d157-494d-9981-9594c6a63c34",
        "cursor": {
          "ref": "df4afe12-bd3a-4315-93af-27fc3a875ac2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "af953072-fa3a-4b65-abbd-0c8b2680ca9f"
        },
        "item": {
          "id": "aacc6515-d157-494d-9981-9594c6a63c34",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "97256b32-2372-4439-86ee-68927de733a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9361398-babf-4384-be5b-6e987c974200",
        "cursor": {
          "ref": "01bbba29-4fb3-4726-903d-2cdb1ab2eee0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ef0d67d8-888e-4c6f-961f-05b93ad02df9"
        },
        "item": {
          "id": "e9361398-babf-4384-be5b-6e987c974200",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "55107e9b-023b-4fb7-acf1-521e5c1bb015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877d3a9f-e982-4140-8207-9222260103b7",
        "cursor": {
          "ref": "85a298b3-057e-4dfb-b6a3-0e79f8554995",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "42ba39ae-e447-4551-8735-590651a44ff9"
        },
        "item": {
          "id": "877d3a9f-e982-4140-8207-9222260103b7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "207fb89e-b01c-4a52-b416-5568f3a4174e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8df986-b26c-4acb-9c45-e069c90158e4",
        "cursor": {
          "ref": "8cff6d09-3a6a-415d-8af5-3687e507834a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7e9410cd-462e-454f-90f5-09db52d56d95"
        },
        "item": {
          "id": "cc8df986-b26c-4acb-9c45-e069c90158e4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "31ad940c-8393-46da-81dd-ca168534e611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58abe223-39ef-473f-9da7-2af2b2f6db7e",
        "cursor": {
          "ref": "1a4aeabb-9f16-47d9-8c89-5c643ce30b71",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "16ce188a-f4ef-44ba-9c43-bd4141207836"
        },
        "item": {
          "id": "58abe223-39ef-473f-9da7-2af2b2f6db7e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "17874a7c-a1c9-461e-8243-d966a191ee1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e32d99b-af22-4f62-a233-4b224107a156",
        "cursor": {
          "ref": "58b9058c-1edb-445e-b4ea-08ff0c6e2541",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d42b0caa-68e3-44a3-84f6-218d8928aad1"
        },
        "item": {
          "id": "8e32d99b-af22-4f62-a233-4b224107a156",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dbde94e7-1f67-44c9-a8f8-88337dd4cca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89beb4e1-ae74-428a-a924-87d043ba66e8",
        "cursor": {
          "ref": "0a30e0bc-e114-416b-8532-64ab783fc5ca",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "32e64474-8fa9-4a0e-b15d-84c7232dbee1"
        },
        "item": {
          "id": "89beb4e1-ae74-428a-a924-87d043ba66e8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c3fe60a-084c-4980-a06e-0ada753afddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a11813-93fb-4f5f-8ee5-4bae978788c0",
        "cursor": {
          "ref": "eb8aa6cc-54bf-44ea-b556-40d1466d82c7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fab54cb7-bfa4-4042-9cd9-0909c39c7599"
        },
        "item": {
          "id": "47a11813-93fb-4f5f-8ee5-4bae978788c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fc1ac50d-a13c-4630-85c1-25dccb42d90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a9efa-4cf9-45c8-b25a-982819f9e60a",
        "cursor": {
          "ref": "61fc5938-a9af-4584-ac78-e67d7c4879ee",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cd6aedaa-89e6-4527-8349-f50be3cee18d"
        },
        "item": {
          "id": "324a9efa-4cf9-45c8-b25a-982819f9e60a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57f69453-5d8d-4dff-9005-f3fab2e04963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10591437-429d-4a61-962d-5b1042053737",
        "cursor": {
          "ref": "7289f2c7-d473-4241-b94f-af9262cc7264",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f496e4f1-5b26-45aa-a33f-1c95e25e8d61"
        },
        "item": {
          "id": "10591437-429d-4a61-962d-5b1042053737",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7c4c4b18-3be5-4d15-b52b-d005a696b1bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73710ae-4841-414b-a956-cf10946bc326",
        "cursor": {
          "ref": "f2700f75-0e8e-4faa-8ff1-7ecaecf46c69",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "798b0854-a5d7-408f-a54a-f95aac88cda7"
        },
        "item": {
          "id": "b73710ae-4841-414b-a956-cf10946bc326",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8150daa6-ce13-4c2d-8c8c-cd25e21839c5",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0068872e-6c6d-45a8-94ae-62ce7f5c9c78",
        "cursor": {
          "ref": "da1b1644-98f4-4b21-8f92-8e7815856c64",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "89709962-0738-4ca4-909e-2b7d23ba31a5"
        },
        "item": {
          "id": "0068872e-6c6d-45a8-94ae-62ce7f5c9c78",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0d7a6da2-358d-44cd-8ef1-83f8c6e99369",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8b5fcd-712f-40ab-8b83-5f0a616d41fe",
        "cursor": {
          "ref": "9b37865f-1c94-46fd-9912-93a7b3d8be12",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3b278325-52dd-41ae-ab13-b6c8f068b7a1"
        },
        "item": {
          "id": "de8b5fcd-712f-40ab-8b83-5f0a616d41fe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "009fb5f1-7dc8-4e3d-a286-eb5fd37b4cc8",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d800b6bc-b7a5-407d-ad6c-6b3039d915c8",
        "cursor": {
          "ref": "f2c90614-76a5-4523-89cc-061677a5edaa",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7f1c7c05-58d7-4166-83e6-74b309359582"
        },
        "item": {
          "id": "d800b6bc-b7a5-407d-ad6c-6b3039d915c8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9cc5132f-2fd4-43e8-bab0-6d588908eb3d",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c112ac-292a-40f8-87bd-2f480e91c643",
        "cursor": {
          "ref": "5e1ef175-d466-4ed6-937f-2f8eea4761f4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "48fecdac-5d2d-4fda-afa4-c69771c441e2"
        },
        "item": {
          "id": "15c112ac-292a-40f8-87bd-2f480e91c643",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1b02a500-085e-4525-8d78-d1511bb82708",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a859419-0593-4d48-aaf8-f71a6ddddb8a",
        "cursor": {
          "ref": "f865e279-0032-49da-83f7-0a7c25aefe55",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f0dc8522-544c-4b56-a8f7-25fa3404699c"
        },
        "item": {
          "id": "1a859419-0593-4d48-aaf8-f71a6ddddb8a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08fd50ad-d20d-4ed6-8f10-ec8df6b62e5f",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4cf3c1-0609-4b90-99e2-234b2831039a",
        "cursor": {
          "ref": "504dccef-aee8-41bf-8a2e-011bf893b970",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba498bbd-f15b-4c4c-aae0-633fccc95b82"
        },
        "item": {
          "id": "bf4cf3c1-0609-4b90-99e2-234b2831039a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f5f42009-52eb-4507-ac90-2534a0d8fd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21b25fe-333f-4d6a-b955-79a7a5c5528c",
        "cursor": {
          "ref": "5b987763-0363-45e5-9ab9-8fc3c34a676a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1fedf88a-703e-4db4-b774-1a4004f485e3"
        },
        "item": {
          "id": "e21b25fe-333f-4d6a-b955-79a7a5c5528c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8db5f112-da3d-4ce9-a097-e2ec1e899434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e250f17b-7b82-4d34-8810-62ba99f61b58",
        "cursor": {
          "ref": "a6db11e4-8e4c-41ad-968e-97fd686d0264",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "15a16191-ec63-46e5-b4a2-d143fa0426ca"
        },
        "item": {
          "id": "e250f17b-7b82-4d34-8810-62ba99f61b58",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e9ff83cf-5a93-4f22-a877-790889e3b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab71764c-8ebc-45a3-9e0d-3ead91946a52",
        "cursor": {
          "ref": "766b9349-f674-4ce5-a88c-a592d6a5e66b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f784378d-2b5a-420b-8f67-eb01b31142f5"
        },
        "item": {
          "id": "ab71764c-8ebc-45a3-9e0d-3ead91946a52",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b2ea9564-c7b2-4f03-882d-ea9a1e0c393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4c303d-bc57-41f7-9dd7-ae665ea98b96",
        "cursor": {
          "ref": "efd9e71b-7877-4270-89b2-6629edf0c721",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "623c91b3-e208-4006-b7c5-118d8d338644"
        },
        "item": {
          "id": "6e4c303d-bc57-41f7-9dd7-ae665ea98b96",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c5eff10-f95d-4629-ae99-0de9881950c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9ed469-1f20-40c1-8b6a-8055110795cf",
        "cursor": {
          "ref": "9dab86b0-8453-47dd-8987-69d682af151b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "89ccc248-a4b7-489e-9619-df06c77f4cd6"
        },
        "item": {
          "id": "3a9ed469-1f20-40c1-8b6a-8055110795cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a3f42d0f-a7b6-448a-a072-604d70b96a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b96290-c2ed-434c-8272-125a63244423",
        "cursor": {
          "ref": "e19fee4b-48cf-40ee-b324-fbfe56ff6bfe",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f065777-320a-4422-9213-9134cee9ae9b"
        },
        "item": {
          "id": "a0b96290-c2ed-434c-8272-125a63244423",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44efaac1-7976-4b68-976b-cebe5e66dfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba6ff74-36d0-41ab-acdd-c9444152d398",
        "cursor": {
          "ref": "ff5af985-1ff1-4144-b821-3efae179c474",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "59145711-0886-4a87-9584-d03adbd3d9a3"
        },
        "item": {
          "id": "8ba6ff74-36d0-41ab-acdd-c9444152d398",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0f9f9ea0-f7cb-4cdc-bac2-2a112ea9b70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357ebc57-6427-42f8-ab19-0584889b24b6",
        "cursor": {
          "ref": "bc3a1d9f-9d36-4945-847d-8b32ee38e931",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "72264f22-4f0e-40ca-b07d-4d7262a569af"
        },
        "item": {
          "id": "357ebc57-6427-42f8-ab19-0584889b24b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "097a950b-a108-41a5-9bf8-4407b353e0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479e6ff-018a-4f86-a7d9-4b7b2aeb9ae9",
        "cursor": {
          "ref": "9d57a085-35f3-4685-a808-ddb42a42301c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39dfaf9d-4620-4653-a016-77133b5afb39"
        },
        "item": {
          "id": "c479e6ff-018a-4f86-a7d9-4b7b2aeb9ae9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a373d0d1-9ba2-4876-bcde-0aecdf038e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1a8f16-8798-42a5-a61f-79bc29bf6f01",
        "cursor": {
          "ref": "13948cb9-17e0-4bc7-bb45-777cd092776e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "87a68891-bca9-40d4-838f-bf39c6dcac88"
        },
        "item": {
          "id": "3a1a8f16-8798-42a5-a61f-79bc29bf6f01",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c8001fdc-615d-4abb-a6ce-a04cf2910023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833562e9-155e-47e6-ab04-41867aea9ca3",
        "cursor": {
          "ref": "ea68f9ff-a3ff-4311-ba1a-22f18e873c55",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "389e034b-1bbe-4bf8-8f42-8b8ea74bf4c7"
        },
        "item": {
          "id": "833562e9-155e-47e6-ab04-41867aea9ca3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d014cc42-8911-4d94-83ad-ccf9f012627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eedca01-49a4-4fa3-a95a-ee8d026f0ac4",
        "cursor": {
          "ref": "89396b77-143d-48d7-bf35-9e623689615c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aa18e353-dae2-4d66-a2d7-8f53cab5d8a9"
        },
        "item": {
          "id": "8eedca01-49a4-4fa3-a95a-ee8d026f0ac4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2bb3e26d-b54b-4335-8714-739435861825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2807c-213f-4826-aca0-bd728d07b30d",
        "cursor": {
          "ref": "0741d15c-114c-4557-bce4-69f9607dea46",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7cf738df-5e38-4e37-ae67-aa07df6031e4"
        },
        "item": {
          "id": "45b2807c-213f-4826-aca0-bd728d07b30d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "109caa4c-dbcb-42e5-98b0-07be94825842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb2ef57-a353-4d16-bb94-3e3110100501",
        "cursor": {
          "ref": "db474033-e583-4e0f-9b54-025e8d7ac862",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10ec3d1e-25b6-4a82-9187-49e0bf5cd3c4"
        },
        "item": {
          "id": "fdb2ef57-a353-4d16-bb94-3e3110100501",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9cad7cdc-67ff-4825-baa8-da473d5a7d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e9689a-0902-4637-948a-fc0f245eb9ca",
        "cursor": {
          "ref": "2313c0c6-5683-4f54-bf1f-149266989589",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ac7681d5-4532-468b-b2ba-e92b2a036f6f"
        },
        "item": {
          "id": "87e9689a-0902-4637-948a-fc0f245eb9ca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fea1e44a-06a5-4e05-b96d-bf9772aca0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59aea10-c618-4ce4-9472-52cb40467f7e",
        "cursor": {
          "ref": "a76ec5f2-c9c3-4137-bef8-31ae72722edf",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d154e84e-e357-484d-a3ec-8aff90692696"
        },
        "item": {
          "id": "b59aea10-c618-4ce4-9472-52cb40467f7e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0e43dc53-b9c0-4860-8ffb-813f46450c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08d31be-9325-47d5-be9d-d9f975a67eb8",
        "cursor": {
          "ref": "8894ede0-f086-4975-ac36-b68a8745503e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b47f7bb5-6cc0-4a67-b2ce-63115e2ba6ac"
        },
        "item": {
          "id": "b08d31be-9325-47d5-be9d-d9f975a67eb8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad1f9919-9e19-4bf2-b53f-1c96c7f3850f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20845c67-d07f-45c2-a31d-944cc22d2ed9",
        "cursor": {
          "ref": "a477ba5b-f958-4b34-ba7b-fb753a045d0d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "999944e4-5faa-4870-b472-cee5c1829db8"
        },
        "item": {
          "id": "20845c67-d07f-45c2-a31d-944cc22d2ed9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e3e4f5b-cd19-4e7b-8ea2-9d2a5ba77d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc47b4e-1335-414a-a994-364378e91a81",
        "cursor": {
          "ref": "af143586-929f-493e-b80f-9d6fbb10cbd0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a488ccd-3662-4085-9c94-3b58277b16b7"
        },
        "item": {
          "id": "5bc47b4e-1335-414a-a994-364378e91a81",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e26bd4b7-f3aa-42a2-8356-c6a1d04394a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1487163a-281f-49e7-bb37-08f3e3dd5746",
        "cursor": {
          "ref": "ff5c6d68-1004-4200-a306-076fa2a7ec88",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c0a063c5-18a3-4835-9867-0127e5434754"
        },
        "item": {
          "id": "1487163a-281f-49e7-bb37-08f3e3dd5746",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41bc44fe-3ff4-4014-ab0e-7f1827301b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d7562-21bb-46ac-a405-d42cdc37a2dc",
        "cursor": {
          "ref": "9d4f641c-b323-4538-a60a-b0d386791f56",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f9c894e-df64-4da6-992d-ee08e56ad259"
        },
        "item": {
          "id": "261d7562-21bb-46ac-a405-d42cdc37a2dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b700aa4f-5a07-4777-a45e-0adb567c3927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe744221-7d7e-4c6c-b9e3-5baa688c6fe2",
        "cursor": {
          "ref": "160e490f-cfae-4c58-9cc4-65627bfbea58",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "641b491b-4381-45cd-a7fb-bbf69b07213a"
        },
        "item": {
          "id": "fe744221-7d7e-4c6c-b9e3-5baa688c6fe2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f719b34-970c-452a-849b-e99419495b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a4bdee-a7b4-423c-a48e-440884fa69fd",
        "cursor": {
          "ref": "76b208dd-d64b-4b03-a8d9-bf9dfe8caaa9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "43174a5b-e6b4-4424-b0b5-2b2a961304da"
        },
        "item": {
          "id": "e4a4bdee-a7b4-423c-a48e-440884fa69fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5fd21ec1-188a-4674-9468-ec5ab8fd8b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ac7ca-9557-4b14-92ee-d2313e6e52e1",
        "cursor": {
          "ref": "9b8efcea-4492-43d1-acaf-4301b47ac2b5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "150d75cc-a797-4b38-85b9-b8e94511ca6a"
        },
        "item": {
          "id": "ce3ac7ca-9557-4b14-92ee-d2313e6e52e1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcb8334e-3e1d-4690-8f9d-5edc462dda4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6b2928-a52b-4c27-a0b4-6beb441db599",
        "cursor": {
          "ref": "15233c51-259b-4d32-8ce4-3c3cf4fe1f48",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1d5006b1-280a-4672-a6fd-d937647c834b"
        },
        "item": {
          "id": "2a6b2928-a52b-4c27-a0b4-6beb441db599",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "607b83f1-0c74-4a24-a846-674ef4f95d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f46fe-db89-41d4-8268-3ff01cca6414",
        "cursor": {
          "ref": "9e24eac1-928f-4090-a400-d832c8945e76",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4c472abe-c914-4ae0-9ead-4dbd92b1f58e"
        },
        "item": {
          "id": "a30f46fe-db89-41d4-8268-3ff01cca6414",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f9f7010-463d-429c-a9f4-5ffa8aa37d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d6fa62-c38c-4c47-aadb-7ce658d9a9b3",
        "cursor": {
          "ref": "88f2419d-bc93-4998-a693-a130f6553641",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e33dc0fd-782f-4c58-af3e-4096e6929499"
        },
        "item": {
          "id": "e6d6fa62-c38c-4c47-aadb-7ce658d9a9b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a542ddb-9ce6-40c0-95fe-9c2c8dd2c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6265dc5-51e9-4785-b0f6-ab7e4aeac077",
        "cursor": {
          "ref": "6aa7bd82-7a13-4ec2-81a3-a76f25db90e8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d6e3e03-5ece-44a4-8b17-3ecf27ebefcf"
        },
        "item": {
          "id": "b6265dc5-51e9-4785-b0f6-ab7e4aeac077",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f58305a-fbfc-41a4-8464-208f307e980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426f5cc-46cd-4508-b1b2-33f9048cf036",
        "cursor": {
          "ref": "43817055-51df-4749-b88b-e37235645254",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "204676da-48a4-490a-ad11-aa0a941d265c"
        },
        "item": {
          "id": "0426f5cc-46cd-4508-b1b2-33f9048cf036",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c3b5dd6-02a3-4617-af2a-acfadadb4852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa55432-fb05-4e03-ba08-0f387a01c7a6",
        "cursor": {
          "ref": "812c7766-5444-41a0-80f6-21eef1d587c2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b095176c-7157-42d3-894c-9cd4889445d6"
        },
        "item": {
          "id": "6fa55432-fb05-4e03-ba08-0f387a01c7a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0bc88b2a-e603-46e5-b949-2a9dfdb97cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1070a199-f2d5-4015-9d7d-21e3512f69bf",
        "cursor": {
          "ref": "1c933a1d-828f-46bd-8364-9ea0b038c764",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e1d41ffd-678b-4805-bc15-072ff5ce622f"
        },
        "item": {
          "id": "1070a199-f2d5-4015-9d7d-21e3512f69bf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f1476949-fbda-408e-8577-c54b8a1b333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c0908d-08fd-4331-a42e-6a2c9f38d5e3",
        "cursor": {
          "ref": "618c04bb-5d29-4619-ac81-0a80c597ffc4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88506803-6674-48a6-a235-0f942abb58cf"
        },
        "item": {
          "id": "d3c0908d-08fd-4331-a42e-6a2c9f38d5e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "327ed8f4-9940-4c88-ae47-00e22e228716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9db22e-80ce-469a-ab2c-440fcc94cd65",
        "cursor": {
          "ref": "ded2f2b1-89f6-44e8-9744-7dcfab1707e3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c739a6e9-3a50-4367-a916-3c7c8d042817"
        },
        "item": {
          "id": "ac9db22e-80ce-469a-ab2c-440fcc94cd65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "31fdfd8e-bf4a-48ec-a42d-71f35fd8cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99a7b76-57be-4314-a374-2ccab11403f8",
        "cursor": {
          "ref": "4c3d1550-5505-4b83-8d50-d227bd3c9799",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7be25f3c-8742-410c-ba4a-494b757db81d"
        },
        "item": {
          "id": "e99a7b76-57be-4314-a374-2ccab11403f8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb1dccb3-c718-4f80-a0a2-8a2fdb96cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca49e6c2-c4b2-44d4-a3f5-31ea47acd866",
        "cursor": {
          "ref": "284825d0-ba61-455b-975d-76ee9229ea35",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a8b5b60f-1903-4ac5-95ae-9f46e136021d"
        },
        "item": {
          "id": "ca49e6c2-c4b2-44d4-a3f5-31ea47acd866",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7fad3ad7-ef67-486e-a9cc-c650a0fb9a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2197c4b4-d2af-4cc5-8557-4f5940bf331c",
        "cursor": {
          "ref": "e920c84a-5a18-4250-9af6-7baf1b7b9b15",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ecfdc709-983b-4eaa-839e-81b6807ca73e"
        },
        "item": {
          "id": "2197c4b4-d2af-4cc5-8557-4f5940bf331c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af72c699-15b2-4792-acc8-4b35dd5e85f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa34266-9eee-43f6-997f-34a5d2bdacf4",
        "cursor": {
          "ref": "a54e7cfd-0d21-42c5-b834-0c464c23c9ab",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03496b95-84e8-4707-a4ff-a09534070936"
        },
        "item": {
          "id": "dfa34266-9eee-43f6-997f-34a5d2bdacf4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4d3b3fb-6839-4741-a713-d41a55ca927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685d4591-3d5d-4c18-9aae-6ae88da19c70",
        "cursor": {
          "ref": "f3334eb9-ae20-49fe-8d72-790a760fdd95",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cc7df72e-ea05-4b26-ab82-b9188b1661d7"
        },
        "item": {
          "id": "685d4591-3d5d-4c18-9aae-6ae88da19c70",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "545767e1-7d20-4582-89a7-9de789691c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6ffd49-4257-4090-b1b8-179ea78c42fe",
        "cursor": {
          "ref": "15117063-7a5f-46ba-af11-1c116f25a342",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "89204c65-8bf3-4bab-a659-607c65269c27"
        },
        "item": {
          "id": "fa6ffd49-4257-4090-b1b8-179ea78c42fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c36fc8fc-6e62-4ba0-aeec-dc4372dc800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6123c5-d3f8-4df7-9c25-03092c32f03f",
        "cursor": {
          "ref": "7a921262-b734-4af8-bc72-142f309fc804",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "80384264-fa70-40cd-a775-93d76de3449f"
        },
        "item": {
          "id": "0c6123c5-d3f8-4df7-9c25-03092c32f03f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2637b51c-37c9-4438-b696-86bc11b94413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e427fbe-603a-4fc4-ad18-c33bdaae43a1",
        "cursor": {
          "ref": "3628489f-911e-4560-80d8-614c33b4f7d5",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "654ae4b8-2857-4926-a3fe-09e5e19df8ba"
        },
        "item": {
          "id": "0e427fbe-603a-4fc4-ad18-c33bdaae43a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c46bcd3-5b7d-4a4b-8154-abc5741cfb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b4fc1-75be-437e-9649-665c7ec59863",
        "cursor": {
          "ref": "78ee952c-ce2e-4ea7-b3fd-40bbf2a446d3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1ee1d9b7-3fd4-4659-9583-b7637ed02429"
        },
        "item": {
          "id": "199b4fc1-75be-437e-9649-665c7ec59863",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5f78a0ef-1f90-4d01-887f-b37d605b7beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed4d2b5-c932-4fd6-85aa-a6428fb30322",
        "cursor": {
          "ref": "7d50b18b-94cf-4cb5-9d1b-51618fb5bdf5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "45360af0-06fa-4de2-a2cd-7da51bd73be3"
        },
        "item": {
          "id": "0ed4d2b5-c932-4fd6-85aa-a6428fb30322",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48e34465-b5e2-44de-bfcc-a8c531607fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4faf9f7-0dc2-4200-ac79-ca5447218fe2",
        "cursor": {
          "ref": "401747ef-b25b-4c34-b6e1-c4a15034e116",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2a3e2634-8f06-445f-b257-ecc82a68a244"
        },
        "item": {
          "id": "d4faf9f7-0dc2-4200-ac79-ca5447218fe2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc5c2968-794d-4753-bda1-18000e51eddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d58932-c383-4a84-96b3-bf47de2c4e2a",
        "cursor": {
          "ref": "6e64b461-1e47-454a-a21d-2a1690e7313f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2baa2d8a-fc6b-4307-a867-0eaf1c8e8836"
        },
        "item": {
          "id": "63d58932-c383-4a84-96b3-bf47de2c4e2a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6faf0685-baba-46dd-ae71-6ede8fce8685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542fc8ad-b471-43f8-b0be-f7894370104c",
        "cursor": {
          "ref": "ec75cad5-b146-4e4e-bb07-ad4b440e69fc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "87a6158c-0751-4190-8598-242f2c999510"
        },
        "item": {
          "id": "542fc8ad-b471-43f8-b0be-f7894370104c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fbd80f8e-5f6f-4967-99ae-621a3578fce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1815ec30-7eff-4298-a757-887976d2051b",
        "cursor": {
          "ref": "eb3e5c0e-7146-43ee-805d-a7940540f52d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b597a5a1-8a04-450f-b943-3b24c6844169"
        },
        "item": {
          "id": "1815ec30-7eff-4298-a757-887976d2051b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a33afbad-c6f6-4065-9567-3b8abb1d61df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4b05af-79e0-476a-9b63-4006a8d78e49",
        "cursor": {
          "ref": "c8b1e2a8-acd2-4d52-8652-fa276736b263",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6832eec1-8fc9-4097-8cac-0615aa118087"
        },
        "item": {
          "id": "ea4b05af-79e0-476a-9b63-4006a8d78e49",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8834ce8d-938e-43bb-b667-cf97d4117c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf37e12-57f9-4ccd-b676-9de4bbc3caf3",
        "cursor": {
          "ref": "07fc0970-e555-4991-90f5-1e9cb97417bd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2435fdcf-7d93-4e13-864b-9e412db09537"
        },
        "item": {
          "id": "5bf37e12-57f9-4ccd-b676-9de4bbc3caf3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c432c53-c166-4bca-96d0-d004122b9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42df306e-e294-446d-8e30-d2c8de26c819",
        "cursor": {
          "ref": "01425e2b-4d33-4c30-915a-212792409928",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "00eabab8-2f3c-40bc-8c5c-850d81302e64"
        },
        "item": {
          "id": "42df306e-e294-446d-8e30-d2c8de26c819",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "699334cc-21f3-4542-b3e7-1c0aa28743bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daff5f60-b684-4e2b-82ff-57fe4dcbfd53",
        "cursor": {
          "ref": "0289f6d5-7611-45aa-bd77-4d44317e0c7a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ee7c5aa0-0009-422b-a92d-c22dadcfe1ba"
        },
        "item": {
          "id": "daff5f60-b684-4e2b-82ff-57fe4dcbfd53",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5784a096-9395-4e24-9144-7703e5358d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ea935a-417a-43b1-b36f-c2a450ec3c20",
        "cursor": {
          "ref": "1816742e-b825-45bd-a134-e86e87fdefc7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2af321fc-2148-4c70-a869-a3779de85e57"
        },
        "item": {
          "id": "e0ea935a-417a-43b1-b36f-c2a450ec3c20",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e462e70e-0332-4888-afda-da1a2bba6fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf2dab7-1ab4-4942-8d56-ee449a57c648",
        "cursor": {
          "ref": "0464f2c4-1cb7-4069-b3b6-f651fe8433d0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73af82c6-2141-443f-a809-1b3105d3c5f8"
        },
        "item": {
          "id": "5cf2dab7-1ab4-4942-8d56-ee449a57c648",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e6e117b8-b7b3-405e-a6d7-a52a50a8952a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78231dc-cf0f-422a-88ec-e70964ff971b",
        "cursor": {
          "ref": "59e3f260-d43e-4a88-ad22-9f57ee4f5869",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8daaa69-de2a-4f7e-9e14-d83187fc94dd"
        },
        "item": {
          "id": "e78231dc-cf0f-422a-88ec-e70964ff971b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c7328b5-ed3f-4f6a-8426-d50805b46b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce62794-db45-4c7c-8e85-a3f185b911de",
        "cursor": {
          "ref": "a485bb72-af46-4415-8333-20a6028d3c55",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7ada2405-71cd-4bd0-b864-01d5365636e4"
        },
        "item": {
          "id": "5ce62794-db45-4c7c-8e85-a3f185b911de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6e122550-b5d8-49fb-bed7-86678c0010ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b7d568-be24-4335-a25d-987efc9e95bc",
        "cursor": {
          "ref": "0da3ecb3-a6af-493a-96f8-9300b41ab3bf",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b11ee67b-af93-46f3-8e3d-e0b0990c24cb"
        },
        "item": {
          "id": "39b7d568-be24-4335-a25d-987efc9e95bc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b3713b17-fa76-4307-ac13-bbf5207b4639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eb3848-17a3-43be-95b1-325512978e3c",
        "cursor": {
          "ref": "b4d990fd-3c2b-4b21-bab2-fc13eb146247",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c2fafc2c-fbc8-4b1a-9d9c-9d0e4f54f60f"
        },
        "item": {
          "id": "c4eb3848-17a3-43be-95b1-325512978e3c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5436c481-e256-4729-91ca-41bf71a42f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa155040-6460-4b6d-9ac4-1c1bd849b4ab",
        "cursor": {
          "ref": "a7325ad9-cbd0-4973-b896-f8a8a59c879d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "925c83f3-48d0-49e8-b1f2-cca93218d613"
        },
        "item": {
          "id": "aa155040-6460-4b6d-9ac4-1c1bd849b4ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "286753ce-ca03-493b-8418-feb6be317eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf49a1e-046e-460e-a150-2091c43e7c9f",
        "cursor": {
          "ref": "15da32cd-7a1e-4302-933e-e9178566bee3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e90cbe6-c702-45d9-83f5-301608dd9936"
        },
        "item": {
          "id": "8bf49a1e-046e-460e-a150-2091c43e7c9f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "30020c58-0115-457b-a76b-e891ca191ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffdfa86-433e-4ee8-8cae-ef69d72f4149",
        "cursor": {
          "ref": "d202fdd7-0791-482c-9193-d6fa9d26729d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61cb6d3d-2ab5-4d92-bdeb-ee051b9900b8"
        },
        "item": {
          "id": "7ffdfa86-433e-4ee8-8cae-ef69d72f4149",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c7b273c-f27b-48f4-9b5c-cadc52b63a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a006dc0-6d72-4ef9-a77e-0eda36694523",
        "cursor": {
          "ref": "1747dc86-49c8-4052-adc8-b547b9d4aff6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "092349f7-9e20-49f2-b152-5effdbb881fd"
        },
        "item": {
          "id": "9a006dc0-6d72-4ef9-a77e-0eda36694523",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "559b74ca-daf2-4375-b9a5-bf1ad5b1a1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3fc5dc-0534-4cf3-bb6e-e3ff7ac51c4a",
        "cursor": {
          "ref": "7cf79356-516b-49f7-abc1-d4a692ccefe8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "77efe4ec-493a-4966-97f8-43f71fa6e6b8"
        },
        "item": {
          "id": "df3fc5dc-0534-4cf3-bb6e-e3ff7ac51c4a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d14f087-75f4-4e28-a0ff-dd0d9f8d2b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595c4edd-77dc-4a0a-b3ba-e8e4493450d8",
        "cursor": {
          "ref": "8424b16e-841d-4874-adaa-256858135a2b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8dad6b0e-4587-49cd-8f65-5e1302f37564"
        },
        "item": {
          "id": "595c4edd-77dc-4a0a-b3ba-e8e4493450d8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4ab1f9bb-205d-4ec9-95c2-84ca66cf0e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd432c1-5697-46b7-bb96-082ecf2f04d2",
        "cursor": {
          "ref": "5dc3960d-a492-4577-b45c-0b4a77518eb5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "607aaaf7-627f-46e0-8eaa-024fd32567e9"
        },
        "item": {
          "id": "ebd432c1-5697-46b7-bb96-082ecf2f04d2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d541538e-3a16-44b9-a4c8-09d4697fccea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67cd0d2-6f98-4558-a9dc-891a6bbb52a1",
        "cursor": {
          "ref": "c137b1d2-5a59-4283-a829-d3a6a1fb7721",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "21e100b1-aec4-484a-a5b9-564dfcea291d"
        },
        "item": {
          "id": "f67cd0d2-6f98-4558-a9dc-891a6bbb52a1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "81b722d2-7a10-42fb-a370-6bed6d2d030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba8ea7c-3303-4dd2-b763-a015173b4233",
        "cursor": {
          "ref": "233d58c8-14de-4c63-9370-279fc905b95e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "092370dd-8d0e-46ca-ad1b-b67e8f3ab7c6"
        },
        "item": {
          "id": "dba8ea7c-3303-4dd2-b763-a015173b4233",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8e9afa2b-6b5d-4463-bacf-12dc2aeedb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885ea02b-e9e2-4566-9bcf-c1c1f1c09e24",
        "cursor": {
          "ref": "b2a05891-672b-427b-9801-54cdebceb47f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7ad01e4e-3f48-48b2-b886-8bdc703f08c1"
        },
        "item": {
          "id": "885ea02b-e9e2-4566-9bcf-c1c1f1c09e24",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b1df77c1-891b-496e-8237-36744c53b49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc881e24-379b-4b34-9ad2-655fc4c80199",
        "cursor": {
          "ref": "e3a28b68-f654-40b7-b27b-6ee01a51560b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9d69930-5e32-43fa-a1a5-09fec448b877"
        },
        "item": {
          "id": "dc881e24-379b-4b34-9ad2-655fc4c80199",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7eb3df34-3fa0-494e-b900-e6d0e5bfdd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4c980f-ec02-4c87-b713-348fc2589b91",
        "cursor": {
          "ref": "bd117b5a-5637-49fd-94b7-ae3034669c31",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cd33d121-5a97-4a83-b2ab-1190968132f7"
        },
        "item": {
          "id": "8f4c980f-ec02-4c87-b713-348fc2589b91",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cdc63126-37b7-4f5e-9747-627eeeea0c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff80f925-5716-49fb-a732-39e8cf35cb05",
        "cursor": {
          "ref": "f00513ff-3fc5-4858-aa25-c70bc6ff610a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8af95ee3-fd9f-4b09-9792-b3ca3b3ac84f"
        },
        "item": {
          "id": "ff80f925-5716-49fb-a732-39e8cf35cb05",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf63ad14-7162-44b7-8506-fb5944f3dd48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ccefb9-0e27-4c26-809c-e494813e36e2",
        "cursor": {
          "ref": "bd66062c-2658-4e48-9b13-af4839627038",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aa3a2446-7dd4-45d4-9885-cd0a4b72019a"
        },
        "item": {
          "id": "28ccefb9-0e27-4c26-809c-e494813e36e2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "211702ee-d9fc-4636-98ed-226803749091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3a7e4b-5110-4ef9-aa0e-d2ba191cb776",
        "cursor": {
          "ref": "8717e925-2e7f-46bc-a3e5-5818808a5fe0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b5ec42b3-860a-4260-85ec-9fee68ea0a68"
        },
        "item": {
          "id": "9f3a7e4b-5110-4ef9-aa0e-d2ba191cb776",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8950c4af-d7af-4705-9933-6e5bd0b7abd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47322061-6c99-422b-9507-33d9d8e2f0a0",
        "cursor": {
          "ref": "e9179a4a-9e31-40cc-94eb-7712def5997d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4fc82e72-d7cf-4f11-8d96-2ede044b24b4"
        },
        "item": {
          "id": "47322061-6c99-422b-9507-33d9d8e2f0a0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0f9701f5-b511-49a4-8943-496e447d5e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9749e720-b42c-4aeb-b45c-5c7d1c76d6d6",
        "cursor": {
          "ref": "8ce473ac-2034-4dc3-b4d9-6484dead5a8e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7a0ab57c-ca73-4722-857d-cd18c1a800a6"
        },
        "item": {
          "id": "9749e720-b42c-4aeb-b45c-5c7d1c76d6d6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5e40a93b-2638-44f2-8ec8-3a28e0d8bc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de2385-9897-44b3-83ad-1706f99cf06b",
        "cursor": {
          "ref": "540733f2-7c30-46ec-bbff-0f411f2f135a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a8b1e7c9-7c8d-4305-8339-4d1ad1af07c8"
        },
        "item": {
          "id": "63de2385-9897-44b3-83ad-1706f99cf06b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6cfad1ba-ed24-4a19-977f-d8676d7edcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8a88ce-ebb2-40eb-98d7-dc9fa52d53d9",
        "cursor": {
          "ref": "33c34ecf-46b0-4e21-876e-3d4d60533712",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f5ca1cff-ebee-44b7-adcb-a5a58b0cb4f2"
        },
        "item": {
          "id": "fb8a88ce-ebb2-40eb-98d7-dc9fa52d53d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2b30d16a-f8c8-4ff4-9eb2-4289321eb4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a978e55a-7db5-46a4-891f-959fc6b220cc",
        "cursor": {
          "ref": "db00d6e4-5e5d-4ac3-b1ee-a9b1b6acc465",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7e69c1ee-29d1-4fd6-9f6a-c2bdf1a826aa"
        },
        "item": {
          "id": "a978e55a-7db5-46a4-891f-959fc6b220cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5e506a73-0476-4e6b-8eb6-7c00777338ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677670d2-c36c-439a-9ac0-69fd67a4744f",
        "cursor": {
          "ref": "361fddc1-e78b-49d7-be42-6b18053340df",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d9acbba3-bd67-4eb8-8874-c4a1226ff4d8"
        },
        "item": {
          "id": "677670d2-c36c-439a-9ac0-69fd67a4744f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "45950082-e824-46ea-ad39-591c698a1804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57e1a66-2f0f-4def-81ab-fa5b3ac7f281",
        "cursor": {
          "ref": "8dba9870-ddf0-4efb-a4e0-a4befda6d9f8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7609b0d7-8d41-4ec0-939a-0c55cf26a0cf"
        },
        "item": {
          "id": "c57e1a66-2f0f-4def-81ab-fa5b3ac7f281",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc6ced89-10ee-4404-9379-810a9ae94c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da72aea0-8e2c-4ec9-82d5-a532ecc40625",
        "cursor": {
          "ref": "934e5ae4-0ac8-4c60-bc16-37523b70377d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c60eb6d6-235c-483b-a0d2-4466c013f393"
        },
        "item": {
          "id": "da72aea0-8e2c-4ec9-82d5-a532ecc40625",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9590a3a5-4cd3-43ef-a157-2da5a0c077dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ae4ffb-8c7d-4745-8de7-8bbe63cef746",
        "cursor": {
          "ref": "5680f9b1-1405-4432-9d2d-603ae2069871",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ddc25b34-08ca-485c-b435-0e05d0a0b741"
        },
        "item": {
          "id": "90ae4ffb-8c7d-4745-8de7-8bbe63cef746",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "edeb859f-f249-4f9b-ac08-6cea101db046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6956d67-08df-4b93-b815-5ea7714b9255",
        "cursor": {
          "ref": "80d99860-f810-4221-b18d-a5c0cf1cff20",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ff231a24-dcd8-4e0d-8dc8-e9f36d24113c"
        },
        "item": {
          "id": "d6956d67-08df-4b93-b815-5ea7714b9255",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1b405365-a4c4-46df-898c-f9cc2d51c8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7908bf2a-cd4e-4a33-8964-178c89449d50",
        "cursor": {
          "ref": "6c3b47e0-6d96-4891-821a-64b0c2d99293",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "27db73bd-8229-423f-9e2a-29f2f84e2e8b"
        },
        "item": {
          "id": "7908bf2a-cd4e-4a33-8964-178c89449d50",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "42ad3898-f9ae-417e-a65c-f940e173f149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb7aa1a-2a52-4c9c-8d32-25560b2b3dfc",
        "cursor": {
          "ref": "552d6aae-fc07-4df4-8a1a-1f94cabffc47",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d654d052-a816-4bde-b86a-16d7726bfddd"
        },
        "item": {
          "id": "fbb7aa1a-2a52-4c9c-8d32-25560b2b3dfc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67bdb30f-7b77-4ab3-b0ce-cef2390c41e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b72422-eebd-42ce-9b7a-66d68d7c7e21",
        "cursor": {
          "ref": "d469deec-d4f7-4149-ae17-cbb34c95da77",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "88ae6042-8250-424e-b182-08f5b2a80273"
        },
        "item": {
          "id": "38b72422-eebd-42ce-9b7a-66d68d7c7e21",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cdd50942-4e19-49fc-9dde-9e86bb9a449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c0a4af-da33-4a0e-bcdd-5bb381811ecf",
        "cursor": {
          "ref": "2324eb71-a840-4774-9156-f6ab70a2131e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0cbb4e17-841f-4601-b336-a69f31dcbe22"
        },
        "item": {
          "id": "74c0a4af-da33-4a0e-bcdd-5bb381811ecf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "61fee24d-780c-413f-b9de-a40c5f628ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2136de57-fcd8-4b8e-bbfc-d7afa46a28a1",
        "cursor": {
          "ref": "4483dac3-ad16-477f-aa80-e8dd118b901f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "34023acd-2a9b-4c15-b731-c65216db5762"
        },
        "item": {
          "id": "2136de57-fcd8-4b8e-bbfc-d7afa46a28a1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "40fd442a-bcc4-4850-ae00-3ca933e059f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4f4df-fa13-4650-b504-73569fbaade3",
        "cursor": {
          "ref": "3652351e-bcb3-46f2-8ecc-3fd2cd3e8439",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56b93a18-40ff-44a7-a524-267e49cbda8d"
        },
        "item": {
          "id": "76f4f4df-fa13-4650-b504-73569fbaade3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "74fa1d84-f622-4f7b-8f44-5a213ed53954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e69775a-e063-4ae6-a6ab-52c5a7fd8baa",
        "cursor": {
          "ref": "c26613e7-40e1-4bab-993f-47ec14af3c03",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a72c7f56-5607-45fb-b086-392e6e2f536d"
        },
        "item": {
          "id": "8e69775a-e063-4ae6-a6ab-52c5a7fd8baa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "be67cb40-0304-4fa2-817d-6084f6399e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66ce221-1fb9-4a1d-a219-21cc6e1ea642",
        "cursor": {
          "ref": "df530447-dffd-415f-81b5-5a1fa22dfe25",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a9565457-d20b-41bc-ba09-a60931ae7310"
        },
        "item": {
          "id": "d66ce221-1fb9-4a1d-a219-21cc6e1ea642",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "91ef817c-9215-4a73-b2bd-22951408c944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f068bc22-06d1-4c46-880e-e5bec0a05703",
        "cursor": {
          "ref": "c9f255af-a23d-4827-b6e8-0fd454040ccf",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eb9a17f5-b5ac-43ea-8474-2e830d22e16b"
        },
        "item": {
          "id": "f068bc22-06d1-4c46-880e-e5bec0a05703",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "24f138d9-e3e1-4df1-9b4d-77c324c4b024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8c376-6955-4912-882e-9da65da67a82",
        "cursor": {
          "ref": "f2a78ef0-06ab-4c0a-af47-2d7b13cffffe",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ae90e6be-ed9e-4f2b-b539-f5c8dc2db4b5"
        },
        "item": {
          "id": "d2b8c376-6955-4912-882e-9da65da67a82",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b5da492c-bea5-48a4-b678-844d778a0741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bb38ba-dba8-4bda-bb1d-a2e1490ed9d1",
        "cursor": {
          "ref": "f8343ba9-7613-43ed-a52a-08e9868e638e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6ee13674-7347-494c-ba17-0ef369d0cd12"
        },
        "item": {
          "id": "40bb38ba-dba8-4bda-bb1d-a2e1490ed9d1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "838c352a-3836-45ef-935c-4e9a70ef76ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca323d8-1be2-440d-ad97-b423c9982cd1",
        "cursor": {
          "ref": "1b4fb5af-df90-4f14-829e-72a70497ac9d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e47aba8-bd0f-4966-b340-e3413b83e6ed"
        },
        "item": {
          "id": "8ca323d8-1be2-440d-ad97-b423c9982cd1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "760ec2e4-45a2-46ba-8705-b39d3483b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc59ac2-135e-4bb9-9de5-0ef32ab69f7a",
        "cursor": {
          "ref": "999cbc24-affe-45d2-84f8-119408eb6381",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dfea87a7-59f5-4182-a3c9-d45b6fbed88c"
        },
        "item": {
          "id": "efc59ac2-135e-4bb9-9de5-0ef32ab69f7a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3772a700-c568-4ce1-81fd-67acb6b912d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abfb3c4-70aa-469d-ae2b-35905d6d6ff4",
        "cursor": {
          "ref": "28c0093e-0c58-457b-8a86-09ad408a96ef",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9476c662-df04-41db-8575-74b6b12cad9e"
        },
        "item": {
          "id": "7abfb3c4-70aa-469d-ae2b-35905d6d6ff4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bfeb283c-b67f-4b6f-bd69-037a8a684e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0acac-10b3-47a1-a674-c8dbe6efb65d",
        "cursor": {
          "ref": "396aef3a-02e7-419a-8358-36d3800123a0",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3acdf877-423e-4791-92c0-d434372239c0"
        },
        "item": {
          "id": "6eb0acac-10b3-47a1-a674-c8dbe6efb65d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "410ead0f-a9e7-493f-a6df-a6db439a7b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4ff5ba-0222-4fac-8652-90dcf1947bac",
        "cursor": {
          "ref": "d3ab705c-35e2-4ee0-bf95-89cd8a85afee",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e68ff337-8ae3-48e9-baa0-f6e217d57c76"
        },
        "item": {
          "id": "fb4ff5ba-0222-4fac-8652-90dcf1947bac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f00f6417-4900-4166-b40d-dccda593a45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b37a95-d194-4277-8e63-304d08d4ae46",
        "cursor": {
          "ref": "968cff5a-c72a-4b0d-9daf-4b13c0a2b39c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a3c2e3fa-a826-4372-aec6-f005d933463f"
        },
        "item": {
          "id": "37b37a95-d194-4277-8e63-304d08d4ae46",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "32e3c50d-12cd-4a02-b0c1-77b7ca00d8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33cafdb-fe09-40a6-b7c8-169ed2af59eb",
        "cursor": {
          "ref": "2a0f4530-919f-4bdd-bd1d-d32be1297a78",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ee4f5baf-3ad0-4158-9eb9-24356e30732f"
        },
        "item": {
          "id": "c33cafdb-fe09-40a6-b7c8-169ed2af59eb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "19a3b1b7-569d-4731-afcc-aa4d7002c2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad4922-03d7-4064-ba25-5467b31d0c03",
        "cursor": {
          "ref": "2bd175fa-2692-4458-90e6-82c98e505496",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "405b16fd-b0dc-46d0-ba60-790a30fc2c47"
        },
        "item": {
          "id": "1dad4922-03d7-4064-ba25-5467b31d0c03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "79ad9b62-45fb-41ab-b3ab-66c8a44296ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf14f0-e8e1-42c7-886a-e62c87c002b2",
        "cursor": {
          "ref": "915cc814-95a0-48fe-b512-7e57dfddccd6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "991f90f2-f5aa-4a1a-8c0f-25f644710fc2"
        },
        "item": {
          "id": "5cbf14f0-e8e1-42c7-886a-e62c87c002b2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "58416414-4688-4991-95d6-295036d3decd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78a1d6-0d2e-4d45-8bbc-f3bf46457efb",
        "cursor": {
          "ref": "5a217530-6c87-46ee-8431-fd43166fcc0c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "39cb6462-8b73-4e21-8c05-db1ae10350b6"
        },
        "item": {
          "id": "ca78a1d6-0d2e-4d45-8bbc-f3bf46457efb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f956258a-1777-4b16-a418-369ba6c248c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b86ec-e9a6-48c0-987f-0d012ff8c5de",
        "cursor": {
          "ref": "409247af-4254-4beb-9b65-2bede32c44e4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "20583c87-8686-430c-8851-4512c0d736d8"
        },
        "item": {
          "id": "d67b86ec-e9a6-48c0-987f-0d012ff8c5de",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "173887b0-301c-439f-a1c8-d5c962e225fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff800a8-0c26-446f-8d88-6186387efcc6",
        "cursor": {
          "ref": "471cb4be-cd75-44ba-92d6-8ade8c8c4aed",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "af547fdf-99b3-4964-9755-1082f873ef19"
        },
        "item": {
          "id": "cff800a8-0c26-446f-8d88-6186387efcc6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "29cb014a-c85c-4f15-8954-2c8760f2d808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a530b99b-d7e2-440e-ba07-e246be9584c6",
        "cursor": {
          "ref": "98f7589b-285f-4981-b23e-88eb8f7d313b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "388d864a-59b7-4f49-9190-48f57b951f91"
        },
        "item": {
          "id": "a530b99b-d7e2-440e-ba07-e246be9584c6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "889a6446-99e5-4766-9ab5-bae4c46f7636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1527033e-03ee-43ff-9aea-425a844eb891",
        "cursor": {
          "ref": "28c38282-4264-4102-8b01-09228779872d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "085ceb0a-984b-4691-9d8d-dac49e5e927a"
        },
        "item": {
          "id": "1527033e-03ee-43ff-9aea-425a844eb891",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5dca04b4-8b2d-40df-b964-c1d22bab628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7599c45-f4a4-4206-9bf8-6c026852472b",
        "cursor": {
          "ref": "36cc784d-da4a-41da-ab4a-354883c92d9b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9774e56c-5d26-4c69-8a6c-c18b8bd69d1a"
        },
        "item": {
          "id": "d7599c45-f4a4-4206-9bf8-6c026852472b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d3127273-29a3-4e44-88a5-4b182f1a1b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b445a1bc-5c1d-4579-8c5c-62f6a6698d53",
        "cursor": {
          "ref": "bf7f2803-8d9c-4d0d-afce-df3ac5fd1d7a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5a5449b3-bf63-4b50-93b6-b2d36a6963f8"
        },
        "item": {
          "id": "b445a1bc-5c1d-4579-8c5c-62f6a6698d53",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "60c8fc53-f26b-481a-96f5-9fa8f6ecc86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5291be-f147-498b-8476-824e4b654908",
        "cursor": {
          "ref": "3f05580d-f90f-4a58-b781-b3393880bc69",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5f681c23-7803-423c-bcb9-585db0f09178"
        },
        "item": {
          "id": "0d5291be-f147-498b-8476-824e4b654908",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c3c1c01c-bc25-4a64-b1a4-2975899ee998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced9135e-38e4-4d26-9057-51a63d8e0e66",
        "cursor": {
          "ref": "c61f0017-f25d-42a6-a0c8-5d94e069c2a1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "578eac5d-7a10-4b39-8de1-5accd8b39abc"
        },
        "item": {
          "id": "ced9135e-38e4-4d26-9057-51a63d8e0e66",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "09a8fcd3-f283-453c-aafa-3c68006597b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498af9ed-9875-47d0-b53b-e1e49131aa41",
        "cursor": {
          "ref": "629c99ca-8352-4048-8899-5a567958a448",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9376cf2f-a987-43d0-9761-4bb89ae09579"
        },
        "item": {
          "id": "498af9ed-9875-47d0-b53b-e1e49131aa41",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "34fc13d4-361e-4de8-9e9d-81e74950a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a43477-5a70-416c-955f-4e02eebf94ca",
        "cursor": {
          "ref": "e0c0d54d-ba17-41c8-8034-0692362993d8",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "daec5a9e-bbc2-4fe7-88c5-6e8d3b9c5f1b"
        },
        "item": {
          "id": "57a43477-5a70-416c-955f-4e02eebf94ca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8235140b-56e2-4ecc-a93b-0a78fe7074f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7901c625-54e6-4926-8260-0b9790f8673f",
        "cursor": {
          "ref": "6152917f-c09d-4bea-9b6b-2f4fd57d17b1",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0aacda96-5e5c-4bdd-af15-2a90b7b62346"
        },
        "item": {
          "id": "7901c625-54e6-4926-8260-0b9790f8673f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0db68874-9a5c-4bf6-ae58-93957b643a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1ae320-0f4a-4742-8faa-3dc861f53c62",
        "cursor": {
          "ref": "2be1fbf0-2432-4d27-82f4-d5445099265c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "60fd4592-f40a-44f0-8130-f7ac4dfd0f9f"
        },
        "item": {
          "id": "4f1ae320-0f4a-4742-8faa-3dc861f53c62",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0b3b0f1-0614-408e-a558-bf294b89cb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ed6331-b194-4c63-82be-b2aa79e0351a",
        "cursor": {
          "ref": "cb027127-5e01-490d-bf02-b6337b17b477",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2504f8f7-eb0b-43a6-b6d8-6a9dc7b16ea7"
        },
        "item": {
          "id": "76ed6331-b194-4c63-82be-b2aa79e0351a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a9cea972-6e20-497e-8f7d-049cc070380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a100003-8d07-4383-852b-5354266ca8e1",
        "cursor": {
          "ref": "38bd015f-2b6b-45b5-8e1d-599bf92f1cd5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8c831e73-1380-44fc-b78a-f488b85037b2"
        },
        "item": {
          "id": "0a100003-8d07-4383-852b-5354266ca8e1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eed11492-a072-4e5a-bcfc-3cc14bc95b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52a85c-91d5-4459-9001-00aceda22971",
        "cursor": {
          "ref": "decb94ac-6a6e-4370-bcc0-fbe6a3feaccf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9e974fe2-afed-4274-9d8c-eb1e75c61790"
        },
        "item": {
          "id": "ca52a85c-91d5-4459-9001-00aceda22971",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2cd7fdaa-7c89-4489-a365-9aae44945656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5efc85-e426-4f2a-bbea-946e79c984cd",
        "cursor": {
          "ref": "0309679f-e950-4d0d-bef0-f54a173eaac4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "98ac3dc5-c6ff-4704-8ca3-3112d466ab07"
        },
        "item": {
          "id": "bc5efc85-e426-4f2a-bbea-946e79c984cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "375993ba-fb9c-4a7d-a48f-432003180c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b767828b-1c1e-42a9-a466-fe0fc1f09117",
        "cursor": {
          "ref": "27a66aec-8c1a-4439-9ebb-59eb4d700db8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6979a3b2-1fed-4a03-bdc6-9f196bd5ab74"
        },
        "item": {
          "id": "b767828b-1c1e-42a9-a466-fe0fc1f09117",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b036c805-ec57-4a91-8dc7-af82350f62ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2422fa1e-63ee-4f09-aa35-64fb6ed63dc2",
        "cursor": {
          "ref": "95a6449e-a07b-4b9a-ad37-3e265f33c462",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d73c38ec-b08d-4215-adbb-94f57f85a316"
        },
        "item": {
          "id": "2422fa1e-63ee-4f09-aa35-64fb6ed63dc2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a75ecf8c-ad13-431d-b649-bd1567eb8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d80d7d-43fe-45dc-8b54-1c4addc3e6f0",
        "cursor": {
          "ref": "2d5ac266-1d18-49aa-adc1-59a3a7a1da0f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "07eef42e-e275-4290-b774-d1415ebf0a90"
        },
        "item": {
          "id": "37d80d7d-43fe-45dc-8b54-1c4addc3e6f0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8f315667-dd5b-413c-8091-aecbfc9515cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5094b8-f7fb-401f-8e0f-2553dcfbebaf",
        "cursor": {
          "ref": "2b5c9239-ec8f-4156-80a0-2a108c33d6fb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fc6e321f-367a-420e-be8b-9567117f159a"
        },
        "item": {
          "id": "6a5094b8-f7fb-401f-8e0f-2553dcfbebaf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "252f7133-de2e-44ac-a0cd-ec3feb00f609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c31a70-b755-42e7-ae8a-c7d9e8d600ca",
        "cursor": {
          "ref": "cb0c321e-75da-43e4-81c4-7ed57b5771fa",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1b1825a2-e143-4b41-89e7-d803c926d921"
        },
        "item": {
          "id": "97c31a70-b755-42e7-ae8a-c7d9e8d600ca",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8b8967a3-3556-408a-8f57-928556b71603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6c6d2e-e3bc-4b0b-8efb-c6c0ee503248",
        "cursor": {
          "ref": "9bbb90c5-d52c-44fd-a71c-ec82a634be23",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f6ed08f-cf18-4029-8925-4fcbe50beb32"
        },
        "item": {
          "id": "bc6c6d2e-e3bc-4b0b-8efb-c6c0ee503248",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5c43c879-c014-4601-b06d-08adf8ef97c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c53dda-e3b9-4e6b-93b2-5e70fbc9ccd3",
        "cursor": {
          "ref": "622822b7-7da4-467f-85cf-d10b380710c0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "67336c92-e003-425e-95b0-c6a1497cf511"
        },
        "item": {
          "id": "a0c53dda-e3b9-4e6b-93b2-5e70fbc9ccd3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b2b3f2a6-5605-4b72-bf19-dce9dbadb2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffbb55a-360e-497d-ab53-5930c9f8c0cc",
        "cursor": {
          "ref": "479f164e-58e7-45b9-b3bc-14ac75d596d1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91ba49cb-a2e5-44fd-9c97-bb5cc93a94ba"
        },
        "item": {
          "id": "9ffbb55a-360e-497d-ab53-5930c9f8c0cc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1e703805-370c-43ac-a445-5362c7310839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb80ecda-c22f-476c-8eab-5fecb5a5a8f4",
        "cursor": {
          "ref": "19e50c26-1d29-4f19-bbdd-cbab2c63f96e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e30f7f7-1910-4869-b733-b6e075e0d622"
        },
        "item": {
          "id": "cb80ecda-c22f-476c-8eab-5fecb5a5a8f4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "12e1a9f7-3102-47b2-af89-897c809c0d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7984b1-0f0d-4e0a-a72e-08b45881a074",
        "cursor": {
          "ref": "4f2732b2-eaad-49c1-948a-d7c68a5005fa",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "661cf9df-7f09-4178-8a32-3d69dafe1903"
        },
        "item": {
          "id": "df7984b1-0f0d-4e0a-a72e-08b45881a074",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "77ad4265-20b3-433d-a288-bc6f11a81033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5b1670-92f6-4a2d-aab6-e63c8eb1dcda",
        "cursor": {
          "ref": "34d6778d-234d-4cd1-bce5-037b193e4037",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c4468e9-a17e-411c-96cf-3a4f53a3b033"
        },
        "item": {
          "id": "8f5b1670-92f6-4a2d-aab6-e63c8eb1dcda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5901a0fa-0c3f-412a-a58f-3e23c25e796b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120334a0-9ae3-4fe5-a478-4015fbccae01",
        "cursor": {
          "ref": "6aabe2bb-e51e-416e-a30e-5f4097944b80",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d0d5c2fa-fc19-4813-b894-f6d4d05b3490"
        },
        "item": {
          "id": "120334a0-9ae3-4fe5-a478-4015fbccae01",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d627c1b5-df25-4f51-b07a-0c1ed874c07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c53295-54cb-451f-99a9-0ecaf0c4a01f",
        "cursor": {
          "ref": "e8db3a40-8ab2-4966-8210-3d99381662a3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "052256df-571f-4afe-bf47-bf433f1b666a"
        },
        "item": {
          "id": "07c53295-54cb-451f-99a9-0ecaf0c4a01f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5b7a1392-cda8-42e6-993c-0592c71b6c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128af3c1-dbce-4240-a2be-27ce9cb4a0bb",
        "cursor": {
          "ref": "177ec4ff-dd37-4895-9a19-185c499fc4c8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "91dd017a-275f-4c7a-9655-e934ec67d14e"
        },
        "item": {
          "id": "128af3c1-dbce-4240-a2be-27ce9cb4a0bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a3f43b0e-e099-42c1-8df0-aee876eed7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70f32d-ba96-43ea-b31a-2320a6ba5c6e",
        "cursor": {
          "ref": "61227dfa-60e6-46a5-afa9-1e4190200af3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "74226e3a-ab14-4680-bb21-ad682934b82b"
        },
        "item": {
          "id": "6f70f32d-ba96-43ea-b31a-2320a6ba5c6e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3e37ce90-bd49-4616-b587-a4e6cb8c9931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d5f491-a523-49f1-95c4-43eafe1006c1",
        "cursor": {
          "ref": "85bf94a1-a966-4976-b971-f198ec0a8c5e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1081e897-f1a6-4586-be0e-41e73ed30aae"
        },
        "item": {
          "id": "25d5f491-a523-49f1-95c4-43eafe1006c1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1e0b577c-7e27-4db8-9c3d-5007e15fb1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c650d-a849-44ff-89fe-c280131496ec",
        "cursor": {
          "ref": "1bc4b374-98c8-4d70-a494-3df457f51cb5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a946d18f-f2c7-433c-9412-b8b260b39389"
        },
        "item": {
          "id": "9c0c650d-a849-44ff-89fe-c280131496ec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "90cc41ab-1fce-456e-92ab-6ab856b82c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4730acbe-aa4f-490c-90eb-c0a91c71d13f",
        "cursor": {
          "ref": "d3ee0634-abf7-4383-b29b-f6a9755ea54e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5628e5a3-5cfd-4986-9a82-ace1bc748180"
        },
        "item": {
          "id": "4730acbe-aa4f-490c-90eb-c0a91c71d13f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b5a96704-ca42-44fd-954e-43dbc4627163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823a328b-9eec-469e-b627-f69943489f13",
        "cursor": {
          "ref": "a57d1e65-af3e-4ae5-9751-096eeb04a2ba",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b6069df-5f67-49c5-8986-1a9530b4bbb3"
        },
        "item": {
          "id": "823a328b-9eec-469e-b627-f69943489f13",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5f0413e3-50fe-4275-83e0-029855429cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a2cdb3-5f7c-4336-9773-9534c484c884",
        "cursor": {
          "ref": "1b0a1f34-c57d-4f55-a3c7-8451a2b65e0c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "35726abb-99bd-4292-9a26-05a6d2ab6c31"
        },
        "item": {
          "id": "21a2cdb3-5f7c-4336-9773-9534c484c884",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e1a0c8ca-baeb-42cd-99cb-91eba90ecf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3347e707-8e26-4cec-876f-7723d1834a48",
        "cursor": {
          "ref": "686bd285-6eb5-4df1-ab9e-e09390af60a5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6523bb71-d102-4007-b847-936737b0e3fb"
        },
        "item": {
          "id": "3347e707-8e26-4cec-876f-7723d1834a48",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aafb1e5e-61fd-459a-b783-df42b2edb702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e18f0-5f16-4d03-88d4-22d779fe354a",
        "cursor": {
          "ref": "1b0d8531-58f4-42b5-a58b-e8394d4f382e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "176bec24-2edd-4aeb-95f9-b99bf2aae1ec"
        },
        "item": {
          "id": "c80e18f0-5f16-4d03-88d4-22d779fe354a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "154bb930-7836-4ed8-b2f3-692a11f3d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ce76c-4327-47e5-8e02-9ed922bb979d",
        "cursor": {
          "ref": "591b631d-ea9e-4530-91a7-00c50f9bba54",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b64769ac-6fe1-430b-922e-8344e0712003"
        },
        "item": {
          "id": "8c7ce76c-4327-47e5-8e02-9ed922bb979d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c1de42d-34a5-49c7-9db6-707555f49313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dd2c39-2572-463f-8a88-18b54948195c",
        "cursor": {
          "ref": "f2864542-7383-466e-b31e-ac31c702c49e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4f3208ee-4515-4917-b8a3-90db41735bb8"
        },
        "item": {
          "id": "c7dd2c39-2572-463f-8a88-18b54948195c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "945af18e-6670-4df4-98c5-2ca8e0924d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18530e66-87bf-477f-9915-f1fce72dead5",
        "cursor": {
          "ref": "e1628056-f570-4130-aebb-cdc95ab0face",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0b014292-7aaa-44d0-b5c1-42305bbce3af"
        },
        "item": {
          "id": "18530e66-87bf-477f-9915-f1fce72dead5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eda2d47c-b278-4731-a3d4-c91918cb65c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015c7237-caa7-4891-8b75-95aa9a8ea301",
        "cursor": {
          "ref": "2ebfe4c0-af28-4ec6-b2de-77648163c043",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3ca964c1-4768-479c-ab2d-cc974c0e9d10"
        },
        "item": {
          "id": "015c7237-caa7-4891-8b75-95aa9a8ea301",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "183cf060-df65-4088-b95f-12c5b1fc8e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ddaa3d-5d98-4b3a-8e94-670f77b88d67",
        "cursor": {
          "ref": "b000b48e-4f1c-490f-985f-a36850a01a80",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "40e0fe25-7fa2-4f49-8993-98aced110438"
        },
        "item": {
          "id": "d1ddaa3d-5d98-4b3a-8e94-670f77b88d67",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fbb2acb-dd14-4b69-bb98-d975362eef59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f20403b-b5c6-4406-b701-67fbc0036118",
        "cursor": {
          "ref": "c8211c26-6048-475f-adfd-50d6e913b748",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3eea673f-a55e-4bc1-87d6-b7daa497d97b"
        },
        "item": {
          "id": "7f20403b-b5c6-4406-b701-67fbc0036118",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "448887fe-dbab-4a0d-bb07-d64f34a92491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3559eecb-b15b-4a0a-8460-ab6eab97f1e6",
        "cursor": {
          "ref": "0c435560-a1dc-47ff-b5ec-5fcd29822a4e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "53c28134-6c95-41dc-a4aa-61b0a9c3f5e9"
        },
        "item": {
          "id": "3559eecb-b15b-4a0a-8460-ab6eab97f1e6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d36f80f4-3d03-4ba6-a0e5-b7d1cb33e8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c1e5a6-a72a-4922-b6d0-ed62766b0d51",
        "cursor": {
          "ref": "c43a5943-3ee4-4808-9a9f-4cef5482ce42",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "107c115f-5418-4028-b1a8-8a22389f334d"
        },
        "item": {
          "id": "05c1e5a6-a72a-4922-b6d0-ed62766b0d51",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "52aa5caf-566a-4bbb-8e19-b1e861871d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9d1940-a6c4-4ce4-a482-5c7ef660eac6",
        "cursor": {
          "ref": "b0f0329e-1a04-4890-9cb3-91a351d1ec66",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "47473133-09d0-4d69-a4d6-21e1f83653be"
        },
        "item": {
          "id": "8f9d1940-a6c4-4ce4-a482-5c7ef660eac6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "416451e2-97a3-4bbd-9a79-844d3748b5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4255c6-b6a6-4924-87f2-042b07e467e9",
        "cursor": {
          "ref": "62a94749-8dfb-4d28-bad3-f04abc81e6fc",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "386672ab-5752-4a4b-bfd0-0aafb94d7e67"
        },
        "item": {
          "id": "ab4255c6-b6a6-4924-87f2-042b07e467e9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "66bd1637-e9ad-476c-bd0b-431943443b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03425ca-dd29-4e7f-af3d-cc874921227d",
        "cursor": {
          "ref": "1f2dce91-cfc6-4d3c-ab12-e55a3a0d0108",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d6aad0f6-0778-4036-a655-ed256ec4db80"
        },
        "item": {
          "id": "e03425ca-dd29-4e7f-af3d-cc874921227d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "51a8c90a-a9bb-4039-9340-4c7acbf104a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb8ae1-a7b6-4689-be47-bb34d597a772",
        "cursor": {
          "ref": "cea59ed1-66f1-42b0-87a9-f50412b8fd62",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "82834b3f-8aa9-4c82-a47b-d2d99f87037b"
        },
        "item": {
          "id": "4eeb8ae1-a7b6-4689-be47-bb34d597a772",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1ac4eabe-739d-4202-880b-9188356486a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e4796d-36e0-4e19-a38d-fd3639ffa0c2",
        "cursor": {
          "ref": "dd6cf678-72ec-48d5-9681-f40d0db72a97",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04d9e741-360d-4db6-81b8-9518093e4199"
        },
        "item": {
          "id": "02e4796d-36e0-4e19-a38d-fd3639ffa0c2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd282337-ad7a-42da-aa43-14b917e07710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf21ea7b-d019-4f63-b6ec-53eea2db3a9b",
        "cursor": {
          "ref": "5d79ca57-145e-4fa2-bfa1-1bec11f65e86",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fe9783a3-10e1-412d-b0c7-ca0bca807698"
        },
        "item": {
          "id": "bf21ea7b-d019-4f63-b6ec-53eea2db3a9b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb845be2-e252-440c-9dec-4a54812ed045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d63076-61ad-411c-87ff-cff184184665",
        "cursor": {
          "ref": "f21d7755-c122-43c9-9c9e-1c370971b595",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1d01ecc7-3bc3-4092-aad0-8c456b4d678b"
        },
        "item": {
          "id": "89d63076-61ad-411c-87ff-cff184184665",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0cb27c0b-15bc-47ad-8f44-372ccac5388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f3a092-7a13-4f16-9909-d0e54f9fa792",
        "cursor": {
          "ref": "e08f5bed-fc1c-4c8a-8c24-c781d4513eab",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "667508e0-963b-4388-9f16-63b19f21aa14"
        },
        "item": {
          "id": "03f3a092-7a13-4f16-9909-d0e54f9fa792",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0fee7d70-b5d1-4650-b5a2-5537e67f903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65638e75-8529-462a-b5a0-626bcfbb63e0",
        "cursor": {
          "ref": "96073271-8eee-439a-8da0-abdf22d6dce8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a905b6e3-75ac-41b9-b3ac-3e440419cce1"
        },
        "item": {
          "id": "65638e75-8529-462a-b5a0-626bcfbb63e0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "968f370a-6a34-4928-9335-e44e43be9662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf57612-807e-4e81-95ad-869044bc8941",
        "cursor": {
          "ref": "d1adb5dc-b911-420c-8e60-9dc3ce1ab628",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dff7004f-7e10-42ac-bc8a-fb580f2f5e15"
        },
        "item": {
          "id": "0cf57612-807e-4e81-95ad-869044bc8941",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef3f99d3-e700-4058-8f4a-4f5e4ab961e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f945b-8b35-4959-9da4-9c7582aa41ed",
        "cursor": {
          "ref": "6fe51e94-33b4-40ba-b670-dd36e89c0135",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8cca5c9b-3f46-42a5-ab25-2dff20c2e3c8"
        },
        "item": {
          "id": "b27f945b-8b35-4959-9da4-9c7582aa41ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "349d82c4-df6d-4967-a1e9-3717c8dd6d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b7017-77ec-4000-a20d-5a407fc97b00",
        "cursor": {
          "ref": "0dc00090-03fa-4f81-a9fd-199f4bc3dbc5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "af18e655-0d80-433f-84ab-eff6749b2187"
        },
        "item": {
          "id": "736b7017-77ec-4000-a20d-5a407fc97b00",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39804a3a-9f65-4298-99f7-1170d9b2bbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace7842-8335-476c-892e-e2c2a8c24a06",
        "cursor": {
          "ref": "19d44518-f76d-42fb-bb66-a0b6d38a0410",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "95f659ea-3019-4b7c-aad6-207c59a37a86"
        },
        "item": {
          "id": "5ace7842-8335-476c-892e-e2c2a8c24a06",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "440bd83e-2072-44c0-92cf-2daebd35e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3c5e2-ab18-4ff7-ae7f-d279c8b44237",
        "cursor": {
          "ref": "905425d7-a9a9-45dc-9d25-b1cf0597766d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "45f3f49c-6510-493c-a74c-7f7bc1a76e5b"
        },
        "item": {
          "id": "3ea3c5e2-ab18-4ff7-ae7f-d279c8b44237",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c11d9fbd-a6a7-41c1-8b06-b2d003439ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d036454b-652f-42f1-ad79-67cb99a1855b",
        "cursor": {
          "ref": "ea378138-5455-427f-8858-35a5af374f9b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f8fc517d-3369-4fb1-9474-8c20c35a705f"
        },
        "item": {
          "id": "d036454b-652f-42f1-ad79-67cb99a1855b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "27a87ab6-7efa-4c20-8239-0e2697a8626f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43441004-275c-4553-9025-9574e2b2efb6",
        "cursor": {
          "ref": "22a05569-89d3-4337-8d3b-07c2120b5160",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9cf46d81-9649-47c1-bf8b-84bfc6503772"
        },
        "item": {
          "id": "43441004-275c-4553-9025-9574e2b2efb6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff5a1dcf-02db-408a-b130-6cacf9e7b28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbc9417-7de8-4a12-bccf-c58ee0b9df12",
        "cursor": {
          "ref": "13645b3e-1e25-47fc-960e-b28121fab92f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eb48c888-7347-4e7f-890e-142d279caeb9"
        },
        "item": {
          "id": "adbc9417-7de8-4a12-bccf-c58ee0b9df12",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c12bfbf9-c1c9-4f7c-bcae-48b319a91505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404fc669-d62a-4ec6-8476-7f708a7a21a3",
        "cursor": {
          "ref": "cd7330f4-b0b4-4741-8fb1-cc1b96173e97",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1c8f1d18-8152-4a17-9cf0-32f477f2a540"
        },
        "item": {
          "id": "404fc669-d62a-4ec6-8476-7f708a7a21a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "80cac724-8119-45e2-8127-63dd25a130cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70863ad2-bf10-477f-8df6-65913bfad38e",
        "cursor": {
          "ref": "c94bc4bd-fc6c-4126-8d2b-818f7d77162e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f254ac49-6478-44fc-b37a-2b93257d148a"
        },
        "item": {
          "id": "70863ad2-bf10-477f-8df6-65913bfad38e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "97656ea9-758d-476a-8d76-a4b6dd0f0f0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f33380-718d-4d33-8549-7c35aa01aff4",
        "cursor": {
          "ref": "36a7b205-0124-409b-a5d4-d6b98be12f9c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "21255adb-9e40-4e2e-8cd0-47184466184d"
        },
        "item": {
          "id": "c3f33380-718d-4d33-8549-7c35aa01aff4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "44f71f5e-3b89-4bfc-85b5-e5a8509b17b3",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9bb5f8-8b73-40af-80a8-6667ec5027de",
        "cursor": {
          "ref": "b120bc2d-1691-46e1-b01f-e711ebeb65fe",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a4d4d832-6d31-4a34-8b9b-7c147b8a49a9"
        },
        "item": {
          "id": "3d9bb5f8-8b73-40af-80a8-6667ec5027de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "950fa73b-6949-4934-84e9-f1f1d484bf8b",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534fd72-eed9-450f-bd19-6c099b41d895",
        "cursor": {
          "ref": "0bec1e77-322d-4ce2-ad35-3a01351f51b6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "78e68ccc-4816-40a2-b3af-1a416bf55772"
        },
        "item": {
          "id": "a534fd72-eed9-450f-bd19-6c099b41d895",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc2b804a-32d9-4a26-913b-e5378065c5b6",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fdd14d-547f-4030-982c-b12be74448a0",
        "cursor": {
          "ref": "9b41b3f3-4635-45b0-af06-8e1646217b70",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99c6594a-d625-475b-a29b-576e2ed20439"
        },
        "item": {
          "id": "54fdd14d-547f-4030-982c-b12be74448a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "318e62dd-3a3f-406f-8fa9-f2e67c6d70e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fdd14d-547f-4030-982c-b12be74448a0",
        "cursor": {
          "ref": "9b41b3f3-4635-45b0-af06-8e1646217b70",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99c6594a-d625-475b-a29b-576e2ed20439"
        },
        "item": {
          "id": "54fdd14d-547f-4030-982c-b12be74448a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "318e62dd-3a3f-406f-8fa9-f2e67c6d70e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb920d88-1eb1-44aa-83cd-b7c7400d6d20",
        "cursor": {
          "ref": "b228a026-b6c3-4da0-b754-82070d23471b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4f860c88-db41-48fa-89a3-ca043058925f"
        },
        "item": {
          "id": "eb920d88-1eb1-44aa-83cd-b7c7400d6d20",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44ad1ac7-3bd7-4651-b9f6-21daea38ae91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92caa129-abea-4b4a-a3b9-2b484e220b03",
        "cursor": {
          "ref": "238554f0-960c-45af-a7f9-566f4d5d7ef5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "429fa252-f6c2-497c-9a68-a82c70a2184e"
        },
        "item": {
          "id": "92caa129-abea-4b4a-a3b9-2b484e220b03",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6ccb4d1-a2e2-4c7f-8ba6-42d896a47e10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}