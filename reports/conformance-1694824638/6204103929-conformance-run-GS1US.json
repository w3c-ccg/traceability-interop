{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c197fed3-8f1d-48ae-a34c-0d7a9c905991",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87e7a95a-ab64-40fa-9858-f7202200f39f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a3a690a-ca0a-4a11-b525-93fda44252bc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0019dc44-36e6-43ec-b888-f69d6fb75340"
                }
              }
            ]
          },
          {
            "id": "251db1ff-0eeb-4e6d-a4d8-171731a825bf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "370d0305-2b9f-4e14-9359-7c9fff5f6d57",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "71bcc229-642e-47cb-a0d7-02c818b0f99c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2dcacbce-8074-4c8b-8d3c-c4cbaaa7b2a3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39bc9789-51e3-4c83-9b65-122649a17b73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ebfec3d-50f5-4cf5-ab83-f137436bc616",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c6ee032-5022-4b78-994a-5d9bd5e288eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaf56af7-7220-498d-9164-189f4eccacae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd7b42a1-b610-4f5c-ae05-fe5c152c4121",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "292f070f-c3fe-4e4f-8650-fb7621a13127"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21e53a9f-d6fa-49da-8b3e-f13012a54834",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34fe2cce-f2df-446c-ade7-94f585965412"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feec45d8-dda8-4a70-b0cd-ea74da2cdc73",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a2d53023-67d3-4cef-8747-5762539d0b27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d515b340-2a82-4242-b37a-32178db5a900",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8df6d7fe-0208-4527-b57b-da270f473311"
            }
          }
        ]
      },
      {
        "id": "4d62eb2e-c82a-4d3a-9bc0-f49d3e607b6e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e54ae395-f44e-4399-af35-03c89e4a17ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9ae1d08-80a4-4fc6-9ebb-41ce0ebf6a2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1c8af3f-969f-4cc0-aa45-81538e3f7c1b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439c6911-d42f-40e5-b801-b3889a00c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f66c978-8d3b-428e-8124-32118ffe82cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b00f620-e989-4cda-b3be-91b04a754d37",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37328027-482c-4605-8ed4-139d4e1347a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f043f274-5f77-45ce-ad65-c0dab29697c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d28295-23cf-4b1c-8346-2373a72f12c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609e926a-2eff-44c9-bea9-8f70782b8417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa72a010-c028-4aee-a003-4a2eae52ebf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08e91c79-1458-40e3-80e1-8c0a743346f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84984244-a43a-40db-b9eb-1834cdaad723",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763cd8f2-75c5-43e1-8612-55b43cb68d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb6fc56d-2c07-4534-b140-c7f58dfa92d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480a5dbe-76d8-4dff-93f2-38fd53a07fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3676709-de12-4b02-b5ab-711d38c6bf18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e7139c5-7c41-460f-a62e-be7a6a541c2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bbdc96e-d3db-4353-a356-09eef3013152",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46ebb824-2e22-4482-8c2b-51dcd559bdf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2696196c-d1ce-48cc-b3e7-9e24631cae5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41476495-5012-4491-8519-369fe24f97c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "98e3e9ac-7c38-43ba-9479-f3cb2e3667d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09452638-5218-4088-9f32-ec97c845d9f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af5aa639-f10f-4af5-80c8-54c6e1078a12"
            }
          }
        ]
      },
      {
        "id": "7a07f7a3-e277-42b1-844f-300c032a9044",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88bcb3e5-d780-4739-ae57-40c337568be8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65798557-234c-4c33-92cc-cf7784ab51b6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "67727f2d-ea55-4fbf-8fb6-45b6edf0fe26",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a85c9-910d-40e5-9330-b463ce9a10cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4e1591-99cd-4f0e-80e5-62da62b31b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaf01f5-1b28-4d0b-9363-3282af88a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b58fffe6-8747-48b6-b29a-a2c5368eeac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aa2d26-bb1d-43c3-8ab6-b6b6a5370574",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27732b84-52d8-495c-811b-bb20507a28ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f65df5-8791-4b94-a604-f9221d8c2242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f770742f-c44a-4c46-918b-6ff06731d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4391227f-c980-4872-9e68-dff065c1927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4923148-a91c-4a83-a5fd-58583badf9e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a0adb-c9f7-447b-a999-1f14afaec3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6550b6c7-08b0-41e4-83ab-b7bf46f38206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404510c9-2a8c-400e-87e8-1c9495eebab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1486f6c-9d35-41d2-a77d-0bad074a6862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d703c-6277-46b5-b31c-2c6876803bee",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ffef61-e53d-4c3e-9698-b6dca298db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de83d06-5a46-49a4-8987-efdf4397d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c8c85f-b505-4af0-b72e-1d4448ba62f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01779c2-6e77-4bb6-9822-165a13496930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e75c15-4241-47d6-8db2-d45451885f87",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302fcb1a-9c73-4e26-b872-d08231fc419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866da19b-3dd7-4f9e-b04e-baebb2b770b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d8257-68e2-498f-8ffe-12a15590a330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3f6999-5f2c-4c74-a9ce-fd44047537b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1849a4-6836-49ad-ab1a-6c231143ca1e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b68788-246f-458e-bcf8-5b5cef2e617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93e0df1-58b1-4fce-aefe-2ce5cbd44bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac50d4a8-c00e-4dad-a60b-e923623a5064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af73f333-7a22-47fd-a923-6a1431b0a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c073d-00fb-45e7-b070-71c682f96a6e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc84ee11-d6a9-48aa-abad-bfc6ab32985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792fc31e-09f3-4a72-b9b7-36cb106936c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52ede02-f5fc-45d4-a7a4-b6e4590c9a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "170c87d3-7c05-4aae-b974-e982f1ab4989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167e9aa8-9081-4b06-9796-e7b27a353924",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f912d6f-a62a-4da5-9ddb-adc662244d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af84a416-6cb0-4bbb-a7a6-987ecd71a5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2202e2e-aa9d-4920-8ed5-1d1b458d9368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0aae53-c6fe-4c50-aae7-befa9f4ef794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c0f04c-427d-44a9-a33a-f69979208d6e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a7d68-3d97-4961-9138-742e76a2e76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d621324e-5aed-47ec-81b7-8ae8dd1c00a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b722d2e-2e38-4923-90da-42967bbe9cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c6ce14-5125-47bd-94b6-a1652254ce47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1529f877-9bde-4498-885a-d4a554c6a287",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796c3119-d6ff-4869-a240-eb5cf7c25226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d945bdaf-f798-4083-a628-69dbd9e5fef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e210cf64-6d87-450b-a18c-b2fe1a72db44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac180a1-48ed-45f6-ae86-0aa31fea1b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8777db4-398b-44a2-bced-9a11f6359194",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940011e9-52b6-4429-aaa7-ef69d9266c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eb5e12-4a12-48b2-b7a6-5eeb5ce060ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6176bda-d0b4-49fd-99aa-429d6de7b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fddf24c2-7a50-44e1-a35d-616954b7b142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd207ea-3784-42b1-a679-5103ab3d0c28",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc411b9-46b0-462b-970f-0139a26cda4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5558dad-466f-44f9-b19b-caa419815cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbd20ec-2d32-4382-a809-93447534d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fd9c0fb-b9b0-4f32-af05-ced7f7ec807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd42596-b991-471f-8229-42b158fac441",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43872dc-9c88-4e8e-ae93-7f11350937b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d111160-8e2c-4063-9b29-9612f1a035c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424113b5-309e-40b1-b59c-ab1da58c0a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4badab0a-1292-46f7-bacc-94c384d2b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0383fb-af24-41f3-9415-f2dfc9e5229e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8997c44-b7ba-452a-a5ac-cae8cb68b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80133bb0-cd76-4be3-a5d1-e63f0af7aaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0d0c41-c815-49e3-bbfe-4e5171cb1abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce267d8d-fd0f-4fa3-a08b-2f942c837545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde874eb-d824-4840-a1c7-97640e8544ba",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c08a53-ad84-464f-b721-6e8cd4605efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a091af0e-ee6d-4e9c-961b-eb9038d35627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4750a91d-2aae-49e8-b2ab-d26bc6fe85e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaed163e-fc08-48ee-a2ed-abdde20075b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990d4312-858f-444a-b7ac-9c28bcc89c9f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47371430-67cb-4c14-9e3d-7b5a18dd524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c04e3f3-b635-44b7-8ea8-bddee78cc4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbc27ac-1a8c-46b2-ae72-4b3fd4b2e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dde5c9c-cfe2-4ce2-8988-beaa5e18057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eac5e9-346f-4fd9-af7b-cc67568dd366",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b1ff2-869b-479b-a356-8028e405652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f4a7c4-eb2d-4ccc-881c-482199769cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b98a81b-280c-4e92-aefe-a4a8720d47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6407f7d-586a-4cc6-8a46-d386326fc78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6672080f-6b0d-4aac-9341-eba6c4530851",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad80f0a-0c97-420d-9ba4-9ff69c052e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47a6422-f974-4034-beac-cfa2498152e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87f7843-539f-481c-92aa-7681ed09e0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace90a9b-b707-4b51-b6f2-b45f15c3b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505dbbca-07a6-48f9-aa08-a678320b4d1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432597cb-6a7c-4e8a-9227-c35525925a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4299d4-58d1-433f-805a-5a61201d2ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a203f88-a0fd-4d04-ad3d-18d58b7c965d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60b1a79-86dc-4094-9156-a27c02b75498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581427f3-9b13-43df-9f0c-71c8b353d3b8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb664ff-ba29-4c00-aa59-274491217829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2493fbdf-b784-4241-9901-72572eca1bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b6f321-c1c2-4567-9085-d5a9a371debe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3b9cce-9882-4538-8b2a-faa0a627e33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1256d7-a83b-481d-8a39-1cf19222589e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c7fabb-da94-46b9-81dc-7f6e9213b629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28a8e3f-e1ea-4763-a9a3-3403fe103207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca9a82c-9077-4447-8b90-dad16b8af33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d480d320-6d1c-49e2-83ee-87b2baf426d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129ddcee-45b2-49ab-89b5-d06eb65920e6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c371f4f-ae8b-4cd0-b170-524c4e569ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83754666-19a7-4f40-9820-449049d61966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96cd548-80f4-4c0e-97a9-5cbabb7e7371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c161c081-fcf6-4317-a00a-09edaf84aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edfb210-20ec-4a64-a27e-e66ac3f8dcd6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107cecef-e13f-463c-af18-71d1c6f8ed64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f24e39-8ef5-4696-b981-6b4703b561d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f112826d-4d46-42dc-8c65-770a684fff93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2795be65-4da2-4243-94ca-cc356d4fca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d6b23-188a-4136-8f5f-1a5665364650",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8c15d-dd5a-4679-b979-86668a1e7b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7e3836-ecb7-4298-b5a6-e0f5276939eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38636e59-0779-410a-90ed-d9c5d0d4f36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b449ec42-e236-4e63-864e-63fe9e044c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cf2292-0bca-47a8-80cf-52dd8579e4c0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0914fb-cd75-4e8a-9da9-943ab56020d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f1c73a-78b3-4f51-9b93-19ef8fd389d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814f1e2-123e-458d-b6a0-6f061717a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b97534-e370-4bec-9c6d-f4bda6030d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874de525-fbf0-4af1-bcd7-2979d8eb4dba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae55557-cf39-49d5-810f-edce75680f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dac2ea-c0cd-4e94-853f-6e7c68b4f584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87182857-5363-4690-97a2-d0066b493583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc429cf-11dd-422c-9631-756cb0a9376e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bdff4b-59d0-4cd3-9190-cd84c7bf3abb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc392f7b-e73a-4e4c-84a1-7873169278a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aa1393-e281-483a-b187-fd563cd6fe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c509e3-5865-4ddf-8caf-03c637f5835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "351ca494-6357-42ed-8680-190599c216e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f160bb03-0fb1-4b30-8147-d3d44d0827fa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb814d6-7824-449d-adee-34f6b314bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f249c0-48e4-4b7c-8d70-c12af51ea988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d6f578-8fb8-4497-a2c2-75fd61406ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00acf7c-aab3-4fd4-ad0f-46413c84b5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20b6d78-e32e-47c2-9be6-17108bc1a5da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe746411-9dd2-4180-801f-96be0791f847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0689dbd-ac12-4d07-8d2c-fab07b725dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1627595-a76f-4dc9-931d-074b73c2557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf8b4ee-4098-4a5c-9a8b-9422de40194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aca7eb-702a-4837-beef-d4763f636b1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea94d792-d0c0-4ce2-b32b-b72a9d9df996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d68040-e78a-4a9d-b91c-bf0e4a95e617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efbc5a3-caa6-4d33-beb6-cbf538603688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60660d6-e909-4056-ad09-06cb6daaac1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9809ecce-0b81-471c-80fa-98005bdc436f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac68e6a6-14b2-49b7-8f6e-147145b2c52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb532ef6-2e46-4193-957d-9b75d46c593a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5138112-36a8-4a53-a0fb-d424f802aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ca6f35-caba-481f-922c-35aceebf51b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a29f6a-5206-4639-91a5-361dae33066e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be39f228-caa8-4053-a609-09dfd242ee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962c1491-a2f8-4180-aa6c-f3099a2eb215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9a9d55-5fe2-4403-ac8c-d1c0da1c9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a01be9-7399-451a-8754-f7c06eecde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6787a90-be8a-4410-8100-b5095bd03112",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c483390-3064-4ecb-afa8-7e6a2c176d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e22a8cc-4d82-4613-bf1c-39c959970bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e95944-34e2-4e5a-9cc6-b457aa618ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d57b32-871d-443c-9bf0-d35b9e6bd446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef7b329-66b6-4bf0-80a6-5ce7f0b5bd63",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd836a0-56a9-4485-897e-af577a3a6b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae95500-00f7-4702-8b4a-37e5cff54844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072412c0-9c28-41ff-8093-bf1858a88d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6720123-2a57-499c-913b-f0cde71dbe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84176f-9d10-4abf-8028-4253df26eeed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69a1c63-0bed-4041-99a1-3abbce996266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d4ef22-3383-48cc-b347-3e1d665f40a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf6e080-0fbd-40a1-908b-54c720985bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f1583a29-25c5-4298-8dbb-ad091ce9a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668c6589-3307-44bc-8d47-fc6a7fc53f70",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9acbfd-0dc3-4d3c-90f7-78b4c0d02b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687aa64f-208e-4daa-be3c-8ffc718e0276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9757caa-b7e3-4828-9d26-7c180d1fd7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e71b4b-65b0-4cb3-a8bd-bbed9bdde83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2360178c-19ee-47cc-b29a-6d35089a8757",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c2c14d-ad36-4930-9bd9-c70a48d7b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a5062c-3195-424c-a2f1-2f388e322e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6170738-cd80-4d6d-9ee0-c9622a290b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7480d3-9c4a-40d5-89ea-2559854a0a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537af6f8-cf48-4f23-bc0f-cf3c22cff7f5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8adf87-135d-4be1-a9a9-a089f5ecafc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fab410-6078-45d9-98c1-21c8921b216c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc53bf34-4b33-480c-b13d-d32b1ba5c9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb594aa7-f4ba-4fb0-8909-bb61beeb8774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5b0520-6c49-4e9e-b95b-9e72f292d371",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d7c3ee-b7cc-4a6e-ae37-0fc034112952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6a9924-6173-42f9-9082-e7642bf32387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cb2ef4-19d3-4175-956e-8dd2c1973554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "665328bd-a886-4810-81dc-68706b525bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07baa1a4-8342-4bda-baae-b0bc8fcf0b02",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b49ee4-7860-4bc4-bf94-b6f0d2ecce21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a919097-d217-4ee7-bb7b-3c7f9da26a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6478cfe-1406-4247-acb4-9198ee83689e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9b83c8-ccf1-46db-b179-cd5aef856c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2901471d-301e-478a-b9e7-54c4d53957e5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566a09dc-41a8-4bc4-b7b3-83d310848b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93843b40-e90d-4d4c-863a-1a0dabdc996f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3c44e-fc28-46a7-aba6-05b40966d6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6469b20-b2f4-48e3-8211-28e66092f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43e8ac-ed53-4756-880d-2424eeb17779",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9ec131-ff59-42a3-894d-aa89f0107f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e48c41-e784-411d-8048-448d96daffa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0e6933-35b7-4a0b-81d1-f07ba9996d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c867fa25-e71b-4323-908c-bdf4ae616bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40859547-e2dd-4d54-98ce-6efbcc4177e9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e98f12-e9b9-4bb7-a1c9-de04d6784b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8022b9-582f-459f-803b-ae2a16874697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee079d98-a40b-4f68-9940-1235cc26e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0586a7-e4f0-4612-9642-5f1479f795cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3f8f71-7e6c-405a-8d7f-fed5e833ffe2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876fbe7b-4134-43e8-8752-555029190241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877b169-7b0d-449d-9350-d399cfca4252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0f6c27-a02b-416d-b659-ddcfc554c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fffabcf-2205-433c-a345-b1b5af6fcf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00766c57-8955-4077-8a4b-3cec7ceb7637",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4305ef1d-abfb-4c3c-bbca-f05193049ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7324d151-e390-4182-b36b-f5379c43f70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e709bdc6-2b60-400b-b9d6-4a0c3ae2c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "792d412d-b2ec-4f97-afb0-68ed2ce88bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bb0394-c868-449f-9996-786f21569712",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49309e2-3906-460d-b4df-9512ead49561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4810b173-157b-4be9-97c1-71c8a7deb949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b4992f-c5b6-4949-9c3d-0b4f295dc169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "063aa86c-1da7-4ed2-babb-1b9355df45b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877265ed-d28e-4aa6-9244-35f9c6fbe5c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd30038e-19f8-4d94-9cd5-184619f5fc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4db1c7-7729-4aa7-8c02-8adaf82bc49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583a3ee0-5b0f-4e91-9fe4-29acaadb5efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83665332-fce9-441f-8662-ca8c3f189301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f5d89-420b-4bcd-bfb7-1c1f8a6ad8bb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15badf4-3790-4d83-ab12-96d2bf40f830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6903235-fd0e-4613-b38d-82bf1fa77c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6472d97e-c669-47be-aa23-dad5c7350593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a38c4e-b430-4770-b75b-09faa270bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe9b54a-680b-4893-a364-0d59fec4ad86",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e08d95-8f8f-49c4-818d-6d650e0307e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6fa492-4685-443f-ac0f-2152e29d67b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2246702c-fdfd-4088-8335-419f5312375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "544e8034-8d96-4f16-aedc-913a4b1445ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52317c2-7dfc-4a21-b0da-54f135d5e750",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e6dc84-51a7-4297-b7b5-dbe2791a1a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368072d9-311f-43fd-8f41-75c71569c66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24750015-3eee-4d7f-a9ad-b11b0d882991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7654754-376d-4faf-8560-14292edf3e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6f1214-7478-40a7-9d7b-d5b6f96d559c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd1a974-702a-46eb-b49e-963fd70dc957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb8baf8-6e94-4e07-bff0-2c711728298e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dd06f0-b78b-4abd-8d9e-4a19951c9252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d936c42-1b6d-45db-991c-a7c6f062587a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5bf2ba-99ad-47b9-8157-ef4d49bf37f4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4dd920-842f-49b5-a7f7-8c1c885c51a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee026da3-cca8-478e-a138-5e465197c919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56636c76-a2b5-43bb-9b65-72561d8d4c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5576bcb7-fd70-4b9e-aa0e-6a7a3f50a7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03848c1-3cda-4e9b-a527-47d6871d2793",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bfb8b-201d-4344-9ae5-53edc940a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cfb26b-b2ec-44b5-8f1e-6cd3a3b9979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54561cc8-9a02-4c57-9449-3d937c4dc519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e413d1-2747-41db-835d-b67fcb1e1563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff561a6e-8042-41d3-bd0c-7a74839445bc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74bf19e-092a-4d9a-b3e3-45ffdf6d6888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7497dd77-4ce9-4d8f-a434-ca645991219b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98688a0-e4f5-4e5a-88f8-e1f73e54edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65103317-a7e1-4645-8950-dbbe4066f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d947dac8-9fa9-4c03-8b83-12621016768b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709fca67-6807-45c6-9b74-79c8673445aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b27d3c-8309-48ed-b22b-9f648256d4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2260da63-fa81-47f0-8fb0-126f9b709f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3382101-b240-4a0a-9605-64be99f52fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e85663-f99c-473e-9fc3-20feb208f2a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db4d572-0512-4014-bc90-f4c3adb85120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d0ceed-6f1e-4419-a4b5-efe38542ee26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e3ac60-a139-4b7f-8dfa-fad4bf0c3cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fca75809-9a2f-4db9-afa5-e7cbfc26d72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68022bfe-0514-41fc-ae2a-c20bf337c498",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d751d168-a4f1-4fe8-b829-f7888738d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf8ddd6-ae21-46c6-bd19-34e66543757a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b925f175-0d3c-46e0-832b-d556effb22ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a7eb7b-96c7-4c1f-b20c-c2c49e020ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55022c3-5a69-4238-9c43-9cb13b57c9d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e6adb5-f7f4-4f93-99eb-fcd39e9c8b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0f530f-fe20-4773-9f00-d90ae78607b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a55d051-c269-407a-8430-0fe774a1c665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6f4bfb-1172-483e-a5a2-3dbfdabbb781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be993ff-3014-4030-9f05-cd420bca3e79",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbedd83f-6438-4a91-9f16-1e2318c50a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2806b857-bb6d-4853-9394-e29ea8ee37d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9280ef6-00a0-45b7-920b-250c370ad2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9cf2d3-dc3e-4375-bbd6-c534d4b8ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5099dffd-6283-4175-afcf-63518d74f532",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6273b9-9371-45eb-b29f-a4c6cf4a0215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bbc1e6-896c-4607-9e18-404d4e34e17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b99a88-eff6-451f-a7f8-1d2da0425f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42bc0e35-1e5f-4140-9467-364e47811cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eea209-c767-4c7c-bc9b-7cee982f3caa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c49776-afc6-4462-a746-8d5200448902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9452433-79ee-4cf4-b83d-a13863a9be64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149d3b9-044a-4cdc-aed1-34aa90177cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "323c2401-0917-41a6-b3ad-3edbbf7f3ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3d0a7-c1fd-4fa7-b754-59584b820884",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c548c23d-d9aa-448a-b4e4-d59a573930ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07719e0a-1ba2-4f5c-8ff9-f4e56d889b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c91c2-a9e9-4441-8383-c1a397aac3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "850f528e-3290-468a-aca4-bf7c37f5fb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d18f07d-ec34-4a3b-8c09-0e5a392d6e5f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5330c2-bb40-4be3-8a7b-520b9aee2087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdd80d4-7d50-46f4-a3b9-aa4e8d3bd142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3924344e-2ae3-45bc-a3f6-1b7eafd4b969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5841d8-7916-48bc-9ea3-81a4537a986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4ddad7-3214-4a00-ba30-7a17e076c3d5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bde7a6-a233-437e-a2c2-d91fb045d6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9575d9dc-87b9-4c55-a8f5-6982d333417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6e09ae-d955-4575-bb9d-f203a2f57ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2863b39f-4149-43c2-a225-fbc231e0f681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13625f2e-4d29-47d5-918d-070dfce0df4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7219690f-77af-4114-9a47-ff17ea33107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eb3271-650a-4494-a548-debbe9fb4b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8dbb03-e0b6-4aae-88e3-502332d7cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8f344c-c585-40d3-8473-2a82fa6fc062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e1417-0c94-4002-b157-106319d8c973",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda03e2-2542-4de3-bb77-0692153c2eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd6b4af-9526-4f99-9719-21bee79956b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0373a290-c9b3-4041-90d5-b27eeea73256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba206c59-8e61-4e58-a9bc-994dc2a76331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e55e647-6629-4444-915a-cd562b0a835e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9081e952-a492-4b3f-8e0d-0ac1ff6028dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35798bab-30b0-45a1-99fc-f852ae75682c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd61012-fa1c-496c-9457-f6133146146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96947376-e615-4794-af96-e1b43186f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a9a23-6c61-43f1-a8d8-49e38315b420",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c570c1-ea38-4010-9455-ede4a2c9951a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f6737a-c1bb-4d76-a950-d303d9aebf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f4c47f-cc42-4083-a554-6e9b9608555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "434ec2cd-3ccc-4044-a23c-29c0fc2f509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d114f-2b82-4877-9185-dac834097647",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94620f4-0bfa-4e98-a1ec-1bb3ebe98d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3777996d-bc4f-4dcf-b295-fe736d614698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3179a8f9-3632-4cfa-9e1c-a14098390084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dff9104-0991-46e2-86e1-239348d75be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f1d33b-1420-4a91-a091-ed2aa734aa03",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203e8b46-bf65-462f-be5f-5de063dd0c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596d7416-1f96-4b76-bc61-176adba55921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523088f9-d423-4879-b10e-1f59c28df432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c0b3d0-447f-4b8f-b75f-5c42e4209474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2d17ae-77c6-484e-abdd-8788d075dbb9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54296b7-162f-4e5f-9a1c-300247adbe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e86085-340c-487a-ab57-f1ec48683a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d47917b-cf2d-4d2f-badb-6271acff6a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b52e8d-1d0b-4e98-83e7-e8ad824d35b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539beb6e-d57d-4cc6-9f80-5e70b82f2528",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6851cbbf-beb2-4320-a042-106db3338598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffe9c7b-a24c-4808-8ea8-12eccfe74e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65213b70-8516-40b3-9037-ddbf46b3b547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c13857-f87b-4732-a053-364950e21861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7f4d7e-03a2-4170-ba7d-2fcbd125d0a1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c69548-c5d3-4240-95e1-aae8034df09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1c2ece-85c1-4759-a26e-fa0bc6a5fa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cab819-0c53-45dc-8ff9-50011cc87ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08df67fa-0876-42e8-9c3b-5817a8f9c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd82d189-de3e-487f-9bf8-bd2f645f5510",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7269d5-3a1d-4cab-a215-9bfdced68d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03726fe0-d391-4f27-9bdb-c7ddd2d92e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99929e5c-d0e9-4616-bcb8-e3c7ced0171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfeaf0f-48fe-4cc7-8626-b03eaffab5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea67d36-907c-49bd-9e03-8d3cad302927",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2268e5fd-0d26-4777-b048-86b73ca49a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898b221c-16c9-4bc7-b809-20b2a4729a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47987278-44f9-44f0-94b9-741ad411287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "986b896a-540e-4f2e-b134-cd1f246d96cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a040741f-d440-45e1-9eb5-b890bbde92e5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa63fe27-79a0-4bfd-9da9-5a8138f7cdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a22e923-5cc0-48a6-ae4b-07701b7bec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7084095-a642-41f6-a53c-37bce4d5594e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df779c6f-d8df-4b6f-90eb-8f50ce44bd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db57b72-9e64-4bc1-a4b4-2e68935c51b3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce7d4f-0725-45d4-868b-4cec394ed423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c9cbef-fd11-4a4d-9247-ac658b2111fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e07fd3-6ec6-40d4-8786-c7a6b10ac0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5c7958-91ad-4aa9-b987-95df26d73e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff6a2d-f6fe-4730-ba66-0a3d1412ba14",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b988ad-4163-4a34-b724-2126d2ef42f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512e6593-c4a8-4e4a-837a-97b5a5aa3ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090d37ed-83df-4a66-ba94-8bf39ddfcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9bb011-39f2-4837-bf6a-15ff2736ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5f783-f6ee-4ba5-86d3-d781b671fe94",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c71c8-fce8-4a1d-833f-03850baf16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04b127f-85c6-403e-b6a9-71ef2d322365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c8a3f1-7a5e-4a80-ad75-b7877f6ada85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee98ebd0-6739-4470-9d5b-56e929edfedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302460b1-5e1d-4564-93fb-6bf530103d8f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c2e139-bc6b-4832-a4b4-8b9bd6629225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab43e63f-b801-4ab4-a012-5bd4ab856777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f411affa-796d-48e9-aaed-7a219bf26200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afd5aaf7-9190-490f-bd9a-2a7dad9a994b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1dd224-290e-434a-a03f-816add421b49",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c983f8-d39a-478c-871a-68074a145847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286a610b-7577-4f8d-a01e-30ee89dc5df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d86683-c0d6-4e22-9b22-8102e0613a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "897393c6-2cfe-422e-8f0a-ff4985bd72e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a295e29d-6d93-43c0-b355-8ca8b7d7e433",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d8d4ba-e1ff-493b-9217-8f18d5aa054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca972118-2390-414a-9abc-e06f23718260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f6a1a7-2d1e-4eec-955f-4901e8af4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9692f97a-c0f5-4e0a-82ab-0cbde4404382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6259dd38-630d-4904-936a-c1301795dca9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6143a51-6217-4f73-ba42-5b7fdabcd20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d209bc82-e449-44dc-b646-5985ba3bc21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba19a5e-5c6e-49a1-89b0-329597bd2170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7304d348-8ac4-47e0-a3f6-26bac02a2b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eaf0e5-df19-4e2c-bc69-fa9e8f863275",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83551e7e-d58b-4e1f-847f-12959f7ecf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340a955f-84e5-4501-a58c-4f5c2bf90575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf12961b-8b67-4612-b22a-d9194c64d0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fe484b-9464-49a3-a087-bc4af7893e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16388ec2-5e64-4494-8529-e67b161d3e60",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3206dca-d4e0-48d9-952b-deef8004a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5784354-746f-4f57-963c-afbf6347a71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2c5df5-ce91-4b3e-a303-d8e3ea7db669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbca61eb-1428-4358-992b-e59af02cbcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109365e0-fad8-4499-8804-b76e56165f87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2804bf-dc2c-49a1-bb75-cf90885c456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5ac941-411f-4826-8f42-00c4e1fa8037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f980c0c9-152c-4819-8ce7-325b61a03a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f9779a-2076-459f-b188-0d3ef3bf3d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2348980-9c36-4713-ac75-0d8132537b1d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e88b8f-97fb-40b7-9905-ccafe1090bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ccc9d0-ea6f-46f7-9fc0-b9d68d4aa009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0353b8f-8ee6-488c-83b3-57599c05e032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a492489f-ff39-4783-82c9-d4e3e0c921fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d402bc4-1169-472c-912f-def37400a2b7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156ef4a-5d2c-4bb2-881f-67b4a104c02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6466688-705f-407c-bfbb-8052d170c03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1425ba1-fffe-4cb9-8a0d-be2e7435ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cec254-84c7-419c-939f-f06b4a162d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dff14e1-7d95-4eb2-87ad-b36e99929876",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64aa40-48b3-4ad7-944f-4b77c0efdacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15790abe-a195-4f13-be13-e1dde861b305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a0e748-15d5-41d4-88d4-c9b4d06c4f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f05beafc-b5a8-4694-821c-dd79f2c85687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2dcb59-2692-478c-af67-825bd3e89e61",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498e9aca-1339-4e2c-98c6-2538dcf44816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcc7828-d761-4e92-956a-e5e67738dbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eabc49-6bed-4708-90d4-4d9b183886da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "debca09d-4835-4558-96f9-676fad8c1965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ddbbf-1681-48cb-acb3-0c887fb87857",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef40bd-f439-49ff-9de3-d401e8d28f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8616fcc7-bcfb-4f8e-8fe6-32f693cc5d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa4251d-5fe6-42d4-a888-0909430d679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "deed4f22-159d-453e-aacd-15386ec8ab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a69e87-d897-48e4-ac61-1c8388ca9e66",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a9aab2-1dce-40b9-8a95-c0c92f135aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b0120ea8-0821-49f5-9865-8658a268d532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672b5246-7781-4d22-9857-aa0303613ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "70601be4-16e1-4446-89b4-2a39cb5f9def"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f60be5b8-084c-4d95-93d0-75c39976c9dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee63de3-a0be-4626-8e30-b5db8106ee73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d94ff0-3938-4d8f-bc21-bc27d7d50a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "265eddf2-9c96-44a8-a2d4-0427997d1687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ccff5a-4ea6-4f9e-9a39-71863754904e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ce9ea6-320e-4550-bf7a-b50b78deefd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "effe2bd8-0876-4baa-8e6c-4f982f557c3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fb15b20-85e5-4b04-a1fe-019803d8ce0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afeb00f8-97ac-4379-945f-303edf47fbd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f312aa7d-998a-40b2-9a94-334a64869a5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bde01de-fcb5-4b79-8341-e202eabf288a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6065beca-8d2b-4cf6-a0da-4a8afa0833b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79747a62-e173-468c-99b2-4aa2ac139ea5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb1ccf7d-e3b5-4a4d-be19-4ffa2c5595c9"
                }
              }
            ]
          },
          {
            "id": "9de457a3-af82-4467-a385-56908cba57cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b95ba41-29ce-45dd-ad13-44b05a7f2bd6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f029fd79-3c39-4bab-94ef-3914ea6e41b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e0ffa4a-a2be-4ec2-91c6-ce34434494c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aef8048f-558c-4b4e-a15d-52d5ccbc27c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e57252e-6094-4371-a3fd-e8b9347f763b"
                    }
                  }
                ]
              },
              {
                "id": "15ac09b8-df1b-4442-9c04-03d927a7c2c4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f6985d-f226-449f-afcf-d173837721cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27ee5704-4d42-4140-87fd-2bd0c15c4839"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35653e78-b1eb-45f1-9bf4-4ca88c70929e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "009143a5-9a7d-4bc4-bde2-8a70c92b4c0d"
                    }
                  }
                ]
              },
              {
                "id": "23be3c1b-95bf-4900-88d6-200cc441aba2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f38d80a7-3a0f-400a-8fc2-539ba5d3452f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbaf983d-b0a6-406a-a42c-487ecc8ee14d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06920620-f00b-4159-a10f-a9658227a923",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04cf4bf7-da7f-408c-8e7f-799fd0a75222"
                    }
                  }
                ]
              },
              {
                "id": "68780470-f76e-4a85-9640-061063adacd1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08e06d83-4f20-415b-a52a-15d01392854c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ae070db-da64-4cc3-b3b1-a999f8462063"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0fa16ae-8e73-4a27-9a12-fb43f784eaf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1299fe14-05f4-47e5-be2d-eb2841547050"
                    }
                  }
                ]
              },
              {
                "id": "98337331-a27a-46ae-8dd3-cabb3af33fed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0c8d30-ab6f-4a55-824b-665b306e2eea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77a18bbb-6b4c-45c0-b234-b2fba6ea3f0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99bd921c-1cd6-44c1-ab0f-80a080429916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ec2bfb7-e893-4bd9-9e56-2733c615cd5d"
                    }
                  }
                ]
              },
              {
                "id": "97cf5511-9601-4d8a-87d3-12fc8a9fa644",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0911c178-0e1b-4b51-8148-9a6c024eb0e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d975bcbe-d1fc-410b-993d-2f9e807d8bf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "182f8fe6-9035-4f8e-bc7e-98b05fb09d54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "445aa6c1-2244-415b-ab8d-45c84616be27"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "095c588a-76ca-4d08-a499-91c042c1fd33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "280e4b01-728d-4066-8d7f-a4735d62aaed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fca2f093-184b-4c43-83c1-222b95c0a595",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ff607df-8c30-4bc1-8b0c-1e41cbad0c68"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9acc6ccc-de73-4aa4-920e-6a73f01a99e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "195e702d-8c49-4f0c-a08c-ba9b6cba4ecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62d62a3b-f5ba-4fda-80a3-597a2c07a4c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c5247ce-b2ef-487a-8d10-dbde995795e6"
            }
          }
        ]
      },
      {
        "id": "ac0f0e05-a839-408c-9f4d-72a597427488",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1791ce52-512c-4f79-9af8-bd321090e716",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a462dea-5e83-4542-b5c8-6e62053db346",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1664c6f-1120-4f04-a508-ad00f422b32a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc47abd-7dc1-4e4b-ada9-8170e5ff2e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c3a13e-7a00-4a1c-9802-3fb5fae6f0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3975c5c1-6a27-49ac-8fb8-a09da13f9e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b856ddfa-e8f1-4cc4-a4b2-09e48e52911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0becee46-b83e-4b74-9c5f-e16fc85f1b80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f41d6-a6e8-4220-9f18-14ce157a9741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b29318-edd7-4ad7-8e2d-43dd315ee2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d72768-a190-48f8-855b-c346c292fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e550de-a24c-4931-848d-3ce01e905f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae987ff-f8c8-410b-b676-f1ecb315c15d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa26786-3fbf-4a0e-abff-9f0c609adcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dbe6f4-5a80-4437-9522-ea80f5db4a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a8814-b965-433a-9a1f-a62b0dfc32b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1c6c2a-7012-44d2-b34b-43e1db5b2722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d39bf5-04df-4a7d-b667-bc5dc1d9caef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35464d74-7ff8-4356-b747-b9130a152039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1881fe69-6be9-406d-89cf-251ead40c8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e3bcf8-8611-4c76-a42b-4e8316baa7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5938b6-c894-44f5-91c4-59dc6c3dde45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b85d4d-2391-408d-ab12-0820ed01475c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb5a994-cb55-4fb0-81fd-5f56338bee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21ed15e-8265-4e6c-83ff-6385c69e192b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eb990c-316b-443f-9773-35a7bdb095b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c090885e-b1f9-4474-baee-b7cac55d9360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0464ab7-7e66-4d3c-bf4f-8ac611a883df",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d6c063-af99-4614-88d7-cdd57f19ec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae089f2-dd55-413f-9830-9b0a2945db80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848179b4-af21-41b0-8c2b-497f47a93887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e8f05e-3831-4886-8004-f9157310eb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df554e32-f615-455a-bf9b-24c4cc0b8430",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a0e48-a654-45f5-a9b0-cb00a5c1e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb9dec2-2c36-4d5d-bbbf-123b400e623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f348a467-353d-4c52-865d-ca276708adcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a293c8-4ee4-4517-afb8-b26c0e9cdf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003bd288-fc53-4bbe-b426-927f6df75a32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58be24-135e-4caa-9b5d-ea6efa68d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e73ed66-e818-49d8-9b63-899e301ce8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1c9c88-0d5a-4a4f-8967-69744ca87450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19bad114-3b06-4cb4-8b8f-5ebb468c2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad93c3b-01b8-40d9-8308-ea937ef5e3eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab5dcb6-e383-4af2-a941-b6dab19d0451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2785ae-a09f-464e-a697-204f35e21e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c751507a-1f52-4841-9c55-e47719b85992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6971ac2e-8dd3-4264-b714-ecb9c43a3667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe20561-da9c-4d2f-88cc-07b824988cbe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459dc41d-6de1-4c7d-bfbe-8d748929abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e46911-c8ff-45d4-939d-9a5b8b55e973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce23a3d-a62b-41fe-b6b6-b8d5727d3ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "244c3b1e-b742-4aef-9812-dc0f227d3f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a16ce-5644-442b-8930-7c212b3a2b57",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa792f92-5475-4778-a6de-a89371a5095a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b90ebba-8df7-4cbd-b92e-3836811e8e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd7cd6c-dc10-47f4-8b47-8fc61a4b459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e0df6da7-6c8e-4335-a475-0314cd1eb9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e15748-ae87-4780-b61d-11cb1cd828b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ff310b-189e-44a5-b0f3-2a5bda93fc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7205d16c-dde1-4201-9d25-57b37c4366d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f60eb3f-840d-4368-b7aa-bc91e3fa614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69c4756f-a78b-437b-89a4-a9a8a6a6f357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5af44-0a00-4dfe-85a2-7a5812d495c7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86e2f51-06f1-490c-a071-72428394e2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4e176b-ec66-4ecb-b00d-d948e0ab7775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12510e-d7ef-408f-af46-50047715f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e923481-0f83-414b-b425-b7089966226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dcff9e-9c1b-487c-b579-03124539bf83",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c2783-f448-450d-bc41-d3efe340db24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac29b24-43b3-4bfe-8ce6-7d61a695b340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830a3488-958f-47e6-a97f-594ffe7890c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8664ab96-6795-40b3-b313-1555a500b89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cedd29-3b75-4550-a24f-d642b11d8ee8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f8fde2-d39e-4961-89d3-b9246566edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802a3a3e-525d-4b70-a1ee-56ae145d2e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e93a2f6-faa2-437b-ab47-a483f87580af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c07948-5c85-4a4b-9d4b-96c3ef6e2028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bad350-8391-4253-81ed-edb317ffec61",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4163ab61-e8e2-436a-aaa4-2d3fc89d18ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9348dbeb-3bd7-4836-8a47-d47685ec6ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e222e91-3af5-4fee-9ee3-ebc0ff2af6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d15dd0a-0020-45b1-ad7d-6758d3cfebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9c8923-244d-497c-9755-0ca890490bb7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4741e4b-a6df-489b-8053-547f080cebf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da5f564-7acc-4fa1-90c3-55a341498b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcc9d40-4aaf-473b-9a50-61035d199221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a15e26a-6679-4c56-9c40-04dd1ffd9eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c70bb-0e41-4862-b357-8a86c6b251a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64423c7d-36e9-4796-b3d3-9e377887095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eee109-8352-474c-a4c0-1d517c934be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fd6d34-28c4-4f02-afbf-73f7625d73c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "438c9348-4a0c-4bca-a912-9cc4a8e48440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f065de5-b156-4e3c-a349-826a9cdc66e3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd3b7f-509e-4d9d-a8b3-75b755195357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b99e453-1d4b-4db8-9300-e25c97851b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afff0f9-7aa0-48af-9e0f-f413e7582f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4374cd0d-37c4-4381-954a-ad73669df43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0aa8e-8efb-4725-a15b-96c8b1cac7fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14500f64-e8d5-4859-865d-e4d4a4f04f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b5698b-b2b8-49de-aac3-efe21d26488f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e154bb-6a03-488c-9d60-134e24f93669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e88d08-09cc-42ea-b7af-0941ef6b6802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48666595-23a4-4ac6-9ec4-5a6930c00a90",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa0653b-2a6b-4cee-bf80-5ec457f7f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4205517e-d924-435b-9094-9eff2ace1b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dee251-da02-4bf8-8838-c0dbb1de35a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2414ac30-e7e0-4c11-87c9-2e23408ec2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dc59c1-73a0-4069-a85a-e62186c02054",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c48780-3187-49b4-83a5-76afa3f96b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aafeaf-5b9c-4f5b-b546-db645606d624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a237ebd-5a55-49dd-8bdd-6673baeb91e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf97ddf6-7b11-4dad-b782-5ed09f3b0115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e590875-b1f2-40fe-b6fd-cdae086da531",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3ba29d-1504-4b6b-9273-124f0f5f585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c9aed3-c0a5-42f5-b60a-382403456af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88f4eb5-dbe6-41bc-b25e-b9acef79326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c662743f-4a13-4d53-80f0-141668b67c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622161b2-6a4d-407c-be5d-1422aff46d4c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bfdc7d-dfd1-4a92-96d1-6c656c61554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba298069-6a9d-4cf9-a132-6f70bd3403ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778f278-d26f-4f1e-a74c-1df75b87ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e6ae18-95b7-4236-b3d9-439b2a3945f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0cd4c-64b9-49e6-97d2-1f2043aa7762",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f838f7-392c-477c-9a67-2c7d75c5779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b4ba2e-ff97-43dc-bf91-2790b66e5711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9440de-b54c-4cab-a1b0-a146e1cb7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4962d512-9608-42b8-9ea5-7a37d05b4185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0116e2-ed89-443a-80f9-3b1543f59743",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286df67-c763-43ce-8732-34959f8ebfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df561d6e-7d7e-4f9b-ae45-3b65e08dde68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82044c9-8c2c-4466-bd8c-422506a8d586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4bb5bc-b5e4-4d2e-934c-288d47f377f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dce9ab-83b0-4827-a4b9-bb4de6fd1c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5e2843-1af2-4cc1-8c8c-9a2bee6fc31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5746d2b7-e1be-40b7-8ffb-b850ad41139a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048371b9-397e-415c-bfe4-11d3a74d83bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc776b7-1141-4777-84f4-f1d66f99c9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d44878-5ddc-4514-994b-fe35e7b569f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee522490-be2e-4548-bfb7-8df81489b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80e4d92-8223-45d0-9807-4781b634051e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3890be47-53e2-49d5-b6ed-4b3ba54926b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7aab88-4644-4079-9e62-f8e9a5e93705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b88b8b3-f4be-4316-a3c9-a78ddcff6190",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826eff5f-734d-4c93-a316-c271defabdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8c3837-4795-4702-8871-456ef5b98a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acab2306-f898-45bc-bcba-fc2ba801dc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba910ecb-2ab7-4e79-96ed-7ddf36326aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c80ecf8-db8f-4a25-9078-ea82156f6aa1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d193d-9993-4ace-9321-d2d1f0a8280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3c93ef-0c47-440c-99bf-cdc47f2ff5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfa09a6-a4a1-4b73-a699-e18fff93dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2e625e-259b-4023-af44-e1a9c4cba2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6937b413-e694-485e-89c1-d0eedef3b3cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2619db30-65c1-4f7c-a89a-3bc33142a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e9f891-5596-424d-910d-699afec26d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0faaeab-5857-4899-bb74-04bff0b86e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22d2c93-fc86-4a4a-a496-01c9b4584f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e1ea5-1c7d-412a-a886-cd8075e9f77b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9150bac1-3e0c-4e4d-9bb2-68e8cbd6ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea893a3-aa54-432a-a5ed-aa463b30c21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de41222c-d9e6-432d-b305-75e78f90f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78a1a60d-4902-4871-b4a0-3180c19f646e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43b1a6b6-9c32-4524-8158-f022506b1339",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "260c6266-82e9-43e3-968a-c1e6b5a91ebe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79b50be-aa5e-4d85-a213-7b87141a415f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f77dada-0cec-45cc-9b87-139efd025137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37bf3e7-4751-4521-99e4-44ba3a241106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac611ee8-5489-467d-8506-a09a44b620a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "959389d4-2470-49c4-baea-2c1820a96c1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68fd67c0-c195-4799-bc54-bdeabb254539"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e25ae780-525d-4893-afde-07bfedefd7c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c16416b-9f06-49f3-adac-f46557d8302b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e0422da-5e23-4cb3-afa3-8980a122df4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11ff2882-8ebf-430e-b29a-8e1b7e8a632e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e7ce66-b721-42ed-84df-a19db7d62d83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cab61bbb-9415-4db4-848e-c9dfc47418af"
            }
          }
        ]
      },
      {
        "id": "6592e23b-b877-455a-bd57-0c5e830c3c5a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9109c469-93d9-4e02-b357-cad76b3dffa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a3b361c-b642-429a-bfc5-33230c1a1fb8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7891ee2-247f-4954-b657-78719eef9d7b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c3dd16-c534-4cb5-95e7-1b98530b3991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fadd35-cdb2-4840-aa7e-bf88b041403d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ad7d47-df78-45c7-b6a4-5b1ed3a00a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0af4c16-df23-4e82-9dfd-3cac1b45099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080edfa4-f7b6-4be5-84db-e75aad09af84",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788cb1e4-faba-4e82-aa30-b8ee38c2810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff5c8c1-34a2-4cae-a815-1f04de224b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e481e93c-064c-4b6a-b3c7-8a190e555673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e2d24c-7fd1-4972-a65c-9c3b0e3eeab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76435801-a607-4d31-b0f9-a99e91bc0141",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa63cc-b57e-457b-8558-0a3909afc04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38d2fb6-33de-445b-adaf-bd8d9796484c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271c7d0-6a6d-45ef-a0fc-46475aabc4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fd351a-8aea-46b5-998a-878b85ad4894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8069d4cf-71b1-40c8-a670-f65d6b91a7c8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ffabf3-b5ff-4ff1-b6d8-56f3234f6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafe1c66-08bd-42a1-bd2e-7ccd96b627ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2032a9b7-2ad1-4e27-bc61-9eb9ed0060ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c41c32-b111-4b42-abd1-d3b86616b967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9753b63-285c-4449-8365-5a93bf092e9e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34716426-69af-4be0-81b4-ecc33366b1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee96cc3-49a4-4451-aa78-b369d0e0a3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425c6aed-1a7e-4741-841b-62eac8605b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d114dee1-445f-427c-bbbb-cba1b69e9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfaee05-0deb-429d-99f0-acdbc53b5ccb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8166f4c5-c258-457f-911e-a2cd93e8be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a768e96-7162-4e36-9a84-69f072b857ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e066360c-5ce5-44a8-b266-5f5b5a1625ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03ccff20-de5a-4579-b336-40bafa5cb151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b90c84-e270-4b82-bea2-c4d7f54524d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3099000-bd61-4bb9-baf1-385f8780475c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c33676a-99ad-48bb-a62d-a4a7a9dc33eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f99643-de0a-47a8-b7ab-109be587e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9de5f5e6-5c49-4ceb-b8fe-da289da01d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228a82e-2c31-409b-9c76-938b43a65ce8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df5b8a-fd4f-4768-85cc-8c1308b8c0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84adaf95-0b16-4e62-b7bc-e5fc9c54c6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c3ae28-e3a4-4d9f-b87a-20d325130dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f88dee0-78c0-409e-a9e6-fbcac45c7b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ef62d5-027f-41ab-bdff-938882550a1a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7144a46-1997-49f1-b8f4-885c0cbc4346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b22629b-f10b-4587-9ec4-fd0ee28838e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186622be-ae5a-4a75-99c0-06bac2cac03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95875e51-65ea-4f09-a5bc-26ca78e23056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836379be-8e4b-4c3e-b165-69c288b29850",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9d0ba-b122-4ba5-935e-1f9afbd14388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae445234-75b7-475b-a9b1-83c4ce188c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cb17f8-bf40-4496-b133-227beae2bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30635d7-ea9c-48c8-8730-a8f444ece0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f386ce74-dcdb-4927-ae3b-689a4d921b50",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eebb62-88bd-4bce-b71a-7d874432800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd3a6a3-8f43-42c9-be99-d2bed76ab582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d0f1dd-9822-44f0-b9dd-432aab260e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "115fd1ce-df20-4298-81a3-af4229de1ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49886135-237f-4664-b3e2-58c59c5effcf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09403f80-90dd-4de2-8e28-a74e0e7cdd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68033e2e-967b-42d8-9dc7-44b59626f4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901c5d9-6a69-42dc-b632-c5b92bdf0b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc82bf1d-2372-4627-a689-2d431d800ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c1e8a3-ef8b-479e-a99b-ace4227abf27",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e8adb-5736-40fa-87ea-b7f174614412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af49c28-ee8a-429b-8d5e-60da746f7c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaa665c-8d35-41a9-b50c-904878c3e84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9526464-5052-4564-81ec-87eb7325b784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb02a004-e89c-4fb9-be38-d89e16f345a5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e546be-85b3-4786-92e1-f7ff5737af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02ef3fd-c629-4488-8b2e-68b5a1a79e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc32287-f525-4314-8b0c-1fb24f02896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0a4167-e877-4a93-83f2-5736053f42cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b842d8-53b2-4f25-8054-957989cc692d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c46dd79-aa36-472f-b7e2-6e45e01c98b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36509236-2e29-40aa-80aa-7c4df863d6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7c0895-3135-4e73-9665-d6efd5f3461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa8080b-8484-41ac-af05-944d588ca59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210a0cd9-1977-4971-8f6d-e4a864852568",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ddf10a-6bb0-4c28-abed-0fbe0d99ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e774842-ac8f-4dd3-bfbf-baf47ae56d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d93c51-e28c-40d6-8aeb-82c006b40d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabc43a4-b34c-4ef5-95e6-2f57563b5bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36decd21-18bb-4836-84a4-0a6ed6ef9639",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfd9740-be98-4090-a7f7-d5267c233522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1c2508-2f46-4c2f-8251-e1ca0c10361c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb712f35-52ab-47cb-9ac9-52813835477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "901e39e2-349c-477f-830a-a8a3424b3f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8676b5a-17a2-4c29-ae30-b6ea32ddb421",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0753a47-aac7-4099-932f-f4a19df2d41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6293175d-f51d-4f75-85d4-c7838b585944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7686bb37-1256-409e-ae45-71b6c216ea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6a06fb-69ed-4c60-aa56-6ae5902f6df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45023403-79a6-478b-b105-0edef63be5fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a38ce5a-47d6-42a7-b159-7d27ca59fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c25327-7a7f-443c-bec6-272f88c0be64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba43ff-d180-4557-974a-0149f3f1c062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae8bc3c-0e66-4735-b06c-cb28c6d247eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4d43f9-d7f1-45ef-8d8b-5f92738d6c49",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6881eafe-1629-4528-84f9-362990e57fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aa25a8-1ae2-4f31-a711-80df27dcb66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70d8efe-8214-44d7-8946-b6b08aca9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df97bbbf-8a55-48dc-a782-dc0f5b8b6c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2364aa6-2a0c-4a24-9afd-947d8d85ea79",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a01be4a-0a93-434d-8f86-56fdc5996252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8abd373-7975-4309-9a0f-9bfb26ca453d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716dd474-6223-4b3e-8836-313dbf090242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51061dcb-ca92-44be-b947-a291c7354e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d74ba57-f362-4fe3-97fb-a97d20a4fe32",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1440a9-299a-4561-9d7c-ec5b0cc2b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6735ab93-e305-4e5b-ae13-ebf85df32e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ebc781-b790-48e8-9c98-6ad3c35043af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa40ff-520f-4d34-9987-478fbb90b53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b3000-0453-4a1d-b86d-14fc64dacd0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8436a73c-b108-4647-8d39-d2e70f11ac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb554ad6-f7a2-4b0a-bab4-31de42d88fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ce6291-c00d-4b16-bc33-c7d8a81e2c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9a2a0b-0668-4853-bf29-e204f5653c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb35bf-e871-41b3-a4ec-5e33810cbbd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afa1866-e485-4527-b939-2d3063268356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe0bcfa-24cd-4c5b-98bb-924c8d31b7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643263bb-3df6-42e9-b5fb-1bb88eca6b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40f3f9a-12de-4a1b-96f4-70f683d166e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a39957-de12-4339-bffb-34b7a9e24158",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0755f8b-b06f-41c9-92e6-c4e5b58b8702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79257720-6568-4628-a57f-4204007c6e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c531122b-d9f9-4060-a731-804768627bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d58d0e3-e7d5-48f4-aeb9-dfa002445450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f55d2-d392-4bb7-9657-5621cc6bbcd2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d4b01a-62ea-45f6-94fa-1aa6c05b74f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadb488a-6e59-440c-81ef-ddc54b0e7202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac24ce87-ab47-4469-996b-95dfdf1ae0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf35bbc-0e80-4aca-9242-d7dbc5383ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb9d6b6-5c5c-4158-8a46-bf93ca59c97d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cf325f-aa06-4f44-bde5-7bc9476e1947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4566828b-938e-4525-a17f-92f597080cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2968a4-97f7-4681-aa4d-e64be43692e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96ffd51-5382-4a60-8731-600b363d52ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc1c165-0ff9-4a85-8542-b841497735ec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966a38a9-265a-4454-903c-ab0549336381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7ab067-1b93-417a-a1ba-f85273561679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd64136e-12ae-4ca8-89a6-f7b2dc2bfdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49cd871b-067e-4540-a929-f2b1e4108f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecb21bd-4b74-467a-8728-ad5ad3394f8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d1d4b0-6edc-465e-9aff-2f49000a2048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4ecf65-ca91-4bf5-99a6-f041230deac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3b590-2f4b-40e8-9aae-810211a566ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb22db2b-f13c-4c3b-b601-9913a4d37272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1617937-5588-4a01-be80-f67a72210bc1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed670e9f-8702-45d1-b7fe-fdece240ceb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3050218-1240-4658-a697-c74ae36557be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce4ba4f-c9dd-44df-9211-310a3ed51f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f878998-faa9-4b52-918b-500e058db069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91053af8-fb07-41b1-95a6-b24af1c0a04e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff8bc78-ca56-4fc3-acd3-f48e003a2cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fe91c2-eab0-4755-b3d4-6a9c42290df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b534d-6d48-4453-b77d-e866c4e5e08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22b0332-bf75-446b-8a72-fc4421a84012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ad639-d286-472f-9ed2-2e91451ed9c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa5334-2ba9-4394-a76b-8fa407518453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42244f25-8585-4ae9-a658-7f624be08093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e035e5f-28c2-497b-82d2-ce050ae60da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cfc55f-595a-4bab-b093-3fb9ebce2154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924edc29-4820-4531-bcc1-fe9a91564770",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6905e1-3aee-4bf0-940c-a313c645dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9418797e-aaf4-499f-b9cc-96ad96f74dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81fc29-c660-4807-8fa1-0df355f24f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45d92b8-6e2b-45d9-a940-42a0e4d70e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a968cc21-d59c-473e-99fc-02cf38b0ff01",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c4ed5e-c1c4-4a78-8340-995d133b91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a836ff-6ef5-48ae-a961-5af3732f19f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3addd0f-2535-45ba-8430-d90dd2b255bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5f0da7-2f26-4db6-87a3-feab9fb459f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3d4df-c853-41e2-82c5-c153c4b05238",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083191bb-778e-4243-9980-99c16904bce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561a0f6f-ad4d-42c4-907f-6bfbd36932c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44c68c2-17b7-46bc-81ec-8e676e966fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3957be94-dddf-44f7-a1b5-8a9a46c13a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29616aaf-a607-4e66-b23e-a0fa2efb17d5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244482fd-b401-419a-a608-1f828b47eb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b03add-3450-4f6c-910e-1dd291474b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb6429-90a9-44a2-85e9-caac42410dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961f8763-160e-41b2-9f29-0e1fc50f0878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d352378-3b8c-48fd-911c-e567c18a060f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6154c12b-1ef2-417f-b348-a206f62f562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19374e9-3de9-4329-aec2-625446211b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b650fee7-54ed-4721-9dad-fe2dfd72cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4ac93c-9d1c-48c8-bf0b-df8660f37930"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17496639-1c99-4303-8867-7a9a13b07306",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d97425c9-f4fa-4731-8a37-f3ea68b74331",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f8020f-50e0-450f-832d-d508c91eeda7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99b7f492-ca5b-4a7d-8b46-276fdaa74a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46ca4da-feb3-4138-b835-c2a0c80689c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01e322c5-22af-4792-9206-947fc1ce78af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c0efc96-b630-4bde-bac3-c335ad7aee56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8b49385-7aa3-4983-b815-eaaf70a64453"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3622a94-9c68-4fb9-b1d9-9396917ce957",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad407ebc-477c-43f3-89cf-d23b5396ac31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e4730f9-5d28-40a7-af6e-434ebb5d982c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12f294d1-9014-4de1-8fa0-8d563fdfb2fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9ffac6e-1ce7-4365-9ea7-ea4adb5b360b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0539442d-9ade-4761-ba52-52d4dc04ff33"
            }
          }
        ]
      },
      {
        "id": "6ce7621d-6dfa-4b88-94a4-c60784c161e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6b0929d9-e03b-4942-92c0-fe4c0681a8ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be5b7282-8772-4dc0-adb5-e9308e5f3736",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20bc9dba-033f-43c7-9b6c-44c308c45c6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f32888-ccd1-45ce-b93a-b21c2f3a40c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2d2a25-6ba2-49a3-b0cc-633c8007c9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539913b6-7b42-40eb-8743-f3b4064de654",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f686590-db8d-4bb4-a0bb-c722a95aa704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86c8fbc-ffb3-4400-bd39-141fed9cfa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a9cc90-b615-4722-8d6c-160d1b837e52",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc60083-1258-4f2b-9da2-8584e685999b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8151ef3-7b53-477e-a28f-1362b0283335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bc1d7d-1860-46aa-b857-2671e0792e7b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355bfd8f-f92e-44d7-afcc-c9e4a9864659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377277bb-bd38-49a3-b11b-2482d4a6bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61825a9-b2ef-4cef-abf5-58f681237b2f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7ee184-13e9-4c34-9040-d1dc9be430fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3903cc1f-c5e8-4a32-af55-050dc251b22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5514b53c-045d-44f8-934d-73b172a76e73",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ca43a0-b99a-4856-88f5-db3a268ed63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8955388-dfce-47bc-a736-2808e0b5321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4da6a73-b9a3-4d00-b72a-aa32f54a3051",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609f4675-715c-4c73-a773-149553d29ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b10b73-e2eb-41f1-9a49-88c4a6f368b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc5dac-7fe2-4122-a601-3b3a4c16a43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b716d1c8-993d-479b-a65c-4d544faf3b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bcac26-4ad9-42b6-bc0a-108e8ff5e8ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb097c5e-129f-4e0e-a544-25ae61a482c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd272f43-f8af-4e14-9219-440ad331ed58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2e121e-39a1-4276-8b8d-065326487d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0b1a31-8541-4912-a38e-138b4293a30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de519c65-ab52-4a04-a82d-59607e3200e7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7bf273-2ef7-4052-8f4c-07616ae7308a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e38cc2-0d18-40ec-a9f3-367351904978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e03bfe-95cf-4eac-bd17-fbbd02c75bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d7ae9e-2a54-443f-a947-177605f557d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7be440-7216-492d-a5ac-972197bf3443",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec556e-472e-4593-a690-42b0d8aac5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cc2025-19b6-4ce9-afc8-cc17decb75d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db72b51-7504-4a39-9163-d35201590f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4e4390-eb04-4a07-bfd1-6272535ffdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e7be6-0ffa-4fd4-a032-69f4b81d7e4c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71bc8df-068a-49ac-a3af-d2fcc88e6de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974dbb62-759f-479e-a8c5-b46e53b8f6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf8f2d3-da70-43f5-8771-1f6f4ce20b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed764dc7-96c0-4e17-be82-2ebeaeff6d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d551ab6b-e3b9-4492-9c2f-f8189364b29b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe578b5-8135-4760-80e9-1768695386b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256a2c4b-cb80-4de8-acc8-8376eb05a8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aedfc5e-0906-4277-bc28-2755e1eb2c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47a2f6d-a05b-4520-80d2-8ff6b6198bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb70a722-e8fe-4a63-93de-387828820d6c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e983e2-f996-452c-893c-c4cfb14d6b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b37167-40ac-4611-8551-cf8ced7ab2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbe79f4-c7da-47e0-90ab-0f043a23209c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ac1faf-e127-4f40-80f9-8095a5bc819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49be147-46bb-4496-86c1-05714eb7ad1d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc39f73-a3ff-4206-af9e-f30c3f4c4629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa5b858-2e61-4ec3-bc78-8c5876a81ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead678c3-e07b-4bee-8a30-ccf585823a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed23f53-5ac9-4bc6-9d54-52cf0e8c7911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611f038e-6898-467b-adc6-5a16ba306c37",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b6894a-88b3-462d-a3f4-8da760fba844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de2ff5e-f1e4-4bcb-bf3c-c4e036e2f3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d3f84e-3aef-4a54-b2ab-c31f79fceed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9983509c-21ef-4118-9d91-a8fc88f7b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13189352-20a2-4202-8705-cb2564ae7665",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339e7b73-f65c-4d77-b137-41cce9927cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4298186f-51f4-4963-bb92-5a51f9eeb79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de9ea0b-008a-4ec7-ba60-91288004c298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2baf773-1f5a-4a2e-af86-1b1ebfbd0d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffef854-52a1-43ef-9a75-2df611c8d74d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fff6ebc-67c0-48ad-b19c-1c8040ce2b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9b08e2-97e2-4c6d-96f6-d58010949eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d445ec6-553a-4905-bf98-9ec57a90a173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e48280b-10ae-46ac-9b9a-a55254ce4e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c16a6dd-e3bb-4077-835e-22125e0857fd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa552d2-885e-45c9-acba-fc56c3a202c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a503fccf-6e6b-4f07-9480-2d6f354ee22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5ba13b-3ac8-47eb-a0f1-71c24a3a67dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cf5c9e-a0a0-4e28-9fdc-a7d684eb7a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8b9171-d334-429b-9620-81fe03587881",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d987f-b434-41e8-9703-327e1cb5b433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2086110-57b7-4659-9bbf-fe017c4f9c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec2fc60-15fa-42d1-a695-100feb330222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2898456e-c512-497f-92fd-77233e421afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15cefb7-1655-429c-9773-2057eca19fd1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bc2214-91e7-45ee-9231-f1f1f4598d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24b4ecb-d4d9-434b-b880-a91fdee35ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4694bd52-c2d2-4491-bf2d-47637a1a59b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacac740-96f8-44fe-a144-a000c93c7e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da516c30-abb1-42c0-a0ca-a1b6ddf57e59",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5086105-41b7-47aa-8947-bd8afea0faa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063c2922-8cfb-40ca-8b1b-9d74d4a9f697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8182a816-07e9-4580-a872-75ae86c74e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdeb374-545b-440d-b63e-88d8850f88ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78985a25-8c45-4d0b-9853-c092c68ef5ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98ef807-8198-49fb-9d4c-6325ca2a4043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81be3852-5fb2-45ce-af33-84e2fe90568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2f3a93-5349-40a7-976b-853350336f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9cdfaf-91e4-4c9a-b1f4-cb7c1b80051a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f97502-cfc7-41c8-93b6-118e234442ce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d30fd-8e5a-4141-b4be-f95ad6ece571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00659f52-4074-4a59-bfba-cff3dbfb3138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd092ec-6293-4e07-9569-583038986b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a1990f-657d-4064-9191-68fe6f2108ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639e2c63-bb30-4fd7-bbbf-813c85b0ae1c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432c6869-6014-4940-8cfb-5d1b5162e897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0200db2-6d57-4440-9e3a-aac1678cbdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ac55a0-e17f-4d92-882a-4612fd313edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ff9267-6da9-4b78-8e52-6927ac7b0480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544e5c2-d8b1-4e08-84fb-49efd4a519c5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba80897-cec9-498c-ad51-b4a57b5ec0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e734643-b84a-4212-a280-3b32e49415fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34de3d9-f052-4e5f-84d0-edca78b7e1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b51587-693d-47ee-9c28-1d4c9d2f4559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654e9f78-7528-4bdb-bfc0-c4744852d30e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c236ef7c-5920-45e1-b874-cb5c46d7f89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00f6c53-737c-4161-8169-dc5484f0243a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27827188-0e5b-41c1-a5b1-19c89a9d4898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b99db-01ce-4c3e-8b17-3980bcd4c21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696c3472-6acc-42d4-ae5f-2ffdc5cac519",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d807f667-c50f-45ad-97d1-683d3d2f918f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986a6fa7-c9d8-4f17-9c49-f3371873aa44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aaa8ae-90c9-490e-ba24-339369ba1b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054ac67e-a81c-4042-b054-777808c1c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeb95a4-c593-4402-9234-552ae84e9339",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44afdf57-cd5e-439e-98bf-d0e64984db13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91346f5-afec-4160-af9a-675a7d770e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e52042a-b0aa-4279-a2f5-4c676185d9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe523a9-959d-4588-aa54-931bd14cab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8e040c-aa71-4f5f-8e1d-dd6e607e3069",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59663010-749a-4c95-8972-d82b39aa0ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5daf14-1eb6-4aa5-a42c-b3bcaddc2bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fd7cf5-26af-453d-87bd-347d681591cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1f1564-d3f9-43a8-b217-db2158b16352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a165ed64-abef-4e07-9306-e9cd68d1b28b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06d4777-d091-4fb2-ad17-15f926b78bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c43e44-450a-4a1a-9e65-710d517abad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af562b4-b9bc-4303-bb3c-c3a01d9567cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd19c84-1bc6-4231-a5a7-48a4d11694ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a957654-7c2f-45f9-b010-f754b533d85a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ba50a6-eb2b-4a8b-90d4-b4900abbf313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d727bc4c-08f7-4dd3-864b-7b5407660bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c5255d-f6ee-4792-8fa6-e174c6db2394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a5662-9ba7-4441-89a8-052f3fea3778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468cc9f-6b36-4f7f-acdc-9330ed5f1833",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1488b810-4757-4860-b23a-5e960b17757b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1192f4e3-4f79-47b0-8fae-a1f160a948e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba2394f-5d78-4c62-92e9-99f360839ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd511b04-e76f-4bd4-a37f-7a30cf6b54d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b787ac-cf51-4c4c-92dd-6c4d80d91fc1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f632fa66-fff6-4025-b75a-8e21ea993734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22351397-5b0a-44cb-b7ce-75be1c3a9fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fed7243-a00f-4d49-aac2-3a1dd77c2850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30b75a6-eeac-4675-a3f5-0b8a10f99eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9defd36-4bb0-4633-b696-f341eeb7ae0d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6a77f-53b5-4fa6-ae15-8245feef7f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1acff659-6af3-403f-b1f8-ac53011c8b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b319541-07e9-483f-93ba-f34bb17ed32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf87455-8184-4427-a7f1-b4c6ff4bb7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655bb877-4de9-4d25-8a11-75548669a991",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c06c3f-727a-4880-ac63-f5cba6168898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c2ea35-5aed-4f76-b396-99a2e51713cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6897c6b8-8b4e-49fe-b0d6-3e058d606ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25d6ba5-2b22-44a2-87d7-d902ebb93f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a8309-899c-48af-a5d0-5c820cf5b536",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2855dc6-8dcb-4cb3-8d2b-5edb9648332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23e8356-f0ff-4bba-beb9-6f4a618a37c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56816937-13e5-4af0-9708-4295c8f6c9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dc61b5-f23c-49b3-8328-98ae924b3f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c6f2be-e54b-422a-9307-d129463267e6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7439e5-7f6e-47a5-8f97-d848d8694707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee02974-e2e7-4b66-888f-916317beabd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c500c0-160d-4444-a5f2-8eefd49d87d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f32166-de03-4dc7-ab69-b12631ba7be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72233e89-0a88-48aa-9a95-e3246f14aafc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a797737-a7dd-43cc-9872-294f5afa0c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9e5c86-1e63-4197-ad79-c4f966990132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f13f2d-f267-4546-b8ed-a01f47451e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9b8618-6daf-4e12-a22f-467fcdaadfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d5af0e-7ff7-45e4-bf65-fbafe959d72c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed52c9-462a-49ed-bbc3-9c813e25ac78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286aa2f4-e263-4645-8e8a-1813cf203222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8768b75-9b5a-4135-b181-4399af458805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5002c716-f4b9-4ff9-bd4e-456023bcdc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e725f019-8008-4a09-8b61-c40a34f1082f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c17399-b95e-4e51-aee9-02b00fc648dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e597f47-2e4a-4f8d-aeef-4082dbe5a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef11441f-cf7c-4768-8409-842871b80d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b151f7d0-f309-4fd1-8137-5dfb0724b5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec545a6-5375-4165-918d-5eba1c6750bd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc45989-5e42-4d10-bf26-f3ca202be95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5da6039-f963-4806-93c8-003d6e1efb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eddd0a-ef56-4dae-b1b3-a0fa38c33939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1fa3e7-844f-474a-9b26-fa247dc9aa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ce24ff-09a8-4a83-a640-53066028ef3e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06eefe5-635b-4ee4-b287-b83357a8937e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df60ad2b-be29-4303-b938-7d3f81cfaab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b25773-7e97-4329-b27b-aee18632722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab6a0f6-9c48-4210-85c1-6466ad4bfdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecb9d2c-1085-4a7a-aabd-b41be7ae87fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e717e-bef1-47a8-b59b-0cd0cc461e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f645a10-05d7-43e6-bccc-ba08451358b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7acd8b4-b8fd-49ce-9ae8-2bdf4f6212f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a0d17f-84db-41a9-bd66-fe33bb8e0f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebd6775-218e-4c92-b732-51f935e79f2d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ec79f7-ab78-4f0f-8673-b18242e9d2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e09f96-17fc-4a3e-bd12-64b86ee4fb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7148bfd-f492-4ad6-acb1-5c70d8f53224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b48f28b-993d-41c7-a2d1-2704a637c759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e2f5d-85c4-48d1-896a-b6ef477b9e42",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4411c44e-a066-4bff-99c2-6392c1edef85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c8562a-8771-4fc4-8c41-cb9b16f7d356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d9aa4-e5f1-4914-a046-9d68281570b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2db6b3e-4929-4c0b-b892-bb17b58d8c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf292374-c587-4995-bd42-6d5e696ae299",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae41d59-b86d-4a42-a82f-d74a14b4a69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fd26ff-d8ab-4835-9836-45824c38c11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8cb48d-2305-432b-a512-b071ad6eeb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91e5b80-433c-4470-b188-c62d8cdefedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97c4d64-34fa-45f2-9898-a4860b89c52c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176d0527-7355-4169-acd3-9861b6df9f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3cf26d-677d-40f9-910c-75ade896ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6b1f00-1477-49a4-a64c-fb962ffc7aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18912b9e-f24e-4921-8db2-da9f826ed8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073ba4d6-3647-4c21-8cce-c1e17c5b2189",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41efc3a9-d0f1-46a0-9c94-63b4d4c077f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a006bc-b289-4f0f-ad3d-c1e09362786e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113d0d7a-d3e8-4b0d-b827-b3d6c3670cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31a5668-021f-4b21-8e50-c23de17ef7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fafd5c3-0a4d-4174-9c3e-46a4c237ead2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6277ef8e-4000-4faf-9e79-b77cedd05955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebe88b9-16df-4c22-b236-519e6e7b049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b1413-d307-4478-9934-3e005dd7123a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadff8ac-4240-42b0-a38d-080053d1b23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b26b08-0e42-47e9-9bd7-dd9345e9573c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de02839-7755-40fc-a2ed-79ce2d5600b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1155f457-0d5c-48f0-b6ac-ed292ea7ced9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c152b-6dc1-4285-9987-2802176d3f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c20a71-7327-4a90-82ee-6d8984d5cd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1301d7e0-d73f-4fbd-bdfa-c1bcd25ef267",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52bab41-35fe-4b1e-a1be-bc10211c7b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47fa1eb-daf5-48a7-bfc1-cb2d2436f691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b893c5-0a63-4438-9ffb-c24e8dcc5777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fe709d-ed40-48e1-bfce-2338806a2699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e8d18-3106-4cec-bf5e-40bc00395371",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f004cd-9a04-4c77-864a-c03600fbd743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64e56b6-9692-453d-87c9-bd70636ad14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b53890-488d-4c11-9512-1437bb9acb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0c60fb-7e03-4d4d-acb9-f0196b6797fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60a50c4-ffd6-4cda-859c-66ee14fe1257",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e17feb7-7280-4427-95e3-e98b7fabc8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a41686-5b08-40f3-bc41-8ee0ab318d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eae6b8-a74d-4635-ac0a-51bc2b4d6262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bceb43-cb97-4b91-b63d-6276a0fdbc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae83707c-4e67-4fb3-9bdf-665edf840386",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0333fcb3-8ef6-42fa-b16c-3120eafc2fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158a01a3-3d85-46df-ab8d-5f0025032d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58a6fa9-3fd8-4886-ad2e-467a105d1c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49825e52-34d4-4af2-8910-ab60fbfadaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4df94c3-fdba-45df-aeac-9005cb4dccae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f426d426-186a-4244-9e4e-07e91b3c048e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9d2ad2-da71-4ac9-ba1e-548a01b458a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427c125d-b2ef-4a6a-b2cd-881fa3ba77f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc21720-ca7a-4986-a35f-9f6f4e0128cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443ad16f-8c45-49b9-a991-30f866502f02",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7131138-c6bd-4ed4-9b4a-e349506e5d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1bb311-4467-4228-9bb3-28aa266991fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859e127d-1bce-4234-9cd1-ad2bd90d93ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb96138b-2434-46c6-8df1-c1310999f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa8456e-cd3f-4209-8714-2cf500b597df",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02052c5b-b9a5-41c1-a64a-7bb7ce1baa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598b1ec6-f7b5-4d82-b43e-016c1637a18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c888df25-7f2f-4eed-92c8-d0e33a9156ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed26e51c-3b9e-45e7-aa3a-e4df00fc1f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e2046b-9735-4150-939f-e50bedd62213",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb8a9f-5d27-4d30-a520-a16213675fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d248c89-8d03-47e0-b9e3-78a9718dd43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc5c6fb-d583-49e3-8891-8ee5203d1d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478dfb0b-8a77-4ef4-ba33-a253de7e0772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bbc2e0-e008-4aae-8d71-cb730e5a7cea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7766001a-3865-4e46-bc33-e6d726260ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab11d4eb-2720-4d2e-be39-750a8c4de0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b3c6c-aa83-4705-9e57-1d083a3e89a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef711cd-19de-4792-96bb-a9cc7a2b5b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910263a7-7232-4757-9e09-dd0869e7753b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaca185-8a75-4ac9-a13c-8f0bd72164b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0e9674-12eb-4159-86b6-e39941cfedcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb02fd3-25fa-4c19-b87e-461ee3eb4fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc81e2b0-9289-41ec-9f01-d6c0bd531091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caac9314-29bb-43d5-9023-5ce32a66d0d0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c50642-afb2-49ea-bea9-353bf490bf29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3637c56-b77b-4f6e-a139-54c0c5355b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c651b8d-eb49-4f51-be10-d8a8990afd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff16f0d3-fdd7-490c-a02c-4f4f7bbf6ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3dc169-f3a5-485f-9811-ec43126efc44",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beb3c19-0fdd-4361-8278-fa2a6f82f48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92995ef5-2f44-4eb5-88cb-e6368a4a2877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3029dcbd-871e-413f-9c38-b302400bb647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5fbd51-df67-4f46-b983-b58989cd8522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3add3b0-4618-49bc-b2ab-567f71ca9f17",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15164e29-c524-4f4a-ae7c-b03c1f3a71f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af981f7d-586d-49ad-a2b7-77bfc5e7690a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4125c075-aaf3-4863-a443-c5d5d22213c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a0f96a-b2ae-4d6c-8606-ea573a5ff72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b046617-2cf8-4b31-9d46-81ff73ecb010",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab28c6b9-324c-4776-a723-7381777a0138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6eac9c4-eaa7-4f32-880c-cd4a45e7c726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64c0f2-b0a6-4a95-8a94-a34ef2fb2e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e4db89-ecc2-4d02-866a-e74585a0ce26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5303a5-6557-4264-b52e-960425b60582",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f8eb52-7fc5-4c30-b375-662eaeec67ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff14f4e3-f200-4633-b8d7-2f7b89296c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801a4c08-b405-4d38-8762-5dbac3b9c4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f36f92c-1636-4d81-bbd0-c3a9e6528c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70bbc77-cbfc-41c1-a8b4-4c98635198df",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aebe509-4dd4-416a-aa5b-9d8ba37f2683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb54b17-d9dd-41b8-8d27-0cabcc03eed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7af515-77ee-4cde-b2d5-b5579737dec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3a4806-c020-46dc-8178-9de9855be774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75eacc6-9337-4a2e-8c51-98ae5c3651f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d27b04d-5937-45ed-9ad6-b399e985c699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ba380b-46ac-4d94-a251-fde03191cc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1471441c-9803-4612-bee3-6a1bff8d242e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2412f78-ad56-46ee-8546-59247d25a200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c830e9d-7ec4-4e94-8bf2-0237092ea0bd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e3942-91bd-4efc-8ee0-43a952cf5e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f25934c-5942-47ca-960e-ce6fd329605e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b234f3-b32f-4397-8006-9cda1a6de4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f02eda7-f0f1-47d6-a807-565aa2af80d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ce9f5-964b-4cc2-84c2-d5421909b33b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d5cf88-ac60-48a3-93f1-9bd5bd667fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3b67ba-c5ea-4d02-93dc-361fca628805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be523c9-eb6d-4947-8470-ccff300a9620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081990b9-41aa-467f-9523-feee54ac3bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a11a8f-7ab7-4a39-a720-e25e40c2e8b6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571cc327-029f-47cb-b4ac-c4766f66871f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658d5595-9d60-44a0-82d9-184f2506075a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36861570-6bf7-4d26-b81a-05dc8f16746d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60160c73-faed-478d-a180-40ad0ce0d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c696c-d295-4226-9839-21aa90e4efc1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed745eb2-e410-4716-858e-1707d8689671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94f6a98-c441-4eb1-9e3e-05cc7bffd43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2047a8f3-700c-45d9-9282-f122685ceca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f0c23c-38e3-4740-8689-fde15719106a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a235b124-6395-447c-a681-33c52df1a4ec",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c093aa12-d18b-4e40-a5c4-a156311c7cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f67235-80f7-4973-9bc0-ed818792a6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090db91-69d9-48c0-94ae-5233f4c44cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce8cf89-3e29-48b9-a2b6-b6584998ad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0253d93f-ca5b-4154-8b0e-b84b5b421c4d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ae57cf-8d10-4559-bf64-2ec2c5ceceba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35586b88-8bcd-41ee-96b6-cd6291822a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be56067-4d62-44ce-b13d-550312f2f4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c54a8f-5d0f-4ab9-840f-950511d639aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71deba20-9b00-433c-aae5-fbcf0364040c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd488b68-5706-456f-9af8-3db5c0b4d57e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b3e1c1-32b0-44fe-b6d6-a726c7fc0c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adfb7f0-a737-438f-bf64-2413c792e8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfe2ddd-6433-4b69-92fa-46ff92b2193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec543d-cb03-4002-bbc5-d1fe1cd80d25",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7f0c83-5791-46ba-b0f9-1579e13b6fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec45b83-7f6b-4454-b48d-aa3a1adde70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b460e6-1be0-4894-bdd2-e9a64859e5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c6c98d-5c91-4f8c-a9e3-be310a939d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5429b6-eb94-4b47-8b4c-ec153a3a17b4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa72ae83-4376-4855-8e12-2e787a8e2820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb2cb4e-7576-4b31-a77a-a47f8e5686dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b7b9d6-0531-4273-9e61-8ced6bfeb364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbe1643-0776-4bb1-9d5f-ee1052f2c2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2561da07-3c4d-406a-bb9e-0face1dd7c88",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fda916-b4ac-4b87-8a46-d135f676e813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce367bf8-b0e3-4c81-842b-4ce37b36d4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b1322b-e353-43bb-9821-e2f29f9f6e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2e31db-5b8c-4542-b81a-fd4a4206ef6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f874ac-c3f7-421d-8757-f278e51c9681",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f488a8-1e12-45d9-864b-eaa3d042b124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de738aac-4aa4-4677-a729-f887fc4f8c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343d6114-c047-42d0-bdbb-2021f1c9dd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80be456-32f3-4a43-a9a0-e171a08f4ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebccca50-9b9d-4f0c-a9a5-cfa216dbb521",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5452558-26ce-4747-a0bf-ff888ce4314c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4c4bd3-eed7-41c3-a759-c171db2c36d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d477eaa8-fed1-4ebd-91f5-75c7d1e6a848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf3349d-ce1c-423e-8e7d-48f964d9be58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6c0ec0-560f-4977-8ea2-69bea50206d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a1cc5f-4c00-4728-97ad-b2c215a8a08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509ca3b4-1e85-45b0-8d7f-ac96aa3c0458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095b8d70-a20c-4b0a-992c-7ccf9f4c9bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5344d5-881a-492e-a237-95ff8ee4dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142b842-593d-4054-b95f-c6a2f16c63c5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1391d-7af8-4c08-b934-85ef1f2552c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a0fc57-689e-4a02-8672-b0ba199d68f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dee9b5-8a6d-4f7b-b1f3-2840359771bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ecfe41-b7fa-4f98-9e19-825c2e3e440e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43567313-99ee-4aa7-8d6c-3aaea31ea4fb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e929e23-5f40-4d54-ab11-47e431a19035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76da538-3d17-48ca-9bd6-6e281ec683c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8d8fc-faa7-4e63-acaa-3fc41d7393d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f517e12-3f9e-4078-ab7d-b34d273bc6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e3262-0978-4a09-af83-10b8c96f54e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47efcb56-2deb-4223-be98-5302a9a134a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4b9b3e-2ccf-4b15-9b43-035b164a7a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692feca3-71df-4328-80c2-5679b435bef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b0ae8c-5c96-49d6-90e9-eb79188a3f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701cbc38-3aaa-4388-b8a8-7054f80d4efb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bbfe52-2666-4028-ba73-582cb9acdb21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73cb0d7-d7ab-4641-9a52-13b1ba35a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4cb0b7-f326-43c4-a1aa-67a0c328ac9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39467790-c94d-49ea-97a2-59f8b65722e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1358ea-4b04-49b4-b744-cade304522b0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c0fa72-ffb4-4e01-936b-e2f5e7599d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd78d32c-9803-468e-85ed-fe063f474487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c1d775-a99c-48f3-8bdd-c4de858d8a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5404c88e-2057-4369-80b3-2d88bcb775c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b95c08-da60-44e5-9a2c-aace61f9fd5b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54daa30e-4f8b-49cf-bfdb-ee759eba70db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d49291-d029-41c4-97d3-e8e2ffb696b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1846dad-ef40-4629-a03e-3d0c6de6dc40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbda5a30-223d-445f-96b4-977604199191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5c1ef4-3d5e-41ab-a7eb-c3e656a95297",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2c4b7-c761-459b-895c-5c7f102ccece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39abed8-d6c1-421c-862b-abbb0726717e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f701e14-33b8-440b-9258-73110ecb0218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3ac5d9-d80d-42b5-8a16-2e933de844a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25f791c-52fe-4277-ad7c-0a153519028b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f59d00-2d8c-429d-a486-d15dd089404a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cde5ce3-aaa9-4dc4-82f0-e5650bf0bae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa904954-19e4-465b-ae71-4a6c524e4851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4896cd87-bc63-4ec1-b2cb-8db11aea9892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48704e1f-8aad-4b94-8d59-380a07b5728e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fe328a-4354-4510-ab87-77b05ea30f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f2dfd3-6263-466e-bf35-30e76c1bdfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8701522-43e0-4e80-ba1c-fbb825dcc76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce6df3b-0537-4257-a789-1f51333cbab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae726d78-f9b0-42ec-9d43-cdb59586ee18",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b1134a-4ef9-4b91-881b-7bf68c3df8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aeff5e3-92ac-4a54-8049-de5aea8d7858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7182eada-118f-4c2d-8b42-e2598452e048",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22dc927-604a-4299-9872-7faf814e058f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1e0517-0f76-4afd-94a8-5c896fcc5e8e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce0f29-a8b8-4a61-bddf-0512cd482ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e135ae8-8090-46e2-8c07-3e5ebcd31465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05a7f12-7a9e-411c-861a-f7749ba09bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6a4807-d7c2-42ee-9fc9-7059cf666252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addef895-f874-4c96-a759-ad25234ee900",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd36a9b-511c-47e9-a4ec-d7ff90c682e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1e4fa7-2006-4d7b-a0d1-7ae36632f912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac35d4bb-c800-4c5d-ab0a-bb1aef7c4b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248bd96f-b9a5-4a10-98b6-6cac677a3d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c38238-6bf4-440b-b9f3-d7b34ded148b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb03c70-05f1-4ea1-a829-309f200af88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56367ddc-ae29-4999-809d-1e0e578995ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293219a9-e63a-42a8-a315-7cf5da9a93e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0beab68d-f3c6-4f31-866a-cde5036bfcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e1aa87-cca7-48f8-893a-4e8a828ceef8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68da05-8b97-4a7d-969e-f6add893bdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753851cf-4b60-4c1a-a5cf-01a40759c992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69396c35-09a3-47e4-999d-e696b685fe64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48365d61-e4a3-42cd-864d-8df9ebb6e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765eac3d-f076-4e20-8418-5a8dbb98cdb1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eb68aa-49ab-48d3-8dba-16802069adeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9518ef21-d349-46fb-81df-fffd232484dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f83ffa-e07b-4d46-9f20-6d63f2f24c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b4eeb1-aeed-4679-84f8-ad2d08982f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb4b852-2018-474f-ae8f-e9aa7f383484",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb68e63-0349-437b-8a2c-58e9912716c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23633cef-5d9c-467c-98a6-0f103e3add99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774e68bd-9e8f-46e1-917d-4b15b5c92419",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764b1369-392b-4273-85fb-800bdf9ac866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d333cef-9dc3-4c28-bcc3-9dbf2d89df33",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c25abe-357f-4f6e-a058-e9140d67b06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a66cb5-f749-4bf3-8f26-983748dbf548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839b68fe-66a3-4681-86f9-c11ae6492271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9ca24e-ce2b-41d1-9169-cc4075775f96"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a5eee53-da45-4ebf-96a6-330ca0661a5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e44ee32-e669-4e81-83e0-89254de9d5b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "517e5206-581e-4221-b354-994d814ca97d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf5f44d4-2dd8-4ed8-b145-83b6fbdfb883"
                    }
                  }
                ]
              },
              {
                "id": "34a04a6c-a08e-4b82-af31-aae299d1e3f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b206b64-17ed-4d84-9029-27788ca2931c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84664c-d04e-42bd-9fba-100273bbc402",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89210c80-bc83-4ddd-9c3c-e7f9b9c3c38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0588c4-28df-4b53-ae7c-45e0ca6dcbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc668da0-89f4-403c-9512-25ccdc133620"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c14a56b0-db5f-44a3-b7a2-db668300a280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7ff995-0848-4725-bd5c-88b8389c59d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "781d095b-e524-49c3-ad3c-fb50e15745d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cd7df75-d54c-445a-a0c1-35c5bf6b8c8b"
                    }
                  }
                ]
              },
              {
                "id": "b54092bb-212e-4202-a8ae-12bb619247d1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1e9edebc-8677-4950-aad3-6d998ac06b3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc0a332-d103-4daf-bfd6-6866a06682c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e22d8999-15a9-46f1-8c18-019d1a566b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92c6ed3-993c-4c0d-aa2a-abeee3f03630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5898308e-a369-4de7-9b10-4d149b37609b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a591a29b-3f40-4de2-a2ef-6ed6dc6529c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1064c9ba-316f-4ba5-b781-9189b2ff938a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcacb40e-fe91-4d44-b295-7cec0f2bdb75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17435fd2-9903-4eac-8209-fd00569512c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f31889d-1e93-43eb-a6e7-5c4c48998ea0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a87382-212d-4306-97ba-6d100ff6262d"
                    }
                  }
                ]
              },
              {
                "id": "7a4f6927-2258-4a23-9dea-0335a70c70c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ae5c357-9456-4efb-99d6-3f8e4c775094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d201ef16-9be6-414b-981b-d7cb076533ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "517017e0-f2d2-4190-b8ff-6d42fd7c633e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "850d776a-63a2-45ad-8644-47efd5cef98f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61901c30-eebe-4427-b340-fa649a936821",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f7145d34-32b4-4515-b6b1-b93c22063bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cec2a77-e0ac-4e25-ba54-030d3ee788ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e992af0-fb3e-4efc-b2b2-c97a64a4db10"
            }
          }
        ]
      },
      {
        "id": "dfb3777d-d0ef-474d-be4e-e6fbff3c1ec3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "de7bc2be-ceea-40b2-b2f1-6cc1ff1ece1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1148c3c2-14f2-44f6-9679-0ee5f1779ea4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "838b331a-5fa5-4197-83f0-9d635e9a8f7d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af59924-b2fd-4546-9290-3e5eb1cd7e9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "741d775d-6177-4fa1-88db-b29327bac21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d79432d-0e8b-458d-a659-2c83d5bc48bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acf55da6-70d4-4236-a221-7deeb4c39790"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eb55f17-a299-4289-9e92-2db41d1accfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe055a24-49a3-4b96-8939-f0239f8c84fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3082a72c-c0b7-45e5-a1a7-0001092f3549",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d800a4f-4e7a-44d1-941c-cb22ed28ffea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97f59b84-38ac-4cb0-b741-e7d0bff022e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6df0732e-703c-4184-af1e-ba415a672a09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18cec71b-6414-42b5-881b-f1d0f80a3652",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bae6c28f-e578-424f-b4bf-adfbfaaf75d4"
            }
          }
        ]
      },
      {
        "id": "acb3b7c6-decc-4324-87ef-c3f81de3b328",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d49cc560-01af-4a98-b89b-686ceed016f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ea1e9f8-a986-4d0d-bfd9-ace86173ff68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b8c780f-b090-4e8c-8362-2730ec046243",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575b18a3-a261-4b51-83e7-06be5690731f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "917d8b25-a6f2-4707-a461-39839014d849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7cdc42-8705-4cc8-9ee4-3eae1caec816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22217d11-49c8-49be-8ab8-a97b259b9b02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4fe04ed-00aa-4047-8c91-dadf65e6150f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aee69af4-1232-4df9-b4ef-43db636c1861"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f29a1e-a879-4ff3-a926-e87051ccfdc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4e6e6df-3caf-4fa8-838c-df2aaeee3a21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad3c1d43-1a96-4a1f-bea2-364ccbd824cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd7638d2-6c0d-446b-bc09-deea9f61a5d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5587ee66-7c44-423c-9c03-16fb804b44bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "202da1ca-c815-4d4e-a97a-ee581adff153"
            }
          }
        ]
      },
      {
        "id": "cfaa9081-32de-4cc2-ac71-2d195d1b9ca7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aff8ff7b-62f6-4754-87a8-887b87762382",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4ba0bce-be31-468e-bf02-af847ddd1662",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81c1cbda-ec3e-455d-81ac-c0ff7adaa47d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7468f93-5a2e-4f44-b3a6-fbfa7b5b7e0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f74df16-fda7-4141-917c-ef9bab3b38c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3614c3f-a58c-492e-9d7e-f05888be3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ceeb6bf-c54d-4f19-8bae-5d4d58532a59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "893ff2ab-d48e-4eb9-a4d6-bb7a6731faf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db038ac8-eeb8-4126-a922-71aa70f6e7eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eede88ba-6e75-4d65-8bb0-50af341ee103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8615b610-9e9f-4476-a596-10031e8db411"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52f76b12-b268-406d-96b2-3cd9d37a4a27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "607b7862-4263-44a1-accf-71b9754fc09b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "479fa6e0-ad2c-4ac7-b1e2-fd5439a4dc42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8424b38e-87a7-4cac-889c-150d7cf96932"
            }
          }
        ]
      },
      {
        "id": "a2d11b93-24cb-4c98-bc34-d641f8bed9c7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62ff69c6-9bc9-4b01-9ea5-4423615d04cf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae309237-efc4-4fbf-8dd3-251f52bbcf4e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e617b110-419c-4cd9-bb14-8cbd171e0fe6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0afc9279-0f79-4040-8de8-2a4212fdc56a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5789e26b-7d7c-4375-8891-915a0d591d42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.77816901408453,
      "responseMin": 10,
      "responseMax": 4957,
      "responseSd": 393.85590694935735,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694824311098,
      "completed": 1694824350760
    },
    "executions": [
      {
        "id": "87e7a95a-ab64-40fa-9858-f7202200f39f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cb087c7-ccc2-4de7-9565-797ed1dd4e67",
          "httpRequestId": "e2c7b576-7dc0-4f71-9288-b00a82f7e602"
        },
        "item": {
          "id": "87e7a95a-ab64-40fa-9858-f7202200f39f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "84873512-b3bc-4dff-8c7c-684eaf966988",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "251db1ff-0eeb-4e6d-a4d8-171731a825bf",
        "cursor": {
          "ref": "30ff4f22-a491-49c4-94f0-b627efe97a9f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9ff5dfc7-3361-47f7-ae1c-01d634015b95"
        },
        "item": {
          "id": "251db1ff-0eeb-4e6d-a4d8-171731a825bf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "01f23337-d44f-4395-8579-246f83875432",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8ebfec3d-50f5-4cf5-ab83-f137436bc616",
        "cursor": {
          "ref": "363ed3c2-761b-4b64-b3f6-0b1e322c3a65",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2858b5ce-6c77-47f4-8cda-471fc1555b42"
        },
        "item": {
          "id": "8ebfec3d-50f5-4cf5-ab83-f137436bc616",
          "name": "did_json"
        },
        "response": {
          "id": "42391689-fd49-4040-bf82-15931ab297b4",
          "status": "OK",
          "code": 200,
          "responseTime": 334,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c8af3f-969f-4cc0-aa45-81538e3f7c1b",
        "cursor": {
          "ref": "c002b562-22e6-44f8-9de4-1fbe38ab8ae0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed85cfff-080e-44a0-9d22-0ce8c4030737"
        },
        "item": {
          "id": "a1c8af3f-969f-4cc0-aa45-81538e3f7c1b",
          "name": "did:invalid"
        },
        "response": {
          "id": "96d1b6f8-6346-4af9-9efb-6fb9ef36cee8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 944,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c8af3f-969f-4cc0-aa45-81538e3f7c1b",
        "cursor": {
          "ref": "c002b562-22e6-44f8-9de4-1fbe38ab8ae0",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ed85cfff-080e-44a0-9d22-0ce8c4030737"
        },
        "item": {
          "id": "a1c8af3f-969f-4cc0-aa45-81538e3f7c1b",
          "name": "did:invalid"
        },
        "response": {
          "id": "96d1b6f8-6346-4af9-9efb-6fb9ef36cee8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 944,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00f620-e989-4cda-b3be-91b04a754d37",
        "cursor": {
          "ref": "0afc5f10-df32-4bff-92d6-c4681e90f320",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c5f7505-c878-4543-8d99-c001dda5c4f1"
        },
        "item": {
          "id": "4b00f620-e989-4cda-b3be-91b04a754d37",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "38942fdc-8f7e-43dd-be4a-c1c47c521f47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d28295-23cf-4b1c-8346-2373a72f12c5",
        "cursor": {
          "ref": "a5f41858-d213-4137-bd0a-e145b1d4b6de",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "587d7f8e-b430-4fe2-92a2-376d2c3536e3"
        },
        "item": {
          "id": "27d28295-23cf-4b1c-8346-2373a72f12c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e2a75a23-98d3-490d-9226-076645c12afd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84984244-a43a-40db-b9eb-1834cdaad723",
        "cursor": {
          "ref": "ce5d31e9-0a27-4c65-939c-b3950b31bf6b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "28ca1a64-2c46-4d51-b8c0-19215b9c687f"
        },
        "item": {
          "id": "84984244-a43a-40db-b9eb-1834cdaad723",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "34b5bf89-82c1-4356-a553-4e5e330c00fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbdc96e-d3db-4353-a356-09eef3013152",
        "cursor": {
          "ref": "36ed04b4-95d8-4302-8a96-b1d7d1999d76",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bbab39c8-76d8-46a7-addf-7587933e319c"
        },
        "item": {
          "id": "9bbdc96e-d3db-4353-a356-09eef3013152",
          "name": "identifiers"
        },
        "response": {
          "id": "223c1cf5-eeed-4d4a-9b94-9567d7dacf39",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67727f2d-ea55-4fbf-8fb6-45b6edf0fe26",
        "cursor": {
          "ref": "af5c82c3-d471-4713-9662-c7e8e612af6d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "300c3875-97f2-4d37-bdc8-6c7576f2843f"
        },
        "item": {
          "id": "67727f2d-ea55-4fbf-8fb6-45b6edf0fe26",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "24f77f63-c2ea-4de9-a8df-d03940ce4928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aa2d26-bb1d-43c3-8ab6-b6b6a5370574",
        "cursor": {
          "ref": "c7ef9725-59e5-4f12-90fc-485b75d2678e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6be89823-d3b5-4018-87aa-f96394c99de1"
        },
        "item": {
          "id": "a4aa2d26-bb1d-43c3-8ab6-b6b6a5370574",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "31ceea1f-69e4-4425-978a-a8546c5fc266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4923148-a91c-4a83-a5fd-58583badf9e8",
        "cursor": {
          "ref": "b3fbe9c9-10af-4ff6-87ee-5d4dccb423d5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "da1e0295-9449-4444-970c-6ddeb2c3c7eb"
        },
        "item": {
          "id": "e4923148-a91c-4a83-a5fd-58583badf9e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2289d871-7ef0-4931-96aa-919e9cc1b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d703c-6277-46b5-b31c-2c6876803bee",
        "cursor": {
          "ref": "2af98fb5-43d1-4f86-855f-9734521fe37e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a80841ec-2415-43a9-95fb-badfbe31788c"
        },
        "item": {
          "id": "eb3d703c-6277-46b5-b31c-2c6876803bee",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "499fd568-2f2b-479b-a067-dea189e08b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e75c15-4241-47d6-8db2-d45451885f87",
        "cursor": {
          "ref": "0e368883-64f0-4fa2-9288-d970f345b23b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5bfd3a64-6d11-45dc-b2eb-6c99f0ccb075"
        },
        "item": {
          "id": "21e75c15-4241-47d6-8db2-d45451885f87",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c27295fe-15d6-4007-9e66-41c5b1ea4a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1849a4-6836-49ad-ab1a-6c231143ca1e",
        "cursor": {
          "ref": "0133d119-2b05-4fbb-af43-39c7b01c5ba5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aedf79e9-01c4-4813-9321-e661a2a7c532"
        },
        "item": {
          "id": "7f1849a4-6836-49ad-ab1a-6c231143ca1e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "985ced2a-42b8-4d31-af2f-a54769b3508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c073d-00fb-45e7-b070-71c682f96a6e",
        "cursor": {
          "ref": "2a86fe4d-8d6a-4c55-8086-2c00289f3c9e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9389ec8-0c04-44b7-868f-9e04ec06b49f"
        },
        "item": {
          "id": "5b8c073d-00fb-45e7-b070-71c682f96a6e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3b69300-2323-4cd2-8d4b-781a26e19811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167e9aa8-9081-4b06-9796-e7b27a353924",
        "cursor": {
          "ref": "4a210b16-b72b-4122-bebb-02d73fcdd2ce",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "938967af-0ab8-4992-b803-74bad25461b9"
        },
        "item": {
          "id": "167e9aa8-9081-4b06-9796-e7b27a353924",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3b8c9b60-3e3a-4b0f-9e63-8acf55fea241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c0f04c-427d-44a9-a33a-f69979208d6e",
        "cursor": {
          "ref": "d9a32043-db5c-42fb-9658-9e641bca8e91",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "366daa89-91a8-492d-8b06-e49cd1b6b298"
        },
        "item": {
          "id": "a3c0f04c-427d-44a9-a33a-f69979208d6e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cf8689e0-feb3-4d74-bbfa-2e26d7edf3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1529f877-9bde-4498-885a-d4a554c6a287",
        "cursor": {
          "ref": "c0be772d-f75d-4185-adf6-54625a1b11d5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8efe76e0-0d1f-4b3f-bfa9-3f9f5bff4aa0"
        },
        "item": {
          "id": "1529f877-9bde-4498-885a-d4a554c6a287",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "26c4fcd0-f720-494f-ac28-95f812d6ded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8777db4-398b-44a2-bced-9a11f6359194",
        "cursor": {
          "ref": "539a564d-b6be-4f11-827f-14fe38c7b71e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "32ee9d98-7e2f-499c-81c9-503aaad0ea06"
        },
        "item": {
          "id": "b8777db4-398b-44a2-bced-9a11f6359194",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9151dd8e-321a-4d1c-80f4-3c050d636efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd207ea-3784-42b1-a679-5103ab3d0c28",
        "cursor": {
          "ref": "da39464f-e5e2-4caa-a306-ed6f16bb5f9c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4177170b-b6f6-415d-8466-c71723ba1ab4"
        },
        "item": {
          "id": "4bd207ea-3784-42b1-a679-5103ab3d0c28",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d1b53166-73fa-4bed-b990-0b67458d9d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd42596-b991-471f-8229-42b158fac441",
        "cursor": {
          "ref": "cee01f3f-cd14-46e8-8b48-1490dced3dfd",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cefeda5c-a587-4905-86eb-9156bc5e2775"
        },
        "item": {
          "id": "dcd42596-b991-471f-8229-42b158fac441",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae566b3c-3950-4f31-91a0-86b6d2dca862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0383fb-af24-41f3-9415-f2dfc9e5229e",
        "cursor": {
          "ref": "07018d8a-7f7f-4a09-b730-83cc6d23ffc0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2b368da6-5987-4bb5-8966-3fff29fc0704"
        },
        "item": {
          "id": "7e0383fb-af24-41f3-9415-f2dfc9e5229e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "731acc61-dfa6-4917-9a0e-5e40a12c5e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde874eb-d824-4840-a1c7-97640e8544ba",
        "cursor": {
          "ref": "413a36a7-1a1f-4c58-a559-62983398f12e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "699663a2-39dd-4c9f-a4b3-c605320cd4c2"
        },
        "item": {
          "id": "dde874eb-d824-4840-a1c7-97640e8544ba",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "901b9d41-83c1-4cf1-a26f-4baf27e9bc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990d4312-858f-444a-b7ac-9c28bcc89c9f",
        "cursor": {
          "ref": "6b229313-723f-4a9e-81a8-cfe2e0617993",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db1db198-2426-4232-a06a-b32667f1313d"
        },
        "item": {
          "id": "990d4312-858f-444a-b7ac-9c28bcc89c9f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c58aac47-fc08-4393-a1ea-c6526bfc4478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eac5e9-346f-4fd9-af7b-cc67568dd366",
        "cursor": {
          "ref": "f90b9bd5-3cf3-4730-a631-e915704c6d1e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c8737970-e654-4da3-80a2-be15efbf1fae"
        },
        "item": {
          "id": "27eac5e9-346f-4fd9-af7b-cc67568dd366",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0f602277-a924-43a7-b24a-294c256db41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6672080f-6b0d-4aac-9341-eba6c4530851",
        "cursor": {
          "ref": "56a2a2e7-a096-4d42-b282-941faee82c58",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "78d82f79-bf0a-4e20-a3bd-9df80d7eabdf"
        },
        "item": {
          "id": "6672080f-6b0d-4aac-9341-eba6c4530851",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4e717beb-40dd-4eba-81ae-b905062f12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505dbbca-07a6-48f9-aa08-a678320b4d1a",
        "cursor": {
          "ref": "645db001-4e3a-4b92-b4f1-7869c576ef6b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c2f3f455-3c1d-42be-b6f7-7649f0705582"
        },
        "item": {
          "id": "505dbbca-07a6-48f9-aa08-a678320b4d1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c3ec3ece-4581-43ae-9cd1-84ceae45ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581427f3-9b13-43df-9f0c-71c8b353d3b8",
        "cursor": {
          "ref": "ba56523c-01cf-4603-9caa-e0909dfbb31b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "03d1042c-da04-42f9-a90d-9735fc7beaf9"
        },
        "item": {
          "id": "581427f3-9b13-43df-9f0c-71c8b353d3b8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0f90a96e-756f-4507-9055-d062a436c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1256d7-a83b-481d-8a39-1cf19222589e",
        "cursor": {
          "ref": "e465ae9b-01c9-4ba4-b770-81478ec23ca7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3fe43904-478b-4370-87a7-4bc76a6c9145"
        },
        "item": {
          "id": "2a1256d7-a83b-481d-8a39-1cf19222589e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f76d20f0-4cbb-46bf-9045-773d3e2d7a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129ddcee-45b2-49ab-89b5-d06eb65920e6",
        "cursor": {
          "ref": "b3b84f67-e71f-4366-9ea6-0db9a8527e62",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e8638127-d6c3-46d8-9a03-510651806417"
        },
        "item": {
          "id": "129ddcee-45b2-49ab-89b5-d06eb65920e6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f18b4c0-f36a-4762-b6d4-77434e5db476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edfb210-20ec-4a64-a27e-e66ac3f8dcd6",
        "cursor": {
          "ref": "a54d64b1-74ee-4c8f-9079-68c4c2ecd0c5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "177b3ac9-d145-471a-95be-96bb7b20e656"
        },
        "item": {
          "id": "4edfb210-20ec-4a64-a27e-e66ac3f8dcd6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ab09cfa-0d62-4d19-86b5-683a5c96ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d6b23-188a-4136-8f5f-1a5665364650",
        "cursor": {
          "ref": "bb252c71-5e74-478f-a966-684b148075b2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4ea484c1-144a-4600-b536-17ab1f7944e1"
        },
        "item": {
          "id": "646d6b23-188a-4136-8f5f-1a5665364650",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "de5e96dd-110a-497c-9819-86a941627ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cf2292-0bca-47a8-80cf-52dd8579e4c0",
        "cursor": {
          "ref": "4096f41a-daeb-49f1-8de1-2116f1b4371a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "21e46e95-d587-4593-8cf8-4426c35b4e20"
        },
        "item": {
          "id": "79cf2292-0bca-47a8-80cf-52dd8579e4c0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75d2654f-5349-482b-9a70-5e6381445f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874de525-fbf0-4af1-bcd7-2979d8eb4dba",
        "cursor": {
          "ref": "1570d422-ff35-406f-8bb7-d0cae7f6f8b9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5bcc9be3-507d-4348-979b-b104f8ab85d6"
        },
        "item": {
          "id": "874de525-fbf0-4af1-bcd7-2979d8eb4dba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4cdd6358-b31b-4bf3-82cd-5805d8cecb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bdff4b-59d0-4cd3-9190-cd84c7bf3abb",
        "cursor": {
          "ref": "3afd5a08-469d-4f7f-8f65-30413d349133",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "842ee553-861b-4df1-8530-9f40bb6c9110"
        },
        "item": {
          "id": "99bdff4b-59d0-4cd3-9190-cd84c7bf3abb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e7b2445b-4785-41c3-be94-4563efbb12e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f160bb03-0fb1-4b30-8147-d3d44d0827fa",
        "cursor": {
          "ref": "60160db1-b040-4d8b-852f-13f07cf3b333",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b607e4ee-2d31-4d30-aa9f-2658775dc42e"
        },
        "item": {
          "id": "f160bb03-0fb1-4b30-8147-d3d44d0827fa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ffe48f62-e65e-44cf-8681-97902a38f68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20b6d78-e32e-47c2-9be6-17108bc1a5da",
        "cursor": {
          "ref": "e123f6c9-5ca0-41f6-aa16-d3889370a7e2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d4edce3f-9f87-4bd9-b26b-ff468b26da92"
        },
        "item": {
          "id": "f20b6d78-e32e-47c2-9be6-17108bc1a5da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8c4f70a5-3a0a-48d1-ad85-7fd77227f2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aca7eb-702a-4837-beef-d4763f636b1a",
        "cursor": {
          "ref": "8c3443fd-cca6-4600-8a09-173036ade3d0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5fdb70a5-a204-4da5-8a9c-481e4b1ce61d"
        },
        "item": {
          "id": "e7aca7eb-702a-4837-beef-d4763f636b1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e6d25ded-327f-46bc-afc4-d61f89461ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9809ecce-0b81-471c-80fa-98005bdc436f",
        "cursor": {
          "ref": "04df825a-86e0-47b5-ad1b-c05047d86952",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e72afaf2-f283-496d-a861-115e1cca6c1c"
        },
        "item": {
          "id": "9809ecce-0b81-471c-80fa-98005bdc436f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d76ca00d-a764-40ad-b39a-cf876d76c897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a29f6a-5206-4639-91a5-361dae33066e",
        "cursor": {
          "ref": "70fb77a5-230e-4e03-ab62-19967484a354",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fd968c51-0481-4460-8dcb-33eb5edff4d0"
        },
        "item": {
          "id": "32a29f6a-5206-4639-91a5-361dae33066e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2672cd77-599b-4c97-b6bb-7178755261ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6787a90-be8a-4410-8100-b5095bd03112",
        "cursor": {
          "ref": "323acd54-711f-465b-8bdb-aac1558169cc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7b4fee1d-f933-47e0-9f33-a5495d32a3ff"
        },
        "item": {
          "id": "e6787a90-be8a-4410-8100-b5095bd03112",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eaf29fd5-e412-40ef-b031-7c12342445e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef7b329-66b6-4bf0-80a6-5ce7f0b5bd63",
        "cursor": {
          "ref": "69400017-f5d8-408e-9806-75884a340add",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d6847d94-d6e0-4392-aa42-0935fe2a7775"
        },
        "item": {
          "id": "3ef7b329-66b6-4bf0-80a6-5ce7f0b5bd63",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d683f3bf-3059-4537-bec4-f2f112a22271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84176f-9d10-4abf-8028-4253df26eeed",
        "cursor": {
          "ref": "36f930a1-4915-4b9e-ad5b-33ebd6564227",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9100b2be-961e-42ff-9095-ce52e7a151e7"
        },
        "item": {
          "id": "4d84176f-9d10-4abf-8028-4253df26eeed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8bdb3832-a6b4-473d-ae70-330c1f82720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668c6589-3307-44bc-8d47-fc6a7fc53f70",
        "cursor": {
          "ref": "485bd3c4-7004-40d0-921d-be637ac4ebc2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "54d54751-f5fb-4151-8ea1-803e28ad5eb2"
        },
        "item": {
          "id": "668c6589-3307-44bc-8d47-fc6a7fc53f70",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "683cffbf-c6b3-4081-86bd-412a459e4310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2360178c-19ee-47cc-b29a-6d35089a8757",
        "cursor": {
          "ref": "8c24fb1c-1f65-45fd-91c6-bf504a915d50",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "62a4e512-d398-473e-b037-1fb4872f5f05"
        },
        "item": {
          "id": "2360178c-19ee-47cc-b29a-6d35089a8757",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5f206b20-5a8f-4a0d-8334-404613eea2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537af6f8-cf48-4f23-bc0f-cf3c22cff7f5",
        "cursor": {
          "ref": "5bb78488-dd7c-4ef8-92f0-77c0327d00b7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d1e11aac-5a34-49c2-8846-0235c6a90af9"
        },
        "item": {
          "id": "537af6f8-cf48-4f23-bc0f-cf3c22cff7f5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e0fa8b91-3ed3-4e1c-a010-587d078fef77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5b0520-6c49-4e9e-b95b-9e72f292d371",
        "cursor": {
          "ref": "0be6bc39-4ece-4c28-b3af-dbf8b1bada9f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a0ab506e-6bd1-4c43-81ce-87f013b486b6"
        },
        "item": {
          "id": "ac5b0520-6c49-4e9e-b95b-9e72f292d371",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d01595df-1ca6-45c2-88cc-e0b87ecec6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07baa1a4-8342-4bda-baae-b0bc8fcf0b02",
        "cursor": {
          "ref": "3c0fccf2-73cc-4649-b403-184a64261f26",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "12b1928d-5181-475e-a155-81198325dbfe"
        },
        "item": {
          "id": "07baa1a4-8342-4bda-baae-b0bc8fcf0b02",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "93161d9b-c40b-4012-8e35-625609e31d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2901471d-301e-478a-b9e7-54c4d53957e5",
        "cursor": {
          "ref": "e6f36c76-4d9a-4e8e-bfd0-974ca405d666",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b95d35eb-429a-4922-9553-626be248546e"
        },
        "item": {
          "id": "2901471d-301e-478a-b9e7-54c4d53957e5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "632229da-8e9d-4f73-9c02-d76353e1c5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43e8ac-ed53-4756-880d-2424eeb17779",
        "cursor": {
          "ref": "f7d83839-0daa-454a-a351-1771838f1463",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1ccfd215-54a6-4ad4-bf0e-8034d1855145"
        },
        "item": {
          "id": "bd43e8ac-ed53-4756-880d-2424eeb17779",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8c4cf595-c3f0-4342-af91-da27e47124a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40859547-e2dd-4d54-98ce-6efbcc4177e9",
        "cursor": {
          "ref": "7e96f390-7eef-4963-94e6-9ddee80d5dba",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9dd70f98-0b3f-42ae-8234-199b5d220e50"
        },
        "item": {
          "id": "40859547-e2dd-4d54-98ce-6efbcc4177e9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d91835c6-a1b6-4c26-a490-fe61cd2c6f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3f8f71-7e6c-405a-8d7f-fed5e833ffe2",
        "cursor": {
          "ref": "ac5fd0a7-e63b-4a82-a99b-143c74bcd85c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "45dc3131-daa5-4b3b-a552-87c041142c9a"
        },
        "item": {
          "id": "9d3f8f71-7e6c-405a-8d7f-fed5e833ffe2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c230aa18-79e3-418c-827d-abde04b7f3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00766c57-8955-4077-8a4b-3cec7ceb7637",
        "cursor": {
          "ref": "72000cd1-d807-4e30-bd28-80c3937e74fd",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0d516f4c-8f47-44de-b02c-185eb79fd912"
        },
        "item": {
          "id": "00766c57-8955-4077-8a4b-3cec7ceb7637",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "90df83c9-bc0f-4d33-890e-de16a5adac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb0394-c868-449f-9996-786f21569712",
        "cursor": {
          "ref": "99b17df8-dff8-4fa6-a30b-d19f75bffe5f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "547fe348-2429-4bf3-a027-379b0d3145cb"
        },
        "item": {
          "id": "27bb0394-c868-449f-9996-786f21569712",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "38946262-da7d-40f1-a770-7114132565b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877265ed-d28e-4aa6-9244-35f9c6fbe5c9",
        "cursor": {
          "ref": "02819529-13bc-4423-9a20-9a583ed4b574",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d368b133-e37b-4a03-ac68-30294b91ab66"
        },
        "item": {
          "id": "877265ed-d28e-4aa6-9244-35f9c6fbe5c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f43620a7-2d7c-48e9-9295-20a9e7532282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f5d89-420b-4bcd-bfb7-1c1f8a6ad8bb",
        "cursor": {
          "ref": "5d7c13f6-f1ef-4543-85ab-0aeffad2211d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7c9b048b-30b7-4c6b-9ab4-e3fb8b525179"
        },
        "item": {
          "id": "536f5d89-420b-4bcd-bfb7-1c1f8a6ad8bb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c7063669-6af7-4c14-8561-c9329e856971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe9b54a-680b-4893-a364-0d59fec4ad86",
        "cursor": {
          "ref": "4342c3ee-adac-4190-9c95-29a6584d2fed",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df1afc4d-4cef-407d-b06a-1807e606b52b"
        },
        "item": {
          "id": "2fe9b54a-680b-4893-a364-0d59fec4ad86",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "93e3aaa0-d9ab-402d-b398-6921b6e54649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52317c2-7dfc-4a21-b0da-54f135d5e750",
        "cursor": {
          "ref": "c85c8739-38e3-4a63-87ed-87338cb1ad86",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e420bfb-bc7c-4d0d-b653-053b3c7f4aee"
        },
        "item": {
          "id": "a52317c2-7dfc-4a21-b0da-54f135d5e750",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ea95e394-74c0-4ea7-9def-5cce55b27472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6f1214-7478-40a7-9d7b-d5b6f96d559c",
        "cursor": {
          "ref": "c19603a0-d8a7-4941-8ec3-9bc61be363f5",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7a5770a9-b1fc-486e-a5ba-ae376b12be37"
        },
        "item": {
          "id": "6f6f1214-7478-40a7-9d7b-d5b6f96d559c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9db7ebe4-8e61-4f37-9c51-c981ee44cb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5bf2ba-99ad-47b9-8157-ef4d49bf37f4",
        "cursor": {
          "ref": "729fa2f2-f81f-49f3-b743-ba815a58e8d7",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "94db4b0f-145c-4e41-aab5-3b6aa89e6a55"
        },
        "item": {
          "id": "cd5bf2ba-99ad-47b9-8157-ef4d49bf37f4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "de0c5749-ba98-4cc2-a61a-7c3ef82cadee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03848c1-3cda-4e9b-a527-47d6871d2793",
        "cursor": {
          "ref": "f9b55f1d-2059-435e-b010-0c8b81f387f3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5ab424d5-31ce-4829-bb90-d32d00116ac4"
        },
        "item": {
          "id": "d03848c1-3cda-4e9b-a527-47d6871d2793",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4912fd4d-361a-49e5-8673-effccfead81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff561a6e-8042-41d3-bd0c-7a74839445bc",
        "cursor": {
          "ref": "91ac8dc6-0996-4add-8102-0becf87096df",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "268f2a54-65e5-445c-99c1-cbed14efa227"
        },
        "item": {
          "id": "ff561a6e-8042-41d3-bd0c-7a74839445bc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9696e4c5-4ae5-4a78-ab85-c55526f717de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d947dac8-9fa9-4c03-8b83-12621016768b",
        "cursor": {
          "ref": "09f7e141-fba0-42b5-9714-d7ec7dae505d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ca99baf-c248-4956-a932-b9689117e508"
        },
        "item": {
          "id": "d947dac8-9fa9-4c03-8b83-12621016768b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "09f367c5-c349-4c87-af0e-347753fc12b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e85663-f99c-473e-9fc3-20feb208f2a5",
        "cursor": {
          "ref": "b45c0331-e8e4-47bb-bfa8-b8016c2b0cad",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "34606ab9-6283-4575-ab69-018ab3777802"
        },
        "item": {
          "id": "51e85663-f99c-473e-9fc3-20feb208f2a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b46e734a-43c8-4b63-b9be-673aac82075a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68022bfe-0514-41fc-ae2a-c20bf337c498",
        "cursor": {
          "ref": "ecb9eb15-f665-430f-a94f-436f619d68a8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db1bbac9-f0e2-49bb-a913-1d3740daf9a2"
        },
        "item": {
          "id": "68022bfe-0514-41fc-ae2a-c20bf337c498",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2a9fd23b-bb6c-47d7-9fb4-0a5ecf25769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55022c3-5a69-4238-9c43-9cb13b57c9d5",
        "cursor": {
          "ref": "15a426a8-e75a-4dbb-9a7c-0ec782220253",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dbaa8d56-9949-464d-bd79-d7a17cf15b1d"
        },
        "item": {
          "id": "c55022c3-5a69-4238-9c43-9cb13b57c9d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92128062-67fa-454e-80f1-00b71aa7e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be993ff-3014-4030-9f05-cd420bca3e79",
        "cursor": {
          "ref": "cdb0a0c1-b63a-43b7-b46f-e4d10cc93d84",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d1c4fb96-7a9b-43de-91a8-15c90480eb83"
        },
        "item": {
          "id": "9be993ff-3014-4030-9f05-cd420bca3e79",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1b30570-71f5-4c0a-80c1-daa26f2f17e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5099dffd-6283-4175-afcf-63518d74f532",
        "cursor": {
          "ref": "a404ba9f-44d2-42bf-b92d-b6fcd429c06f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7274e775-a680-4539-97b8-d20890879ae8"
        },
        "item": {
          "id": "5099dffd-6283-4175-afcf-63518d74f532",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2bb75812-7943-4c45-b704-3562ce2ecc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eea209-c767-4c7c-bc9b-7cee982f3caa",
        "cursor": {
          "ref": "9bd890b0-0a12-4fe2-8c3d-e89e8ebb755a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "761cba46-cebc-4866-805a-14aa3ac06340"
        },
        "item": {
          "id": "69eea209-c767-4c7c-bc9b-7cee982f3caa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ba70d693-1d7b-4f63-a768-d0eab52b8539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3d0a7-c1fd-4fa7-b754-59584b820884",
        "cursor": {
          "ref": "184eee8f-d67e-4732-b28c-cb0b28b0e950",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "676ff908-fc84-4b90-bf54-eaafa9930417"
        },
        "item": {
          "id": "63d3d0a7-c1fd-4fa7-b754-59584b820884",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7dc791a1-9d57-4a70-821c-a01901e85658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d18f07d-ec34-4a3b-8c09-0e5a392d6e5f",
        "cursor": {
          "ref": "ca340a55-7ecc-44bb-83e4-b14dd4f765ba",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11d28ada-583b-4ce2-9394-ff0c4e0127c3"
        },
        "item": {
          "id": "9d18f07d-ec34-4a3b-8c09-0e5a392d6e5f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8c7a8883-20be-4294-9e86-616cf8f3be86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4ddad7-3214-4a00-ba30-7a17e076c3d5",
        "cursor": {
          "ref": "c0db4f06-e4a6-4229-a7b9-cd49d2449dda",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "25400798-5333-400b-9402-5176dfbff534"
        },
        "item": {
          "id": "3e4ddad7-3214-4a00-ba30-7a17e076c3d5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2a5c05a-dd3c-4de1-9dfb-3231e8b1c282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13625f2e-4d29-47d5-918d-070dfce0df4b",
        "cursor": {
          "ref": "e26f997b-e773-406e-8b24-c521e72b1217",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5ba10f2-3a88-45da-b024-b7c06519f461"
        },
        "item": {
          "id": "13625f2e-4d29-47d5-918d-070dfce0df4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "14d3331a-3e6b-42f9-9289-93df86ff759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e1417-0c94-4002-b157-106319d8c973",
        "cursor": {
          "ref": "352c39f5-06d8-4632-a99f-eff635a01167",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "312f6be8-5b53-4443-abda-3b32d0b132f3"
        },
        "item": {
          "id": "fc9e1417-0c94-4002-b157-106319d8c973",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f1ba28e8-d6d2-4905-acaa-becc632aef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e55e647-6629-4444-915a-cd562b0a835e",
        "cursor": {
          "ref": "402ffc66-6636-4adf-911d-1f3aea7c9b12",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "691d2d22-7cfe-403a-a366-71e4ab0be3dd"
        },
        "item": {
          "id": "7e55e647-6629-4444-915a-cd562b0a835e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80d4d7d4-5894-4d2a-909b-6b35c1e7e613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a9a23-6c61-43f1-a8d8-49e38315b420",
        "cursor": {
          "ref": "f4d51bee-4c72-4061-96d2-e183bdb1bb6b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ceb1eb8d-e88d-4b27-a6aa-413b24233fdd"
        },
        "item": {
          "id": "324a9a23-6c61-43f1-a8d8-49e38315b420",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e4fe907-b74a-41e0-b7bd-514f4131458f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d114f-2b82-4877-9185-dac834097647",
        "cursor": {
          "ref": "0edb14ad-1590-458c-a6a2-da3ac38f8f15",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "65970ed3-6967-4de9-9a37-bb0754a5744d"
        },
        "item": {
          "id": "c79d114f-2b82-4877-9185-dac834097647",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c6a0ba30-020d-4ae9-9205-714f1f8f7119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f1d33b-1420-4a91-a091-ed2aa734aa03",
        "cursor": {
          "ref": "037409ef-70df-4c65-bb4d-7c7e1c806def",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62efe371-3ac5-4dcb-b43b-708669fdd935"
        },
        "item": {
          "id": "c4f1d33b-1420-4a91-a091-ed2aa734aa03",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e193241-194d-4d89-9d42-36ab439503dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2d17ae-77c6-484e-abdd-8788d075dbb9",
        "cursor": {
          "ref": "40fd36fd-ce86-4b05-8c3c-951cc6038377",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "02dbfc7e-76b5-4cdb-9dbd-80e56c5b0270"
        },
        "item": {
          "id": "6c2d17ae-77c6-484e-abdd-8788d075dbb9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a73fb80-f9d2-41b3-91e5-70b139d8005a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539beb6e-d57d-4cc6-9f80-5e70b82f2528",
        "cursor": {
          "ref": "043fa70a-848c-4be5-afeb-d4a330e48f85",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ff4e9ec1-4474-4c7a-a059-ca95792094f1"
        },
        "item": {
          "id": "539beb6e-d57d-4cc6-9f80-5e70b82f2528",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d4bc705b-162a-4b19-9ffc-0d6104f5fc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f4d7e-03a2-4170-ba7d-2fcbd125d0a1",
        "cursor": {
          "ref": "236657a8-8230-4771-ae66-136479cb22be",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "817296cd-305a-463c-aa3f-04d189f07e59"
        },
        "item": {
          "id": "9d7f4d7e-03a2-4170-ba7d-2fcbd125d0a1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "beb8920d-6429-454c-b0fb-411c99a80400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd82d189-de3e-487f-9bf8-bd2f645f5510",
        "cursor": {
          "ref": "14cf7aeb-c1f9-4509-be03-8462c61416c9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5744fc9d-6239-4b26-8642-9754beebae0c"
        },
        "item": {
          "id": "dd82d189-de3e-487f-9bf8-bd2f645f5510",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "039687ce-731b-447b-ac9c-e581dff8e0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea67d36-907c-49bd-9e03-8d3cad302927",
        "cursor": {
          "ref": "31806e74-9700-40f6-aef0-e0bd15f77e9f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "44f9d3f6-5187-4066-baa4-fe73dab4a037"
        },
        "item": {
          "id": "eea67d36-907c-49bd-9e03-8d3cad302927",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5250dc91-1469-454b-8531-96111830932a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a040741f-d440-45e1-9eb5-b890bbde92e5",
        "cursor": {
          "ref": "c5fde07b-e332-42f1-b5fa-ebe482207b85",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6472d73c-4ef2-434a-bdeb-b0bee06146c7"
        },
        "item": {
          "id": "a040741f-d440-45e1-9eb5-b890bbde92e5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1a2ba575-5e38-46ed-a419-014d3806f9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db57b72-9e64-4bc1-a4b4-2e68935c51b3",
        "cursor": {
          "ref": "7d6b9302-046f-41b2-8433-9e48048fabb0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b021d4af-1798-4ad3-9fbf-dcb4d40077ff"
        },
        "item": {
          "id": "3db57b72-9e64-4bc1-a4b4-2e68935c51b3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ecba205a-6b3a-4bcb-9ebd-4f1dbd7f52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff6a2d-f6fe-4730-ba66-0a3d1412ba14",
        "cursor": {
          "ref": "ffd0077a-03d8-4cf7-8d65-03b299282158",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8877b2ca-0fde-4f5a-86d8-929bf97409b2"
        },
        "item": {
          "id": "96ff6a2d-f6fe-4730-ba66-0a3d1412ba14",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "72f239c8-f2bf-44c6-9cae-732a95662052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5f783-f6ee-4ba5-86d3-d781b671fe94",
        "cursor": {
          "ref": "077990fc-2137-48f9-9bad-5d5bd19c6322",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e1b11d59-7004-450b-8783-873dfc90baad"
        },
        "item": {
          "id": "19d5f783-f6ee-4ba5-86d3-d781b671fe94",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0914d8df-d5c6-4f34-9263-3a4c5a5aa99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302460b1-5e1d-4564-93fb-6bf530103d8f",
        "cursor": {
          "ref": "162f0e2a-5958-4bab-b923-ccf0d7aa29c6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab212a40-fe50-4bc9-8197-0423ac73b38f"
        },
        "item": {
          "id": "302460b1-5e1d-4564-93fb-6bf530103d8f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e1de617f-7caf-4290-a04f-c511cb7f4caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1dd224-290e-434a-a03f-816add421b49",
        "cursor": {
          "ref": "eb3f710e-e38a-478d-8113-4ecbdd9f9a23",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d038aab7-0f6e-4879-a99f-3d6a2b575ec4"
        },
        "item": {
          "id": "3d1dd224-290e-434a-a03f-816add421b49",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "366e8d49-e12c-4a24-b725-51eb44b867f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a295e29d-6d93-43c0-b355-8ca8b7d7e433",
        "cursor": {
          "ref": "35ac0e4f-4c47-4956-b9de-f78ab8f5a5cb",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4f3d3fd-71cb-4856-b203-f94f5863ac60"
        },
        "item": {
          "id": "a295e29d-6d93-43c0-b355-8ca8b7d7e433",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "69c90af2-b382-4187-8c02-53d09ad345cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6259dd38-630d-4904-936a-c1301795dca9",
        "cursor": {
          "ref": "e7b7e40b-f25c-40ff-aa3f-01a163881ba9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1ac1c0ec-738f-465d-b874-4e9687323b87"
        },
        "item": {
          "id": "6259dd38-630d-4904-936a-c1301795dca9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5f0ba62d-2a7a-47db-8264-4d8c7a442584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eaf0e5-df19-4e2c-bc69-fa9e8f863275",
        "cursor": {
          "ref": "a2c51c3f-0c68-46b3-aaef-6805725c161d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d30da680-1b4d-4f07-87cb-b001abc38ea3"
        },
        "item": {
          "id": "a2eaf0e5-df19-4e2c-bc69-fa9e8f863275",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "204b342d-170f-4185-a7e4-cbc0694da071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16388ec2-5e64-4494-8529-e67b161d3e60",
        "cursor": {
          "ref": "3e8a411c-3fb9-4b0e-bd02-95b700d3e904",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "014ae50d-7aea-4ef8-978b-c04c8983f265"
        },
        "item": {
          "id": "16388ec2-5e64-4494-8529-e67b161d3e60",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b4b758a-6a5d-406a-91c1-3afca31c3184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109365e0-fad8-4499-8804-b76e56165f87",
        "cursor": {
          "ref": "54846545-fc56-4834-a4f5-633ae0b089c0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f6912f63-21e4-4f12-980a-9927d03d24bb"
        },
        "item": {
          "id": "109365e0-fad8-4499-8804-b76e56165f87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c19cd863-75c7-4500-b79f-a7e5f32cd4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2348980-9c36-4713-ac75-0d8132537b1d",
        "cursor": {
          "ref": "17d2a25b-8aa3-4899-adfd-ec04805c48d5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "70d6475f-5728-4e15-acab-922f9120b920"
        },
        "item": {
          "id": "a2348980-9c36-4713-ac75-0d8132537b1d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5dd52fb4-a50c-48c0-8815-b9b7f58ffb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d402bc4-1169-472c-912f-def37400a2b7",
        "cursor": {
          "ref": "1d6093bd-3eab-45fb-b406-53e127b2b98b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e932dc4a-6618-4269-8011-21354b71ba70"
        },
        "item": {
          "id": "0d402bc4-1169-472c-912f-def37400a2b7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "89ad1b4d-efd9-4afa-9eeb-e891980297df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff14e1-7d95-4eb2-87ad-b36e99929876",
        "cursor": {
          "ref": "d9ecdb94-5c6e-43cb-b9b7-9848c934bc37",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3dd53530-8cbd-4c83-a2b8-6180a42982c0"
        },
        "item": {
          "id": "3dff14e1-7d95-4eb2-87ad-b36e99929876",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae9a98d7-91db-4484-b9c5-974922512dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2dcb59-2692-478c-af67-825bd3e89e61",
        "cursor": {
          "ref": "2c3555ee-41c1-48c1-82bb-a8e7ced9f146",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f56225e1-bb52-409e-9568-1735b15b5a2b"
        },
        "item": {
          "id": "ed2dcb59-2692-478c-af67-825bd3e89e61",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1845dd7c-bf5f-4746-b39b-b13f194c4b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ddbbf-1681-48cb-acb3-0c887fb87857",
        "cursor": {
          "ref": "da366c9f-0bed-4fa9-b705-6deec15bc443",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5f40ffa0-436e-407e-a5b2-7595fbe6a279"
        },
        "item": {
          "id": "bc8ddbbf-1681-48cb-acb3-0c887fb87857",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4ffd11a6-a700-4727-8da0-669f05db954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a69e87-d897-48e4-ac61-1c8388ca9e66",
        "cursor": {
          "ref": "dda8d3b0-a2ef-4cd5-8182-8843fabac48b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1cc45de9-3a8e-4eec-b2b3-3a1bc8bc52cc"
        },
        "item": {
          "id": "a1a69e87-d897-48e4-ac61-1c8388ca9e66",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e711b463-ade6-420c-ad6d-9dccb4737210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee63de3-a0be-4626-8e30-b5db8106ee73",
        "cursor": {
          "ref": "7680366d-c43c-4730-b06e-5e532a28fabf",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63a3ceee-8f8e-42e3-96bd-f2c462a17d06"
        },
        "item": {
          "id": "7ee63de3-a0be-4626-8e30-b5db8106ee73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a16f9860-79fc-4ed1-bc05-92151e52fb87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95ba41-29ce-45dd-ad13-44b05a7f2bd6",
        "cursor": {
          "ref": "a5af964b-f2d0-4b5d-b5d7-e725b4181559",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9213a999-e2ee-4195-8c09-f511ae93c42f"
        },
        "item": {
          "id": "6b95ba41-29ce-45dd-ad13-44b05a7f2bd6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6474788c-7a40-445e-ae2d-d8664c0ac9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "15ac09b8-df1b-4442-9c04-03d927a7c2c4",
        "cursor": {
          "ref": "63a0083d-c399-47d1-984b-52f4a7ad0cd7",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29bf32b1-8153-4799-96ae-9f3dda884de1"
        },
        "item": {
          "id": "15ac09b8-df1b-4442-9c04-03d927a7c2c4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "599fbbd4-5510-41e1-8d74-dbc9e3ee5cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "23be3c1b-95bf-4900-88d6-200cc441aba2",
        "cursor": {
          "ref": "f95d6e7d-1f24-4454-a5a0-96e483c5cd32",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8ffef15d-7fff-4196-9f86-2d4806d7de3c"
        },
        "item": {
          "id": "23be3c1b-95bf-4900-88d6-200cc441aba2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5c99b7ca-c7a5-427f-81ac-83e10600c18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "68780470-f76e-4a85-9640-061063adacd1",
        "cursor": {
          "ref": "5125e6c6-6302-458f-aa34-4ff0d4662a6f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4e8f79a2-be26-445a-aa9d-988b18bc694a"
        },
        "item": {
          "id": "68780470-f76e-4a85-9640-061063adacd1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7f8b5ca2-1009-4cde-8594-3b1c9ef6e072",
          "status": "Created",
          "code": 201,
          "responseTime": 4957,
          "responseSize": 995
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "98337331-a27a-46ae-8dd3-cabb3af33fed",
        "cursor": {
          "ref": "0fff0866-391b-441b-a3b0-e786bf23b9a8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9a65a9fa-47e7-4d8f-82bf-0b524901b7b3"
        },
        "item": {
          "id": "98337331-a27a-46ae-8dd3-cabb3af33fed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "571efbd9-01d6-4fb8-9719-44a446e7fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "97cf5511-9601-4d8a-87d3-12fc8a9fa644",
        "cursor": {
          "ref": "33f52217-fa03-4e83-93a8-16bb3a1e6881",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "613847a1-332c-4e46-9028-db7755c9e4b8"
        },
        "item": {
          "id": "97cf5511-9601-4d8a-87d3-12fc8a9fa644",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9f25df0e-46b8-4b81-a599-a25956ed3b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a1664c6f-1120-4f04-a508-ad00f422b32a",
        "cursor": {
          "ref": "6bb4d765-468c-4a69-a5bf-b9bb3c33acb4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d79f22cf-5b66-430d-9e7b-8fb2a9bf58b5"
        },
        "item": {
          "id": "a1664c6f-1120-4f04-a508-ad00f422b32a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "236f5b49-d2e4-4b23-aa90-2c894854808b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0becee46-b83e-4b74-9c5f-e16fc85f1b80",
        "cursor": {
          "ref": "a8f80f57-e82d-4c18-820f-af36f68973e3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8889def7-fb2c-4038-8b2a-d36c4ef4802d"
        },
        "item": {
          "id": "0becee46-b83e-4b74-9c5f-e16fc85f1b80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80c40112-7d69-4369-b7e4-db0c417efe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae987ff-f8c8-410b-b676-f1ecb315c15d",
        "cursor": {
          "ref": "f65ed69a-fddf-4e50-ad74-97aa99224e49",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dd97e11c-75b3-49af-bdc9-b8d901e6fa4b"
        },
        "item": {
          "id": "aae987ff-f8c8-410b-b676-f1ecb315c15d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a64bd020-5876-49a7-8f75-f1aaef1d5e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d39bf5-04df-4a7d-b667-bc5dc1d9caef",
        "cursor": {
          "ref": "d895409c-7109-4c82-b039-8a05e14f25e6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26d910fc-490e-4e0c-add2-d48d06a7b7eb"
        },
        "item": {
          "id": "25d39bf5-04df-4a7d-b667-bc5dc1d9caef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c0f7a570-5f6d-4b66-a9d5-583576f0a1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b85d4d-2391-408d-ab12-0820ed01475c",
        "cursor": {
          "ref": "09487030-1b9f-4c9e-91bc-3e5456a94c58",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c6d94b0-2a45-4748-a4fd-352fdfb2872f"
        },
        "item": {
          "id": "c9b85d4d-2391-408d-ab12-0820ed01475c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b698ecc8-004c-472c-b984-1cb51cdc2fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0464ab7-7e66-4d3c-bf4f-8ac611a883df",
        "cursor": {
          "ref": "336c6b9e-4067-4ac2-9ec3-b2fb3b76c0e1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3d7f7472-d0fe-4796-94d2-691784bf0eaa"
        },
        "item": {
          "id": "b0464ab7-7e66-4d3c-bf4f-8ac611a883df",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61c1f0be-4f21-411c-a5bd-15ae26596484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df554e32-f615-455a-bf9b-24c4cc0b8430",
        "cursor": {
          "ref": "31a25296-eb78-4226-ad85-32bd7c9211aa",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ba76f02-a8f0-4f8c-a895-e8ffe6e24504"
        },
        "item": {
          "id": "df554e32-f615-455a-bf9b-24c4cc0b8430",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca01c49c-e373-4a36-9f5d-abaeb5bafdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003bd288-fc53-4bbe-b426-927f6df75a32",
        "cursor": {
          "ref": "6fd0e456-725b-46a9-a54a-981230d6b673",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0a625735-85ff-4653-8ce8-e6090fa78119"
        },
        "item": {
          "id": "003bd288-fc53-4bbe-b426-927f6df75a32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "49f9560d-87db-41b3-98f3-4e3e3117e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad93c3b-01b8-40d9-8308-ea937ef5e3eb",
        "cursor": {
          "ref": "29fe178b-f7dd-4f57-9e54-a28049523a63",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2c8b1045-7ee9-4437-aa93-6c3863d237c7"
        },
        "item": {
          "id": "fad93c3b-01b8-40d9-8308-ea937ef5e3eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "83269d7a-7d1d-44eb-b554-a4a9c1b7d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe20561-da9c-4d2f-88cc-07b824988cbe",
        "cursor": {
          "ref": "21454d0a-da39-4f57-8c81-5460ea571582",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "862c5d61-d615-4561-9d6d-ff9d02c376a1"
        },
        "item": {
          "id": "fbe20561-da9c-4d2f-88cc-07b824988cbe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c41e56a9-00bc-40cf-a75f-d0b6971633bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a16ce-5644-442b-8930-7c212b3a2b57",
        "cursor": {
          "ref": "f0db77e4-5451-47e9-ad86-9e4e9e17eaf4",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c0c67fd0-9b4f-41e1-a149-dea1444cb700"
        },
        "item": {
          "id": "a38a16ce-5644-442b-8930-7c212b3a2b57",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "648ee1a3-5084-4288-9c69-5772febc5a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e15748-ae87-4780-b61d-11cb1cd828b0",
        "cursor": {
          "ref": "d25caefc-1799-4b29-9f58-4e79591fc319",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1bdee30-2297-4bac-930f-5ad51b5873e4"
        },
        "item": {
          "id": "15e15748-ae87-4780-b61d-11cb1cd828b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f69eab69-38fd-4950-a8ac-c32ea6091497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5af44-0a00-4dfe-85a2-7a5812d495c7",
        "cursor": {
          "ref": "27f61b59-e170-4ed2-ae63-ffcc9abc5413",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1184693b-4eea-4973-938e-2201cf5315ee"
        },
        "item": {
          "id": "34b5af44-0a00-4dfe-85a2-7a5812d495c7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1751d5d-e63a-47fa-9dab-ee18bcebc0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dcff9e-9c1b-487c-b579-03124539bf83",
        "cursor": {
          "ref": "7b6166b0-75e7-4c75-b0c6-76f9fe30983f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "87691cf5-df76-4af8-be58-5ff04d0fe7c3"
        },
        "item": {
          "id": "62dcff9e-9c1b-487c-b579-03124539bf83",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f82a0aa-5232-4f19-ae17-03afc9681087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cedd29-3b75-4550-a24f-d642b11d8ee8",
        "cursor": {
          "ref": "1fd80dcc-a7af-4816-bd15-82b425a1f782",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "18cb6fbf-5897-4241-b7d5-9b4e7b13040d"
        },
        "item": {
          "id": "34cedd29-3b75-4550-a24f-d642b11d8ee8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc28018f-8b6c-46f8-9041-8d95e0cc62db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bad350-8391-4253-81ed-edb317ffec61",
        "cursor": {
          "ref": "c6caa91e-187b-4ab2-8309-cdb1d303195c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c7a52033-9f50-4c1d-a75a-f9469c200226"
        },
        "item": {
          "id": "32bad350-8391-4253-81ed-edb317ffec61",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3fe4aab4-3f01-4021-8c1c-3291108a2424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9c8923-244d-497c-9755-0ca890490bb7",
        "cursor": {
          "ref": "e818435d-909c-4bd7-b410-cd44c2eb5d6d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27023c81-992f-4d4b-b82d-4067b098c205"
        },
        "item": {
          "id": "fc9c8923-244d-497c-9755-0ca890490bb7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b36e526-3e52-4fe3-8445-0c1e19ec356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c70bb-0e41-4862-b357-8a86c6b251a5",
        "cursor": {
          "ref": "8989221e-d3c5-48cf-978f-589be8e3e6ad",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ed91973a-fce8-4f73-a8c1-03fb04aa0006"
        },
        "item": {
          "id": "c97c70bb-0e41-4862-b357-8a86c6b251a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2bdc8d43-59d5-490a-aecf-7f6b43af2ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f065de5-b156-4e3c-a349-826a9cdc66e3",
        "cursor": {
          "ref": "0f22786a-6b87-4900-b50b-aabca676d3b3",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5eff02da-ef56-4eb3-a7bd-377b56dea6fa"
        },
        "item": {
          "id": "0f065de5-b156-4e3c-a349-826a9cdc66e3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7c424c66-cb41-4bfd-aa50-592c3965eb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0aa8e-8efb-4725-a15b-96c8b1cac7fb",
        "cursor": {
          "ref": "cae08221-4d42-47fa-833c-4ced2ebf54ea",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9ef5f6de-752e-459b-9777-8c1f2c329826"
        },
        "item": {
          "id": "81b0aa8e-8efb-4725-a15b-96c8b1cac7fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9fbc83a0-2584-44b1-9850-cfc821dcaa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48666595-23a4-4ac6-9ec4-5a6930c00a90",
        "cursor": {
          "ref": "5b066d27-d427-431c-a92b-570d73ddeb2d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a1ad768b-499b-497e-98a5-d007d86198c9"
        },
        "item": {
          "id": "48666595-23a4-4ac6-9ec4-5a6930c00a90",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d87515d-a675-425f-aab6-aafca93c77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dc59c1-73a0-4069-a85a-e62186c02054",
        "cursor": {
          "ref": "4770d9c3-dd8d-4a2e-a8dc-93f685d6fc4e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa7719d3-efa8-4f7e-afb3-207f802adbc6"
        },
        "item": {
          "id": "54dc59c1-73a0-4069-a85a-e62186c02054",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "736255ba-c8f6-4e54-9f82-c9b1a294ed4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e590875-b1f2-40fe-b6fd-cdae086da531",
        "cursor": {
          "ref": "1d331e02-abcc-48c6-86b5-314ee6b69fd2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ef30ef77-4eee-4c31-b8d8-190835536ff2"
        },
        "item": {
          "id": "9e590875-b1f2-40fe-b6fd-cdae086da531",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "20c13959-f58e-4bb6-ab45-75277de701b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622161b2-6a4d-407c-be5d-1422aff46d4c",
        "cursor": {
          "ref": "5aa9a95e-8aad-4cd6-a842-1ef101875be8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "51bbd551-aed3-48b6-a832-5ceec03e64c1"
        },
        "item": {
          "id": "622161b2-6a4d-407c-be5d-1422aff46d4c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0dc6b50a-b816-472c-9020-458fda92ff87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0cd4c-64b9-49e6-97d2-1f2043aa7762",
        "cursor": {
          "ref": "151a4e98-39d1-4be8-b5cd-ce4f87050dfd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6d5cdf57-f02d-4ff3-8192-f49ad979f899"
        },
        "item": {
          "id": "43c0cd4c-64b9-49e6-97d2-1f2043aa7762",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8867bba5-2e95-4070-adc6-089a97bf5728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0116e2-ed89-443a-80f9-3b1543f59743",
        "cursor": {
          "ref": "070c9598-35d3-4005-95e3-3a6a7143032d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5e38e8d2-b468-4767-9f60-874eb33bc994"
        },
        "item": {
          "id": "1d0116e2-ed89-443a-80f9-3b1543f59743",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8f22b38-e9f5-425d-b777-9fc693e90c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dce9ab-83b0-4827-a4b9-bb4de6fd1c8a",
        "cursor": {
          "ref": "285e644a-9335-4673-9cac-abe9dc5a7c2f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "402242dd-a6d1-4573-9af8-450ef022119f"
        },
        "item": {
          "id": "86dce9ab-83b0-4827-a4b9-bb4de6fd1c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dba5030c-1778-4e1c-a85d-bb0d858a6a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d44878-5ddc-4514-994b-fe35e7b569f1",
        "cursor": {
          "ref": "93b407ad-c60c-4326-bf9a-2eae1a714163",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "27ee491c-9a96-47fa-8c8e-9cca092a69b4"
        },
        "item": {
          "id": "f7d44878-5ddc-4514-994b-fe35e7b569f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eb4d289d-feef-4306-9468-9c96f7bacd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b88b8b3-f4be-4316-a3c9-a78ddcff6190",
        "cursor": {
          "ref": "c0100eea-e3f4-42aa-9cd4-2206ed8967c6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "10d05f32-52c2-41aa-bbc5-b9c16b143056"
        },
        "item": {
          "id": "9b88b8b3-f4be-4316-a3c9-a78ddcff6190",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a918193b-4ae1-43ad-8803-3eb32b902b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c80ecf8-db8f-4a25-9078-ea82156f6aa1",
        "cursor": {
          "ref": "8924dc86-d52f-43ef-98a3-fc9d8f8e0ad2",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "93991808-ea71-4dcd-a588-8a97cdd5a50a"
        },
        "item": {
          "id": "8c80ecf8-db8f-4a25-9078-ea82156f6aa1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6202db2-fdf5-4422-933a-7efbd72a9e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6937b413-e694-485e-89c1-d0eedef3b3cd",
        "cursor": {
          "ref": "d21cfd4e-83b6-4aa0-bffe-530845c3ee14",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "54942557-e9f3-42a4-ab71-93234b6a455c"
        },
        "item": {
          "id": "6937b413-e694-485e-89c1-d0eedef3b3cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "79e54a39-2968-4015-9584-52c70edbe619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e1ea5-1c7d-412a-a886-cd8075e9f77b",
        "cursor": {
          "ref": "51db75f0-33cd-4e7f-87fa-6374d359f617",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "31db2d7b-fc00-4fd7-b3c2-d7d66f077aff"
        },
        "item": {
          "id": "c70e1ea5-1c7d-412a-a886-cd8075e9f77b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "39dda077-2186-417f-b7ea-eafea74d39e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260c6266-82e9-43e3-968a-c1e6b5a91ebe",
        "cursor": {
          "ref": "46c74a3d-608c-4887-ac29-c726bed5bb3f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "23d94d38-48b7-4206-b1ba-653971af07b4"
        },
        "item": {
          "id": "260c6266-82e9-43e3-968a-c1e6b5a91ebe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b28bc567-f5e2-489f-9bca-e4934031a5c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7891ee2-247f-4954-b657-78719eef9d7b",
        "cursor": {
          "ref": "3ea8d973-3db1-45eb-b046-1ae341308577",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "74db1f6f-1df1-43bd-9993-43d485ebfd99"
        },
        "item": {
          "id": "b7891ee2-247f-4954-b657-78719eef9d7b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb4b8147-a9f2-43a9-9e08-d00a538d4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080edfa4-f7b6-4be5-84db-e75aad09af84",
        "cursor": {
          "ref": "54fc3548-2d87-422a-bcb9-d177830a6afb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "45a81a6c-afc8-436a-baaa-7f3cbfb314b9"
        },
        "item": {
          "id": "080edfa4-f7b6-4be5-84db-e75aad09af84",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe911620-c8af-450e-b77d-7871ff578a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76435801-a607-4d31-b0f9-a99e91bc0141",
        "cursor": {
          "ref": "e989b6d5-8664-4f27-be76-64d1d049c2e1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ff499f01-3bf1-4f77-bd85-9e4da4540f4c"
        },
        "item": {
          "id": "76435801-a607-4d31-b0f9-a99e91bc0141",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e1b17857-6537-43fe-a86c-84bb459cac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8069d4cf-71b1-40c8-a670-f65d6b91a7c8",
        "cursor": {
          "ref": "f81de15d-6fb8-4532-8cdc-fb24e665ccf7",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "129366ae-7d3e-485e-b06d-9c3cfce8d83f"
        },
        "item": {
          "id": "8069d4cf-71b1-40c8-a670-f65d6b91a7c8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09b6797a-62b2-4f08-a366-1117ae7d9172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9753b63-285c-4449-8365-5a93bf092e9e",
        "cursor": {
          "ref": "82177d48-6a20-404d-acf6-ac1d793f47df",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aef6bc3d-eabc-4fca-b403-07de3ddb6f60"
        },
        "item": {
          "id": "d9753b63-285c-4449-8365-5a93bf092e9e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abaa9f32-0f9d-4aca-bdbe-b0361c10c3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfaee05-0deb-429d-99f0-acdbc53b5ccb",
        "cursor": {
          "ref": "d5b417cd-8e03-417e-b720-3126258275b6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0bbee968-e5fa-4155-ae80-dc59f6b8ff29"
        },
        "item": {
          "id": "3bfaee05-0deb-429d-99f0-acdbc53b5ccb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6746042a-22a5-4d0f-8724-111890ce2653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b90c84-e270-4b82-bea2-c4d7f54524d1",
        "cursor": {
          "ref": "8f3d8037-b003-43e1-8b07-1bf68d753555",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f58d87af-7f72-4b6f-a19a-7c80e84e4135"
        },
        "item": {
          "id": "11b90c84-e270-4b82-bea2-c4d7f54524d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "77a1960c-93ac-47c1-81bb-e7e2c41e28fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228a82e-2c31-409b-9c76-938b43a65ce8",
        "cursor": {
          "ref": "4c4ff4b5-c985-4d27-87e9-d62003827873",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ecc33e2-a417-4ae2-a8e0-6eba0ee8039e"
        },
        "item": {
          "id": "8228a82e-2c31-409b-9c76-938b43a65ce8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5ed3a72f-029a-4eb3-88f4-dc7b71f6a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ef62d5-027f-41ab-bdff-938882550a1a",
        "cursor": {
          "ref": "7dcf86b9-e709-45d4-983f-4f124469c71b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5fdccf6-15fc-4c3d-a39f-8856dea0a9e7"
        },
        "item": {
          "id": "d9ef62d5-027f-41ab-bdff-938882550a1a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d28dca48-1154-4073-9ac6-31afc1d24cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836379be-8e4b-4c3e-b165-69c288b29850",
        "cursor": {
          "ref": "b6648fee-65a8-4b66-aeee-3640afe6c8e5",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a17847f8-ec6b-4e7d-978b-9e43ef8b6695"
        },
        "item": {
          "id": "836379be-8e4b-4c3e-b165-69c288b29850",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c421458-42bd-4d8d-8d33-9159b553f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f386ce74-dcdb-4927-ae3b-689a4d921b50",
        "cursor": {
          "ref": "f9352067-2d6d-4e3f-82d7-9b15ef930571",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "85acac4f-1e4c-402f-b4c5-e07a7c179612"
        },
        "item": {
          "id": "f386ce74-dcdb-4927-ae3b-689a4d921b50",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e368af45-1190-435f-a4d8-1b60f62b4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49886135-237f-4664-b3e2-58c59c5effcf",
        "cursor": {
          "ref": "792460b1-6ca2-4ecd-b22e-3cf88b91f8dc",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "df8018c2-2af6-49b5-afea-4c41827f6da0"
        },
        "item": {
          "id": "49886135-237f-4664-b3e2-58c59c5effcf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a4feaa86-b751-4f39-829b-a36c515714d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c1e8a3-ef8b-479e-a99b-ace4227abf27",
        "cursor": {
          "ref": "4a13c4c5-79c9-4826-874f-4c1f515d2f3d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "de42e624-8ee5-46e0-a766-43a0e0723570"
        },
        "item": {
          "id": "50c1e8a3-ef8b-479e-a99b-ace4227abf27",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f593fc34-4eae-4e37-aaee-c3a1217ac97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb02a004-e89c-4fb9-be38-d89e16f345a5",
        "cursor": {
          "ref": "b5bf4f59-1408-4c7b-aca4-180dba94aa11",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1db61405-89a2-4ff7-aa03-583fa42a8f80"
        },
        "item": {
          "id": "cb02a004-e89c-4fb9-be38-d89e16f345a5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "68b17e7d-8625-4de2-be8e-e237ef5d582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b842d8-53b2-4f25-8054-957989cc692d",
        "cursor": {
          "ref": "823c8a18-62b0-48f6-9eef-4db33ef93add",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5173d448-a2ee-451d-9c49-aac5b001c16e"
        },
        "item": {
          "id": "a9b842d8-53b2-4f25-8054-957989cc692d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9fe7230-30a1-422b-b0b0-39a3d5f5b7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210a0cd9-1977-4971-8f6d-e4a864852568",
        "cursor": {
          "ref": "b463db8f-491d-4527-9819-fa544df24af4",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b8cf7778-afb1-4710-846f-0001475e17fc"
        },
        "item": {
          "id": "210a0cd9-1977-4971-8f6d-e4a864852568",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14e74b10-3bac-401f-bad7-255b90c93cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36decd21-18bb-4836-84a4-0a6ed6ef9639",
        "cursor": {
          "ref": "045813cd-cf73-46f9-9eb5-80185ebab116",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "83bed615-d2ac-4043-8b07-1881cbb17cef"
        },
        "item": {
          "id": "36decd21-18bb-4836-84a4-0a6ed6ef9639",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e141a496-c7f4-44ba-823e-2b5f73a8a09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8676b5a-17a2-4c29-ae30-b6ea32ddb421",
        "cursor": {
          "ref": "9c200c27-abff-485b-a23f-da1987f1b16e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "df4bf2e1-12af-42d4-a96b-3e9a9698ed45"
        },
        "item": {
          "id": "e8676b5a-17a2-4c29-ae30-b6ea32ddb421",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d91a8dd-c023-48fd-ab76-ec350f84def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45023403-79a6-478b-b105-0edef63be5fa",
        "cursor": {
          "ref": "ef7bd4b1-ca5d-48e3-8937-5c6ee1ea2c04",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bc82f95d-9c71-4e99-9cdf-968e89e4ee94"
        },
        "item": {
          "id": "45023403-79a6-478b-b105-0edef63be5fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a7b3a5d7-406c-445e-b5f5-e121a1a4a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4d43f9-d7f1-45ef-8d8b-5f92738d6c49",
        "cursor": {
          "ref": "51da1347-7232-40a3-992b-472e6db10d1d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b4e2010d-926a-41aa-8688-36bb81bb7a95"
        },
        "item": {
          "id": "fb4d43f9-d7f1-45ef-8d8b-5f92738d6c49",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38da4f0f-fe0a-4ec7-b5e4-430957beb956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2364aa6-2a0c-4a24-9afd-947d8d85ea79",
        "cursor": {
          "ref": "39deee7a-e72b-486a-9fd1-964647f809e0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fa91fa74-5e23-4e91-90e7-cebb29d990dc"
        },
        "item": {
          "id": "e2364aa6-2a0c-4a24-9afd-947d8d85ea79",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "041f18c2-6ec6-4789-9de8-ef8080181ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d74ba57-f362-4fe3-97fb-a97d20a4fe32",
        "cursor": {
          "ref": "73dffdd5-bb08-48c3-bd9b-8e808d319e97",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cf7a3976-d6bb-4bfe-b6d8-10e02be8fd05"
        },
        "item": {
          "id": "9d74ba57-f362-4fe3-97fb-a97d20a4fe32",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db11b3ad-c610-4835-9f19-b8b1aa8f2423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b3000-0453-4a1d-b86d-14fc64dacd0e",
        "cursor": {
          "ref": "e8c38350-f81f-4d58-9f64-b0e9af58ae63",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3337d12e-b121-4c5b-acd9-37297451d9d2"
        },
        "item": {
          "id": "ed6b3000-0453-4a1d-b86d-14fc64dacd0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f4af383b-99b1-44dd-b040-16de58110fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb35bf-e871-41b3-a4ec-5e33810cbbd4",
        "cursor": {
          "ref": "3984046f-0703-4421-a02f-40734f3c6c08",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b038d88d-0c0a-47b7-b1c4-e72e20f2a98f"
        },
        "item": {
          "id": "56cb35bf-e871-41b3-a4ec-5e33810cbbd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a96f65d2-e06b-45d7-94b4-1916502eedea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a39957-de12-4339-bffb-34b7a9e24158",
        "cursor": {
          "ref": "14e2fbe6-b6f9-4bf3-91c2-b8d9ff041c18",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "64c431f5-c784-4dce-a36e-144d31584e48"
        },
        "item": {
          "id": "f2a39957-de12-4339-bffb-34b7a9e24158",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1c132aef-6ac6-4b6a-92a8-199fe0d207af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f55d2-d392-4bb7-9657-5621cc6bbcd2",
        "cursor": {
          "ref": "46b23dad-782c-4381-8e8c-211b00643dbc",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1c58a692-8f69-46cc-a9a9-e1899b416b4f"
        },
        "item": {
          "id": "6b4f55d2-d392-4bb7-9657-5621cc6bbcd2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "695ca02a-9a7d-4168-97e9-cb600770daab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb9d6b6-5c5c-4158-8a46-bf93ca59c97d",
        "cursor": {
          "ref": "c67333d1-05ad-452d-b2fa-47f36ddbdace",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "23801f5c-d098-4046-b3ce-8adac98a3215"
        },
        "item": {
          "id": "fcb9d6b6-5c5c-4158-8a46-bf93ca59c97d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f95ef41e-b820-46c4-9329-25797d338abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc1c165-0ff9-4a85-8542-b841497735ec",
        "cursor": {
          "ref": "121d9f47-1249-464e-92fa-8c2b31f00b49",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3a54abc9-cd9f-4f08-bf3d-43023bed311c"
        },
        "item": {
          "id": "7dc1c165-0ff9-4a85-8542-b841497735ec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "931c989d-38de-4407-8285-fd4de753710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecb21bd-4b74-467a-8728-ad5ad3394f8e",
        "cursor": {
          "ref": "8f191dfb-dc67-48f4-9fe8-494f804321e2",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "532bdd8c-76ba-4652-a25e-89d00c25bf01"
        },
        "item": {
          "id": "8ecb21bd-4b74-467a-8728-ad5ad3394f8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3fc3545b-57aa-46a8-abec-371630df3226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1617937-5588-4a01-be80-f67a72210bc1",
        "cursor": {
          "ref": "82a34f08-d37e-4c59-8f0b-5a13b7866750",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "759968eb-e494-4d45-b98d-6989df1f691c"
        },
        "item": {
          "id": "d1617937-5588-4a01-be80-f67a72210bc1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0931b07d-0e65-413c-bd8a-33a107d5716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91053af8-fb07-41b1-95a6-b24af1c0a04e",
        "cursor": {
          "ref": "8c69b134-8601-4f23-b776-cf21d23ad295",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6ca9d56e-6781-4f78-9378-ba9323742deb"
        },
        "item": {
          "id": "91053af8-fb07-41b1-95a6-b24af1c0a04e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fbfc0eb5-a7a2-4a01-93b8-af769b56656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ad639-d286-472f-9ed2-2e91451ed9c9",
        "cursor": {
          "ref": "58cd7183-f153-473b-9591-f9cf4269b12f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0503fd7f-ef7f-45d2-80b4-369b568acefc"
        },
        "item": {
          "id": "cc2ad639-d286-472f-9ed2-2e91451ed9c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "372f61da-1190-4807-ae2e-e81721ff6032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924edc29-4820-4531-bcc1-fe9a91564770",
        "cursor": {
          "ref": "787454c8-32db-45dd-a4f6-d047b7694621",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "39ab671c-c4a5-49af-acce-d79c11299353"
        },
        "item": {
          "id": "924edc29-4820-4531-bcc1-fe9a91564770",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0a7d9c6a-9c00-43fb-9d1f-485948f840ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a968cc21-d59c-473e-99fc-02cf38b0ff01",
        "cursor": {
          "ref": "2d0dbf79-dcdf-4436-a43c-3e1b7d965a81",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aa4f16df-6b22-4721-bc2f-8f0f73f36c41"
        },
        "item": {
          "id": "a968cc21-d59c-473e-99fc-02cf38b0ff01",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "17a9139d-1dee-4c2b-b7ad-e1b024f25174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3d4df-c853-41e2-82c5-c153c4b05238",
        "cursor": {
          "ref": "a4400be5-5071-480d-910d-d2f34fdca0f7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "865d51d0-7116-43e4-8d11-2959d74f9b74"
        },
        "item": {
          "id": "19d3d4df-c853-41e2-82c5-c153c4b05238",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9d58fa76-78c5-432e-98c7-4d34b5b785c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29616aaf-a607-4e66-b23e-a0fa2efb17d5",
        "cursor": {
          "ref": "dd713f4f-ea5e-402d-bf47-417c06c3a80e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b11ac60f-1e7d-4388-b07d-148015d061bc"
        },
        "item": {
          "id": "29616aaf-a607-4e66-b23e-a0fa2efb17d5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8b789915-0e20-48f4-ae28-ea8a126e7838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d352378-3b8c-48fd-911c-e567c18a060f",
        "cursor": {
          "ref": "b61fbca7-6f7d-4fb6-9457-db4a0496dda5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f06f54c8-5666-406b-ac45-d4420928f574"
        },
        "item": {
          "id": "4d352378-3b8c-48fd-911c-e567c18a060f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "81ab15e3-612b-4d88-ba2d-96c7580ce9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97425c9-f4fa-4731-8a37-f3ea68b74331",
        "cursor": {
          "ref": "fcffd281-7f8a-454f-8198-f40f293217f1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6401312f-7690-4730-863e-e70b2445233b"
        },
        "item": {
          "id": "d97425c9-f4fa-4731-8a37-f3ea68b74331",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98fe925a-9436-46c9-baa8-bae66936fb43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 109,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc9dba-033f-43c7-9b6c-44c308c45c6a",
        "cursor": {
          "ref": "f0519691-bca8-4f9d-9007-1825631276ac",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4fbff42a-07f9-4e5d-8967-17f3d25a16cb"
        },
        "item": {
          "id": "20bc9dba-033f-43c7-9b6c-44c308c45c6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d92d7257-fc0a-4a3f-80ea-202bf4058a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539913b6-7b42-40eb-8743-f3b4064de654",
        "cursor": {
          "ref": "7f0eba9c-6c6a-4074-8a9c-86d4407f565b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d015141e-e26f-475e-a2f7-47e2e6a8605c"
        },
        "item": {
          "id": "539913b6-7b42-40eb-8743-f3b4064de654",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6392df9a-76df-42bb-8325-4b8bcf4fe219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a9cc90-b615-4722-8d6c-160d1b837e52",
        "cursor": {
          "ref": "4d5c762e-5e33-4633-8c36-9ab7b9a68cdf",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc8f1e41-59db-436d-8df5-f657a10a2049"
        },
        "item": {
          "id": "55a9cc90-b615-4722-8d6c-160d1b837e52",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da5fd7cb-8dbf-4992-b771-c75eb0ffffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bc1d7d-1860-46aa-b857-2671e0792e7b",
        "cursor": {
          "ref": "1d9d7b2b-22bb-4123-83dd-a2d0e1efb1b0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "40132525-5f3d-48c9-b270-0fae2cfd21dc"
        },
        "item": {
          "id": "25bc1d7d-1860-46aa-b857-2671e0792e7b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "faa9d9c1-53dc-4639-928a-59c053b118cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61825a9-b2ef-4cef-abf5-58f681237b2f",
        "cursor": {
          "ref": "0ae112b7-e12f-4734-bc93-574e15cc2642",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f1e1c303-6324-454f-9cf3-ff6626fd4d76"
        },
        "item": {
          "id": "b61825a9-b2ef-4cef-abf5-58f681237b2f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ce3a8da1-226a-42c7-ab4d-8240f4195af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5514b53c-045d-44f8-934d-73b172a76e73",
        "cursor": {
          "ref": "699c7145-8c84-48b0-8069-b06d9c03f723",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c89c4179-7057-471a-a7d8-78b655bdf3f7"
        },
        "item": {
          "id": "5514b53c-045d-44f8-934d-73b172a76e73",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f5c4a27-d203-4809-b8ca-2cd2b7a02829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4da6a73-b9a3-4d00-b72a-aa32f54a3051",
        "cursor": {
          "ref": "26f91b8c-a79c-4cac-9996-08dbf042cdef",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c76bf6f5-a92e-4e82-87c3-36a1b3d8eb3e"
        },
        "item": {
          "id": "f4da6a73-b9a3-4d00-b72a-aa32f54a3051",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1ba1af29-39df-487e-9afb-c55b677b398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bcac26-4ad9-42b6-bc0a-108e8ff5e8ca",
        "cursor": {
          "ref": "045632f3-51ad-445c-93a2-222a0bb23fc2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "500f986f-1cff-4812-95fa-a3fc88cdc403"
        },
        "item": {
          "id": "96bcac26-4ad9-42b6-bc0a-108e8ff5e8ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "255da369-2382-42b8-bd0d-65081b1457bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de519c65-ab52-4a04-a82d-59607e3200e7",
        "cursor": {
          "ref": "89c73547-b715-4a75-b465-edc5525b9688",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "95ec42d4-f006-428e-b909-4eee9788c9da"
        },
        "item": {
          "id": "de519c65-ab52-4a04-a82d-59607e3200e7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "517f8a14-7750-49a1-a83c-39dec1fd84ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7be440-7216-492d-a5ac-972197bf3443",
        "cursor": {
          "ref": "266636b2-df08-42b4-ad2f-8651828b8c8c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1e76f53f-2206-4308-8483-b3469d935f3b"
        },
        "item": {
          "id": "ea7be440-7216-492d-a5ac-972197bf3443",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "097e4553-1dd1-42e6-bdb6-b6a2d7e41a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3e7be6-0ffa-4fd4-a032-69f4b81d7e4c",
        "cursor": {
          "ref": "574d49a2-f68f-4251-8b71-e1817ff3b258",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1c8807cc-bb0c-47de-8cf9-67829fd48d3f"
        },
        "item": {
          "id": "3e3e7be6-0ffa-4fd4-a032-69f4b81d7e4c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7774b720-da29-4179-a81d-7af115ceeb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d551ab6b-e3b9-4492-9c2f-f8189364b29b",
        "cursor": {
          "ref": "e61181cd-da23-4ac1-a736-29b6f0275b21",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2b202535-af39-434a-a299-9d4baf7f34ee"
        },
        "item": {
          "id": "d551ab6b-e3b9-4492-9c2f-f8189364b29b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3c3f546e-179f-4b83-beaf-2ae02bb714f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb70a722-e8fe-4a63-93de-387828820d6c",
        "cursor": {
          "ref": "b6055d31-6430-47f2-b6e5-82f74c8b890b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "417dd3c4-b067-4fcf-958f-192f75b873a2"
        },
        "item": {
          "id": "cb70a722-e8fe-4a63-93de-387828820d6c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "35dc770e-44f9-4e76-a3a3-8f008f82a94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49be147-46bb-4496-86c1-05714eb7ad1d",
        "cursor": {
          "ref": "64465e62-cece-458e-9fbb-3e0a9a18441c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd597193-3ec4-432d-bf59-8f9f36bbf020"
        },
        "item": {
          "id": "d49be147-46bb-4496-86c1-05714eb7ad1d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "af3d91e1-45b9-4e35-8075-0e63825f274e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611f038e-6898-467b-adc6-5a16ba306c37",
        "cursor": {
          "ref": "75455fe2-e01b-4bb5-877c-17a1084cbcff",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a7707a71-0f51-40bc-9fb1-039e5c525bb4"
        },
        "item": {
          "id": "611f038e-6898-467b-adc6-5a16ba306c37",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ae9d0c3-8e0e-4315-887a-ce0408d6f819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13189352-20a2-4202-8705-cb2564ae7665",
        "cursor": {
          "ref": "12546c31-a2f1-4dc7-a9b8-6d72557853da",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0344e4d0-fa97-468b-b050-a5da96e718f0"
        },
        "item": {
          "id": "13189352-20a2-4202-8705-cb2564ae7665",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15286f3b-f2d8-40f6-92ff-4a87d99ac6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffef854-52a1-43ef-9a75-2df611c8d74d",
        "cursor": {
          "ref": "d273841c-255f-48f2-9dea-ad4c0886c4d4",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "74de9d71-1554-42ff-b8e2-2386f959a0df"
        },
        "item": {
          "id": "7ffef854-52a1-43ef-9a75-2df611c8d74d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a35bf99e-4d70-4d7e-ade1-f720160cbb0d",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9c16a6dd-e3bb-4077-835e-22125e0857fd",
        "cursor": {
          "ref": "d197d7d8-7626-4897-9b0f-95fb52c89eab",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ae19c1f6-6cf0-4583-88ff-923273fa1e97"
        },
        "item": {
          "id": "9c16a6dd-e3bb-4077-835e-22125e0857fd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "192f704d-fc54-4e77-8d92-b05682189d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8b9171-d334-429b-9620-81fe03587881",
        "cursor": {
          "ref": "bcb45f1a-1bc4-4289-8f0c-b61d5c73d761",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dae565cb-95db-4cf4-9030-8c4788c8a03d"
        },
        "item": {
          "id": "1a8b9171-d334-429b-9620-81fe03587881",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "75c10d02-3e90-4f46-9c7a-73b1c533b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15cefb7-1655-429c-9773-2057eca19fd1",
        "cursor": {
          "ref": "656241bc-b09d-465c-b3d1-e21c31b55c12",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1ca37406-56ce-49c9-b0cb-1fa8c0c55c9d"
        },
        "item": {
          "id": "f15cefb7-1655-429c-9773-2057eca19fd1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c2888507-b753-434d-96d7-685844ed5a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da516c30-abb1-42c0-a0ca-a1b6ddf57e59",
        "cursor": {
          "ref": "cf378b31-ea81-40d4-b819-eb7949fded72",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "da69a00c-9858-464a-8241-d233cd036984"
        },
        "item": {
          "id": "da516c30-abb1-42c0-a0ca-a1b6ddf57e59",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3bbabeaa-c0f9-4c14-8690-b740fab7e7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78985a25-8c45-4d0b-9853-c092c68ef5ca",
        "cursor": {
          "ref": "aa5b2890-531d-47f8-9984-e55ec00f683c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "342336d2-d146-4e42-b094-84e68311ed97"
        },
        "item": {
          "id": "78985a25-8c45-4d0b-9853-c092c68ef5ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d7e6d7b6-2520-4238-a60c-0ba0c20ee228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f97502-cfc7-41c8-93b6-118e234442ce",
        "cursor": {
          "ref": "15f98a3c-4490-40f4-ac60-64b3ca92d7dc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4fbd28c7-70fe-4ffe-94f8-0b9af449b09d"
        },
        "item": {
          "id": "21f97502-cfc7-41c8-93b6-118e234442ce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04d847a1-5dc9-4773-91fd-ed22f9f8eec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639e2c63-bb30-4fd7-bbbf-813c85b0ae1c",
        "cursor": {
          "ref": "cb55f40f-1c7c-4381-9023-595bef30044b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8165cb93-9d95-4384-ac16-b8c5b3f8b76a"
        },
        "item": {
          "id": "639e2c63-bb30-4fd7-bbbf-813c85b0ae1c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4e596337-ebb8-4c5c-b183-1762ee8fe5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544e5c2-d8b1-4e08-84fb-49efd4a519c5",
        "cursor": {
          "ref": "5197f6d0-80a0-4433-bdd4-570e454c34d5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f0dd5f38-cb58-4666-9808-e8083c9ffa29"
        },
        "item": {
          "id": "8544e5c2-d8b1-4e08-84fb-49efd4a519c5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2659326e-3724-4e88-a2d0-cef84aec29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654e9f78-7528-4bdb-bfc0-c4744852d30e",
        "cursor": {
          "ref": "47752154-c3af-4f13-86d4-ebbb47c52332",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f5846346-693d-4a93-bd53-00b33c9396ba"
        },
        "item": {
          "id": "654e9f78-7528-4bdb-bfc0-c4744852d30e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba80d24c-4f63-4fc1-abdc-d666c8581a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696c3472-6acc-42d4-ae5f-2ffdc5cac519",
        "cursor": {
          "ref": "cc25e487-9597-44c1-9c51-e2226535610a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "58b3eec2-456d-4df1-a871-6552821ac1e3"
        },
        "item": {
          "id": "696c3472-6acc-42d4-ae5f-2ffdc5cac519",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac0c448d-0399-4ddd-a29c-44bb6df72594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeb95a4-c593-4402-9234-552ae84e9339",
        "cursor": {
          "ref": "116aba34-c63e-4d24-bac1-36c03c8285b6",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "44d60f4d-ace0-4f21-afc2-d1223ddfed4f"
        },
        "item": {
          "id": "ffeb95a4-c593-4402-9234-552ae84e9339",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "81fbbe9b-08e0-4b66-81a8-547526e22021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8e040c-aa71-4f5f-8e1d-dd6e607e3069",
        "cursor": {
          "ref": "7724e7dd-614e-4112-87e4-90a164ed66d0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b7892d66-5d06-44a2-b783-93512cc66d49"
        },
        "item": {
          "id": "3e8e040c-aa71-4f5f-8e1d-dd6e607e3069",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90b6bc38-aaf0-4ce3-8ae1-bde8512b8a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a165ed64-abef-4e07-9306-e9cd68d1b28b",
        "cursor": {
          "ref": "a88a65ed-060b-4838-bbbc-1010fa7062e7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e4ce655d-d0d4-448f-9029-746f592abe27"
        },
        "item": {
          "id": "a165ed64-abef-4e07-9306-e9cd68d1b28b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8f65f17-d331-4b3f-a6eb-dbe437e90f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a957654-7c2f-45f9-b010-f754b533d85a",
        "cursor": {
          "ref": "ce6d6d40-e01e-4204-bb17-5d197f3b1461",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62e83cb9-86b5-4694-976c-b364cc4b43cd"
        },
        "item": {
          "id": "5a957654-7c2f-45f9-b010-f754b533d85a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "58a0231b-5def-4b5b-ad89-38de8807cd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468cc9f-6b36-4f7f-acdc-9330ed5f1833",
        "cursor": {
          "ref": "5c6361c1-6d63-4394-87b6-3c8136ed23aa",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b67e3f2-6b39-4113-bd9f-d6dff39a0baa"
        },
        "item": {
          "id": "7468cc9f-6b36-4f7f-acdc-9330ed5f1833",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ee2ee8bf-9b41-42df-a8d7-c4bd5274d79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b787ac-cf51-4c4c-92dd-6c4d80d91fc1",
        "cursor": {
          "ref": "74b98cf1-9355-4456-b915-655d7a85c6bb",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d400fb52-be25-4102-aff8-b59748f990f0"
        },
        "item": {
          "id": "90b787ac-cf51-4c4c-92dd-6c4d80d91fc1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de13f1a3-c0d5-4844-9ab8-15eebbb3ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9defd36-4bb0-4633-b696-f341eeb7ae0d",
        "cursor": {
          "ref": "e1fb8bd4-6837-4a0a-bcd8-499380f912a5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "657ced67-0576-474c-b502-8d1e2ab05860"
        },
        "item": {
          "id": "b9defd36-4bb0-4633-b696-f341eeb7ae0d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "56a84196-ec0f-4b05-818d-118eb03ced98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655bb877-4de9-4d25-8a11-75548669a991",
        "cursor": {
          "ref": "a054a573-685f-4d59-83b0-5cc292ddbbe2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6458495e-0b13-4279-b018-a9988520d8af"
        },
        "item": {
          "id": "655bb877-4de9-4d25-8a11-75548669a991",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87bd7467-39b2-4e3d-8e20-e153995f5846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a8309-899c-48af-a5d0-5c820cf5b536",
        "cursor": {
          "ref": "3698ba22-50c1-4a4f-b8d4-85ce565acd66",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fb0d97eb-2bcd-4167-92cf-864273303f9a"
        },
        "item": {
          "id": "0e3a8309-899c-48af-a5d0-5c820cf5b536",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5e23c89f-e27c-4a18-ba50-393d587ee334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c6f2be-e54b-422a-9307-d129463267e6",
        "cursor": {
          "ref": "7a9a2cda-1089-40a1-8a46-1e5133b0ae9f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8436059-77d8-455e-b1d3-87a13d9a9cf3"
        },
        "item": {
          "id": "e1c6f2be-e54b-422a-9307-d129463267e6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f3090c02-8a64-4e0e-b2c3-5e88d5d47419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72233e89-0a88-48aa-9a95-e3246f14aafc",
        "cursor": {
          "ref": "38fbb644-0046-46e2-9291-1fd4a1f09d06",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ea6c3c24-90d2-42a5-95c6-e0a158a65d9b"
        },
        "item": {
          "id": "72233e89-0a88-48aa-9a95-e3246f14aafc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e70e0a6-6724-4665-870d-2d2d794e5463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d5af0e-7ff7-45e4-bf65-fbafe959d72c",
        "cursor": {
          "ref": "08cdde21-458b-4e5b-8ebc-21b40c12447c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d94d486e-45fc-402c-8fc1-5efd2567ed74"
        },
        "item": {
          "id": "f1d5af0e-7ff7-45e4-bf65-fbafe959d72c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fa6625da-22df-4538-879a-0b970f9ce328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e725f019-8008-4a09-8b61-c40a34f1082f",
        "cursor": {
          "ref": "e59a8be3-fa5d-429b-8db5-caa820a233ee",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0683f659-a599-482e-882f-c083676a4de8"
        },
        "item": {
          "id": "e725f019-8008-4a09-8b61-c40a34f1082f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7952284b-31fb-4c98-9f9a-af08126046a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec545a6-5375-4165-918d-5eba1c6750bd",
        "cursor": {
          "ref": "a18e7986-e22b-4f22-9054-5d98f4e3c2eb",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fa8dace0-ee3d-4283-a89b-91860674cac7"
        },
        "item": {
          "id": "bec545a6-5375-4165-918d-5eba1c6750bd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "484cde18-d983-44dc-ad8d-d932afed3496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ce24ff-09a8-4a83-a640-53066028ef3e",
        "cursor": {
          "ref": "4ab8787d-30a8-4766-8011-a2e039c55c56",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "767165a7-24ad-49bd-a8b7-dc4526f67fb4"
        },
        "item": {
          "id": "96ce24ff-09a8-4a83-a640-53066028ef3e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e6bbab7-2cae-4660-b681-bdd38ce06dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecb9d2c-1085-4a7a-aabd-b41be7ae87fd",
        "cursor": {
          "ref": "98730760-8a09-4e13-86b6-8f58c3c3db85",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8811d938-84e6-484b-974d-61ec990179bd"
        },
        "item": {
          "id": "0ecb9d2c-1085-4a7a-aabd-b41be7ae87fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9f1d6328-eb75-45bc-b5de-03d815e7fafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebd6775-218e-4c92-b732-51f935e79f2d",
        "cursor": {
          "ref": "e62c5776-d350-4ff4-aa5e-8b3ce62289ee",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "462cbd63-94fa-4d8a-9fc9-d645c2f3f74c"
        },
        "item": {
          "id": "0ebd6775-218e-4c92-b732-51f935e79f2d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "df8b48fc-5a66-4388-b5a9-7eda51a96046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e2f5d-85c4-48d1-896a-b6ef477b9e42",
        "cursor": {
          "ref": "941f624b-4bef-46a5-a26d-8346ca23a85b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "38d36fcd-64b7-49e5-9ec3-c455290bb35a"
        },
        "item": {
          "id": "9c8e2f5d-85c4-48d1-896a-b6ef477b9e42",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "934738b3-693b-4209-9faf-01cba2e83539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf292374-c587-4995-bd42-6d5e696ae299",
        "cursor": {
          "ref": "55c4e49f-18da-4fda-bd70-1dfe8992f7cf",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2e16b950-ffc8-4507-8cac-306f2b56415a"
        },
        "item": {
          "id": "cf292374-c587-4995-bd42-6d5e696ae299",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8fa0af33-2e6a-4fd5-8b40-f8881bd3fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97c4d64-34fa-45f2-9898-a4860b89c52c",
        "cursor": {
          "ref": "1bd9eb41-2bdc-4339-9c1c-99d555bd9e5d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b5b13951-5f69-49ba-96ac-60dacf50e688"
        },
        "item": {
          "id": "e97c4d64-34fa-45f2-9898-a4860b89c52c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d7e76dac-508f-4f99-a081-9ec697957ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073ba4d6-3647-4c21-8cce-c1e17c5b2189",
        "cursor": {
          "ref": "be15fd01-00d9-403d-b02e-598f345edc03",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "31f0cf6a-64ff-4704-b994-3d825831c1b7"
        },
        "item": {
          "id": "073ba4d6-3647-4c21-8cce-c1e17c5b2189",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ccc6378b-4998-4de2-bc62-872d613b7b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fafd5c3-0a4d-4174-9c3e-46a4c237ead2",
        "cursor": {
          "ref": "bf1157ed-25a8-41ea-bef8-5c9265f3c775",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "482257fc-0583-488c-8135-80c24759c061"
        },
        "item": {
          "id": "8fafd5c3-0a4d-4174-9c3e-46a4c237ead2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "67eed698-4033-4f05-88b9-2066bb831bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b26b08-0e42-47e9-9bd7-dd9345e9573c",
        "cursor": {
          "ref": "29d0671d-a825-42f1-98cf-ff77fa45ec83",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1461402a-a066-41ae-a26b-3fbd4c151de3"
        },
        "item": {
          "id": "e0b26b08-0e42-47e9-9bd7-dd9345e9573c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d176c174-b3bc-496c-ac29-3ba9d93b01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1301d7e0-d73f-4fbd-bdfa-c1bcd25ef267",
        "cursor": {
          "ref": "ca3f0f81-35de-4752-9471-1dfcfb8451f5",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "01234bba-07d0-4fde-98d9-3858d03c25b4"
        },
        "item": {
          "id": "1301d7e0-d73f-4fbd-bdfa-c1bcd25ef267",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0db3bd10-7934-42e9-b0f6-efe04fbc04a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e8d18-3106-4cec-bf5e-40bc00395371",
        "cursor": {
          "ref": "6456fe92-33bc-4b36-9bbe-9c8a619784ef",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "094df1b9-487b-4414-8f93-12e7a7233d9d"
        },
        "item": {
          "id": "ea6e8d18-3106-4cec-bf5e-40bc00395371",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1408f1aa-803f-4acf-817e-da09ed36c24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60a50c4-ffd6-4cda-859c-66ee14fe1257",
        "cursor": {
          "ref": "dad6782a-1dac-481b-998e-c5bf2eb18dda",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dc1d7ac7-7c8f-4734-a641-ad62715a09bd"
        },
        "item": {
          "id": "f60a50c4-ffd6-4cda-859c-66ee14fe1257",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "657713ac-a8c6-485c-a494-229cb266edff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae83707c-4e67-4fb3-9bdf-665edf840386",
        "cursor": {
          "ref": "475838ab-9e9c-48e9-b8ff-6f18461ccc84",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f122d0f7-802d-4fc7-95e5-3cfa2bb07c7b"
        },
        "item": {
          "id": "ae83707c-4e67-4fb3-9bdf-665edf840386",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "78a516fc-3364-4170-9b37-a039d2edb30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4df94c3-fdba-45df-aeac-9005cb4dccae",
        "cursor": {
          "ref": "42692e18-07ef-4309-9806-11059f5f19f9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "244b5010-2ddb-4c90-b9d4-7322536388cd"
        },
        "item": {
          "id": "c4df94c3-fdba-45df-aeac-9005cb4dccae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "505fd562-7386-4095-864e-cd3e83cf3f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443ad16f-8c45-49b9-a991-30f866502f02",
        "cursor": {
          "ref": "ba15b031-9c41-492a-af42-8118ccfe0198",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eb03322a-8d95-4373-9829-3854bda5d2c2"
        },
        "item": {
          "id": "443ad16f-8c45-49b9-a991-30f866502f02",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "91715ced-18da-42e9-b77b-74c68e185338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa8456e-cd3f-4209-8714-2cf500b597df",
        "cursor": {
          "ref": "b758e969-653d-47da-a764-1f3ea3313efa",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8a3f10db-0097-4281-b80f-f71cfd8ee90c"
        },
        "item": {
          "id": "1fa8456e-cd3f-4209-8714-2cf500b597df",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a60b7b57-4617-4314-b3cd-162fc4604605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e2046b-9735-4150-939f-e50bedd62213",
        "cursor": {
          "ref": "b89a2f78-391b-46a2-95ca-309226459355",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d8495271-4934-4d35-a84c-11df6d5f96b1"
        },
        "item": {
          "id": "d2e2046b-9735-4150-939f-e50bedd62213",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "033dc6a4-0970-47af-8031-102dc803963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bbc2e0-e008-4aae-8d71-cb730e5a7cea",
        "cursor": {
          "ref": "0aa95c6f-ee57-49ee-a438-df91c09cd4a1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d8aef25-3de2-4526-9853-486edfb846f7"
        },
        "item": {
          "id": "38bbc2e0-e008-4aae-8d71-cb730e5a7cea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "644c4c6a-f0a6-49a6-a7e0-fae6b44c348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910263a7-7232-4757-9e09-dd0869e7753b",
        "cursor": {
          "ref": "8975e83a-c637-4f34-aad9-406280e5fc86",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "08f9a649-47ce-46a8-bf3b-c4e501b46dcf"
        },
        "item": {
          "id": "910263a7-7232-4757-9e09-dd0869e7753b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d5d439a9-768d-4002-b874-38d219f0efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caac9314-29bb-43d5-9023-5ce32a66d0d0",
        "cursor": {
          "ref": "20c54b15-a454-4a52-a745-d0f62a91e2e7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "27041a6a-79e7-450b-a1ff-a5dddcc82510"
        },
        "item": {
          "id": "caac9314-29bb-43d5-9023-5ce32a66d0d0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c00e45b7-797a-4909-a5a0-739b0a03afc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3dc169-f3a5-485f-9811-ec43126efc44",
        "cursor": {
          "ref": "e9d0c767-4445-4dca-bc82-09bbb9e4cf46",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8fefd200-0dce-47b6-9b5e-dfc5befca59f"
        },
        "item": {
          "id": "8c3dc169-f3a5-485f-9811-ec43126efc44",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "899268d7-4de9-44a0-be1d-6bf624e92a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3add3b0-4618-49bc-b2ab-567f71ca9f17",
        "cursor": {
          "ref": "1d6c51be-df62-4846-a4fc-3750b635f4c5",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d6427a1-9f2e-48a3-a492-c9aa61c5c688"
        },
        "item": {
          "id": "c3add3b0-4618-49bc-b2ab-567f71ca9f17",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "418a4f06-d81a-4ce5-a9ac-b27ade2e43fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b046617-2cf8-4b31-9d46-81ff73ecb010",
        "cursor": {
          "ref": "0e968acd-e216-4926-936a-5bbbbbaa07a5",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e144dd94-ea56-4be5-b573-13cd91ceb668"
        },
        "item": {
          "id": "1b046617-2cf8-4b31-9d46-81ff73ecb010",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4c08fca8-b1c0-42a5-a4b2-845e3fd86591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5303a5-6557-4264-b52e-960425b60582",
        "cursor": {
          "ref": "8ccfcf8a-2d4c-47d7-b874-3ea24a56c1b9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26f80bd4-9673-4245-8cab-37f19500b92b"
        },
        "item": {
          "id": "2a5303a5-6557-4264-b52e-960425b60582",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d4a8c246-2c0c-4e60-b265-fd9d4d35228a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70bbc77-cbfc-41c1-a8b4-4c98635198df",
        "cursor": {
          "ref": "6316857b-c7fa-4163-aab7-04c06b438730",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "08f950a7-a431-4a96-82a3-3babebb53b89"
        },
        "item": {
          "id": "e70bbc77-cbfc-41c1-a8b4-4c98635198df",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6aee590c-db87-423b-8d56-0b80e66a9687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75eacc6-9337-4a2e-8c51-98ae5c3651f1",
        "cursor": {
          "ref": "0492773e-6784-4e2a-abc3-11f6cb7c96a2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ed7bcfb0-5d54-4dfe-99a9-2fe4954d7907"
        },
        "item": {
          "id": "e75eacc6-9337-4a2e-8c51-98ae5c3651f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b20648e-cd22-463c-8fb5-3c049c4fa5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c830e9d-7ec4-4e94-8bf2-0237092ea0bd",
        "cursor": {
          "ref": "2ac1ce85-40d3-4c0c-b377-65599ed3527d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "780cde82-d2e1-449a-88dc-3d4e29846da2"
        },
        "item": {
          "id": "8c830e9d-7ec4-4e94-8bf2-0237092ea0bd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8572419f-d781-4a3f-b29a-387e3fe5f4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ce9f5-964b-4cc2-84c2-d5421909b33b",
        "cursor": {
          "ref": "48e6d84e-37a8-4896-a1aa-7303a105d91a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a6759b2d-9c13-4d53-bc2a-03bf72813bf0"
        },
        "item": {
          "id": "c55ce9f5-964b-4cc2-84c2-d5421909b33b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ce08be00-6778-4549-92b7-b1549cc5e3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a11a8f-7ab7-4a39-a720-e25e40c2e8b6",
        "cursor": {
          "ref": "73f035bb-5b07-4dbd-a415-a9a800317763",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d7162ea1-0118-4231-ad58-207970365e5b"
        },
        "item": {
          "id": "41a11a8f-7ab7-4a39-a720-e25e40c2e8b6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7d35b389-3dda-4760-a608-6f3e34b6d401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c696c-d295-4226-9839-21aa90e4efc1",
        "cursor": {
          "ref": "76eb9674-2dae-4a4f-805e-3492cd0ced47",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7adf36f1-264f-4115-bd6a-96f7e4f70565"
        },
        "item": {
          "id": "3a9c696c-d295-4226-9839-21aa90e4efc1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7676b04b-36d7-42a5-ba52-189ddba14266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a235b124-6395-447c-a681-33c52df1a4ec",
        "cursor": {
          "ref": "8690b31f-3ff9-4a6c-95dc-d6b631423fdc",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fe6113c2-64b2-4eed-b492-d18c81504636"
        },
        "item": {
          "id": "a235b124-6395-447c-a681-33c52df1a4ec",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e531427b-d6d3-41b2-b0cf-bdd5fa244164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0253d93f-ca5b-4154-8b0e-b84b5b421c4d",
        "cursor": {
          "ref": "f495a172-6ccb-4f9e-8ff1-0f50fcff320c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d5f472c7-db16-466a-af6a-3f746c0fceea"
        },
        "item": {
          "id": "0253d93f-ca5b-4154-8b0e-b84b5b421c4d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78781837-0bd8-4933-9b74-e4e3b9d707cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71deba20-9b00-433c-aae5-fbcf0364040c",
        "cursor": {
          "ref": "ba21ae00-407f-4c24-b15d-76f3d6993608",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "54308535-f4a7-434b-96ba-0d262f118ea0"
        },
        "item": {
          "id": "71deba20-9b00-433c-aae5-fbcf0364040c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "17ccb3aa-b0b8-47f3-8107-9648ff430040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec543d-cb03-4002-bbc5-d1fe1cd80d25",
        "cursor": {
          "ref": "c38cba91-a4e4-4c16-ac23-a7b58aa930bd",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "28a55064-12f3-440e-aed0-b8282af118d8"
        },
        "item": {
          "id": "dbec543d-cb03-4002-bbc5-d1fe1cd80d25",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b55aa465-e15a-4d4b-8443-f3ad98b44f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5429b6-eb94-4b47-8b4c-ec153a3a17b4",
        "cursor": {
          "ref": "31dab0e0-f70d-4317-8a1c-778fda1321c3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ea96a01f-1240-4770-879d-e058b7cd8e86"
        },
        "item": {
          "id": "5a5429b6-eb94-4b47-8b4c-ec153a3a17b4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0773f81-38c5-4ee0-87a8-05ee248af824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2561da07-3c4d-406a-bb9e-0face1dd7c88",
        "cursor": {
          "ref": "5af6b296-bb4c-4df5-846f-2dd54306f098",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3e160db0-3b0b-4725-9509-e0643a27fd1e"
        },
        "item": {
          "id": "2561da07-3c4d-406a-bb9e-0face1dd7c88",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4ecf4391-d69c-4367-abd6-3b47b60a697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f874ac-c3f7-421d-8757-f278e51c9681",
        "cursor": {
          "ref": "42ef77ab-577a-46e3-b38b-36a75dc047f5",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3866f1af-fccd-4c83-960d-46eddd1dd55c"
        },
        "item": {
          "id": "21f874ac-c3f7-421d-8757-f278e51c9681",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8e2c1c3e-b0a1-40ad-8f36-493317d5ab56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebccca50-9b9d-4f0c-a9a5-cfa216dbb521",
        "cursor": {
          "ref": "8d5d3737-b805-4b24-81b1-975c04f0c80f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f4972430-0c55-4b80-ae5e-3a6b2d3810d3"
        },
        "item": {
          "id": "ebccca50-9b9d-4f0c-a9a5-cfa216dbb521",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "98b58dcd-0688-4f6c-8783-38f6736dc5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6c0ec0-560f-4977-8ea2-69bea50206d4",
        "cursor": {
          "ref": "d8a6ce06-b5a7-4124-8842-8c1425fbaea1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9b8345a0-2b3f-4473-bc02-8f701745428d"
        },
        "item": {
          "id": "cf6c0ec0-560f-4977-8ea2-69bea50206d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d3ea4a3-74f8-463a-b570-d114da0290a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142b842-593d-4054-b95f-c6a2f16c63c5",
        "cursor": {
          "ref": "9a14a06a-13ee-4534-ac21-2c6041eb044c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7e9abbe7-79a8-4df0-a6d7-6789c2b4d2a3"
        },
        "item": {
          "id": "f142b842-593d-4054-b95f-c6a2f16c63c5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5cd8d660-da26-4ed3-9a50-f023966e781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43567313-99ee-4aa7-8d6c-3aaea31ea4fb",
        "cursor": {
          "ref": "dab4f221-7cb8-4112-824d-580cce87b687",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8b941bfc-f97d-4de3-853c-14ca07fb9e00"
        },
        "item": {
          "id": "43567313-99ee-4aa7-8d6c-3aaea31ea4fb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f92010fd-685d-478b-bd8c-9ae3f7427e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e3262-0978-4a09-af83-10b8c96f54e5",
        "cursor": {
          "ref": "593030d8-3b18-4de2-9cd9-ebeef62defe4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d45b42b0-e7ba-400f-82b0-a7ae783285de"
        },
        "item": {
          "id": "bc4e3262-0978-4a09-af83-10b8c96f54e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a52f6048-cefb-4e71-a406-437c556186cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701cbc38-3aaa-4388-b8a8-7054f80d4efb",
        "cursor": {
          "ref": "a19ebff3-5c2d-4977-867a-e38139ddea6e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "22464210-8519-47ef-afd2-927eb69dac81"
        },
        "item": {
          "id": "701cbc38-3aaa-4388-b8a8-7054f80d4efb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "289d6b9f-e0e0-41f6-a0a9-0f4af6c62d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1358ea-4b04-49b4-b744-cade304522b0",
        "cursor": {
          "ref": "96cfad2e-0782-4760-b12f-250d010e71ff",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2c3c19fb-f899-47e6-b825-a384e154b70b"
        },
        "item": {
          "id": "9f1358ea-4b04-49b4-b744-cade304522b0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d340b322-50a0-474f-ac2d-6d10a557876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b95c08-da60-44e5-9a2c-aace61f9fd5b",
        "cursor": {
          "ref": "0519e005-0663-4462-b362-36f8095849e1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "878177ff-0114-43e9-917a-0c2b2ae72ab3"
        },
        "item": {
          "id": "16b95c08-da60-44e5-9a2c-aace61f9fd5b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aec8ab61-4379-4482-a1b8-979a85ff1ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5c1ef4-3d5e-41ab-a7eb-c3e656a95297",
        "cursor": {
          "ref": "a9fb4ebf-8d8b-4a9e-811f-b28597798936",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9b274180-4c45-4ff7-a52a-a44526ce2e84"
        },
        "item": {
          "id": "8d5c1ef4-3d5e-41ab-a7eb-c3e656a95297",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8b6d0e5b-4015-4a56-8f4c-e36ca032c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25f791c-52fe-4277-ad7c-0a153519028b",
        "cursor": {
          "ref": "5e276630-2f76-48bd-90fc-97531216b165",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d7f81297-c9a5-4728-85eb-32e1e3157e0b"
        },
        "item": {
          "id": "f25f791c-52fe-4277-ad7c-0a153519028b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e83fdc62-0d5a-4719-ae49-8dafdca87a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48704e1f-8aad-4b94-8d59-380a07b5728e",
        "cursor": {
          "ref": "5d197aec-26bc-4821-a1a5-4c63c176adc5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6d120931-b8d8-45d2-9c03-1b7157240218"
        },
        "item": {
          "id": "48704e1f-8aad-4b94-8d59-380a07b5728e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6ecdeb1-4163-42da-887f-336b6a696189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae726d78-f9b0-42ec-9d43-cdb59586ee18",
        "cursor": {
          "ref": "693d1126-bd7d-4dc2-87e7-da2f0c4e303e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6ebefb48-8dd3-4075-b9aa-57784c413443"
        },
        "item": {
          "id": "ae726d78-f9b0-42ec-9d43-cdb59586ee18",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f2d7480-d75e-465f-9a1f-013aea70a614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1e0517-0f76-4afd-94a8-5c896fcc5e8e",
        "cursor": {
          "ref": "a7db93e0-9fc2-4b13-801b-bc4080d86935",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f8fe1cd8-6234-4d3d-be19-3f7f8721b207"
        },
        "item": {
          "id": "aa1e0517-0f76-4afd-94a8-5c896fcc5e8e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "64d4076e-7935-4886-b209-052f5d966b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addef895-f874-4c96-a759-ad25234ee900",
        "cursor": {
          "ref": "275e82f6-24db-46b3-b5fc-cdc0e72a0aaa",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3bafcb4a-219f-47ab-a06f-426f29b35353"
        },
        "item": {
          "id": "addef895-f874-4c96-a759-ad25234ee900",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12a18043-c56e-47d0-bda9-752599667eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c38238-6bf4-440b-b9f3-d7b34ded148b",
        "cursor": {
          "ref": "0b749320-249f-4022-95fc-e7f85dfa3185",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7c3e09b6-f9af-4b96-84e5-00eca26169fd"
        },
        "item": {
          "id": "a2c38238-6bf4-440b-b9f3-d7b34ded148b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2ccbea7-9928-40e5-85ec-83c4fcbb3052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e1aa87-cca7-48f8-893a-4e8a828ceef8",
        "cursor": {
          "ref": "b845ea1d-b879-40d4-a05e-8e6e9098d423",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "63632408-b9e8-486d-9032-15dc58d5bded"
        },
        "item": {
          "id": "23e1aa87-cca7-48f8-893a-4e8a828ceef8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c1d43cce-4cb6-49fb-a7da-19cb4064040a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765eac3d-f076-4e20-8418-5a8dbb98cdb1",
        "cursor": {
          "ref": "ceacbf5b-7962-43eb-b5c8-4d97b4a4ef6f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a3244406-023f-447e-83b8-21ebae68bc6a"
        },
        "item": {
          "id": "765eac3d-f076-4e20-8418-5a8dbb98cdb1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec94c844-17dd-4b2d-bb51-9e4b5e0538a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb4b852-2018-474f-ae8f-e9aa7f383484",
        "cursor": {
          "ref": "8cb566a1-3443-43f1-b9f4-40a021a1de58",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cb8171b0-8db0-400b-8268-61a9b6f9a831"
        },
        "item": {
          "id": "1fb4b852-2018-474f-ae8f-e9aa7f383484",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "652cad9b-028b-4b10-941c-6b48c74c4eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d333cef-9dc3-4c28-bcc3-9dbf2d89df33",
        "cursor": {
          "ref": "4f7b4b6d-9d53-4f09-8d1c-b33c303e137b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "98df2779-6768-4837-8ea3-96f570cc0190"
        },
        "item": {
          "id": "1d333cef-9dc3-4c28-bcc3-9dbf2d89df33",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0ebe4aa-337e-494f-a9a4-5f3d14beeb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b206b64-17ed-4d84-9029-27788ca2931c",
        "cursor": {
          "ref": "14d5282f-22d5-46b9-a423-3e702e727e49",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7015b6fe-1f4f-4c6b-95c0-c2ffadde79b2"
        },
        "item": {
          "id": "1b206b64-17ed-4d84-9029-27788ca2931c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fd350783-67dc-440e-9b06-b2999a277e94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9edebc-8677-4950-aad3-6d998ac06b3d",
        "cursor": {
          "ref": "8346e228-9100-4249-b93c-e6fedd784cd6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ba76200b-ebc1-434d-bbd1-652fbaf8309f"
        },
        "item": {
          "id": "1e9edebc-8677-4950-aad3-6d998ac06b3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e4505690-f242-420d-ae03-3fdd429fdc8f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1064c9ba-316f-4ba5-b781-9189b2ff938a",
        "cursor": {
          "ref": "6ab66681-2458-4398-83bc-142abdedbaed",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7dd02f2e-5a08-41ee-9d88-ef0b82670981"
        },
        "item": {
          "id": "1064c9ba-316f-4ba5-b781-9189b2ff938a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b2339664-d9ef-4d49-aad7-376d959696ec",
          "status": "OK",
          "code": 200,
          "responseTime": 3307,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f6927-2258-4a23-9dea-0335a70c70c7",
        "cursor": {
          "ref": "57a12845-f7f9-4ef6-89b1-564c1354c9f7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d97e2439-1d51-48f7-a72e-dca4a7358e6a"
        },
        "item": {
          "id": "7a4f6927-2258-4a23-9dea-0335a70c70c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "03cd736d-f316-4ae7-8945-a9ab20ae663c",
          "status": "OK",
          "code": 200,
          "responseTime": 2794,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b331a-5fa5-4197-83f0-9d635e9a8f7d",
        "cursor": {
          "ref": "74836c1c-a17f-4125-8739-704011809187",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c062c3c3-2270-4a3e-838a-ff3672bef1d5"
        },
        "item": {
          "id": "838b331a-5fa5-4197-83f0-9d635e9a8f7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "22e8260b-4289-4a2a-ab94-b992a39a7a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b331a-5fa5-4197-83f0-9d635e9a8f7d",
        "cursor": {
          "ref": "74836c1c-a17f-4125-8739-704011809187",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c062c3c3-2270-4a3e-838a-ff3672bef1d5"
        },
        "item": {
          "id": "838b331a-5fa5-4197-83f0-9d635e9a8f7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "22e8260b-4289-4a2a-ab94-b992a39a7a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c780f-b090-4e8c-8362-2730ec046243",
        "cursor": {
          "ref": "c99b80b8-38a4-496f-a995-88ae06a121b1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c2bd3499-3a89-402d-b8bf-18c81776e0c2"
        },
        "item": {
          "id": "1b8c780f-b090-4e8c-8362-2730ec046243",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "869175db-5d98-46ac-ba65-494d80afc754",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c1cbda-ec3e-455d-81ac-c0ff7adaa47d",
        "cursor": {
          "ref": "9dbc58a9-2f2a-4ac7-abfb-69676ebae39b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "283c3515-0383-48b6-8630-011cd6722201"
        },
        "item": {
          "id": "81c1cbda-ec3e-455d-81ac-c0ff7adaa47d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93b80569-2f7c-4a99-a870-69a41487cc0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}