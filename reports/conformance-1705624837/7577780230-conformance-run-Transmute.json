{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0596caee-9174-4c4a-a953-592f0eb87cea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e0d467a0-320d-4480-ac65-036b673850d2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6281c984-6696-4362-96bb-f9939be8d852",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77f2b287-38be-40a2-991e-7eae30032264"
                }
              }
            ]
          },
          {
            "id": "f50c26fe-5a6e-4fc0-896e-a291c13ba46a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7458441-24da-4d1f-8dfc-08691be728b3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d8ca209-e7f4-4070-bf92-09acafe6ebc9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "93d6c75b-1561-4323-a647-8d14bf7362f6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "959d403b-8c0f-4145-93b2-237d0b80c9ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b78af6f0-ef20-4611-a328-77b680635b38",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d16121c9-ea7d-49ba-bfe5-3226bbde92d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64d71403-5a09-4a5e-b0ab-e862acf68382"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3b14127-71fa-474c-8c43-934fb5b20968",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b23f10f3-8ef9-4473-a1b5-0ed5889b5274"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08dd6579-7cfa-45c1-acc8-963a00cf2f2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "051deb17-ffe6-4def-bd2d-9a0d138041f1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a29b64a7-ff69-4bec-80a0-b0f338ee11ab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d5621bf8-d7ce-4333-b09e-44eaf7bcda8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b19022f-780d-407f-bca0-128dd3ce0f6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "358caa34-1360-4503-8039-d7ed3fd77e99"
            }
          }
        ]
      },
      {
        "id": "80637474-db10-435e-9b7b-6b91c4878988",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b90915fb-9b9c-4e57-bcc4-f75732e1c072",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6ccbff4-b6d0-4853-8d6f-d82331d8b791",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad2f4de1-05a4-4fc8-b70c-0897b26dc96f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5adf05-64aa-4c43-882d-806ee66cc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6d75253-b432-437e-935f-b6292bfbfeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce25beaa-a3ae-4fdb-806e-db5dfff14d96",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44817be-a1d1-402a-ae1d-c68143c3a366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e67eb435-d01e-4bd6-8803-6260d2a93678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52ad89-c6d3-48ba-8c59-486ba423a3aa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d587e2c-0246-4dde-ac9b-c3713964146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f46a2d9d-fa0c-4a76-abd3-db3264a79778"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ddd46c3-45e2-42ce-9947-0003b0eca90f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4840a5dd-b6d0-4e0b-bafd-5b0e0dd00bfd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d768d244-4721-4a70-97fc-e858b26bbda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12d888a0-ef20-40bc-a58a-6ba7c8412423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd24c87-af46-431f-a9b9-a67dd418765f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebc3601-f528-4be3-80fc-4a39ef530a1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6343ed12-f326-4b7b-aa10-90d4d8042099",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cee5f38-69c9-4674-9c4f-6fd63ae3c8b0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "638a819a-e30a-4d58-a9c8-e5a61aded646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3f51e3cf-9c0b-4136-b09d-425207295747"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a3b121c-1dd3-4e06-b158-60ee6e16904c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4fb7fe11-b869-4771-8c29-ad7a220d7fe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18408201-bb28-4848-82ae-3687702da8dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c2a70f4-36df-449d-b7e1-e020c24f5364"
            }
          }
        ]
      },
      {
        "id": "46d99ed1-184b-4cfe-b081-49d3c3dd380f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d63f403-207e-44a6-82b3-e2a1d78ac0ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eab818df-be41-4eec-bfb7-8b981e451e1b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "83853513-e30e-47ef-a29e-49ae414bf13e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea6b51-b8fc-4d8c-bfa9-424a721ffe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743761bd-5041-42f4-b1f6-1abcae37234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d482f7-09b9-443e-b608-3351a90397ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4083db74-c63a-4289-ad93-d8c6fc24bac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa06104-6bbb-4d62-b6b1-155bb237df26",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907150fb-9d6c-474f-8829-26ce76e7ed6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbef60c7-c4d4-42d7-a097-600a3ee4fd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12540773-4b81-4932-842f-6a640c396c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "505a5000-9b2d-4cf6-8205-d01414ce9808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdcb7e6-720b-4693-a000-ef6474111447",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8aaa9-6fa2-4939-8b0b-075e0e07f728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029a5948-8906-4a02-b79b-da5c814d1ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944fc0e6-e450-4091-8ca1-8358d51148cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95e4a16b-b70d-4585-a388-54e7770b1260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a4c3c8-b16d-40e4-b090-45f21eccff0f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7f395-ef6b-4b0b-b182-d0fdb2eb3a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707c45f8-3267-43f0-b46e-05083f6d9234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d238d-02b2-4396-b558-c6253b6a0d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1af6631-6ea2-49ad-a6d2-d4ed57da17f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76aa611-3aed-4f2d-8b7e-64b8cbaf1b16",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca5ac5d-890b-4e74-8352-522db6b8cfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24cc780-cdd1-4282-ac99-2d8b7d2277c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867cd0f1-b07c-4002-a368-948d347f8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05dd8794-6133-49a9-a3cf-2ab07ec786e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7abed97-c8cb-4d3b-886b-276fda5dee3d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7d0858-fca6-48df-8b11-aeb12c35e569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb607a4-e135-4cbd-aec3-0c233f4837ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f05cbd-b841-4547-9708-87e4e1f481a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f85e4957-30b0-44fe-89c8-32fca7a7641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a99290-b3e0-4801-b01e-b391fc8567f6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e8678c-3b08-4636-a276-28391338b202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8f9a20-70b1-4565-8c8d-d09bf9a6aefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15fa849-1577-4a11-8866-2988439874ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51bf4f24-e10b-40f3-a6ec-9ac6022ad60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1391c1c-d47f-4f2c-a7d4-0a6bd1c4dde0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ce21c-556c-4439-8269-26f39176ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceb81bf-3a9d-483f-bddd-2de6f23b08cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231d9c72-2bec-4d55-8465-72a4d71650e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2ab1840-a4a7-4791-8d90-505f47e77800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210e9b20-22d5-4153-a9a0-c0e0e1779329",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b989ace-888d-4a11-b574-44db12ed3444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8fc4d4-78f1-42ba-a91c-bf82922ce362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdc1c6f-60bf-4c91-8bb3-1a485c4e5ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f47e98e9-32b0-445e-b8d4-237b9ead703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e44ed1-13d5-478c-b43f-64acd58d4683",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b89b98-38fd-4dbd-82bf-89b98242547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b371b6-f2de-45dd-a824-e53d43443bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3fadc0-9ec2-4736-8408-9fd66bec4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c78a1a96-ec02-4ad2-9cb3-66e31234f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019fd491-1be1-4a71-a730-3499f6e3df82",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad52ae3-e340-421d-a945-8d1d23ed01aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd6f400-de14-4f02-9722-929a68e8fb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588fa4d9-6f47-4162-bf3b-1e426bb0e9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95c02d4b-e6fe-41b4-8484-6537a3341cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f207cff9-8f48-4bfc-aebf-f5a68e19eede",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1f61eb-503a-4528-8d06-c9cf228ec7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9763b135-1c92-4bc3-86d5-b10365340ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c289c5b-667d-43c9-90ae-05a5946eee15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52910f08-129d-4f41-9fde-4a1220a0e4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877b765-05df-4a59-b30b-698848e695b9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2cbb15-2805-4ac4-9a03-87c145f8e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e142f2ff-1830-4352-a415-b611d7852d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5072cf54-5d4c-44ce-bd10-87872f872cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f35f655-cb73-4844-b5d0-f5c614991cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e5b6f-e5af-450d-9270-d826a117c8a4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c11f203-7597-48c8-97fd-0b16a3d2d488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929ba5bf-cc95-4b2f-a49b-00ec6692bc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b4eab-5bdd-4fae-80cc-87b47fd08192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8321e43d-4466-40f9-b63c-1df43d61b51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f949e0e0-0aaa-4f09-9205-61dc033c221b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2999e64-5226-49d5-88e2-7fbf6643784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a68b569-31fa-4cd7-a1bb-a502ec75d912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c7cf79-14d9-4fd8-9947-a44805d615ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35416ad1-6576-4cab-925d-adf1c8f133bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e437df44-2709-44e3-abb7-408ca068d6b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c9478-2696-4f48-b1b9-5da26cb48f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0329c9-a6f7-4c84-a20e-c1a233439489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddf1b96-7146-4f84-8e2c-3cceebaab8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f985ca3-d1da-4c0d-9cf5-679d7ca59f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de1cab-0a9c-4440-aa5d-9240009122fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db50269a-0670-4e62-a36f-778c72040911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e875a6d3-5eb4-4f01-9bdd-2aa983bdc3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a018f6d-5006-4811-9759-b94bdbf6a5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b3140c8-5edf-4045-974f-1866073627e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8ad41e-6eb9-45cd-8732-71cd39c08a2f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2bf62f-9761-438b-bf06-97aebe88d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786553cd-3894-4c87-9262-db8ca8b314d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362e9d41-364c-4a46-8889-e8fb2ec8aa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83fefc5-3409-44fe-96e5-c26b1a20b7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6e6e2d-be7f-4597-b5c4-3c58ef8942fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b593f0-2740-4b88-801b-57ca109d4b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64498cc-b1ae-4fac-bdc7-b8210403f33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d51a00a-45ea-491f-993e-68160a6927d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1f62d1-801e-47b8-aa12-8b4642aa2359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01002b2-57ec-4eac-82bf-55491526317e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e45e447-fdf5-4d2e-95e9-ceb3e33680c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00c4e7b-abde-44e1-bd65-06bf0f3eccd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2134827-26c6-43fd-884d-7ff5dd1b244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56172b80-5c0f-401f-b39b-81124a4a24ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821800f1-bff0-4418-bd8d-8bb363d3f6dc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c9154b-67ab-4546-a391-aad1745324cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d23a918-96e7-4c12-a7b1-8d44e9d5c867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c18a5-9fac-4b0c-9b2b-222f629c1577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "521e5210-ae8f-4a4a-a2cc-e9f53c1ccf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82f1dd5-607e-4e12-b0ce-133018585549",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b16a3f-2385-4295-8c84-ddd1333ae02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157cb995-9592-4025-ab16-0a43f5ec43ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5068381c-b40a-4fa3-801b-489610174dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3d0565-a506-4b5f-a070-1e5e2bfef0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a2e00-c747-468b-840c-99f3bd0e11bc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f767fc6-df29-4938-9708-e13b04c97ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f28fa99-d086-4af7-9c97-f14750ef6516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b22ddd6-ad9f-40ce-a812-c4887535f8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e60b3f82-2ae1-42bf-8ff3-7b15dd135471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3391a5-bbf1-4a59-8330-28a6e01fece4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aa90ca-afc1-4597-a16a-fcddcb9f5fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fccbca-9953-4c21-b7f3-84c5d7f51300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b9aa24-fb75-4639-a66d-49026166564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cb8b64-413b-4ad6-901e-19c6a770dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180e180d-2093-47b5-bbe4-4609b9b686ec",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d89883c-5286-4647-bbe1-d941e38f33a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854e2edc-408e-40b4-a312-021904a61de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f32308b-b138-4e4f-86e3-25cb88439add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a936f9-3b3b-42dc-843c-c911a7baeef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2e3ba-d6a1-41f1-ba23-27d01e375c38",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4210bc04-b5fc-4880-82e1-29f9f0d9c368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7976886a-c304-401d-b702-739d4fc08c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5018e5a0-3b47-4082-8681-93ae6fa46cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01396a3f-8f6e-4503-b65c-1e30a3dd0453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d74b4b4-1ac3-4fa8-a0d1-527f201e7961",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b5778a-1a73-4891-ac70-bb74e5031868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c071c65b-bf22-4f87-bc07-ee518f70303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a27dbe2-bc7e-406e-acfd-a02217fd0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f1e45b-5751-49e0-a317-3331606ade8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477cb833-bddb-4614-887a-8c06b6d28719",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96764c36-97b3-49c3-a283-a1106971b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76556668-3c4b-42fc-b2dc-2d6092656198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de93d844-1f41-4ba8-bffb-8e90ec871d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eca8d9c-663f-40ba-a255-eaee246c2444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c208055-2998-4a08-a7a1-5447e27bd2dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43314f35-d068-43c8-b386-399a2b4478d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980214a4-84a8-4d3c-9b5a-a7e692bdf5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356eed18-f3e2-40fa-86c3-147b99295d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "737c3d86-47da-4505-a1a4-297979a8a43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7a8087-b3d7-411f-9673-0c4bdd4506dc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdeff0a-8cca-4bb4-aaa4-a8253ffc8def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d99303-a333-48d8-8ac4-7ad7d36caadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf0f36-45f9-4b32-b1a9-3a43ae4626a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "32391ca3-924c-4871-9d06-7b5a74c87246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553917e7-f067-4b77-9652-7ea87e4aec62",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159c091c-b699-4697-a52a-a6d3c6e51a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b67be7-12e1-41c0-b3f5-4f858fd9296f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf155f27-203c-4a2b-b4cd-f3bf2a0ad212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb512e-6aab-4435-a422-5b8c72eaca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775efe2d-e3ce-4f30-bf18-4bc02d45cd1f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a921d90b-5aba-4413-8b4a-6c8c8c41a5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf910b2e-4ed1-4442-a584-1398cef6d0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516d4cdf-2f82-4eb0-8a86-a845ad8ce02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bedd4a8-6ccc-44af-80ab-e78b2679bfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c84640a-a7ac-42b6-b2bf-af4a63893c05",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf1f90-1875-413c-9a8c-4d4cb0b44d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed1db06-9e8e-4941-af69-9746878be7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae82fe53-a980-40d5-be78-134478aad34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f30bda-d64a-4397-b15c-820cc66d8443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062712cc-17e0-421d-abbb-683859b9be49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395f99a0-9f45-44a8-af80-975f58f3547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0326a9cd-c0ef-4384-acf4-fb4030410308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc64081-ce90-4721-9540-8e0642024c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8763f3-1dda-4e73-8bc6-a7b0d7d439fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b7eac-2137-46af-9a10-08b26c190e17",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ed1f83-1866-4911-a87e-7dc2393ab786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7336a37-0c2f-4c63-b817-d1e11df75d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4190bc4-6880-4cf5-9b25-5b01fcf3ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca56387-b244-4b33-abcb-71fdf0d382ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4811fa40-9a77-4f07-af6c-583925c0f8be",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6cbd7-43cc-48e7-9b79-0cfc36ba96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0f1590d-003c-4e51-90cd-e44023631541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb1e919-51b1-4d0a-b943-48cfbc012cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48b10c0d-497c-468a-a51e-43cc2d82bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cff21a-9fec-4e95-ba9e-6ffab791a424",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887a424e-1db6-4cae-82d0-e37d94091ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b46a5b-fd32-4f3b-86b1-a538fe67f8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eaaee8-e1dc-46f3-9222-af9729d30f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2337060d-6aee-4a6f-af0c-3404fa933660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2b271e-2e01-410c-9b8b-ceabfbaa0495",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c04b13-30e4-45a3-8874-0232590ece30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13e4c2-1735-4fe9-8b45-801b42b8ce79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77729b34-f257-4606-a879-58a782466ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d858af-040f-47a2-afb3-b61698cb22b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e773496c-deda-44db-aebd-6496ad837c61",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f499fe0-ac67-48d7-bac6-357090648d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b113bc62-7b5e-4e91-9765-28037d2ff42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4295364c-1d94-4cec-a7aa-baed6df8fb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "434f1329-8c35-4e80-957e-b29d0d739666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9539c4ae-2a67-404b-8b55-1c245705763b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d9ccbf-1997-4514-b7d9-6a9a19cd7388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1ff9cb-9b1a-4646-90de-be1af2a00e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8625595-bf6d-4a1a-930f-88c11696bda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9446af4f-042f-46ea-bcf2-17717f2a3f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd63a35-dd50-4259-9d08-c9af605e251f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad521983-1b10-4e8b-8575-8edcd12295aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5845ab94-5190-4260-8a77-650bab1ebd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc055c0-64bc-4f49-b80b-8982acca3ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f269a41-2613-4b53-ab82-cb22c30b5dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e03ecab-41f0-401f-8659-dfa9775f5366",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf123a3-50dc-4b0d-83c0-1e2c89fb2c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7817107a-7bf4-422c-b14d-681bacbfbb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b59827-9ac8-49a1-90fb-9cb57cf5adb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c01d762e-e31a-4259-b8f9-64351c729052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5da491-ab22-4b53-899c-9f214143de07",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c84a58-1145-412a-9429-9acfb55beb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3361f94f-6d62-46a3-8e7e-73cbbd2ac1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f7b1a5-f0af-4fcb-aa3f-c72b77091c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddfc6ef-4081-4aee-8112-e2467e3c0ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e47a96f-048a-4586-b319-7894cc4e8ff7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be932bd0-1041-4a28-85aa-fda21d2f1b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b246c756-22ab-4fb2-83d3-8cedbd119770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849629ac-0e5c-4a01-8bb5-df928b3f529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a272f9c4-2ae0-47b5-8613-f18209f21c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b27bb-62e9-41c4-9a34-f2a88960de4c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430253a0-7005-4561-a900-e00840235b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8e57a2-d36b-494a-97f6-63e97d9e6cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb48a983-250d-4998-b047-86e43d6f2538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ccc658-0b46-4282-9488-6dc0065a9eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c59cb8d-98f5-4bd6-b1e6-9165f0d9f5de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696fcab6-bb20-45f1-b12c-def322d115e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cccb08-e48d-48a5-ba0c-b44a33687a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364a85b1-5cec-49d1-995e-da4e5207d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b1174b-8c2c-4f57-82c0-451479304e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6180cd-a8f9-4461-a8a9-ddd50c01c271",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425686d3-c5a7-4771-a957-93f6b1443a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc67781a-e1a6-4ab5-bc43-a905d2eeb000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2755d46-f4a6-499d-bc67-d977b6f356a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37b5ce7-2654-4a82-94ad-d15cccfc760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8261fb6c-746d-4d96-965b-d50400df4900",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4221672-f6d1-4de1-bfc1-8e77c4f5bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af420123-153d-47aa-a8ba-3c85f228918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c4314b-befd-42f2-afd0-808220f5137a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "057ac7d5-5bc8-4359-a164-505cea7b3c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbc289d-da7c-48df-b731-90f4f01b422d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c7e892-c5c6-4b09-8941-575f97f3bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4dbe4f-bda4-42ed-bedb-81ecb7416b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c801317-4b63-43cf-92cc-76499c096ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fe90c9-defb-45f4-bac8-f655989f709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed4f1a7-0c09-49cb-801b-6b3c89836eed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43744538-6ea3-4149-a0cf-342db5f308f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e98c151-ae68-478c-b015-eabb306799d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc6a0fc-81b6-42e5-a04a-3eb597e5e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc4a122-3974-4c8f-9c7a-2845c129da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbb32f1-c77b-4379-a543-cf6764bb3af5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6143f8-3081-4b23-a255-a8d90d0db165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34a4a2f-269e-49d9-851c-8907edb7fedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edca013-96c0-4456-b1d4-620abde6d5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "545085b7-01fe-4ada-988a-ededd4f3dd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b4b13e-45b6-45ed-8bcb-ec8c03fa4249",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec3e503-fecf-4a31-a8bb-23764dd77a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f1bc4a-dc63-4566-aa87-a6e7a08a383e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd2a85c-d154-4a52-baee-47e9fbe22319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aefdfb4-52ac-4ca3-a4fd-b9d3d05e6f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968f1e0-4ca3-451b-942b-31bb19bba5c0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892d26ed-4a48-419f-bf66-d5245ce9592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4adaa0-1838-4230-9c75-4ab429c76d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39304bd-1819-451c-80dc-36c4e7454c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2aa904-b770-4eaf-9b51-9cd77b80c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6d2890-ba19-4cd3-9719-4b8ce97f07c8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899d432c-24ee-4d4a-a8fc-55c8af9e9050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea46724-80e2-456e-89b4-5455c6c35254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fc1111-11f4-4183-bb5d-595401552398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "422133ca-99e5-4cd0-8c4b-a4e403cf467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fceb06-0f3c-4865-8c15-796363097839",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03fb7a0-56bf-4e5e-8c48-b968b7c597c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe204305-b678-4de3-9338-30f5cedc75c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826f1749-5ffe-4642-8827-6818bb24d65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "302fddaf-8cce-4143-a8b5-aef7347ae3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386f1abe-b23c-4e6f-9707-9f0f8c261a1e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01198392-a3b7-498a-984a-f607b83a5f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad84760e-73ef-474d-9cb5-ed11b6c16366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3ccdd5-f12b-402b-beb7-9d5ba5b4cf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9035b914-0537-42ec-897b-18666e47bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6003f9e1-2079-41c2-816c-280c021c2e00",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4fa674-5d25-437c-a590-cdc9f86e85e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d875968-fea2-4971-a913-798cb0c27ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404a13c9-abff-45ce-869d-c2871a45f1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5b02c1-ed21-4199-9c21-b4d62efefe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e013fed-2b66-4dd5-a981-0dad952063aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f65f5-39f8-45cd-b072-74e51fba3d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e05e1d0-e65d-40d6-9b9b-cca6f987b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9b6c8c-1180-4a6c-8f57-e6fa6db5b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2caa2c3c-46f2-4b4a-a8f5-186f9b40f554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9270e7-5fec-4160-8a59-f551f0378c21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a1adb-38a9-4c7a-9205-045864182e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a4cba7-2ede-4bb8-b6ea-2bd28e32a3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856f670-eb50-4419-917d-6c21c3bd05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e95cded-fc48-45c2-9cd4-2b6980530206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04fee2a-503c-43ed-9a53-457128acc9e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf16291-7e6b-47a5-8170-156ebd7f69ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d60ebcc-1357-44bc-bdb7-ae224e575be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4fb283-2525-446e-a453-e67b54d9356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cddac0ee-7278-4f8b-9820-8726ea77f807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b9278b-2774-45af-99e5-e32400aa3e11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e67fc4-794e-45c1-95b6-ac8bab90b2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27037fd-dd52-4461-b92e-3386ba7aa230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed107f32-96d6-4af6-8595-f88aa777c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b446711-8d85-42d4-a166-68be7ee0ebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6f6c31-703f-4339-9ec2-86b49322d35a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147474b-19b1-41fa-893f-8ec08172a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f45e852-32e4-4e9b-b3f3-cd420ac8d808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6024e18b-8307-4726-b0ae-67f0375b947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aba9afd-280f-4d45-ac39-fffd240c9663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b2570c-f4e8-47c7-8211-e26755cc58f9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45df30cd-6f18-4d58-ad48-62f73f3e6c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eee78d7-fe2b-47a1-a0cf-bddfe4d4975d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490ad03e-9604-4a75-a696-6021c37c3d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "920747dc-e858-4c95-8f96-3a38e8642ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de56bc19-a31c-4753-841d-b28e7c3a1e7a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eb22a7-c96c-451e-b427-eda70334cd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669866f6-b306-4db4-9bcb-3952bacfc205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52d1c46-5da2-4972-9165-1cb01b14198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de05b83-fd00-4171-a65c-7f22e28074bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2aa009-9b9a-4347-a28c-299d2c1c76ba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2093242-3cca-4507-8d67-1ec422c0548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c767449-56c3-41a1-8acc-6c7a9d114d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231bf0aa-3689-40fd-bc0c-a37b02350e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f433120-41ab-48da-8e0d-491c690836ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048ad97-d86c-4bfa-bf23-5041ae5363b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d481e167-ce35-4ea2-bae2-3911e52d1f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a44de-af72-4b4d-95c4-5e16a464ecbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837184ab-6171-4954-8cbb-70ec1acf2e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73b08ce-9c3c-4a13-87e9-b4fff3dd6f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a0db3-2f55-4d22-b2d2-d1acce6859ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d8d64e-c798-487c-bc93-69dcd1d5461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b30711-abe3-423e-823b-d15996f00821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f03514-362b-4636-b827-f5a9758ce40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f482fa2-225b-4d23-b3be-877e688daa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4731797-ea8c-4c2c-a961-4bfa1a14197c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc34e30-0a8c-4754-82b0-2db59db03b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb46142-ef61-4160-95bc-ffb01a02f6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf933043-97ad-4f1d-8258-e21bb60d92dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f402143e-4dcc-4d82-9c00-d1796eedd058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f34fad-a284-4004-982e-c0a7e01ea8cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d32e9e-8f96-4b3a-9821-48b2048802a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52802cc-1f99-4e46-9ad8-192507c89945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e64004e-d20b-4e50-91a2-f66745c02336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00fec84f-229b-4354-9d42-22dc48728b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb97b8b1-4298-4721-867a-d1bc3847c0ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a107c5-e75f-4796-8f5e-e14224bc20c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01c872a-6059-4ff2-8c86-8c1c32d013d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b6ebac-dc33-46ce-9d51-03ff6ffec7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c0b175-d621-4614-89ff-419b84ecc23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478af36b-19b7-44df-8a95-e3adf6419e2f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52937d7-317d-47c4-b5b6-cc5197ddd656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc670091-2f23-4a1c-ad34-6591e68d4f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac7beb2-31d1-4517-87fa-a27d62f13889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a323ef16-9c9d-4f26-9ccf-1920d1efc3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aba55d-4006-4433-8f0e-53d3737a3fac",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fb6756-56f1-4910-a248-673e3af53c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378f57f7-c130-451d-a395-f0b55bf11fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7478a8b4-8e6d-4883-9331-695be55377b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd54260-2d67-47c7-a0db-b998b5ec58fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faedeb19-c79a-4446-8583-92b4bb5522b6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a269a6db-20d3-48ed-893a-c21ce0860bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5daec7-9b24-4939-b13f-4321d944d121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba6cca8-585d-4f85-be2e-ed5f573cc717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00c33b57-e37b-4885-941d-49bc3314cd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484da1e1-855b-4dec-a407-6a3bb27c84e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58122ba7-6c69-4bd0-8b4f-f7419b7e2255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c473f3f5-9731-45ab-b12a-9106a5181bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33decd2-0004-463f-8942-5968b01884b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9844dd-20e1-4e60-9fdb-e6d8e3e0e99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a8e125-9099-4944-88c5-5c5fcdd78364",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c75b215-a939-499e-a195-7bec901c8124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994373b9-fde1-415b-b164-b8c9fa79a774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61268e9a-2235-4408-b81d-2099418ced09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1b87f0-c5a9-49aa-9613-034c3f18c9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00532a4b-614f-4d24-9d38-7e3a36cc338e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295705b2-14d8-4f6c-92a6-4271474d4ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546277ef-be64-43d8-b5b8-7c6cc913c4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d896f159-eff6-4a2e-a1dd-00950e82545b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4bc408-44de-4127-b6bc-713820e41bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92b76d7-2953-4ffe-b79e-26a4c32a66cf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f72051-772c-41f3-b55e-9ebed1521379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8431020-47ee-4a97-947a-4e5c1a4b2e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc1a655-ac3c-475f-a510-eea6f105e7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3804f05a-cba4-423f-ab34-c80ebd2a86ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45df5034-18ad-4085-944b-5abb57ad3cb9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d779f1d4-ff2f-4f5c-9725-01bc5f1ee282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4dc5da-45db-4652-868b-6e3d8286cf34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6798dc91-513a-4f91-a106-183e52e7ccb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c5d650-37cf-4c8c-b9e1-86787aeebe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f82037-4a65-4587-a00b-7a247a3a2c6c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4e77bc-3ace-46de-a70b-765d5259d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a982a-9b5e-46bb-aa52-1c9058130aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d54387-8695-40e3-ac04-08f834482aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e477b0-a772-4969-ade3-2a3ee806de43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbfc6e0-084c-4f27-9092-f8382d52823f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd579ba-ff53-4f51-bb81-f0d1398009dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f25a147-d1b3-44b9-8274-96c2fb320a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d86d020-628f-4607-b356-31926988ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2584190-da6c-4974-a85b-a34c099f43a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d33071-ca8d-440b-b00b-5d8a2c4d451e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e4b6a3-3441-4b2a-bfb9-b85dddf10abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cbb94b-973f-44de-8cbc-7da825aaf27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db622be4-979c-4432-a6ea-f9e7a894aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30d9601-8ef3-432a-a061-e8f83a72b8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8eae18-1c94-466b-b3c6-cfdb3d1b4481",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11df394f-f8cc-4064-aa3e-939668dbb3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eacfd6d-d284-468f-beaa-bf8e1e8dcebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832dcc8c-7c7d-495d-b43e-58b01f8beaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e995c31-bc3d-41d1-a559-8f92966a6311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1be4456-fa41-4547-9a5a-09faf8d18c69",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94ed9a-eb3c-4df1-98bb-c105991f6cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c70353-4680-46dd-9d91-7bd03ae52ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76831d9e-9d17-4b82-958c-dc4552d748cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "890088aa-4167-42e1-88eb-9727f5c03f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a29fe1d-0f2b-4d7e-b889-a287dbfdaeb5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e42109-caa5-4e74-b1bd-9d8442e7f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef80f33-110c-4b2e-9bf8-abee64a8804b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520615a6-ec54-405e-a2bb-47d56aafac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbcbb45-e2f8-4cbf-a6d2-d45202a3afc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92870f3e-b2b1-434a-8b6f-c58bc95cf0a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c94b242-5f65-41d8-9285-28e228fa9831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91aa83b0-2e8f-4913-957b-42937fe09856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6060c1bf-5d8d-47c2-9c85-bf9aa25d6385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94ca4204-1436-408c-812d-c896e5d47267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888dd66a-52bf-410f-bb09-48396bc82343",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673c7c92-00d6-4a2e-82e5-68cd039f2f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333ceb30-23ff-449f-9465-f65f38d4a574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a07502a-b039-41ac-bd60-a68a9328509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9845580-f7e9-4f4a-9a9b-93070ad9680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f94608-6895-4123-848e-6e80bf63422f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0809f-f84f-402c-a0b7-53dedd43ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bb1126-7242-4f78-81ce-5f050ec4d568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecc00c5-9e88-49c7-b27b-bb17898ee7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d68d3ac7-8e4f-4ca6-85db-e8e8f395b4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40ef579-c02a-4a77-a37c-603b0f4b6c5b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4240851-5fe2-42bb-b6b2-cb8e19805a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bff5ffd-b2c4-48aa-9d2b-6bf00079cded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a235f96-7f28-4e00-8f4a-babc9c2be9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70bba76b-51b8-4bd8-826b-5c4dd13e4fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0642aa-fea9-4492-bfdd-02cfee941f22",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f45f2-5fa0-455a-ba48-8600ebc32545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4aae2a-8a49-411d-a2af-570b609d9cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f7d3b-1ab2-4b6f-a8eb-e0e990c5dbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67fdc39d-60d8-4a07-93a6-a08ed40590c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccea543-94a7-4bd7-b3a6-a46b782f128f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b386d8-7328-4aa4-a29c-ff2918258349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7124f57f-8f3e-4672-8817-09ceae2f12e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f58745-b4fe-4223-89ce-34f0ff36e68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4588e8-faec-45a6-9341-1cd0fbeaba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c38d2-1c2f-4ad9-ae8f-570d1937b2c4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cd205c-22f3-4363-bb94-bc87e9f5e696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f879e0-8564-4ccd-a32d-37e78bee2d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529cb880-a87e-4e00-a95a-327086916233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8a818-c4ca-4cb2-8575-3f4ef3c20174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f8e1bd-158f-4f6b-8454-46e2ab035a2c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e3a7c1-956f-45be-bb1f-5e5b5d75bdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8eb5e9a7-741c-4a40-881a-44b6c0dff703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de65d3f-0ba2-43fb-a56e-2794209be01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "943fd497-4d98-4f79-8fe8-39264c8fecf5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44179989-c3d7-4881-928b-d95919c31be5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6513750c-60de-4cc6-82ca-373abfa3c1c3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a648490c-c9f0-4553-90ea-a08dd4c15c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b072f1b-3740-4b78-b919-a26942f0c7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062cdabd-4401-4333-a8a4-14215dfd78fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3947ec6-6852-451f-9345-0483966b72ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4197498d-f5c9-476f-a618-43cc9ad39a6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0889d95-dfa2-4f71-8b6b-91315a9b2814"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42a8ab6-1e8d-46c1-a755-dc8f57415e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3670b459-a352-4f0b-bcef-16c4da938bf0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "324ee379-ea7c-4a5e-a3a3-2d5296f4d8b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b8302e0-9534-4da0-a46d-281abed84038"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83ab356b-ce6e-4aa1-8f38-288ebe96b5d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bae02d92-5432-48a8-bf70-72d626af8a5e"
                }
              }
            ]
          },
          {
            "id": "41760d2a-4485-43cb-a2a5-f7973fbfd74a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25907364-2413-4a1c-b049-5ad720f159b9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4c2d11fd-bae5-4332-a219-6f137805a0fb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dfa5f8-b539-49f3-9a67-cc444d290590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "33ef79ef-78bf-484a-b15e-e981780b27cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef684736-c5a2-4888-9bf7-b447015e14e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e7c0d1-9f87-4371-8fa6-aacbedf2cc0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9909d7d-a24b-4b67-9a66-ef3104b82a5a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b86af5-9664-44e8-9670-1a145821623f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dd9dfda-41da-436b-acac-8a5ec157cd35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "317f5c57-4a9d-4901-8bc6-eedded9bdc7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87a8603a-bae3-4181-b0c2-0bb9098c09ab"
                    }
                  }
                ]
              },
              {
                "id": "98c91c4c-06c3-4b29-8fda-23dff5a150e1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1558ee52-2d86-4c9c-a8c9-8e0e5cc4db7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33c988ed-7231-414e-a7ed-1120dab4c488"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5581a27-2bb0-4207-b9fe-edb2a2f27530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "889514eb-6a9c-4e76-aa7c-ab57af4812f3"
                    }
                  }
                ]
              },
              {
                "id": "0e4178af-58ab-45ad-91c0-618eecfd3cc2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc936663-37a6-4342-abc5-394735d4dd02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "172d09d1-8dec-4568-a2a5-9fe4d39643fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bba490f7-9178-4056-b6d6-0641afb7d58e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72a1bd08-34c9-418b-aebc-114aef20a0f6"
                    }
                  }
                ]
              },
              {
                "id": "24d80b88-b983-4f8d-b621-30cd938917f1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fec8b76f-14db-4833-b4a4-989079377b8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b6b8828-b4e5-4b35-aabb-f3681c0cf3cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a76c6da8-7bf4-4d25-ad4c-924245dd8245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4f456f23-00b5-48ed-881c-a78d15052830"
                    }
                  }
                ]
              },
              {
                "id": "b2985e08-bf19-4e04-91c6-bd1f698241d2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76c7847e-0a2e-4663-a63f-4e20f39ae40e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93320818-a5fe-492f-aafa-00cd70c96fe0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081a56b5-e54b-4607-925a-57a673070af1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c4380694-720d-43a3-9074-1452a83421f1"
                    }
                  }
                ]
              },
              {
                "id": "09bbe2f8-e67d-4f80-8b03-cb690623bf8c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06dbc159-c24b-4c81-8de1-45e6751e46e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b37966a-5422-4e68-97e8-b46ce7c89767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "407d1578-c9d2-4ee3-909a-f0cce52d8a18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aeb7b554-9aed-4d44-bd53-b30b13fc8ae7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "476fcf94-3e28-4bc3-b0cc-602cbe6a93fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b881652-3b66-4b34-ae80-b477ac3551e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a874d01-c731-4c54-95f1-0a3198617c39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c76614a8-765e-4972-bb03-b03b2b7b8af8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ab681d5-fb1a-4d2b-be16-00bf57a70db0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "60714362-e473-423e-8511-eb42ce741094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cecd581-790d-4234-9886-a5ff732276af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c93d0495-b6ae-4172-8058-f92e16aba529"
            }
          }
        ]
      },
      {
        "id": "9439a270-213f-4835-8230-7bc892651bcb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "876d13e2-1470-4e40-94d9-b5b3838ac686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dc79d63-fc88-49d7-9cf2-3bea62ba63e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6651817-7581-4241-9add-48fcd3d8ec83",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c65072-4dbe-455e-99c3-05598de5d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5752095a-0660-472b-b18a-1c6b3252b86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53796bc1-ca3f-4d67-8df0-2f4a0c93b6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf5239a-8730-4613-8fb3-73949ed7f7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d119ae90-c341-4d0f-984e-669065c66a9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1775d2a6-dd01-471d-a05e-28beaeb9df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954910ed-f9a0-43bc-a60b-e0f23c29102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db771c1f-0c4b-4047-94e1-9f8bbeff092b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "489732dd-aaa9-4d66-a4c3-5751e75f4549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3079b6a9-48f6-4023-92af-0c033417ff4a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847051c0-61f4-4f2e-a650-de96520ca3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc53ab5-96a9-46c8-8545-32a227b9d697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce04b9d8-ed76-4001-8741-2075f6ba93e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f868fdd-6c77-4ebb-a894-b23704c31562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc8f27-56a8-4cb2-90b0-bed2cbf723e9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b124f-5136-49e0-986f-ef3ad31bd77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d900ef68-bd1c-44f2-ab97-6804c2ea4248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d781029-45f3-4ee3-a19c-e8af38328780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49229952-03fc-4da4-a5b6-ba10b5e85c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983f1e74-0f1c-4b4a-b5fe-3b17a06474bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408888a-35e4-4b89-99b2-422248ff03c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa01550d-4bd8-4606-9129-7c685f74ebc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6057312d-7be8-44ce-8cb5-6eaac866cfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "704a8561-7028-481d-b11c-f406ddc84910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67379710-4400-4cff-b350-3f74d0c368ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b0f4f4-de73-4186-a825-39e3ec5d31f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f7d51b-303d-49b2-9756-e311ebf3535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7f74a8-84dc-4202-a155-fae1ad5d8c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1702801c-120b-4c2e-bd0c-4621e633c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24301d3-b48d-48a6-9e68-9480566920fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae8a1e3-479d-483b-8ad2-99bef13a2d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2bcf29-2bb9-44ec-8f30-5c975a1a6da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9cae8-7273-4ddd-93aa-96d446eb019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6e3f38-6625-4b97-8e61-8e536a7e44b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f68cba6-d159-4429-b55c-f253be163fb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f5c29a-24b4-4a50-bece-82bc5bd7ac91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb3bc40-9635-4ab9-a608-7bea74aa302f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd109144-46d2-4691-a248-9b2d652c3630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d50f9e-5136-4fe0-b612-b244a171b267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb434e90-daa2-440e-b461-56ab27f81923",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d82075-5ff1-4d3d-acf7-1cce4e38b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa9fb9f-dde6-4eff-97e1-fc4f1c38c549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0158b04f-ed50-40d7-905c-393e9e606cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f495107-425d-4a27-a48f-95e7760fbdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a487553d-92ec-483f-a79a-6d8966646523",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6154a-d994-45e4-b171-c5d038c38b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287b8766-fa65-4716-a551-b2ecb033390f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15f44be-ddc2-4038-a75e-182824988a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb034b7-4512-4f16-87b0-d3284d821d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424ded6d-a204-4004-bc94-3b2d2515b7d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae40c4a-e9b2-45f0-ab37-76cedc5be5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d50a32-edf0-443b-a5e5-a17144dc17a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b692ffe1-292a-4392-8ca6-7aa350fa438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b69e072b-7334-4a2c-918f-31934d12884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b478bd5-6ddf-4ffc-ba59-b4d9dcc130db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ec0761-8ff9-443a-acb4-4a91b7d3ed5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0074991-e009-41c6-911f-5cc1e24f2862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc045e0-5913-4d51-976f-897dd994444e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c10fca9-7bcd-408d-89b0-772e1410d876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa08acfa-cf5a-4ec2-9c44-bcc6cce10090",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e48aa6-958f-48dc-bbd5-a0d95657fbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d824dc-6b7a-4348-9dfc-4f7802e436a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef31435f-7b5e-4925-bcf8-bc825b03d178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68d3d06-753b-40d5-a146-a764af3117b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26047f4c-2bef-42f1-bebf-ef310b5433ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7093e2-8033-4b8b-bfdc-eb270c18b09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7863afbb-ab30-4937-bc77-8834ab8f2348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60787197-a6df-481c-b0c3-1edbcb2beac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1dc7cd-5f2e-4a4b-97dc-364dbda3c268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd608a12-8fc8-45bf-bfab-3b278012d0ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e239b-0427-4b08-8bce-ab2d09e57595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99f465c-64a7-4fde-b612-b0d96daedd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752edde5-fa05-4b21-b1ad-d417d28cbfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9026b298-4417-49bd-b008-8c5feefc3282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cabec89-ea0e-4037-9dc6-f3da76971056",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2549978-90ae-461e-a24e-0f543dd55bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad92c862-a974-41ca-bffc-f4d7c79488c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1902d018-8ef6-49b7-ae9f-37edadb5efbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e38c8a-70c8-4464-b8ee-973a7846a612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3e121e-15a7-4052-b0b7-15d82a5b1795",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634c4a0d-3877-47ac-9016-d9b2a1ee7e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb0f377-11c0-4be5-bf1c-c2ee1905ef64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c9ec29-5c6a-40f1-a51a-30c6dafa0dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c16a502-f395-4657-a35f-3c71b57149d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d89c20-d5d8-46ec-ad51-be7d18ee93e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05d5379-5c79-48ad-a6a0-6071a7027abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd63dc51-59ba-4188-9f91-576e018197b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72da0e08-74e4-4de6-a152-b817d8ddd356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74290be7-9232-4e08-9b49-8f53ad9d43c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143355fb-77e7-4e12-8a53-4c75368e369f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ba0eff-2d43-412d-b512-ff668e36b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b584b6-f718-4db7-b14b-2cae89ad050f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cafa57-61b1-4942-8907-bb10520fdf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134c66dc-675e-461f-ac8d-56627c5e59c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b01adb-d20a-4ee5-b814-0173e2474301",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f222d648-a382-443d-9f5a-7ad19290c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f86c86-74d1-413f-9681-4d55aafae059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f9214-082c-41ec-ad7c-5045a1c25750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23503864-265a-4a24-9fdd-ca4a8b1314aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f64ed3-bf8b-41f7-ac59-62dce9c508bd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467e68d1-4261-48cb-9651-7e3de027a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7aa6d25-6370-4756-8fdf-35e0636e4de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86397090-f7dd-4c5b-bd84-641a99ef3321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc45417-1a19-444f-8b36-8c491ed41bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a56ebd1-534e-49f1-9e88-7de5abbc989b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17369ff-c077-4988-8612-1b10cbc552dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4c6e1e-0fa5-4bb1-9fe2-f1c4db58ffa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01be1a2a-a4b0-41b6-9bf1-0e3207a8d862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30b2ff2-9572-48b2-a186-59fe25b7c994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604be3b9-5572-4819-bc2d-464a81b2b458",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38200421-d912-4b47-b24d-9f66cb223b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacc0344-2059-49cf-83cd-54af458b4eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82bf044-2f20-4a30-8f4c-c7cfc9f514c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d828a519-01eb-4553-a84f-9efa71412425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43490b78-929b-4c8c-89b1-4e517e04ed92",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e049dc4-04c7-401d-a7f1-abf292cbd029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bba95a-4ee4-4bbc-9fc9-c25e89a7a0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e8f7ad-65b7-4752-ac85-18c80ad5564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6b80fe-fefd-47d0-8892-737c875c23bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0399032e-6bea-4ee4-983e-5f3a65ebe3dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc694647-4fca-465a-a3ae-0f5ac69f8437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263a4eb2-e577-4fe4-a446-092787d2f5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0543018-f701-4f82-98fd-1dceca19b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8329f1f5-1f4a-429f-8911-5d526c911a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3604d0-0779-4063-a0cc-24a2da7c3f6f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1f6a93-98e5-4824-8f85-bf5289384333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c912925-1bca-478a-bd9b-57bd4c5884c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52d1ac7-ca1e-4186-b7e0-51034b0b4830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9b3b50-b82d-4c44-b288-61156f55a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688e126d-ae37-42b4-ac9b-6241e2513775",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec36ee7-7f52-4c5b-b76b-5f4d479cb5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d4b6d2-688a-49c5-8fdb-f7caefd872ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539aac87-17f9-4598-bac3-2ca96f60739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0b3e39-c8c0-42f9-b7f7-9db6b160acf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8d311b-d870-4fd2-ac6c-9b55972397a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcd929c-aac3-4b16-8076-4324ebc20300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747642c1-b8e8-4ea9-86b3-8a3dedff184e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e87b6bf-e837-4704-983e-223bb5f4ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe608939-a912-4cde-9910-6b84ccf2f1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18f8ee5-3204-4344-a121-8b1a63edb3f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c27dd1c-1933-4bf0-999b-9d1aed00aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec8b55a-4aee-420b-96b6-e6ddb8922584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27eff3-d4c6-49c0-8fc3-97cbe5f67e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e316808a-ef52-4e55-9ef0-7bbcaf243977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6623222-10d2-463c-b0d2-57bef92f41b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d6d300-f98f-4d31-a26a-b2af37b2b0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c0a0d9-fd5f-4ce0-8df7-70e7d7566f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a657c5e5-f532-43c6-9831-283f6eba3d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73840fb3-fff8-4994-9360-61bc0e084bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e900e-284e-47a4-b8fd-6d987733c4a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37aab1ed-9493-4512-b919-3ac510b67ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcc5fc4-a903-4771-929a-9f55ad562335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60e7f4-a66e-4646-b067-9aa87479fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab66e96-12ea-466a-bb42-49617a861c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98950800-debd-46ac-8098-0902978d1ed5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2545fd-0bb7-4906-a1c5-f860826efab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77304a7b-1fb1-4bc0-bb76-b73d67c1e6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694e6f7c-2dcf-411f-ac5b-aa78b68986be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0764d0ba-6b04-4f9e-8763-8310c2a7a562"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ed32cbc-4f45-4036-881d-262712c6b5a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "438b0455-ce9e-417f-8aab-baf256aed8a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe86fd8-1481-4411-8ae6-08a53fa97a89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "beffa83d-bbf4-4a34-b3e4-a6833a7775bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9342dc-15ff-4e07-b032-3fb02d8c1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e309340b-6664-4d7b-b98e-ecabaa514cfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38fce8f0-d5ce-47cb-9b69-cef73b37a3c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbe0a892-46c7-441f-b278-d0ec4978d156"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e21061-0651-4fc6-a684-ed07c2ccd189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04616260-b1e8-461c-a964-3e756fa868f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5505e2d3-58bc-4863-85ad-ee4e28163d35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3b70315-d472-4ef1-99bb-0be408f1ed5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "087db5a8-c420-4871-831a-b85cd48f0917",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9291cca2-4bf2-4453-9b67-78674cef7339"
            }
          }
        ]
      },
      {
        "id": "959daa2e-cc42-44f6-ad5e-f75e2370aea4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "660a0080-cd6c-45b0-b140-2e85c94c51db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d760584-7c55-4cd0-959d-8eaa0e9a5614",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc12e23e-1960-4e62-996e-e55a637117d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4192c4e5-83fa-48c2-994f-90d8b4fd9c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc703d6-c409-43a7-bbe3-b5c02fec96a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7227c82f-228a-4427-ba7c-7e32644a298a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7fe150-1ae8-4caa-a6b5-a84695dacd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b6ca43-02cc-4845-85fc-cf41a7d57925",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369e4798-d8ee-4144-9e7e-28270f113db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa0b630-13d4-465d-9ef7-7d24cf457dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e75de2-bb31-402c-a75c-fd259be77d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "325b29a0-7f81-4eec-808b-a418a6126064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec344f9-4e2e-413b-8ec7-64a5b79cb21b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d48107f-122f-4c9b-bbb0-5ec7e7f37f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c30114-d713-4a54-a575-681be56da064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febeab3e-bf77-4c87-9331-fbb2e4cb225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b0e024-611e-451e-a346-cfe018803418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cccfbc-320c-4763-97ae-17d8ab5a1a92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2d43f3-ade9-45fb-a6bb-b9ba4e2623c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa352024-31f8-4b9d-b8e4-0512d12ce8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a94613b-b42c-4468-b6e4-aaca746bfbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca44e63f-c8a9-47cc-9c9f-bdf750166331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e593ebe-a41d-4b58-9bb0-76ce947fee7f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029816d-f809-439e-9375-84895bb8ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a6c33d-ada2-49fc-923e-f9ff45459ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155eb590-4533-42f8-9bcd-3b18971bb468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de753a5e-3dae-417a-b5bf-565b97536da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee58cb3c-2a08-4867-8051-878ccb4903bd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82955b2-fcb2-4f89-87df-dfd8296e7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094a5762-7616-44cd-bae9-c4b9f37f7db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6235138f-d3be-4b38-99bd-2add0552957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "507772e6-1f0d-4e32-8bf3-9d71f07e4137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ff319c-8992-428a-8a1a-7b891856cca5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef35eed-b599-4d51-8c10-b16cde281a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47b187f-8fef-4990-b931-c8f13915595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbbf4f8-0623-43dd-8d80-fc26d7f3a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6944ba-b054-4f72-9e1a-cadf44d59de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845315e8-e6aa-4bb6-a1ad-d12878fa7da7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2552e978-9cca-4ed1-b8b7-c8b8b1e65d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be85a10-26a2-46dd-82da-b14ec751c454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84be9b3-3277-4d54-85ad-6f4a0dd0c428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd42957-14c7-4878-a16f-14e0997ab607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862d0dc3-f3cc-4120-bca0-3907da24bb56",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e5b7a2-5e83-4f25-8741-747b25eb2d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6f591c-15d9-4ed6-8dad-3400d0e1aef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190f6713-d2bc-4a09-a3c0-99f3c9fd3397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59454e83-73b3-4c3b-a3a7-3a194bb486be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baad05e-b05f-4c1e-8654-a0bbb2183c00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e997d9-732d-4304-9b93-673db0b15d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fc9b7d-6e02-4991-bc5f-af995faf54c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85b7596-aa5f-4c55-952e-34c09cadca71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c04b03-1b36-4a48-950b-c48ef81cad25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61ffa9-4067-4d22-ac81-4fecec176728",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f6d48-3a74-4905-8a9e-d19736b569da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8c54a9-a2b1-41d4-b9b7-f7c7d0d63ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13428f0e-f02b-438c-b67d-c1169705d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e943b09c-130d-4a97-8211-a60871da22d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7e48c0-7a72-45a5-8c29-0407e324150a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d6b924-6412-437f-95cb-ab5de23c341f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2da1bd-8caf-4220-a284-8a9aaafa35a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba880f-f374-45ad-9c95-36e73ba7a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de6b8e9f-042a-4285-9d30-22e54e20b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e15d8f9-bfac-4769-ba6d-644d876d3c5f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad06f898-eac2-4f4f-8237-f30e2903c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6716a8c3-b10b-4ef8-8722-980ce82fd630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d416cc1f-eaaa-45ce-862e-7161d05105dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7c7ea1-6330-4cf8-ae73-3b2b30009e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d05339-38b1-460c-9ca8-a153f2c0feba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e566122b-732d-40ff-bf9e-4862dcb523d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e838c82d-427c-4193-b924-0b6bd8303db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41729625-2559-4a56-8766-00adf7ca4bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a281113-9814-42b4-923f-4930adbf93dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50a19c1-2790-43eb-8b2c-e7b9fa0f2d59",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b16aa9-3228-4805-ab9d-3668eeda6045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db26a381-2c15-4cc6-a9fb-9478fe3f7e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8944358e-f40e-4dd2-96ec-6441799982cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fbaa21-b153-46f7-9f00-96b2b1e93967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69113dfc-acd0-43c8-842c-6b9ee5a5e356",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411adc8b-cc02-4073-8fe2-0f45fa444639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb10f42a-1788-49c3-bcbf-c63212c19161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1773ad8-71ce-4c85-8399-0f9eaf7ac243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1391d292-b770-41b9-8aff-ae2e842f8e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e24816-0b40-4cd3-96db-90a47ab1158b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd9757b-9b3f-4730-8857-5a1d8a8fc257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40c1bfc-8665-461a-ad27-f54ba0fc60c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb2b085-1337-47fe-aad9-c33745767379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33b901e-5db1-4760-82b4-363be2302540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a59353a-c05d-4a2e-930e-e862f5dd6505",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cae68ed-cb25-4f92-8a39-355a22a4b03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2711e02c-0e76-41f8-a02b-9fb2e634eacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4918c51-52dc-402a-9116-be5019148b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7455c107-01b0-46bb-8599-7e9e4cbc8cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3218e96c-0451-4f5a-b6ab-b045ce2e0705",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27df3e3-8d1d-4a3d-b9e6-8b4a3d8c2fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16be3fa9-e253-43ce-ad67-6f85a09d0ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4843b346-99c2-4736-962d-7f0e1288f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeaed75-5c32-4e50-9ec7-89805891422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b6331-e592-4a25-95c8-10f1fd14f384",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bddd0b3-3c9e-451a-ac2a-2941e092126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346b26b5-d2fc-4856-b71e-d3a82456f44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e2140-e590-43d5-a360-64eceeb97e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ba3cf5-9794-41a9-a16a-3ea4d7d3eb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e79f8b3-776c-4b40-8b80-1f58455c3da9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41adcbc6-12dd-4172-a215-0ca66f3fcdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c2003c-3585-4fc9-b607-612128051a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f59639-9817-4f8b-8599-645648e0e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a60b73-c441-4c53-924b-04666dff333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8aa124-1c7e-4b8a-a49f-9abaf7f2255c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca231991-d240-4613-be9b-03973cea5c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dba4152-d60f-49ac-975a-3f6403a3a998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d27919-8631-49a2-87a2-f442bfcb1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20443c79-f432-4d40-ac12-b2ce22bec824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e47f0c7-8efa-4c13-97e3-b19237f724f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b832dd8a-cd7a-4c29-95f0-3879881a23f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923c3292-027a-4cd1-8bba-2178e9c55782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e669e7-5561-480b-9c5a-11853bea7277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30b7f1b-31ef-4339-b849-96806a61b5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e1f32-3b85-4127-849d-3c197d95ab99",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445babd9-7d00-41d6-a964-73f8d43052df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8338042b-ed64-44a0-bc44-047d8a5b3fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a4023-17f1-4850-b8e4-40b99f51b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45da978-7fae-4d0c-b862-d368c3e8f5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014179f7-ef0d-4c43-87f3-7ba28a126a92",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e51f31d-576b-4b67-ac66-5f7eedc442fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd17598-fb3f-4246-a0d2-0a2107a2bca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64aca5c4-fd51-496b-adf8-131004086789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61801a11-8eaa-44fe-bea3-42ecce620fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967ac374-3b05-4892-8238-44be5f89c716",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcbcffe-f7c4-4907-9c9e-57c153b453a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724800ff-82db-43eb-b73c-d92e3ec64103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0f2149-4898-49c5-9c39-1a8796b8f906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2299b1ff-8713-4f75-a9c0-600c76ce15fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60b46c3-0d02-4705-98ff-e8e79abb17ee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d883512-5c2f-4a02-88e5-c4f060475e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f68feb-5368-4370-b023-d7cc43fd1680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c323356-3255-4ca8-aebb-669d40655bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dfa49e-828c-477f-992a-422bee0667ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92a0b54-663b-4e46-b3bb-bd4cf1ae0d1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1caa03-b9ba-4172-9e68-beaf8c2c76f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26148ab4-6514-4847-b9dc-42d14e6c608e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f5ac67-b598-4e54-85f5-8e09dec91e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac48130-e209-4c4b-9c24-5fc1b5c1d019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9dfacd-9a06-4bc8-8759-156263396724",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0f25e8-11ef-4da4-af0e-fd7cea7b4a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b9bf6d-7163-463b-bd57-4472b8abbea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4849807-6165-4e2a-a34f-6866778d9323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2bb4ea-33b9-4c89-bffe-4ae42cac1cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05026675-aea2-486e-bcb4-872f054ad36b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f4f4f-9e43-4726-ad16-0f73a7167135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc53404-41de-453e-91fa-6fde914da597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf8ee6-acf7-44fb-9118-133e0f27a0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e99718-178f-4ab3-ae91-0375e5e8879b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71101963-20e9-41d3-a2df-d0c012cfab36",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f4d742-452b-4210-b613-bc21b8f2f84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a6fd18-856e-4696-9a17-097412f6cfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6265a2a8-5344-469c-a571-23042795cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e90846a-1ef4-4b6a-9bf5-bd60b1e446ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d296617-b450-407b-b5ba-f49c3c888759",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6598e7-6ae9-4708-8f66-7a727c5e6d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8585b265-8233-4dec-b7fb-a34e6fe9d25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f4e16-9f94-4fda-8103-2f7c65b8ee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c099e155-db79-44de-b50e-0cad9169a364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f18910-063a-4cb1-8bbe-9a49c9905ffe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b17547-1bd8-4b7f-b688-572e2a7330ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea792281-f08e-49e7-a5e2-89b28a205965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d03d3bf-e73a-4677-89fa-99dd67493791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ca8990-373e-4c7d-a332-db13ba34909c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16552fb9-f87f-4ca3-8d92-657df3ec7a2d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390344be-55ba-4060-9b29-032ca483615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c42a09b-effd-4dee-8afe-a50ccf4f5a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb215154-18dd-462f-8f36-b0ac0ad5f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52608d0-958b-4153-a338-8e1e4f943495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bffc7a-3326-479d-8f05-1a1cdda77d8b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7f18e9-f634-4562-801d-d4c6d851a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f3db80-5447-4b61-a0b5-a00f3022ef7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54429df-551b-4874-bf3b-bab539851653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250ce8c9-4150-453a-807c-d35a58d52504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a918a-2718-4208-ac30-5b91b594ee92",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0f6565-d617-4922-a71a-b9488f19f98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aa80f6-999d-4ed9-bbd1-9d10d0bb83ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80c5a04-848f-4858-819b-a1ee8e4a467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b1e5bb-7bb3-47ef-8863-ac48245fb09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d3a527-3ece-4f22-b6c3-2f17226d5f77",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9569b193-fff5-4392-9917-78d538a91007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9383dbf-eeb7-49e2-bf96-3c9084acf57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64c2e3c-06af-4a98-8660-3700973afcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2e52a6-975e-4cd3-8c56-0b0ee9a836dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d08ec2e5-29c9-4f83-8cf3-de9dee43a815",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa10a16a-686b-40e8-a48d-b99fd72aaaef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b755d8-8348-41c3-861f-4d7cea5d11ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63d4faa8-01b2-45ee-ac2f-9341682c87be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f6ebb-34bc-4255-846f-6d866878061c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50d6763a-9a2f-4e3e-ba31-2728dfdd1f27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0de5ed4-aea7-4544-a2d1-00eea431d73a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0336d877-fc5b-4e2c-b688-9d26f57416df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c9178f2-3a8d-4705-bc40-e7f3ba96e181",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "219b3437-cf2c-4783-854e-c05f726f813a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e145cdfd-4af1-4e5f-8773-df2e410fdd22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6cf0fc2a-9f52-4028-9b38-282d657be4b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f563c161-aba2-49c7-b07e-043a78fe3cd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a02892ab-2188-471c-8933-da37c903e251"
            }
          }
        ]
      },
      {
        "id": "e60758ce-2bf7-412f-81f8-50164df221ea",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bdd6dfdb-ff25-4ba9-bf12-e2e52549b031",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f913b09-d807-45db-a0de-2c884d03817d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45ee24a3-aa3f-4565-8157-03590c97f1f3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f3b596-5236-467f-a28f-15a1075a76ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc20ee53-f7f6-489c-9355-2986892a6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf8229a-4d8a-4885-a756-a776eb2891af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7947713-d173-41cc-9cba-9a4764928630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfffbefd-a05e-453e-af47-41e7b0f0b3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d118a0d-8c81-4bdc-9e76-c3cb372ed5e9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1428c3-6610-458c-975b-84edc6b4d003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7079952-6109-438d-8cf1-355048cba0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51dda9c-ec7a-4d2b-81d3-2301ea98096a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f357e24-2b37-4b90-ba9c-f2a25d07d029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc8afe5-9535-4650-900d-c642aba806a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0e0c9e-c764-483d-916b-51968232dfb7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f033b7c9-2cde-40a0-8056-cfc4f59d0535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c37556-9059-4dc7-8186-4bcaf623a186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691bf026-a19b-4515-abc5-88649def36af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202b8463-5496-4ce7-b8d0-b1304d19f721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cb5eda-b22b-463e-b5d8-1ed0e4a55657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5927858f-88b9-422b-a2ba-3ae86a6f291d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92422d0-fdf5-45db-bdfe-299edfb09d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d05645-6bff-4535-985a-ace13cb6ecba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b8be02-b193-4a30-8fb4-7ab4d08c84d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170740bb-670f-4252-8d30-7ed174433bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5792a3-31c4-4f34-b49c-f588386bd35b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a419ef-0cbc-47be-9aaa-6f9ee1e700bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b586f39-8594-4465-af39-3b2408b64932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f03b79-ecd8-4722-964d-fbfd638ba066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb7955b-84c8-4cbe-859f-a68f59bd0b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35f575-063b-4f68-ab09-2d5a5fbca866",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71dfe8-7ff7-4af9-8322-8bce80de4536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae13fcb8-8144-4ef9-9de0-4cd16caf30dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa7efc7-6a6a-48c6-b5fa-ea5ec141623e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402dc9e7-9b35-4008-bb09-b51c43e91c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a749c6-9a91-4a50-a320-8bb49b77d382",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8ddbf6-a9e2-4edb-815b-bc1aa6c18d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e054817d-f549-4505-89ff-103c5dfe8637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8821ab73-6b97-4dec-9b15-5cde4a2478fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81321e0-3431-426d-9bb4-1261421f7308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99f423e-10a1-4719-b9ee-5f95d09ab8da",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76eed3a-7860-4858-a602-3825d9551025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbbcccd-813c-4aa2-bdc7-12d145af2360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67081d21-5756-4b55-9a78-0e9a4a3e4a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f523eb8-8cc4-4603-9f08-a9268499eb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae20b1f-80cb-43a5-8c01-1aa9a4836bce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d052fb6-de14-45bd-a97e-50c51f0f66cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88097a7d-034c-4bc7-9cfb-ac6c6ce0f2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47223382-ff40-415e-ba3a-18fcde278cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a1388f-daa1-407e-922b-b9c6ee0049b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03094ac1-fbbf-4272-b260-b52c4eb81a59",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e7b1c-4748-4a0c-b056-04f3727f1233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2092b47-b8df-4b78-8758-d8b0fb67ea26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133352d2-6870-4a04-b046-548c5af2d721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651f67bb-f903-4a06-b0e7-c5073d0025d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a246b93e-3a11-42a4-8f45-1091b7b59028",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203624f7-8bcf-4df5-a235-836f3cde012a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2187eb1b-668b-49cf-8bf1-b4360cefc130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d49316-d04e-4b95-b060-bdbd3fa0b680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9caea183-b3e5-4367-8539-3fa81e66d2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fff7134-0a70-4e22-92e2-d4b420979782",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63820de2-14c9-4749-b1e3-ca07afee83ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a7031a-2e13-4a99-bde0-966c6e98d94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b0265d-e861-469a-a045-295bdd01b7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725a3279-4df5-4851-b722-3e8e910590aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a03736c-98c1-4294-b979-882c2b201fb4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028fdeb-bb7c-48d3-b305-30bb9e1420c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d961eb-c2b0-49e4-a17d-ae5a18298f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9fca76-0bcb-4921-b6ba-a7c40bb52254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8c215f-1bd7-4cee-b2ac-c2dba5c69dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d7288d-1b42-46cd-ba19-3e3d0afece02",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a92229-f0b0-4c0e-b305-5c7cc574e5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3aa139-e44a-472b-85d0-f36a78ff2a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae59cd9-cb6a-4981-be7a-974afbe6cd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4366e3d-c846-47cf-913b-2aa71b2cfd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca1fecf-de9a-4878-92ee-76f651ec341a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5875732b-3d22-4332-9fec-ddd2fddd4ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bebb91c-919d-44eb-b64a-18cf40f49bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e7c6cc-4356-4281-8057-d93f4dacc425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4efabe0-d953-451a-9e4c-4ec62d4eb560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e0ac0b-4813-4ce1-8262-bcc5669dfebd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95e969e-f6b0-4257-a44c-5239800ad32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971c0661-24d3-4a29-9043-c5545c747cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7250a8-8d1e-450b-bbb1-21e00170c5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331384e8-0c15-49a1-80e0-e1b45471d764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76f38b7-eb9a-4203-8f0a-697c4f749e94",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3b8a83-7d6c-4647-a181-dcb3b79104d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9119bd07-dc31-4bf3-8194-4aae9afc3adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acee41d4-8d6f-414f-91ed-b5d387fecfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10f7296-4d56-4b92-9c04-5359ed3b4c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284299d7-751c-4cce-823d-f6309d30dbd2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd513f-57c0-4086-9208-a832c72ecaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de01e8ee-8e12-4643-87a4-6517f1671baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb78a30-1e30-4d36-9faf-6d09012b185e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b49f46-e85b-4134-9ea0-3c81740c5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f463e-0b20-47e4-89de-244b5c59024e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb08e6-9822-4df6-bbda-a4f7c481a0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b44255-576f-403b-9beb-f9cacf4371da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2dc364-43f0-4405-9c20-b434a74d9ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd94f19-ab31-4c78-ade0-9a1cfcb33b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab12ad1-9c68-4886-9589-f2b1d28aa50d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f5666-cc15-4d17-8e04-56786c97bf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f8664b-108b-4f40-aa9d-a91f5cd38b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9940a6a3-a784-471f-ab46-4da68e772be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a01267b-f09c-4d5b-8563-de984790ff83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8842e0b8-13da-4e46-86ff-11e5a1cdfc99",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b83e96-d95e-45a7-ab42-4296b5e10898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b56f403-0390-465c-9be2-1c3d7d7baf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9844d74a-1db2-4252-a3f2-4c6880881b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ef7bf9-733f-4b30-83b6-c71631418128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc27e8c-2eb5-4560-8b7a-0bde33865fed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ffc57-a628-45e4-b33c-c0672bef1a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10509fd4-1160-401a-a49d-473e8dfccfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fc0a3c-50cb-4b8c-9fc6-e493a812e706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffebc415-655d-4650-a6e2-08eab5e3e3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25d4b82-e82d-49f1-a94f-40421db846a0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e11011-a5ec-43a8-a5c1-6159007b0d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d00fad6-9a2b-435f-8855-8949815b8ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf8821f-9137-45ec-a61e-b36e7bbc1719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d24f2fd-7881-4265-8c75-69d5580f07c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ef8926-2813-4945-87be-59f7f2b78c42",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82285954-e2b2-4ac6-883e-eb3746122bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110dc896-a065-4c90-99ca-9a41952f09db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0024109d-7b8a-4ff9-ae13-3b7cc0882602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8523f6cf-4733-4f9a-a20c-5ab52282fecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4961e89f-68ca-4fc4-a0a3-d4618c8e8ce7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f3c4e-a376-4c72-ad2d-d090be9a6f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf524499-9616-449c-a06a-1482a65f7e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ed49b-765b-4931-abcf-6ca22a9eb392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c506a749-386b-41db-8abb-c2b98173fc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870d8ac0-0570-4b3a-a926-7889746e4a44",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6634a800-572e-4bb6-8c79-7b3209049fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ecf21be-5051-4a2c-be59-0f71f91e1192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc3ec21-be6f-49c9-9c40-92e0817dcbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f9924d-56c8-45ab-abdd-4b53211774f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e97e9f-74a3-4aed-beb8-6842634251fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2012bbab-da1d-4ffb-b7b2-3bb48d28f30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ea1dd9-4e70-409d-8723-0389f2e21b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fffbba-b4f5-422a-aa5f-75441f9c8a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdec71c8-06ac-4f80-8c3f-11191b04494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42238c8a-8d1f-42e9-9708-2dbfd68977ad",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402e25b6-f9e6-43ed-bba9-5ee0c153be2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280cad35-30a8-4b52-87a3-94bc3e04eb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2de5d4c-a3ca-42a3-8139-05356b50b1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdab1f5b-fd11-4278-b265-f7de2d5d547c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee9c657-c1ca-4b06-98bb-a3f7b717c89f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25f271-edab-47a0-9cf7-2a6a3dd3cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015414f5-f4bf-4f02-99d2-7963ee32da2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb54f1f1-b962-4078-ad42-7128b9aa4c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472f35c2-32e1-4749-ad0c-47e7854926e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b006c4-e5db-4312-876e-b62493421552",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b76ff-526d-4fdf-89cb-afc77b079b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51a058c-3ee3-41b2-b380-a40cc14586d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc4bb0f-81c2-4765-8190-3480a6fbe217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfbc8b6-e03e-4a7e-a304-8fefc055211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f818a0b-4e49-4713-8e8e-f28e949ccf1d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25991d08-44bd-429b-b936-3278b0bdbba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7aa855-a73f-4801-8da7-ce77d391de84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bffcec0-e0f8-4d90-a516-c0fe92cf3af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fbb5a7-79db-4803-b957-01b1fdfb052d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efafb5e-02c6-4602-86b5-71537a97d1e0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789ae949-c45e-4e9e-a474-64ec952132d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7faf95d3-7d46-4da6-8b4d-c59baeab09f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e51b67e-6efb-4ea2-a679-80d3a095451e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8e794e-9db3-4b51-80a9-7b4aea253c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4067c1-2268-48b3-b08f-2c257fc833b4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c618dddf-f389-4fb4-842e-9f3bf6af0274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a560db77-958e-4a76-b4e0-f7d2d865c2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7caa54-a6ac-48b4-8753-8a49582d6880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e78e0a4-2c79-4c72-9332-5a7419231f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0408c47e-8bc5-4d5a-b4c4-f89da150296b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf17a78a-91ca-4399-a0b6-9a514257f119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fd2f45-878b-4dbc-b347-236172efd1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3804b0a-61fe-4dfc-b7b6-730b80a915e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e8f1b-2261-415f-8c1f-419ca6c09ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f2994c-5a5a-4a31-8734-19fc0a30c5a4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047a4c6b-43bb-43a3-8aba-b4149c38a47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc20c56-e568-498d-b586-9af5693c30da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe56dc9f-2d0f-43a7-abe8-10976dedc8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f95bcc0-def3-4600-9729-b79a588592da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb535aed-2bc1-4124-bc6e-696fde25cb5d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e742f00-78ad-45a2-9f47-def7b5612971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4f3eb0-3993-4d72-8218-62733b817e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5c4ffc-b57b-4a64-8df2-8ed8c1d2b790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36474abe-5182-4618-8153-069954c2aeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6500a0-36d3-4289-9c35-ad3cdd6a856c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11831367-2afc-4d86-ae93-0f68a8defc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae3db73-dc19-41e4-a5a5-d36101e590cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8d4e1c-b078-44dd-997c-d06291d7e4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf4045b-2f2f-4e95-81af-42f1c8a64a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac02af13-3c9a-40df-85f1-ecd478fe1781",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71947961-5661-4f10-94c1-bfc907050ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cccc3da-ca34-48a0-878a-a12d6a1590b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc9f0c-7cde-4892-9157-773603bedfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c431f63-774e-4355-8b06-352297307a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad954905-0802-4e2f-86ca-0c7344fd1e41",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1a6954-9065-4ad6-aa02-cf800eacc367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4fb3b1-abf0-4fd3-aedb-cf9792d994ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c4fb1-d6ab-45b6-b6cc-f5563ad15b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c672ce-5ece-46f7-a1bb-9e9011f55a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7f9954-9cde-4b07-987a-5aca1f90cd11",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4c11c-f774-410e-b157-dd78dca0707c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde9d104-d404-4fd1-ab2a-65927478c7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775986ba-8881-464b-a90e-ca4af70266fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba7e027-673f-4cfd-882d-bee1b21e8bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd00bfc1-cc7b-4330-b2c1-9a3f0bdba368",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242bdd86-470a-441b-8df0-18270b551f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab75d196-450e-46f6-af03-36aa42a8fa95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aa02f1-ba55-45c3-a44e-077d8cc748ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ad4f6e-8188-4798-8d3e-9b0b36a54b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7281027c-f71c-4bf4-bd2d-e1bee1c58e2b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225802d-295e-41ee-b61c-cfc68b38fbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d589cdb5-d75e-432d-a251-fc305b008b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d7deb-e412-46d2-8978-2d511cc8ae99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d31fc52-15f9-4940-9024-2435f4345d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56670213-29c7-44bd-a26b-cd7e4043392d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9397b4-3dad-40cd-b0be-6ded07a0cd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2928e36-6352-4d11-ab3d-2be5cccaaf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f4e22c-4550-40e6-9523-7190f981c12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de91dbf7-78cc-42bc-afb9-0feda5d3f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606bdb31-f11d-4835-b910-8366633bd38f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412904ef-35e0-47df-b320-a74c6ce620db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13511cc-c262-4293-af8e-2159971cd21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1ee0c0-740c-448f-b4a8-ecf88fd62db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f607af-f5ed-427b-af8c-d8c4817ebfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b00b34-cfdf-47d0-a65f-9375b7304bae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af459c7c-9b73-4922-a9da-ba55ac195e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794c585e-39b8-4003-a127-8015ed946b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddb2642-994e-4c60-8445-3dcac41a27d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee20931-9636-4fcd-8faf-c7ca76d59bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a302b1-c2c1-4819-8354-8e48f0ca39d6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816f2313-67d8-4ac4-86c9-c5e73572ba4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d8843a-5059-47b5-b41a-ea281cf80e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232a72fb-8c56-4bca-8b51-de56ecb12e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443e5fb3-fb4d-428f-bd33-536afc116f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2c3852-4c35-447c-9a15-5be96e1b390c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eabe5d-d227-4130-85e1-acfc0aaaa823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2403c65d-deeb-4c15-b603-d3b07800303e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca21e3eb-b138-409f-b724-732c2bec5774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995394b8-ce63-4ed4-9b29-60d88d190504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9270f0db-7841-41f0-9e90-05c64a7fc922",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04aeaf6-6c36-445e-96e6-1cdb70a6bcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ffc973-2835-44dd-b736-ae255719210d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c9f59-0000-42b3-883e-cae941325d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0344be96-f114-4e10-9954-9086d6346242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501d4c5d-7449-431c-969a-4a1a0ccf0712",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b12cb85-2da3-4a38-8fc4-1b305e53f65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f044b0db-3331-4ac1-a145-a311b6040dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce36c579-be53-48b8-92d9-6a05c3176172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606387d3-953c-42e2-bd61-ae97d270cfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d23b76b-7c44-4151-934a-af902a03386f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1117e0fd-7ea3-427b-abbb-07f58779aa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f62cc6f-1df4-4da9-9f0e-b0d0356f7c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d213f0-60db-493f-8ff8-1a6fa76f02f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85f170d-743c-4cd2-bad9-889f1c52510d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e4383-5a41-4068-8828-8a4559c0820c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291876d0-ee9e-498c-85ff-982f7353c8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990b6cde-8312-4a94-bff9-2a9f0c8ac186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c869f23e-979f-49e5-8677-9222d9779ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e937ee3-0f1f-4d6e-a3b8-124074ae20bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b18ff4e-601e-4395-835e-6ab078ceeb28",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e7fbbc-7025-4829-b1ec-257ecaccc356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feddb7da-a996-437e-98b1-5865eaca8409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b23d8e-10c2-410f-b586-78c2fd167df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd72a669-d47d-4bae-9616-aa130c95b825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea251d3-4d43-41be-b03c-1905e2042ae0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d01258-22d8-497b-84b9-e514e39a9696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea16be-357a-4b3b-9533-27666be5d001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f056325c-e2bc-4726-9bc4-64ba73d76b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cb4d7a-9706-4858-8f10-3e51e39ac9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb6c581-ddf6-4ab1-a321-e7cd1a81b7a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba988992-82fd-48d3-a4fc-4d56ff36e6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc2abe4-c391-4e14-a672-19e028aa6fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23453117-08f6-43f4-84af-d0a1cf9a724c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95c0b52-997e-4a91-8602-2b747513b51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cce99a-ab71-40af-b3fa-d975351b6a56",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd299b6e-0c72-44a3-9a25-657f729b0835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c9841-5d2c-4c3b-9934-9a2fb8773849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966d817d-02eb-45db-951c-c55454389d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88125b2d-8b5a-491c-8ee7-99fb5beaf6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75e0982-f3db-43e5-b862-69695382afda",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db848639-c18d-4a46-8023-dce6d4f42846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbab1ff-0a28-4e8a-a93d-a88419df1d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5b4ee6-4179-4dd3-a666-35b426c66bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30350799-2730-4be4-9f05-68a0ea4aa4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f84cd9b-dd27-4f67-9d04-4e97e5e70ddb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca366a3-ec3c-41fa-8113-f2578255c9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c769795-e7c6-47ab-adbc-8badde18bc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bbf392-193f-4578-b758-7902455ba064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbce6939-8c28-46ce-a22a-9f20ebb37290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555594a8-c575-4851-bc27-eff7e5a6cf02",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1142ea-7388-4a88-bf8c-d7dc354fadae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30baa0e-c026-428d-a094-b3490a7a1dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab8d866-6440-48fe-b48e-0f529f929080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3155ed3-0025-478b-b48a-5b739b5b698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e9225a-c28e-40ba-a7c8-0b95d170f5e7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3379985-ee5a-4b8e-8383-97253f595993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2425e3bb-7d2a-4f5a-a69b-b8b0734993b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba86f63-36ae-4a02-a756-b11eb2e8d68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfc3541-8aee-47bd-b13c-13a304207a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0647a0fc-6016-4d7f-81e2-964cd456672c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5ac0e5-2776-4e5a-bf93-dcdbb5d3f6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aad3030-b07a-43d4-93ed-e094c805c7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fe4d0-1946-4b96-b28c-d3059004989c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ef04bc-92a7-4ab7-833c-48b40d69a813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f9a588-ed20-4a2e-8c30-226997764645",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdbad1e-a461-44b6-a5d9-71020e9b096a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12277cc1-22f4-495c-9836-d6365642a3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe68c9-9348-4b2f-b039-b724a7fc4889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1773011e-e84b-483e-b6f5-44d90e255185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b64ac-5044-4f6e-8afd-fd6961e17736",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb131240-7958-4738-8d77-1120088785d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52e167e-cba3-4084-a763-09b10a546e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614fdb9e-8fd8-4219-9be2-6975cb4bd542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c3ae76-adca-458a-a33b-c1b6c8a8b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f598260-0617-4f11-b44d-d74fd8a32e25",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d55cfa-1533-4be1-9aca-ed7e513475a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf6cf01-92dd-4495-9278-fee063a59d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b88110-1811-4791-a837-9a0f02ddf903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f028de98-a187-4cce-8c24-f650c3c32680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a16517-3d69-4a40-9c40-311f8ea6aa19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7597e039-d4df-46af-9f5d-2f407d7e9d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca93031-9a02-49c0-8725-6aa6efae80b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9541504d-b0d4-48a4-a428-0bbe295f6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6032e2-3345-4e1a-955b-5e63390c3226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f678a-075a-4056-b2a4-42ee414f103b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f8c57-fe4d-4f9b-bea1-53bf5df75400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585c6e55-1858-42f5-a4cb-f4a666a477ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f896cb9-b6cb-4758-bf2d-13fb840baaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfc7b47-095a-45f4-94b9-f0670b03c0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82530fa9-278f-4704-816a-d6a4d232bc63",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3551b6-8133-4180-9ecf-f8f878a049a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c32bae5-6820-4841-a557-09a239cb60e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151478f2-9a13-4db4-bafb-744c987d82ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc285f4-77b4-4a36-938b-35f878b5c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0045fc5f-c81f-465a-962f-466aab09ef0d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1840b2-8e4d-4fd4-8255-dd5c6ff8f571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14be3a5c-a29f-4a6f-ba29-fbdb9bcfb957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ace22d4-5eb0-432d-97d1-8729da3acb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ec516-38ee-4ce3-bee3-ac1d38af36b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fcc803-9c3f-4050-a4c5-c05cbac0928e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7805e44f-a519-489c-b61b-96f972755600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af3b1876-ff90-4747-b220-2ca6c79828e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b20d50a-f1b5-4102-9a6c-66fba5257bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb8a653-ff63-4633-9da0-6ae4b1572cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31024f3d-6a3c-4930-8015-3f28274e7e55",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d5cc39-39c3-4905-9a8d-41e55d92710c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5459d3c-fffd-4d4f-b7d0-61fd8b5d6e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a796ff-0a40-411d-a317-b67be454735f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897c6c72-3c53-4bc7-86d2-e052e0203aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a0ffeb-386c-4e6c-9bc5-08b8fcb7c6f5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39e774e-e0d0-493b-a13c-7da83d570460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17af222-6d2a-4d6a-b0a4-dd62dbf4afe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71603dc-ed75-4f99-9f62-2f30711fb25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640b1aab-d268-484a-914e-a1a3b387d86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd099b0-f92d-4e12-b3d7-bf6a8631eaaf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ba25c-14cf-4843-b665-fa65c23bb336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06685085-7035-48d9-9ef1-d6a3ade6ac77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a12d22-1f54-47bb-a60e-9844d64b7d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20c8cef-62d6-4ad8-b1fa-27ac182b43f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f2b937-9a82-4e33-92fd-a168814ba38c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b572195-7e00-42dc-bd71-d0fc6ab685bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dda52e2-6977-4a23-9ff0-494eb6d365d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0820a59d-ec67-49c2-9260-117c79ce6b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a8f79b-12ef-48a7-b2b4-fecb8b0b33c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dba753d-ce77-44cd-9f8a-26946dd9bf1d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56282de-f26c-4986-996b-3da3d9de20d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "797a6c6b-d02c-4729-a809-46ce7a24ee5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098d4c7-a7c3-40b1-9846-9f77fd21d9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766fecf2-2719-4cfd-905c-9969449fa00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df13e1-8096-4342-82b4-a4003fb148fa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256ddc9b-2e40-4c74-a6aa-673444278b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76b5406-b659-4761-a1b0-4e932cc68c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0f1812-8d47-47f8-a9e8-ed4d2a10335c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd65a54-8325-4b34-af55-09480faa7c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1863c6-9e40-486f-a572-856e376f5054",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65816b5e-4cc3-4139-961f-ccbc46807d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b192f2eb-ed4f-4b64-9951-5b77c73960f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d32a4f-fcac-4818-bef6-85054182871b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658cf335-09dc-4637-a70e-943c3e05fc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e63e40-ea19-468f-86ae-5e74f8785cae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d78bec-d2e8-4b9c-8144-c02bb3cf86de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248401c0-3dfe-4246-92cd-5279b8832996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543655cf-5ce9-40c4-897a-3aacc1aea725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac6d8cc-1909-42b3-9cef-62471c273faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c7258-ceac-48d3-a20e-8793215bfb27",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc95aaee-d4bb-4155-b3e8-86f6942abaed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99d1423-6997-4deb-88be-be8162e5816c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f5f6ec-07d7-4660-b0e4-4c296d5c6b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac1df23-c706-4938-a400-17d78a8767df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c0f23e-9176-4d31-bafc-68f87beda2fa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8833bad-e082-4243-a7a2-fbb3e7777b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e481f4e-3662-42e2-bddd-f93921c7f2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe33493f-4988-49a1-b540-8666415ecb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ae98f1-38b4-402b-bb74-a002b71d1fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af3e6ae-b60c-479a-817e-d9b66ccd2bf6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c07da0e-4279-4129-b688-86a4fee5f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1b0157-4274-47ba-a47f-f319a47b7f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32b09cf-29bf-4334-a6c8-937f2eee3c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ebed8b-5f62-46b2-ac89-ece9f01db8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18736279-c66b-4ea1-ac21-f48f34e83bdd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9884bb5-ad73-49c2-b39d-f674e9d44613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9295436b-8bd7-4503-9282-79ecf0053bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc83534-c63e-45b0-b73c-5ecce3687afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fae42f-e53b-491e-8299-9d3f715dca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ada55d-9e34-4fc0-b822-97a25f8c5837",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee847eea-f8f8-466e-bf8b-bf6e2d4b870c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2338d0f5-d59c-49c0-bbf5-6801510109db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6556e4c8-0d31-42ad-bac1-41e7d472294a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff5666a-8b0b-4937-a18b-468f4d1c6ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0844b2f-b1a9-4881-bbca-6d464fa67f12",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd0efb2-dff3-4ab9-b05a-11053bbf8f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661c7562-0d07-44b4-bf45-33223a75631b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c507bb4c-4bfe-4b1f-ae05-ecbb9568550b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd831dd-4501-4d6c-82d5-566dd2222b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f2b042-4642-4a31-bce9-c8f27a046b5c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5fa10c-f937-4006-94d3-fed76fa0a997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12279ded-e68d-4b60-89fc-e67aa5ffa0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec05ed97-aacc-46c4-8aa7-d9ebadc7dffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59cc11a-41e3-4476-a42c-97dde74e7d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365de761-dbad-4123-aab0-8423e357f947",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f108de-eeb7-4e1c-bd7b-175d4c4cc6c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ed2ff9-40b3-47de-aef6-daaab5b4440c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7580c48a-97d5-42a2-a1d1-95f985696d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341e507a-4656-44c9-8fae-2356235c7a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccd31ff-d5e8-4275-98c5-08c814398bf4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070a9d90-bf95-4ae8-9dde-fc4a181b68c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d1da059-3384-45b5-9ad5-2a345e286369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923526aa-5702-4fe1-b3a6-4679491766b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98d391f-e0e9-4af0-b33e-2a3af300c716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45d6718-b74d-47c0-afba-dc0304b90ce5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e2c9f4-6a03-4eff-b58b-4818b76a4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331ed94e-7bdd-4c21-a3ae-a35b06fa0231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e368255-a7e1-49eb-9568-a61b1d1f5937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5f5350-d4af-4f74-95b1-f53c9e8e1173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942ef894-1cf8-438a-92cd-42d63aa7937e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012e9419-db9e-4022-9d3b-3f525e28a380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2139ff72-7031-49f2-b262-ef093177bb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a3be19-0b7f-41ad-8490-e5d1464d7228",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b50005f-7a3c-47f9-9792-9f1c101809e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768bb91c-6c68-495d-b560-c8c17bda44ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1027a3cb-5478-45ca-b3de-96b154e01137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db80c5e6-8585-4121-bf34-a1672f408563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2934a59d-986f-4213-9680-42610c9f0c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a39f04-018b-4b05-9990-83f764c1d338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15756c3-cf96-49f7-a6c8-e0c320a6b80b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a49915-2e60-46f2-b00c-bc7ebb48413c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0109454-3ba4-474c-9205-13e3f0cbe4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aedffb-f47f-46f9-b464-dea399764449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bcc9d8-2237-42c7-b1ea-ffc197a8a3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b93c78b-bdd8-4cd4-b454-aaca52906c4b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86149ed1-69c5-4c51-8307-3fe42e80367f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b5dbd0-2710-49da-b289-180445715f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783780e4-dd57-4e92-aa81-f1e697802fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9454d80c-e3af-483c-8523-92389dad8f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284db3cf-4723-4c60-a130-82170e05862c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761aff08-e18a-43dc-8ff8-f9b19827bb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c12b9e2-49f5-4c10-bedc-8da39423ff48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d312689-1269-457c-b57d-b5f615443583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb076a1f-129c-466a-a70f-65d20203828d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d1a2d9-d97d-46b4-8959-c16be0a5873b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e8abe8-b7df-4723-88d3-fef9bc3fcbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5d58cc-527a-4106-a1ab-8ba7fa0fe604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce44637-85d1-4055-902d-400d6e1c621c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f3d7cf-b624-45a7-9456-b4d8def0063a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1615b-2837-4686-aeb2-26bb792766f0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfcbf0-dd59-4fd7-b0a6-78f12e035cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c38999-00c4-4fa0-83b9-3bc50a2de304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73125de1-ad98-4069-b3e5-42b026af497b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c10dd29-415c-4451-ac5f-0f37b2f86332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c95e7b6-78b8-4239-a660-ffbecabaa7d4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0640429-d80f-44d1-ac1d-3c1313081d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246df779-1a6d-4fbb-b99b-681d06844633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3536972-53ab-4f5c-9839-eda31456bbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaaa1e4-0bb2-4040-ad4a-b57d3e67d246"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d4ebd0d-4bee-4116-ba40-0cc1fa1d7392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f980ee7-b215-4aff-ad51-b4e0e6144026"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d12ff747-aef7-42a0-a566-549280129fc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8825e5d-ec9b-43df-94d5-eefc70e66c35"
                    }
                  }
                ]
              },
              {
                "id": "9ccf98a7-a73a-4495-a907-724b5a256542",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53df9792-286c-415a-a005-7cd78ddcafe9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09d88b7-0048-418f-8fa4-e2dbd4c7a338",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f2349ce0-2bb2-4629-bc99-1ad51ca3b519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ee0114-a238-4e0c-920e-8dee1967bf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5649427d-689a-40e2-ab37-5968848a793b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99da3fb2-e9ba-4c8d-b422-fff152888a0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e99ac2-61a2-4d51-97f7-5f3e5c17a0bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dde3cc0-c777-40d1-a9e7-90bcf47aebe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8245110a-28de-4969-9278-bcb2375bf27c"
                    }
                  }
                ]
              },
              {
                "id": "cdb4036c-a78f-4d82-abae-747928de4a58",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "afc0333e-9dbd-4f69-93d4-aeb5c4cc713c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd4d26d-ce30-4537-8623-749b8652f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e1729a2e-4816-4801-8785-b91ade1d83bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4a6ae5-f4b7-4e62-ab23-db626656044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da5d32c-b23a-40e1-8dcd-9ed191ce77ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a636257c-c5a6-4ef2-8c24-060235559a7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6eb1ac08-5cda-4780-be91-433d733d910c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ce0dfe7-2f76-473d-b3f0-a4ffe0db344e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5360347a-2c87-47e0-85bb-1209b9e6af87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c805b0f5-2afe-41c7-bef1-87e4d97c3934",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c57c0fc-e4db-4de9-8c62-6b7d83e020f4"
                    }
                  }
                ]
              },
              {
                "id": "fb8cfa16-1edb-4eec-b5ac-bf75febaac41",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3882963b-ec92-4a95-aca8-869ac8b52c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0035ebcc-63c9-46ec-93f4-fad92723fcb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bf4351a-78a7-457e-8c4c-c9b29a688a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a45e2bb-7dd2-4873-90af-0d1c718f8672"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "916f74bf-1a1e-4102-9b1d-01daa2ddc900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b076bf43-d2db-4ffb-9865-73e0e8ed8ce5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3634a509-f809-4e2d-8207-7811f8bf6801",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b2280c4-ca65-455c-8a73-439d1c11c220"
            }
          }
        ]
      },
      {
        "id": "132acfec-ad3f-4597-b4f7-7db551c49952",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f516cdbc-3730-4296-809c-787d37fb1263",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6c7150-d8e6-4f94-9b2a-5b2768361624",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ddb34d8-a837-4d8d-9d07-9e1aa28837a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a3f024-842c-4205-aa4c-c2eb94efe92e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "66d8600e-83d2-4111-b04d-6932534ce998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b7c328-f808-49b3-bfbf-93c70ed3e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0f60094-b6d9-4b34-8f99-70e71006986a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37736263-3bd0-45b3-8343-2dd40bb504d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17a05993-db6f-40b8-8b83-e3b033808f56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "902017b2-91af-4ce8-a757-25dfddb95d8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f35ed48f-6560-4b6c-a709-b7bccbbdd31a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "030d48ee-fbb6-48a6-b7f5-dbce80815583",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cac0d651-e281-4f09-8afc-4af7b4745a04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4942e456-515c-47a6-96eb-ec726958d5e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c54f3833-40c4-4460-8b97-091a593cf27c"
            }
          }
        ]
      },
      {
        "id": "4760e06a-425a-4620-9da4-87762836ba99",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa23244a-a208-470a-8cb7-ef188c2f638b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "816d281c-1fc4-4356-869b-a00e91be6966",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2385e96-a6be-4823-9e88-a0fefc915209",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61959a57-32d1-4801-916f-4b63d14f31e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "456462f9-a790-461e-8053-4067eed6e775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3c9ba8-15ef-45eb-be47-55e000c456ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8e2c89c-502c-4d1d-afb8-7e6fce5141c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f311fcd8-5c78-4bdb-9cbb-d867aa23cb40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce4a58c0-0165-42b0-9e69-8a5e6e952033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7254fbc1-020e-4388-a407-84c43df40b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5caa7f-426e-4b30-84ae-1091fbbfbff6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a2e5b55-7e39-4370-8e40-d924a0efaada",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b767d55-28d9-466d-859e-7194e07a457c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f12a9b1-00e2-4612-89ae-ba1d710ab7d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c121837-9610-4e86-8c4e-b0f1c1f2ada0"
            }
          }
        ]
      },
      {
        "id": "a80bbf6d-8da4-424a-953a-9335d72b9c1b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "978bc864-9877-4bef-97e2-8ff28a3cd5e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c376e07b-9b27-438e-86eb-b8e4dbc2ee0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8177c75-ef89-486b-8fe2-0c2065fd0b08",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3501bc-8c26-4380-85a7-d6213c11c84b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f548dd7-9999-436a-930a-f0ccad502840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094d469d-fb80-4376-a813-d5e727abc621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca72c947-dd0a-4865-a261-f930ae3804a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "891ebb42-08d3-4a4b-828f-220f90b6f5ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67a8eae2-3412-4523-8ee3-fe4a726d2b55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "014bc90f-1f0a-4be3-be26-73e3a2b5ce24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95d1e134-a4d8-40c4-a2bc-bb681937fdc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84b25916-1e4a-4adf-882b-f18d982e77be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8cc24c2-2456-450e-a8d3-ef366795e2be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65c4c4c6-981f-4bcd-92e2-6b7bfde55935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f936942-a177-4ac9-9314-19cffcfb2f49"
            }
          }
        ]
      },
      {
        "id": "3523ed7e-dc82-4663-91a5-4f56525f40d9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58538f0a-8049-4e44-8793-d503318711f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5bf6544-a7e5-4d76-b0f0-0fdd95bdc219",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7575efa9-da87-4ab7-9253-d99edde150b1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6f1acdd-f156-4aa7-a47f-309259828968",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a38ca3e6-ac29-4009-bee6-e26e3a1d6d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 145.68421052631587,
      "responseMin": 21,
      "responseMax": 3313,
      "responseSd": 363.2194715148606,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705624609826,
      "completed": 1705624660411
    },
    "executions": [
      {
        "id": "e0d467a0-320d-4480-ac65-036b673850d2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2bc817c2-82f4-4c7c-a80a-1b3f40eac7b2",
          "httpRequestId": "c0c04fe2-8939-4b16-bd70-ac49885f44ec"
        },
        "item": {
          "id": "e0d467a0-320d-4480-ac65-036b673850d2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c0557889-5474-463b-a81d-ee94a8072a38",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 0
        }
      },
      {
        "id": "f50c26fe-5a6e-4fc0-896e-a291c13ba46a",
        "cursor": {
          "ref": "c6d88c92-d063-49d7-a995-5f8b22f0bf9b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "88c3aa12-f5f4-4fa5-a096-3c0db9f06579"
        },
        "item": {
          "id": "f50c26fe-5a6e-4fc0-896e-a291c13ba46a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1a9cbea7-7337-4bfc-ae68-3759fceb425f",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "b78af6f0-ef20-4611-a328-77b680635b38",
        "cursor": {
          "ref": "1c6cdd83-bced-40f7-886b-65c858be2ef2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41b04f52-2b73-41f7-a611-a1ec2a769a3b"
        },
        "item": {
          "id": "b78af6f0-ef20-4611-a328-77b680635b38",
          "name": "did_json"
        },
        "response": {
          "id": "939ecbdc-f9ad-48f2-bb60-2bb8669d2111",
          "status": "OK",
          "code": 200,
          "responseTime": 1054,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2f4de1-05a4-4fc8-b70c-0897b26dc96f",
        "cursor": {
          "ref": "ffd945bd-b84d-4d56-861b-adbbd63b1852",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13e5d4a7-341d-4b31-bb0a-7db52e97f315"
        },
        "item": {
          "id": "ad2f4de1-05a4-4fc8-b70c-0897b26dc96f",
          "name": "did:invalid"
        },
        "response": {
          "id": "b149ae1c-8d52-456f-baab-a3c8ab2116b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2f4de1-05a4-4fc8-b70c-0897b26dc96f",
        "cursor": {
          "ref": "ffd945bd-b84d-4d56-861b-adbbd63b1852",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "13e5d4a7-341d-4b31-bb0a-7db52e97f315"
        },
        "item": {
          "id": "ad2f4de1-05a4-4fc8-b70c-0897b26dc96f",
          "name": "did:invalid"
        },
        "response": {
          "id": "b149ae1c-8d52-456f-baab-a3c8ab2116b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce25beaa-a3ae-4fdb-806e-db5dfff14d96",
        "cursor": {
          "ref": "6bb01459-12ab-4228-b1ec-04046bf743c8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "65a7aee0-12bf-48f8-93c1-d191d25aa9d4"
        },
        "item": {
          "id": "ce25beaa-a3ae-4fdb-806e-db5dfff14d96",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "741a2a61-7e53-46cd-bef2-fef7f8390111",
          "status": "Not Found",
          "code": 404,
          "responseTime": 290,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52ad89-c6d3-48ba-8c59-486ba423a3aa",
        "cursor": {
          "ref": "895776cf-937d-4331-af11-a94d958bd497",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "94e43c5e-8d93-4c0a-976f-fd6b19959dfc"
        },
        "item": {
          "id": "eb52ad89-c6d3-48ba-8c59-486ba423a3aa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ed6dd34b-6419-4fa3-b0ce-60279f50ac1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4840a5dd-b6d0-4e0b-bafd-5b0e0dd00bfd",
        "cursor": {
          "ref": "524245de-8479-4e62-8557-82da79f1f28b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5364e4be-677d-4ccf-a33b-f33b67463b6d"
        },
        "item": {
          "id": "4840a5dd-b6d0-4e0b-bafd-5b0e0dd00bfd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "57125050-b9ac-4bb6-a71c-4656a2d7cbf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee5f38-69c9-4674-9c4f-6fd63ae3c8b0",
        "cursor": {
          "ref": "38341eb6-d366-4f3f-bf50-b136f9b39878",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "478b58f3-471c-4e9d-9918-3095298aac19"
        },
        "item": {
          "id": "2cee5f38-69c9-4674-9c4f-6fd63ae3c8b0",
          "name": "identifiers"
        },
        "response": {
          "id": "d34a4944-f1b7-4949-bd7a-1adf5cf61bef",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83853513-e30e-47ef-a29e-49ae414bf13e",
        "cursor": {
          "ref": "a6a954e2-63a5-48cd-8881-e385a989925f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b12741fd-dcf0-4936-baa9-912a7ff160f5"
        },
        "item": {
          "id": "83853513-e30e-47ef-a29e-49ae414bf13e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "95cf6e47-e4cb-4c7d-8a1d-975623096f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa06104-6bbb-4d62-b6b1-155bb237df26",
        "cursor": {
          "ref": "3adbe6d2-7cfa-457c-8754-0302d8a4809f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1bf504f6-62c6-445c-bab9-df796380fb6e"
        },
        "item": {
          "id": "daa06104-6bbb-4d62-b6b1-155bb237df26",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c8949c6c-b194-4b3a-bf6b-3cc98d8bff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdcb7e6-720b-4693-a000-ef6474111447",
        "cursor": {
          "ref": "83b7f9a0-54c4-415d-b5a4-94858d917a07",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4d045cb4-953d-478c-aa18-4b8f2e6d61ad"
        },
        "item": {
          "id": "9bdcb7e6-720b-4693-a000-ef6474111447",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "977018b8-8c4d-4936-95f9-dd3c0c5d60ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a4c3c8-b16d-40e4-b090-45f21eccff0f",
        "cursor": {
          "ref": "3614bf59-4b0a-4b1f-82dd-72a42f228973",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6d84e997-11bf-474b-86f2-6009a524e126"
        },
        "item": {
          "id": "08a4c3c8-b16d-40e4-b090-45f21eccff0f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4b399325-d0f2-4588-80dd-59ffa6f7d770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76aa611-3aed-4f2d-8b7e-64b8cbaf1b16",
        "cursor": {
          "ref": "c7a6e839-99ff-4179-ac7a-ec70b9abcf8f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a122ea12-3707-4bb2-9c3b-90f55b8a7ed9"
        },
        "item": {
          "id": "f76aa611-3aed-4f2d-8b7e-64b8cbaf1b16",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0efc000e-0280-4b45-9191-aaa18b2128af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7abed97-c8cb-4d3b-886b-276fda5dee3d",
        "cursor": {
          "ref": "c8baabd9-3a30-4abd-aaee-bf219118a974",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "110829cc-2326-4ef5-a8e1-3f84d4cc0706"
        },
        "item": {
          "id": "c7abed97-c8cb-4d3b-886b-276fda5dee3d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a4d92bbd-d1b9-4338-a979-f730eca00ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a99290-b3e0-4801-b01e-b391fc8567f6",
        "cursor": {
          "ref": "83c7b994-e808-4bf8-8f8e-5f4b37e2eb4d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4f4143a2-2c61-4f5a-96db-a32407fc3552"
        },
        "item": {
          "id": "68a99290-b3e0-4801-b01e-b391fc8567f6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8190848-19a6-47ab-92cb-44091b74954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1391c1c-d47f-4f2c-a7d4-0a6bd1c4dde0",
        "cursor": {
          "ref": "915b9f21-7cc9-4e93-ae20-29e01a246f7a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "674847b3-6139-43b3-b119-6abd19a9d898"
        },
        "item": {
          "id": "e1391c1c-d47f-4f2c-a7d4-0a6bd1c4dde0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8e1926f-7d32-4be2-8eef-ce3610b31212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210e9b20-22d5-4153-a9a0-c0e0e1779329",
        "cursor": {
          "ref": "b87235fd-020d-4825-95be-96d74cbae9a0",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b7b963d2-d075-44bb-97e3-d0e93236856a"
        },
        "item": {
          "id": "210e9b20-22d5-4153-a9a0-c0e0e1779329",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "92c250d9-2bde-425d-8546-72d8660c27d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e44ed1-13d5-478c-b43f-64acd58d4683",
        "cursor": {
          "ref": "8aa2d312-7294-49e9-a023-36c08367aac4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a0b68cb-49d0-4e45-a614-5bd0316fe648"
        },
        "item": {
          "id": "88e44ed1-13d5-478c-b43f-64acd58d4683",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b7b1cfd-cc9b-47f6-b5de-fe612705ac03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019fd491-1be1-4a71-a730-3499f6e3df82",
        "cursor": {
          "ref": "f3b8f6d3-b6e9-4e57-a178-adc8873d5684",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef068710-0b78-453f-9e1b-7e4c1e24ec51"
        },
        "item": {
          "id": "019fd491-1be1-4a71-a730-3499f6e3df82",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a288410e-b6a4-4d9e-a4fe-4af28d9b87f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f207cff9-8f48-4bfc-aebf-f5a68e19eede",
        "cursor": {
          "ref": "05e7c063-d5f0-48c4-81ad-2d7661a19bee",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3bfbf9e0-5305-4147-bede-3e8c4469bc49"
        },
        "item": {
          "id": "f207cff9-8f48-4bfc-aebf-f5a68e19eede",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5302aa34-b6ef-4ece-b174-c4216f4a76b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877b765-05df-4a59-b30b-698848e695b9",
        "cursor": {
          "ref": "d4d47212-9180-4b65-a3e8-1d9adf632e1a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a114ca4f-cb44-4585-8c50-bd53582e5ade"
        },
        "item": {
          "id": "9877b765-05df-4a59-b30b-698848e695b9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5deea51e-68c7-4871-baa7-0fa05a0bcfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e5b6f-e5af-450d-9270-d826a117c8a4",
        "cursor": {
          "ref": "956db4c6-13b2-4fbe-afbb-e54f578bfdfb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "544aee87-9459-4fc7-bef3-e94c233c0b23"
        },
        "item": {
          "id": "df4e5b6f-e5af-450d-9270-d826a117c8a4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8bc64eb2-9a91-4376-b83a-b9ab71f4d93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f949e0e0-0aaa-4f09-9205-61dc033c221b",
        "cursor": {
          "ref": "2bb47bf2-9084-4907-9cc2-8f97f8b95cb8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da331e09-ed82-4db2-9ea5-96359ecba870"
        },
        "item": {
          "id": "f949e0e0-0aaa-4f09-9205-61dc033c221b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "19a5cb2a-5e2d-4abc-9a80-83004651ba8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e437df44-2709-44e3-abb7-408ca068d6b3",
        "cursor": {
          "ref": "80c0fb90-d1e8-4e0f-9e05-002968838b21",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "99f8cd26-2bf2-40f5-9eae-98b99226cf1f"
        },
        "item": {
          "id": "e437df44-2709-44e3-abb7-408ca068d6b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "50abcf6d-b5ff-4273-98fc-629064cf99d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de1cab-0a9c-4440-aa5d-9240009122fa",
        "cursor": {
          "ref": "4f26c432-90e8-4ba4-b1d8-c7526132fd2b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "02a51570-dd01-4829-b370-172eb5a9364d"
        },
        "item": {
          "id": "18de1cab-0a9c-4440-aa5d-9240009122fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8f4d646e-1220-4801-bcce-19e7b30e9865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8ad41e-6eb9-45cd-8732-71cd39c08a2f",
        "cursor": {
          "ref": "2a29600e-d169-4245-8b69-b10c69b4e52f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "82a27471-9e95-40aa-a368-e613b698adb6"
        },
        "item": {
          "id": "7d8ad41e-6eb9-45cd-8732-71cd39c08a2f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c761c7e5-f6ec-4085-91cc-c2c8a199ac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6e6e2d-be7f-4597-b5c4-3c58ef8942fc",
        "cursor": {
          "ref": "130e5897-59e8-49d7-b7bc-ed5905dd9d38",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "41c62c58-ca34-4b94-96e3-ab8102fb4b72"
        },
        "item": {
          "id": "0c6e6e2d-be7f-4597-b5c4-3c58ef8942fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "57ab67dd-13c4-4f53-9180-83f72d934fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01002b2-57ec-4eac-82bf-55491526317e",
        "cursor": {
          "ref": "d5ff735d-0237-4eae-9027-9ae2a768ebda",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b173d15-f3fa-4cf8-b1d2-7045f13441f3"
        },
        "item": {
          "id": "a01002b2-57ec-4eac-82bf-55491526317e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad3ed7d4-bdab-4b90-b6cc-ee5b40b9851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821800f1-bff0-4418-bd8d-8bb363d3f6dc",
        "cursor": {
          "ref": "02fb7eb3-99ac-4841-a775-5665ab70b8a8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c0f6c159-6caa-4d3e-976c-9aa568c16e0f"
        },
        "item": {
          "id": "821800f1-bff0-4418-bd8d-8bb363d3f6dc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a04ec938-3dcf-4ea0-9758-deeb1f60c03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82f1dd5-607e-4e12-b0ce-133018585549",
        "cursor": {
          "ref": "5e8135b2-2e57-442f-b293-43ad28149b8c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ab45926a-2f9f-47f8-960e-01e316e383dc"
        },
        "item": {
          "id": "b82f1dd5-607e-4e12-b0ce-133018585549",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5e733bd5-1413-456a-a0ed-8f4721280f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a2e00-c747-468b-840c-99f3bd0e11bc",
        "cursor": {
          "ref": "b3f8307b-adfa-4fc5-a98a-b03c5664e3a2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9fe622e1-fbfb-4e72-9981-8aae1d6a23ba"
        },
        "item": {
          "id": "c48a2e00-c747-468b-840c-99f3bd0e11bc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "91d76276-fa3c-49ee-b2e2-5858a95e1cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3391a5-bbf1-4a59-8330-28a6e01fece4",
        "cursor": {
          "ref": "4e9e041b-17e1-4c16-98f5-abe5d5d7074d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4683c554-0734-4ff6-bd80-656ef5397ab4"
        },
        "item": {
          "id": "6d3391a5-bbf1-4a59-8330-28a6e01fece4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "989a610a-8f68-412d-9f79-5573af1e953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180e180d-2093-47b5-bbe4-4609b9b686ec",
        "cursor": {
          "ref": "528706c5-9606-4b77-9d03-b9c4d71bc1c8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9f109d92-3536-46a2-86e1-e1e50f7c368c"
        },
        "item": {
          "id": "180e180d-2093-47b5-bbe4-4609b9b686ec",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6868d5a-5e3d-442c-9ea3-9958e33f1404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2e3ba-d6a1-41f1-ba23-27d01e375c38",
        "cursor": {
          "ref": "9f7b38a2-782e-4366-9253-72040f50c361",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "263627a0-d9a5-4566-a444-85f74f714abf"
        },
        "item": {
          "id": "c5b2e3ba-d6a1-41f1-ba23-27d01e375c38",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eb2949f3-14a9-479b-a1a8-8b3c31ee9a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d74b4b4-1ac3-4fa8-a0d1-527f201e7961",
        "cursor": {
          "ref": "e518a122-5166-40d1-b53a-fb66e607f8a1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8ce2a168-f56b-4129-a493-3b6437972ca8"
        },
        "item": {
          "id": "6d74b4b4-1ac3-4fa8-a0d1-527f201e7961",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "01b6f62b-1248-4713-a35d-0fcdc78ef42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477cb833-bddb-4614-887a-8c06b6d28719",
        "cursor": {
          "ref": "14d977c3-6ef3-4dc3-b983-7e9271ab2633",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b0c9e6a3-0a37-4da2-968f-4078d010f818"
        },
        "item": {
          "id": "477cb833-bddb-4614-887a-8c06b6d28719",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb933577-3ed3-443d-913f-ff79667a7888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c208055-2998-4a08-a7a1-5447e27bd2dd",
        "cursor": {
          "ref": "20f95896-10fb-49d8-9bd6-3b5b74be63e9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d626beb5-2b76-4197-b805-072acc08b3e9"
        },
        "item": {
          "id": "3c208055-2998-4a08-a7a1-5447e27bd2dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "02ec2805-e900-49d5-8c3d-8080452e9cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a8087-b3d7-411f-9673-0c4bdd4506dc",
        "cursor": {
          "ref": "b06d1513-bb79-485d-a190-140cc9aaf727",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "833de620-7af7-4e27-9548-db6b9c5f2c0a"
        },
        "item": {
          "id": "7e7a8087-b3d7-411f-9673-0c4bdd4506dc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3776a865-d675-427d-9d9d-cea76841004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553917e7-f067-4b77-9652-7ea87e4aec62",
        "cursor": {
          "ref": "702e4d50-ada5-4f7a-8bd3-029e7e26d561",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "165626fc-2dd6-42cc-8a23-a7153cfb2b1c"
        },
        "item": {
          "id": "553917e7-f067-4b77-9652-7ea87e4aec62",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2f415bff-0a9e-4c29-854e-0869cfa6946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775efe2d-e3ce-4f30-bf18-4bc02d45cd1f",
        "cursor": {
          "ref": "fe3de068-3af8-4331-8566-65f067214355",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d37b5bf-8734-4dd8-b0f0-d7dc0c39f42e"
        },
        "item": {
          "id": "775efe2d-e3ce-4f30-bf18-4bc02d45cd1f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7d6a77c2-5b92-409e-81fb-aca986e40a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c84640a-a7ac-42b6-b2bf-af4a63893c05",
        "cursor": {
          "ref": "2b462215-c96e-4c3b-8efc-a2919cb4a062",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5b468b84-838e-490d-a863-aa8b38aacf90"
        },
        "item": {
          "id": "7c84640a-a7ac-42b6-b2bf-af4a63893c05",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "909dff9a-41ba-415a-abec-02f1e1c5535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062712cc-17e0-421d-abbb-683859b9be49",
        "cursor": {
          "ref": "81e7a431-c143-443c-b13e-f2686be2394e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ce18810c-230d-4732-b93f-265a7bd9e0da"
        },
        "item": {
          "id": "062712cc-17e0-421d-abbb-683859b9be49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "29411cd1-25b0-4110-bd32-946212dbc7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b7eac-2137-46af-9a10-08b26c190e17",
        "cursor": {
          "ref": "94fa2aab-56fc-47f9-8519-45570ef5e222",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bf20ee5a-58ef-418b-ab34-a417e8d1a337"
        },
        "item": {
          "id": "c57b7eac-2137-46af-9a10-08b26c190e17",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e2c43cb8-055d-4811-bb4c-de3333643c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4811fa40-9a77-4f07-af6c-583925c0f8be",
        "cursor": {
          "ref": "cd310371-7e58-4e2f-9bb3-f47144a8303a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a96ed624-0e4d-4df7-92e4-cc2a18e020fa"
        },
        "item": {
          "id": "4811fa40-9a77-4f07-af6c-583925c0f8be",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5e857de5-5446-41da-a290-c256daa97ab2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 361,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cff21a-9fec-4e95-ba9e-6ffab791a424",
        "cursor": {
          "ref": "a2e25450-02e8-4f63-81dc-f87ff59d1d06",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef4624fe-0a1b-40fc-a956-9a0d6dd7d19d"
        },
        "item": {
          "id": "d7cff21a-9fec-4e95-ba9e-6ffab791a424",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e00880d9-0c8d-4019-83cd-9b54271737f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2b271e-2e01-410c-9b8b-ceabfbaa0495",
        "cursor": {
          "ref": "f9e0a431-eec8-4fe4-b9a3-1e23e37f49ce",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cb6dadd6-08ee-4909-b81c-69e9f903fc22"
        },
        "item": {
          "id": "5b2b271e-2e01-410c-9b8b-ceabfbaa0495",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0bf05c3d-4430-4f41-bfc5-b9c624d31953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e773496c-deda-44db-aebd-6496ad837c61",
        "cursor": {
          "ref": "8295752e-b9eb-42cc-b2d8-a8cc8c46b561",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1808ec98-a6d1-4472-bc05-094aaae631b2"
        },
        "item": {
          "id": "e773496c-deda-44db-aebd-6496ad837c61",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "46175427-eb74-4c5d-8603-5fb2bd335311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9539c4ae-2a67-404b-8b55-1c245705763b",
        "cursor": {
          "ref": "065b7cc3-f21f-4a02-aa0d-4052af73e18e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b9251888-60db-4b27-9b00-7af27dd68080"
        },
        "item": {
          "id": "9539c4ae-2a67-404b-8b55-1c245705763b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b17b0496-c890-42a0-9483-7c297605556f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd63a35-dd50-4259-9d08-c9af605e251f",
        "cursor": {
          "ref": "419d700d-b1b0-493b-8365-e041dfb4730d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f017494-ed7c-440c-81a4-79ce5b4415b0"
        },
        "item": {
          "id": "7bd63a35-dd50-4259-9d08-c9af605e251f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3a8bd071-7a63-4be7-95e3-9d4ca774c571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e03ecab-41f0-401f-8659-dfa9775f5366",
        "cursor": {
          "ref": "1d97c7ea-4666-4aac-bf42-b01be2372d8c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ba6c3830-23ca-43cb-8c42-e5d1106930ff"
        },
        "item": {
          "id": "0e03ecab-41f0-401f-8659-dfa9775f5366",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23d0c49d-8f50-4b54-9443-dbaf6eb26f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5da491-ab22-4b53-899c-9f214143de07",
        "cursor": {
          "ref": "8ed21e32-3fdd-48bb-b685-aa7c02283e29",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9e03d7f4-cefc-4775-865a-4aa452963833"
        },
        "item": {
          "id": "9b5da491-ab22-4b53-899c-9f214143de07",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4cf31b15-0c8a-433f-97d2-747547c1a27f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 363,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e47a96f-048a-4586-b319-7894cc4e8ff7",
        "cursor": {
          "ref": "911b8d73-67ba-424f-9988-61f3c5bec643",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "68197f97-86c8-4d34-a844-38e7f5e91ee9"
        },
        "item": {
          "id": "4e47a96f-048a-4586-b319-7894cc4e8ff7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5786c22d-9767-417a-9741-db570cb659df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b27bb-62e9-41c4-9a34-f2a88960de4c",
        "cursor": {
          "ref": "7cc15409-42d7-4842-9420-cfcff82172d8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "349d1bab-5926-4141-b020-15f3ed958a7d"
        },
        "item": {
          "id": "b68b27bb-62e9-41c4-9a34-f2a88960de4c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4aa7aa4e-91b7-4c63-bbcf-f9bcde48afd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c59cb8d-98f5-4bd6-b1e6-9165f0d9f5de",
        "cursor": {
          "ref": "079e9a0e-dee2-47d9-afdf-8179329092a6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc8f8c6d-a7dc-4f37-a351-e3ab079ba217"
        },
        "item": {
          "id": "8c59cb8d-98f5-4bd6-b1e6-9165f0d9f5de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc693352-e2e3-4456-a5c1-21752c7e5abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6180cd-a8f9-4461-a8a9-ddd50c01c271",
        "cursor": {
          "ref": "8b7fc10e-8443-49f3-9633-e27ebb23062b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f5153361-847a-4bf0-85f5-25fb3c5b4ad2"
        },
        "item": {
          "id": "ee6180cd-a8f9-4461-a8a9-ddd50c01c271",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6594a60a-6572-4a23-921a-ca7ffc58a602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8261fb6c-746d-4d96-965b-d50400df4900",
        "cursor": {
          "ref": "5f1f6a7c-1d4c-4d8a-86a9-20c5ba87ebf7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f5c98ccb-6f75-4679-b4a4-5b26dec87f4d"
        },
        "item": {
          "id": "8261fb6c-746d-4d96-965b-d50400df4900",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f0f48976-4fed-4761-9a76-bedb93b870b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbc289d-da7c-48df-b731-90f4f01b422d",
        "cursor": {
          "ref": "326a14ac-0ed4-43c1-a364-567fc771a7e7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a8e05bfc-7d2b-4077-ae52-5763e63121c1"
        },
        "item": {
          "id": "9bbc289d-da7c-48df-b731-90f4f01b422d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "84d50a71-cc71-473e-a8a5-37b636178f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed4f1a7-0c09-49cb-801b-6b3c89836eed",
        "cursor": {
          "ref": "fff6cccb-acd7-4935-b864-f0718bd2b4a4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "565c669b-f137-4306-afe7-3000f49580f2"
        },
        "item": {
          "id": "bed4f1a7-0c09-49cb-801b-6b3c89836eed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd72a0a9-c7b6-4b88-b7f1-107cc6305610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbb32f1-c77b-4379-a543-cf6764bb3af5",
        "cursor": {
          "ref": "7af99534-0a21-4e41-aa27-419cf8ad637f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f985a1db-3742-44d2-9d03-3eb9e2a9bcfa"
        },
        "item": {
          "id": "3fbb32f1-c77b-4379-a543-cf6764bb3af5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "85faaa5d-0850-4951-a5ee-b924c10108ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b4b13e-45b6-45ed-8bcb-ec8c03fa4249",
        "cursor": {
          "ref": "a994cbda-7e66-450e-b327-ebd2bb12c909",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "40fba9d0-a616-4b67-a005-efd8e4ca89d0"
        },
        "item": {
          "id": "50b4b13e-45b6-45ed-8bcb-ec8c03fa4249",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "05b943fc-4559-4d91-9274-afa4a81fcfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968f1e0-4ca3-451b-942b-31bb19bba5c0",
        "cursor": {
          "ref": "c5fe53ff-3fc1-4fee-8055-9761a1640149",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5e33edde-11dd-4961-b78a-c9bf391157bb"
        },
        "item": {
          "id": "c968f1e0-4ca3-451b-942b-31bb19bba5c0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "13c5e33f-1c1e-40d6-9d87-ec32b03216be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6d2890-ba19-4cd3-9719-4b8ce97f07c8",
        "cursor": {
          "ref": "90e4e63d-1c1a-4717-8936-77b8c2bbf0ed",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "22c93010-0aac-48c9-bbe5-2682a81c8eb9"
        },
        "item": {
          "id": "3c6d2890-ba19-4cd3-9719-4b8ce97f07c8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac879a42-aef8-4a70-80b9-765fb608b058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fceb06-0f3c-4865-8c15-796363097839",
        "cursor": {
          "ref": "6227f1c1-06af-4ed3-b982-e15229c11625",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0c703222-293d-4efe-865a-708996911ae2"
        },
        "item": {
          "id": "36fceb06-0f3c-4865-8c15-796363097839",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da3e2d72-c1b7-45a4-9bc7-001600983c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386f1abe-b23c-4e6f-9707-9f0f8c261a1e",
        "cursor": {
          "ref": "03bf1b4e-9b82-4e5b-b790-ba4f69156601",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2a9cc26b-e71c-4b2a-adec-4a6d5860da79"
        },
        "item": {
          "id": "386f1abe-b23c-4e6f-9707-9f0f8c261a1e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3fe78d94-ab1c-4681-91d3-6ee6a7fe1983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6003f9e1-2079-41c2-816c-280c021c2e00",
        "cursor": {
          "ref": "75eb4d57-e4ed-4774-955f-7074d41fb49f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db2d9320-2d2a-4879-b92c-33daa2f84406"
        },
        "item": {
          "id": "6003f9e1-2079-41c2-816c-280c021c2e00",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4f1e8ed1-2f5b-42b4-867a-77b971830747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e013fed-2b66-4dd5-a981-0dad952063aa",
        "cursor": {
          "ref": "d5ea8c4e-f48b-4008-a1c1-fbce4f45f42f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee694c4e-c8cb-41a5-91b3-ea3311820d6b"
        },
        "item": {
          "id": "0e013fed-2b66-4dd5-a981-0dad952063aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "48ed7977-ad1b-4a1c-9dcb-1c05e23ecd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9270e7-5fec-4160-8a59-f551f0378c21",
        "cursor": {
          "ref": "2497f308-bf20-4b45-8332-205c729ad3c1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ceac865c-254e-461e-aa93-8f56fc67b6b7"
        },
        "item": {
          "id": "de9270e7-5fec-4160-8a59-f551f0378c21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "801bd140-f191-4f56-bae6-cd902b312258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04fee2a-503c-43ed-9a53-457128acc9e9",
        "cursor": {
          "ref": "2dccaa36-b816-497d-9e5d-56e917ac033d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a61485ef-6279-43e8-b0d0-42aa3dece0bc"
        },
        "item": {
          "id": "b04fee2a-503c-43ed-9a53-457128acc9e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0acd0d3a-e703-417b-b86a-300b5a855a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b9278b-2774-45af-99e5-e32400aa3e11",
        "cursor": {
          "ref": "7f8400b4-00e5-4cee-894e-97fd19ccd0be",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f8d5f19d-ade0-4d59-a669-23b73a93fa39"
        },
        "item": {
          "id": "61b9278b-2774-45af-99e5-e32400aa3e11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1466d081-c474-4337-8f7d-9c26a299da2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6f6c31-703f-4339-9ec2-86b49322d35a",
        "cursor": {
          "ref": "65b0d816-6321-43c7-99d8-76d2e788bb05",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5a401923-1fa9-4a7a-9188-144da303cb06"
        },
        "item": {
          "id": "6d6f6c31-703f-4339-9ec2-86b49322d35a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1361ef88-fe94-47fc-9eec-c19a88320d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b2570c-f4e8-47c7-8211-e26755cc58f9",
        "cursor": {
          "ref": "9025cb0f-2574-4605-8a75-80ddfd404fd6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "24dfb635-bd99-467e-8511-65fbbefa05bb"
        },
        "item": {
          "id": "b0b2570c-f4e8-47c7-8211-e26755cc58f9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d947d6eb-96f9-4e4e-bb2f-ad972dc9298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de56bc19-a31c-4753-841d-b28e7c3a1e7a",
        "cursor": {
          "ref": "0739bb52-1794-4182-b03a-c425d2d21629",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7946bbc4-86ef-4b0b-9749-7d93ab4db1bf"
        },
        "item": {
          "id": "de56bc19-a31c-4753-841d-b28e7c3a1e7a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa0a47f7-cfd3-4d1c-a265-e9fa5b00c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2aa009-9b9a-4347-a28c-299d2c1c76ba",
        "cursor": {
          "ref": "82ae87cd-4c20-4e0c-be9e-c51a414ab4e9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8b4198e2-e3dc-4e23-b502-d00ccffa3a64"
        },
        "item": {
          "id": "4e2aa009-9b9a-4347-a28c-299d2c1c76ba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "76dd3982-0b02-4106-8529-5bb68a893e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048ad97-d86c-4bfa-bf23-5041ae5363b4",
        "cursor": {
          "ref": "8d44f230-e2dd-4bb2-bccf-94bd1be13777",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "44e5a8f5-578b-4c20-a0f3-849afc0c53e7"
        },
        "item": {
          "id": "1048ad97-d86c-4bfa-bf23-5041ae5363b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5db75079-9bc6-47cf-9aa2-2c1caa046584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a0db3-2f55-4d22-b2d2-d1acce6859ca",
        "cursor": {
          "ref": "60ed82b0-47fb-442e-baa3-0aa2d4ce3db5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "17c43a96-43d7-463e-9502-c64b1e07fff4"
        },
        "item": {
          "id": "584a0db3-2f55-4d22-b2d2-d1acce6859ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73ae4899-0342-4e8e-94b5-c70143ace16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4731797-ea8c-4c2c-a961-4bfa1a14197c",
        "cursor": {
          "ref": "83437514-21ac-46d7-a0d1-334bdb70fbcc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9fed50fc-0709-4f0b-87dd-bc6374ae276b"
        },
        "item": {
          "id": "d4731797-ea8c-4c2c-a961-4bfa1a14197c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5451ebd7-9e41-4f83-bb54-7867b03b8b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f34fad-a284-4004-982e-c0a7e01ea8cd",
        "cursor": {
          "ref": "cb3b88a9-e7a5-4e03-8053-5f828e1df865",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0fe2cccc-604f-40f0-bfa6-d2a356871396"
        },
        "item": {
          "id": "c3f34fad-a284-4004-982e-c0a7e01ea8cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4258f077-0c0b-4063-b3ab-a8ce023889c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb97b8b1-4298-4721-867a-d1bc3847c0ea",
        "cursor": {
          "ref": "d5dcecbd-e837-4b9b-85f0-06b12d67df0c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66555f59-5a8a-4bf2-a0db-a2337b627259"
        },
        "item": {
          "id": "cb97b8b1-4298-4721-867a-d1bc3847c0ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3edc2dbe-dec4-4826-a132-0a83ee4e6c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478af36b-19b7-44df-8a95-e3adf6419e2f",
        "cursor": {
          "ref": "317e3ad4-05b2-40cc-815b-8d9d028b7175",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9db111ee-acea-41a7-b56b-6787264c3d06"
        },
        "item": {
          "id": "478af36b-19b7-44df-8a95-e3adf6419e2f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f4530e41-2d83-4549-a008-274cc3f53d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aba55d-4006-4433-8f0e-53d3737a3fac",
        "cursor": {
          "ref": "20d60c3a-2eb0-47ad-a7e0-ef0a8c35d240",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "704e0e4b-8891-416b-8e93-237376c51235"
        },
        "item": {
          "id": "55aba55d-4006-4433-8f0e-53d3737a3fac",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "451ef023-fd3f-4e9d-b21f-b17227b9fd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faedeb19-c79a-4446-8583-92b4bb5522b6",
        "cursor": {
          "ref": "36ec673c-0fd8-4cf8-954b-998a4a9074db",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1a909403-f66f-4ab8-8a7e-e5703b5d5cba"
        },
        "item": {
          "id": "faedeb19-c79a-4446-8583-92b4bb5522b6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "134f846f-6d9e-40dc-898e-2acf94145e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484da1e1-855b-4dec-a407-6a3bb27c84e8",
        "cursor": {
          "ref": "11e7504e-57a1-46fa-a199-0792b185c873",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1564f977-a30f-4dad-8e04-ce62dd3c9636"
        },
        "item": {
          "id": "484da1e1-855b-4dec-a407-6a3bb27c84e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "afbbbef1-0077-4999-816c-f222eac50044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a8e125-9099-4944-88c5-5c5fcdd78364",
        "cursor": {
          "ref": "0ed1fc47-3e37-4a9b-b747-5ccb2f2a30c1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "55169a18-4729-43e7-a589-9ddb024624a8"
        },
        "item": {
          "id": "c8a8e125-9099-4944-88c5-5c5fcdd78364",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "73392284-2ded-4f7f-ae28-c0381dc9a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00532a4b-614f-4d24-9d38-7e3a36cc338e",
        "cursor": {
          "ref": "b126e352-85b1-415d-88a5-d1da9c717cfa",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b764627f-0924-48ed-ab19-90966aad2773"
        },
        "item": {
          "id": "00532a4b-614f-4d24-9d38-7e3a36cc338e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2008d7ce-ca45-4b14-a444-031bc988d96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92b76d7-2953-4ffe-b79e-26a4c32a66cf",
        "cursor": {
          "ref": "e2b6a3ac-5911-4d6f-a0d9-98294e887bd0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4cf71008-b1ab-47b8-afc6-971e8ab5b469"
        },
        "item": {
          "id": "b92b76d7-2953-4ffe-b79e-26a4c32a66cf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2946fa23-de99-46fd-a511-ef706b8b6463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45df5034-18ad-4085-944b-5abb57ad3cb9",
        "cursor": {
          "ref": "2f1448d5-d8b4-4cd0-b581-9d30e755d9b6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "567796a4-47d6-45fa-a5ca-66276e480dd1"
        },
        "item": {
          "id": "45df5034-18ad-4085-944b-5abb57ad3cb9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1afae884-ef39-4170-bbf5-880d9af5cd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f82037-4a65-4587-a00b-7a247a3a2c6c",
        "cursor": {
          "ref": "fe370c67-dfc8-41b9-9578-1edc32fe45c3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d4d9d54c-ca4b-4ced-a104-8546fd68aef4"
        },
        "item": {
          "id": "d4f82037-4a65-4587-a00b-7a247a3a2c6c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee33e556-b0ed-4f64-9a6b-9d5f9b4c9aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbfc6e0-084c-4f27-9092-f8382d52823f",
        "cursor": {
          "ref": "f22c8abf-dc68-4b7c-bec9-a25d8396b5f1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "98df51bf-84ed-4b9a-9b33-3db934f080d3"
        },
        "item": {
          "id": "5fbfc6e0-084c-4f27-9092-f8382d52823f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c4ac4eda-acd1-4b63-af82-549220152cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d33071-ca8d-440b-b00b-5d8a2c4d451e",
        "cursor": {
          "ref": "6a13f2e6-0feb-402c-8017-504cc3c9f862",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f7f29688-8352-41f9-beee-b06b21c330e4"
        },
        "item": {
          "id": "77d33071-ca8d-440b-b00b-5d8a2c4d451e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "89179acf-92db-43bb-aeeb-85d5590a514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8eae18-1c94-466b-b3c6-cfdb3d1b4481",
        "cursor": {
          "ref": "4ce359b7-ec65-4d34-bd6a-e077fd122832",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "73035e98-5581-426d-a47a-bc14f92ca329"
        },
        "item": {
          "id": "bf8eae18-1c94-466b-b3c6-cfdb3d1b4481",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b93b1d76-361f-4ac2-b598-25aa93230417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1be4456-fa41-4547-9a5a-09faf8d18c69",
        "cursor": {
          "ref": "c00b7914-3932-49e5-87e4-2883a24005e1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b961906-ac58-4bdc-9322-bc1c54dc9013"
        },
        "item": {
          "id": "e1be4456-fa41-4547-9a5a-09faf8d18c69",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "43c8d63c-eddd-43ac-b6ab-d9c0f4cfdbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a29fe1d-0f2b-4d7e-b889-a287dbfdaeb5",
        "cursor": {
          "ref": "c189c40a-a27e-45bb-a9f9-811529a142c3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c4e6426-ec83-4606-873c-38fde6531c51"
        },
        "item": {
          "id": "6a29fe1d-0f2b-4d7e-b889-a287dbfdaeb5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3c2ac175-8ad1-46f2-9d92-de969e83c541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92870f3e-b2b1-434a-8b6f-c58bc95cf0a6",
        "cursor": {
          "ref": "111e2cbe-5cf5-4be7-b965-9e00e38a1678",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "da5c1d05-fdb6-41fd-b5b1-469933864c25"
        },
        "item": {
          "id": "92870f3e-b2b1-434a-8b6f-c58bc95cf0a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0d8540c3-0ed0-4860-8798-15246d9b5302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888dd66a-52bf-410f-bb09-48396bc82343",
        "cursor": {
          "ref": "23ffc27a-6cc6-448f-9229-03f2dac156b0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "79d72541-acfa-4cc4-8b7d-788fe59d6e5f"
        },
        "item": {
          "id": "888dd66a-52bf-410f-bb09-48396bc82343",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "58bd6529-3692-4b6e-9ace-e7a6bde0f7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f94608-6895-4123-848e-6e80bf63422f",
        "cursor": {
          "ref": "9c10d166-efa8-4f6e-97e6-863b565b5b97",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c8d04e51-5c81-479b-bd98-231f1667fc24"
        },
        "item": {
          "id": "44f94608-6895-4123-848e-6e80bf63422f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "744cfd89-b21a-404e-984d-b5f6c971a431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40ef579-c02a-4a77-a37c-603b0f4b6c5b",
        "cursor": {
          "ref": "ccb7672f-7c71-42e6-b067-66b39274346a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3dc56678-bf85-4bb9-8362-1cf0c23a3388"
        },
        "item": {
          "id": "a40ef579-c02a-4a77-a37c-603b0f4b6c5b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dc61b7f8-4e50-4c6c-8f84-da0f3dcbdb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0642aa-fea9-4492-bfdd-02cfee941f22",
        "cursor": {
          "ref": "74df6a5c-c393-4d3e-bf0d-430ebe3de0ac",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5e50cb3b-1b84-4a65-8d34-b8650a86e373"
        },
        "item": {
          "id": "9a0642aa-fea9-4492-bfdd-02cfee941f22",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc5b0efb-8295-4e62-ae6f-b1935c32ba61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccea543-94a7-4bd7-b3a6-a46b782f128f",
        "cursor": {
          "ref": "615165f5-508b-4cd6-bb44-c938c41bf458",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "256cfc1b-b675-484e-89db-8f79ac48cd1f"
        },
        "item": {
          "id": "9ccea543-94a7-4bd7-b3a6-a46b782f128f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "40d87357-c3f5-4d8f-8cb6-79c29721a1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c38d2-1c2f-4ad9-ae8f-570d1937b2c4",
        "cursor": {
          "ref": "37b34cc1-fa43-4fed-b885-c13609176032",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2403815-c50e-4bbb-843c-ebf26897049f"
        },
        "item": {
          "id": "bf6c38d2-1c2f-4ad9-ae8f-570d1937b2c4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c6a1b40b-f46e-472d-8496-ac2f1dc9d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f8e1bd-158f-4f6b-8454-46e2ab035a2c",
        "cursor": {
          "ref": "ce1f1956-e3df-4b68-b624-cde062f1977b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "323ff2e3-d411-461d-82c4-4c997aa93e01"
        },
        "item": {
          "id": "89f8e1bd-158f-4f6b-8454-46e2ab035a2c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "47f41c23-24a6-417d-805a-f2a32610776c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6513750c-60de-4cc6-82ca-373abfa3c1c3",
        "cursor": {
          "ref": "61c6f9e3-0875-4a80-bc53-8e0a0af198d6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a9af5d68-7298-4914-83b8-67ba93b48cbe"
        },
        "item": {
          "id": "6513750c-60de-4cc6-82ca-373abfa3c1c3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "58919d20-95ab-411a-b86b-4db5397905a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2d11fd-bae5-4332-a219-6f137805a0fb",
        "cursor": {
          "ref": "c7340aaf-4828-4ba4-b7f4-0c0d216a732a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c94a202a-958e-4542-bc61-05b7e56347fa"
        },
        "item": {
          "id": "4c2d11fd-bae5-4332-a219-6f137805a0fb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "14c5c822-1a12-4822-83d2-de6269e31b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d9909d7d-a24b-4b67-9a66-ef3104b82a5a",
        "cursor": {
          "ref": "980564a1-a5f6-40d7-b1b2-aeef49216629",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b564c7f1-8e8c-4081-a016-aea324a619d3"
        },
        "item": {
          "id": "d9909d7d-a24b-4b67-9a66-ef3104b82a5a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "97dd005b-8749-47c2-b48e-896ffdcade34",
          "status": "Created",
          "code": 201,
          "responseTime": 3313,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c91c4c-06c3-4b29-8fda-23dff5a150e1",
        "cursor": {
          "ref": "e9c34d7d-4784-47b9-b0ba-5c41931d0afe",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d01d0421-ce5e-440b-aab5-e4d4a08358b6"
        },
        "item": {
          "id": "98c91c4c-06c3-4b29-8fda-23dff5a150e1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a65b054-f161-4e17-b970-24f617170423",
          "status": "Created",
          "code": 201,
          "responseTime": 2476,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4178af-58ab-45ad-91c0-618eecfd3cc2",
        "cursor": {
          "ref": "ab4039e5-3d0b-4da0-9ebc-54b2275a37bb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e0a8b410-bbac-4d56-ac79-5fdb1bd1712e"
        },
        "item": {
          "id": "0e4178af-58ab-45ad-91c0-618eecfd3cc2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e5e1dceb-a713-4e81-b88e-89222ac622bf",
          "status": "Created",
          "code": 201,
          "responseTime": 2663,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d80b88-b983-4f8d-b621-30cd938917f1",
        "cursor": {
          "ref": "c9a3c75c-f256-4268-aead-dba8614e9350",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d16629b5-b145-48ab-9b64-6ee2ea5c2801"
        },
        "item": {
          "id": "24d80b88-b983-4f8d-b621-30cd938917f1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5c722ce3-32b0-4568-9a79-85f0b2847f22",
          "status": "Created",
          "code": 201,
          "responseTime": 1973,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2985e08-bf19-4e04-91c6-bd1f698241d2",
        "cursor": {
          "ref": "3e19432c-bf14-44f4-a55b-9c1433818d63",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d57432b-ee28-4b3c-bc3f-31f666117c5c"
        },
        "item": {
          "id": "b2985e08-bf19-4e04-91c6-bd1f698241d2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "684c2136-03cc-475e-ba98-781d64804a05",
          "status": "Created",
          "code": 201,
          "responseTime": 2551,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bbe2f8-e67d-4f80-8b03-cb690623bf8c",
        "cursor": {
          "ref": "df7d3a61-ab34-4a60-aa79-2b4e68c96088",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "595a6e92-678b-4fde-a7d3-0b445f79a6cd"
        },
        "item": {
          "id": "09bbe2f8-e67d-4f80-8b03-cb690623bf8c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e46bc142-0c70-4251-b7b4-197402a52906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c6651817-7581-4241-9add-48fcd3d8ec83",
        "cursor": {
          "ref": "ae6526ad-1ff3-4bef-970d-b20c524cc96e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "388bbc90-f690-46a5-b501-4c5d11feae21"
        },
        "item": {
          "id": "c6651817-7581-4241-9add-48fcd3d8ec83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ea469f00-87b0-41ae-a366-25d7b2242112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d119ae90-c341-4d0f-984e-669065c66a9c",
        "cursor": {
          "ref": "3f8a03ff-b7b9-4f31-a00b-51495d816756",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5b2a8041-c2e4-4ee2-b257-b4fa270936f4"
        },
        "item": {
          "id": "d119ae90-c341-4d0f-984e-669065c66a9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc70962f-6b4d-45b9-9507-653f112f69ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3079b6a9-48f6-4023-92af-0c033417ff4a",
        "cursor": {
          "ref": "84ee8efc-ae8f-4744-ba2e-ab50c65c43cc",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b2e3e725-20f9-44d3-94ef-b2563e395cf6"
        },
        "item": {
          "id": "3079b6a9-48f6-4023-92af-0c033417ff4a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1499ee5c-8da0-4d2b-a773-e4bb72a25f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc8f27-56a8-4cb2-90b0-bed2cbf723e9",
        "cursor": {
          "ref": "7faeebc2-5408-4d07-9b39-1f06c0a71a09",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49d1fc2f-debe-486a-ba82-e1621119d25e"
        },
        "item": {
          "id": "73dc8f27-56a8-4cb2-90b0-bed2cbf723e9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3bbcc490-714a-4ab1-84e9-5ecfde4671a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983f1e74-0f1c-4b4a-b5fe-3b17a06474bf",
        "cursor": {
          "ref": "3e508dc1-aa1e-4564-9d21-5ffa4e01a136",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6b6c6a1d-28a4-44e3-b507-caaa777a8fe9"
        },
        "item": {
          "id": "983f1e74-0f1c-4b4a-b5fe-3b17a06474bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5d0bd301-6186-4ebc-9958-9e870511c9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67379710-4400-4cff-b350-3f74d0c368ac",
        "cursor": {
          "ref": "d882ece1-2974-4111-94c8-5881b31ed881",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8613b586-da45-470a-afaf-1aa0506f2115"
        },
        "item": {
          "id": "67379710-4400-4cff-b350-3f74d0c368ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d8e7839-6a4b-4991-a731-854975a0539a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24301d3-b48d-48a6-9e68-9480566920fe",
        "cursor": {
          "ref": "94ca0b4d-ea7b-44f7-880e-f060221fa3a4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "46e79cec-cf8a-4fed-820e-fa83bc1243b6"
        },
        "item": {
          "id": "a24301d3-b48d-48a6-9e68-9480566920fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a45fb742-b3f6-4993-b3b8-0e8ebf72c57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f68cba6-d159-4429-b55c-f253be163fb0",
        "cursor": {
          "ref": "87de9038-fe10-47d0-bb17-be876cae4c55",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f061848a-96e6-4b58-9af7-88f7af068ada"
        },
        "item": {
          "id": "0f68cba6-d159-4429-b55c-f253be163fb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a52a66dc-2013-48db-8864-be91d650b27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb434e90-daa2-440e-b461-56ab27f81923",
        "cursor": {
          "ref": "806a7737-25a0-490c-89e3-2b6f20dba34b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7d05ea42-d20a-4450-bde0-a6dc394ede41"
        },
        "item": {
          "id": "eb434e90-daa2-440e-b461-56ab27f81923",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3497ee69-8e7d-4c1e-86e9-b6d28f9054e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a487553d-92ec-483f-a79a-6d8966646523",
        "cursor": {
          "ref": "a851d382-a797-47a7-bd65-33a0f43501f0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0ed8bd0e-0010-42da-b846-c3614ea5f6b1"
        },
        "item": {
          "id": "a487553d-92ec-483f-a79a-6d8966646523",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "498db284-f71a-475b-905c-ac8f828cbe81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424ded6d-a204-4004-bc94-3b2d2515b7d8",
        "cursor": {
          "ref": "76832d02-24e2-4b09-82d2-b100058c54e0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dcff7510-7bbc-4841-ac11-e653bac4bceb"
        },
        "item": {
          "id": "424ded6d-a204-4004-bc94-3b2d2515b7d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b720db5-f23e-49fd-bdd2-f48a6302deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b478bd5-6ddf-4ffc-ba59-b4d9dcc130db",
        "cursor": {
          "ref": "0c267ed0-e4ca-4009-9a0b-9927c272a55d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d37ee24d-3d6f-4efe-8054-1423fb087f89"
        },
        "item": {
          "id": "4b478bd5-6ddf-4ffc-ba59-b4d9dcc130db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8425ad6b-15c4-43c6-9b50-9950671978fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa08acfa-cf5a-4ec2-9c44-bcc6cce10090",
        "cursor": {
          "ref": "2aa31014-f9de-4076-adb2-3b481f273c1b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1bea23a5-0355-4294-9813-e03c1d2e23a4"
        },
        "item": {
          "id": "fa08acfa-cf5a-4ec2-9c44-bcc6cce10090",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "091d88c0-8c3d-49b3-a42a-a60a88f1ac9a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 139,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26047f4c-2bef-42f1-bebf-ef310b5433ff",
        "cursor": {
          "ref": "c86f5bb7-8dbe-4d68-95a4-b8494f271954",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5cae93b2-8459-4361-8b5a-4544970bd044"
        },
        "item": {
          "id": "26047f4c-2bef-42f1-bebf-ef310b5433ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd932203-67dd-4df7-940d-31417893cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd608a12-8fc8-45bf-bfab-3b278012d0ad",
        "cursor": {
          "ref": "c01f95a9-df42-441d-ab92-e12275052c19",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2021bed7-5a35-4375-ad20-b31e8a101389"
        },
        "item": {
          "id": "dd608a12-8fc8-45bf-bfab-3b278012d0ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "acc9a741-f626-43ba-a2b6-2df44170ee57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cabec89-ea0e-4037-9dc6-f3da76971056",
        "cursor": {
          "ref": "790de37e-3389-4620-aef1-9164fef221fb",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "749bf5d8-adb7-4251-821f-3d723dcab4d3"
        },
        "item": {
          "id": "4cabec89-ea0e-4037-9dc6-f3da76971056",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dfa9dad8-1185-42a2-922a-3fe80993f8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3e121e-15a7-4052-b0b7-15d82a5b1795",
        "cursor": {
          "ref": "55e70181-fe9d-4b8d-aada-d7ee92cb3006",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "578e3718-a72c-4269-847b-96f969ae9578"
        },
        "item": {
          "id": "8b3e121e-15a7-4052-b0b7-15d82a5b1795",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f98b6325-295e-4a28-94cd-9608b4eeb579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d89c20-d5d8-46ec-ad51-be7d18ee93e9",
        "cursor": {
          "ref": "f29974f0-3089-4f3f-b2d5-74ceb4b9ca1a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "668b51e6-1a6a-42da-9c32-37e4f9eda21e"
        },
        "item": {
          "id": "65d89c20-d5d8-46ec-ad51-be7d18ee93e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7eae77a6-511e-450d-91ba-b05bc62a3469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143355fb-77e7-4e12-8a53-4c75368e369f",
        "cursor": {
          "ref": "3fd1e8c9-6d17-4e9d-8a89-08157ff12556",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a53c1fee-99b3-4c9e-af44-b598375b2509"
        },
        "item": {
          "id": "143355fb-77e7-4e12-8a53-4c75368e369f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eb39befb-7851-4dd0-a9f9-a4f085be7b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b01adb-d20a-4ee5-b814-0173e2474301",
        "cursor": {
          "ref": "25e5f493-7ed7-468a-bc98-f62265432493",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "925d1d3d-5278-402d-a2ee-9274fc334b8c"
        },
        "item": {
          "id": "87b01adb-d20a-4ee5-b814-0173e2474301",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39878775-bdb6-4fa8-85e0-5add7523be5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f64ed3-bf8b-41f7-ac59-62dce9c508bd",
        "cursor": {
          "ref": "ffcfb630-e243-44cf-b55e-964ffa764c7c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "469049a5-df5b-4ca8-b09b-33887fad7a95"
        },
        "item": {
          "id": "11f64ed3-bf8b-41f7-ac59-62dce9c508bd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5948c89c-079c-4be2-84ec-1a7493586177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a56ebd1-534e-49f1-9e88-7de5abbc989b",
        "cursor": {
          "ref": "103a1c78-da9e-4c9e-b23f-a6ad70ae2d7f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "56bd351f-0dad-41f8-865a-f90be1c9b7d1"
        },
        "item": {
          "id": "6a56ebd1-534e-49f1-9e88-7de5abbc989b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "065ab02c-72d3-45bd-bc87-f7b4776264d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604be3b9-5572-4819-bc2d-464a81b2b458",
        "cursor": {
          "ref": "66431314-086a-4b03-baef-f22d1e80e2b5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d72327d3-9b59-483e-a409-cb2f04f52665"
        },
        "item": {
          "id": "604be3b9-5572-4819-bc2d-464a81b2b458",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed7043a2-ad60-4907-8154-5bcc826278dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43490b78-929b-4c8c-89b1-4e517e04ed92",
        "cursor": {
          "ref": "c81e7bc8-aae0-4888-8751-3dc2556d1308",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "50390f37-e93b-488e-9dc3-bcc01ac3be62"
        },
        "item": {
          "id": "43490b78-929b-4c8c-89b1-4e517e04ed92",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0dbbcb03-04a9-4ce6-b200-5ce9769f1654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0399032e-6bea-4ee4-983e-5f3a65ebe3dd",
        "cursor": {
          "ref": "25194b35-ea36-407b-b172-d998f41c72b1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd8cb878-bdef-4878-a2ec-f9f68a681009"
        },
        "item": {
          "id": "0399032e-6bea-4ee4-983e-5f3a65ebe3dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6180d08-a094-4724-9a0e-290173910a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3604d0-0779-4063-a0cc-24a2da7c3f6f",
        "cursor": {
          "ref": "6397454f-e9ba-45db-affe-8edd75de5f60",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "49f24486-69dc-403d-a92c-b5960a7baa7f"
        },
        "item": {
          "id": "ac3604d0-0779-4063-a0cc-24a2da7c3f6f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "95fb5e9c-5056-4ff9-8cda-9740329b6821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688e126d-ae37-42b4-ac9b-6241e2513775",
        "cursor": {
          "ref": "d7b89353-dd92-4092-b87f-36ecf6b77452",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cf4f702d-b171-490a-bc3c-8d34daf8373f"
        },
        "item": {
          "id": "688e126d-ae37-42b4-ac9b-6241e2513775",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7cfee3b6-e79c-46e6-a81c-4d9cbfcc9877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8d311b-d870-4fd2-ac6c-9b55972397a8",
        "cursor": {
          "ref": "d792b839-4fc9-4f66-88f8-499154dea303",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b7105da3-d7af-404d-8975-0af0b51865b8"
        },
        "item": {
          "id": "3c8d311b-d870-4fd2-ac6c-9b55972397a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f191b615-2f12-4219-8135-cdb46b380ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18f8ee5-3204-4344-a121-8b1a63edb3f9",
        "cursor": {
          "ref": "2c7e35fe-61e7-4139-9659-92af2b6925e0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2bf51ac1-bd8e-48bf-bb0c-2771d2e1ef65"
        },
        "item": {
          "id": "d18f8ee5-3204-4344-a121-8b1a63edb3f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c92bcad5-08f1-4953-ab84-bbf78715478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6623222-10d2-463c-b0d2-57bef92f41b6",
        "cursor": {
          "ref": "40440f22-8092-4795-b9ae-41d6b095383f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "957529fb-2ed9-4b95-8bb4-867fe6e78531"
        },
        "item": {
          "id": "f6623222-10d2-463c-b0d2-57bef92f41b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c0947cc-0c78-473f-8931-0c5c9afe6048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e900e-284e-47a4-b8fd-6d987733c4a4",
        "cursor": {
          "ref": "1aede8b0-a33a-4209-b5f9-6e29be4f14a0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2a702a48-15cf-4f13-88fb-d659187db0de"
        },
        "item": {
          "id": "272e900e-284e-47a4-b8fd-6d987733c4a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "612b6fcd-7c75-45a0-ae5b-7e879fea75e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98950800-debd-46ac-8098-0902978d1ed5",
        "cursor": {
          "ref": "cc81bf7c-ef06-40e8-a1bd-958da1c9ff44",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0674b3eb-0126-4733-b4e5-747d2a21355c"
        },
        "item": {
          "id": "98950800-debd-46ac-8098-0902978d1ed5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "61485f2c-75e3-433f-b1b9-9fa31d20a1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b0455-ce9e-417f-8aab-baf256aed8a6",
        "cursor": {
          "ref": "526a1ad0-e229-4ed5-8f9b-e56ac1811357",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16c51c8e-ee62-49d3-80f5-b02f01f7c240"
        },
        "item": {
          "id": "438b0455-ce9e-417f-8aab-baf256aed8a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de6c32ee-29da-4d41-bd28-984c59a566fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12e23e-1960-4e62-996e-e55a637117d0",
        "cursor": {
          "ref": "ff4ca892-55be-479b-a74f-367b666661ea",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c5f59036-e27a-4bf8-bd49-c7fff3a61d5f"
        },
        "item": {
          "id": "bc12e23e-1960-4e62-996e-e55a637117d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf948cc0-a42e-4d6e-a4c9-7d57cb9a077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b6ca43-02cc-4845-85fc-cf41a7d57925",
        "cursor": {
          "ref": "96f1e405-67e7-4463-829c-932a71919efa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b9a75aab-66f1-4158-976e-6f3d96f1d9f0"
        },
        "item": {
          "id": "06b6ca43-02cc-4845-85fc-cf41a7d57925",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ec452fc-78e9-4992-89ed-2a3e27bab788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec344f9-4e2e-413b-8ec7-64a5b79cb21b",
        "cursor": {
          "ref": "3ecb5b03-c326-4ab2-85f9-0ea32bc5fb03",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6cd37626-96c5-49d7-bec6-c41d63719845"
        },
        "item": {
          "id": "3ec344f9-4e2e-413b-8ec7-64a5b79cb21b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69ff84ec-088f-4042-8dcb-92d1ea608e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cccfbc-320c-4763-97ae-17d8ab5a1a92",
        "cursor": {
          "ref": "18e68761-586d-4ce3-8437-f50981cc7612",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d870592f-7810-4a8f-b559-ee32b8e37b3f"
        },
        "item": {
          "id": "c9cccfbc-320c-4763-97ae-17d8ab5a1a92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "317d7234-3f45-472c-872c-edcc0f3aa50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e593ebe-a41d-4b58-9bb0-76ce947fee7f",
        "cursor": {
          "ref": "2c3324b0-9f57-4994-822c-553f95fca3ab",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f546e80e-a57e-49a1-b06b-1d7766c82bc6"
        },
        "item": {
          "id": "2e593ebe-a41d-4b58-9bb0-76ce947fee7f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f4824eab-2cd4-472a-bbb5-9830688933c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee58cb3c-2a08-4867-8051-878ccb4903bd",
        "cursor": {
          "ref": "a6ae0ba8-2114-43ac-b68d-f2ff4e144fdb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "946b5166-d32e-438a-b94e-78e8cfb4a092"
        },
        "item": {
          "id": "ee58cb3c-2a08-4867-8051-878ccb4903bd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9c22b554-d0fd-4c12-99a3-45d6fa24ebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ff319c-8992-428a-8a1a-7b891856cca5",
        "cursor": {
          "ref": "159c97ab-e001-4c1a-8182-e2cbc7d3f628",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4d933792-9957-4d9b-bef5-5a7eaa8c70db"
        },
        "item": {
          "id": "a0ff319c-8992-428a-8a1a-7b891856cca5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20145647-26d3-433b-aa00-1f783c6fbcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845315e8-e6aa-4bb6-a1ad-d12878fa7da7",
        "cursor": {
          "ref": "c5ac0c76-6fcc-4259-9ae3-b5c3340108d0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "348a9699-dfee-4d8e-af15-382312b102f0"
        },
        "item": {
          "id": "845315e8-e6aa-4bb6-a1ad-d12878fa7da7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d014936-8e5e-49ef-a4a4-0ffd038ec5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862d0dc3-f3cc-4120-bca0-3907da24bb56",
        "cursor": {
          "ref": "512f0a5e-3bca-494d-8ef2-ba81f82648e1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3c13319e-d487-4ad6-aaca-931eee8aea32"
        },
        "item": {
          "id": "862d0dc3-f3cc-4120-bca0-3907da24bb56",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9b841e82-a386-461a-8714-5e8f0280ba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baad05e-b05f-4c1e-8654-a0bbb2183c00",
        "cursor": {
          "ref": "e9ac1e95-ac27-4aca-bec0-90a71a6c997f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "34d73498-39d3-4243-9829-1782a575e6da"
        },
        "item": {
          "id": "3baad05e-b05f-4c1e-8654-a0bbb2183c00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b531da5-a2b9-4aea-81af-689d510a1e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61ffa9-4067-4d22-ac81-4fecec176728",
        "cursor": {
          "ref": "f2402060-c280-48f0-9b7a-6ae1912a6473",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2fcb2cd3-3685-43db-912d-e1dd64dacac7"
        },
        "item": {
          "id": "ed61ffa9-4067-4d22-ac81-4fecec176728",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "35f8a402-0443-40ca-9e36-ba3be339b50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7e48c0-7a72-45a5-8c29-0407e324150a",
        "cursor": {
          "ref": "fcbf0598-2e3c-45d1-8604-1eff9625b547",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "00448241-657f-43e9-bcea-4927b99329c4"
        },
        "item": {
          "id": "7d7e48c0-7a72-45a5-8c29-0407e324150a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39a39968-dc7a-4a23-993e-434b7b97910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e15d8f9-bfac-4769-ba6d-644d876d3c5f",
        "cursor": {
          "ref": "a7bdae4d-2130-4216-9813-a1696475594e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b3d89cfb-4f6d-46b7-af84-ffabb4325deb"
        },
        "item": {
          "id": "7e15d8f9-bfac-4769-ba6d-644d876d3c5f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "61d75240-25ee-4d07-b8cb-dab12bdcfe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d05339-38b1-460c-9ca8-a153f2c0feba",
        "cursor": {
          "ref": "2e9067a8-4c2b-460a-ad6c-cf0cd7403af1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98ceb242-168d-4bb6-965a-64fa46619bd3"
        },
        "item": {
          "id": "88d05339-38b1-460c-9ca8-a153f2c0feba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed0c2715-5d99-4afa-94e5-a6d7178a9d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50a19c1-2790-43eb-8b2c-e7b9fa0f2d59",
        "cursor": {
          "ref": "c8fce84a-4051-4ad2-a403-aef973657c77",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4c38d0f4-0d87-41da-8981-276bdc28ed18"
        },
        "item": {
          "id": "d50a19c1-2790-43eb-8b2c-e7b9fa0f2d59",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a2dc65c7-5a56-4075-aae0-0b63178c6ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69113dfc-acd0-43c8-842c-6b9ee5a5e356",
        "cursor": {
          "ref": "e5e55a9d-3dd4-4c4f-9b63-05b011ba40d3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "502b8a78-20e3-49c6-a0c4-285e4515c2ed"
        },
        "item": {
          "id": "69113dfc-acd0-43c8-842c-6b9ee5a5e356",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59b25ebd-77c0-4d44-8a47-903aaef5f892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e24816-0b40-4cd3-96db-90a47ab1158b",
        "cursor": {
          "ref": "65469704-d64f-4d8e-b495-86ccc41c7f6b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3238ca55-5931-4860-a7b6-0ff07de7de38"
        },
        "item": {
          "id": "07e24816-0b40-4cd3-96db-90a47ab1158b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3db761cb-168a-4650-8f0b-0557df96f9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a59353a-c05d-4a2e-930e-e862f5dd6505",
        "cursor": {
          "ref": "8e534236-0d1b-48de-b3ac-7776565428f0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad8f4506-f885-4df0-81e5-b15477f9e01e"
        },
        "item": {
          "id": "5a59353a-c05d-4a2e-930e-e862f5dd6505",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "28f2167b-c649-4a62-b67b-07ae46428552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3218e96c-0451-4f5a-b6ab-b045ce2e0705",
        "cursor": {
          "ref": "93824c28-3e6f-4df2-858a-9c736e370af8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d211f39a-2807-44c0-856a-0adea576dbc4"
        },
        "item": {
          "id": "3218e96c-0451-4f5a-b6ab-b045ce2e0705",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ff0ef0e2-64d6-4196-8b35-2bc2ea282f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b6331-e592-4a25-95c8-10f1fd14f384",
        "cursor": {
          "ref": "b124aa31-3805-4f05-bad5-902dae61729a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4cc2dad-5b6d-4ba4-9049-ef02c13b7807"
        },
        "item": {
          "id": "ed6b6331-e592-4a25-95c8-10f1fd14f384",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1caddc1-aac6-4ea9-bdf9-ff14fe165a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e79f8b3-776c-4b40-8b80-1f58455c3da9",
        "cursor": {
          "ref": "a716424f-a320-4f49-a687-a7bd20f6af50",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6fba13a7-1bd9-464c-a331-6571298fcab3"
        },
        "item": {
          "id": "8e79f8b3-776c-4b40-8b80-1f58455c3da9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24dc41ac-f859-4cc2-bc33-a0ed25f3391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8aa124-1c7e-4b8a-a49f-9abaf7f2255c",
        "cursor": {
          "ref": "0c592794-272b-47ac-a93d-91ca37384770",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d8ca5b5c-a752-4676-ab9a-aabf587ce8f1"
        },
        "item": {
          "id": "aa8aa124-1c7e-4b8a-a49f-9abaf7f2255c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b4684642-1c6d-4b0a-bda1-41ed79e01588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e47f0c7-8efa-4c13-97e3-b19237f724f8",
        "cursor": {
          "ref": "f03d00d9-9959-4a8a-afd6-9e9a53393c42",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b936720-363e-40af-bfd7-fb47c62ff766"
        },
        "item": {
          "id": "3e47f0c7-8efa-4c13-97e3-b19237f724f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f41773c9-b596-420e-b143-859e03be607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e1f32-3b85-4127-849d-3c197d95ab99",
        "cursor": {
          "ref": "78347ad2-39dd-4387-9a23-4db13e0b6be7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "69bfc7d6-c5fb-4907-851b-973ee0331e4b"
        },
        "item": {
          "id": "f16e1f32-3b85-4127-849d-3c197d95ab99",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bb6cb82-2d7b-4322-98ef-36807c3ca9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014179f7-ef0d-4c43-87f3-7ba28a126a92",
        "cursor": {
          "ref": "beb42a0b-fe5f-496a-923f-7818da77ed38",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "775d4eda-2cc2-4bf9-895c-1a2056300db5"
        },
        "item": {
          "id": "014179f7-ef0d-4c43-87f3-7ba28a126a92",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e83713d4-ea25-4077-9e62-0ac94ef86bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967ac374-3b05-4892-8238-44be5f89c716",
        "cursor": {
          "ref": "33fa4ded-1433-4629-8680-f848de46030d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e950b592-88b3-4eac-90ab-3d4e69ed63b8"
        },
        "item": {
          "id": "967ac374-3b05-4892-8238-44be5f89c716",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17e858df-d9b6-45c8-9578-ccada716f6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60b46c3-0d02-4705-98ff-e8e79abb17ee",
        "cursor": {
          "ref": "efaf1269-5906-4a14-b741-feb835768530",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b98beeee-e4cb-476b-9dfc-69e67503e4d6"
        },
        "item": {
          "id": "d60b46c3-0d02-4705-98ff-e8e79abb17ee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e3785f76-faf4-4238-b541-bf9b9ec56ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92a0b54-663b-4e46-b3bb-bd4cf1ae0d1c",
        "cursor": {
          "ref": "5edb0391-106d-45f7-8649-ac726a0f5a18",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "49a8246b-4f90-4087-8fa4-38b1ef2ae07a"
        },
        "item": {
          "id": "b92a0b54-663b-4e46-b3bb-bd4cf1ae0d1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "23786287-49c3-4bf8-9812-5c10ed95f805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9dfacd-9a06-4bc8-8759-156263396724",
        "cursor": {
          "ref": "ce47cf78-3885-4b3c-a167-305962aa8237",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "82a411ce-8537-4af8-a10a-981bdddebf8d"
        },
        "item": {
          "id": "ae9dfacd-9a06-4bc8-8759-156263396724",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37164d89-9de7-45ba-8830-0381a8bda631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05026675-aea2-486e-bcb4-872f054ad36b",
        "cursor": {
          "ref": "9a309c7a-5585-4f15-b840-3d22ea05ddb1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "136ec08e-155d-4f80-9adc-d11324e5ceb4"
        },
        "item": {
          "id": "05026675-aea2-486e-bcb4-872f054ad36b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eeb358dc-6b26-4e05-b859-109bef629f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71101963-20e9-41d3-a2df-d0c012cfab36",
        "cursor": {
          "ref": "7ff164c6-8758-4f73-a855-f467d820a3e0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e8f0f3c2-cd48-40be-8712-d62ccffba63b"
        },
        "item": {
          "id": "71101963-20e9-41d3-a2df-d0c012cfab36",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8600cb47-8940-4529-99f3-e9c043f7803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d296617-b450-407b-b5ba-f49c3c888759",
        "cursor": {
          "ref": "1e7d16a4-8506-4a1c-a4ce-7ae628c4ac8d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "56194f2d-76e9-453a-8e36-b9e40816d228"
        },
        "item": {
          "id": "0d296617-b450-407b-b5ba-f49c3c888759",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fae0563-9da0-4080-888d-ffa421b55383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f18910-063a-4cb1-8bbe-9a49c9905ffe",
        "cursor": {
          "ref": "a9ee1879-9ebc-4aeb-b171-f74ef241cc33",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ea7ac6c-2e9e-41b3-8b4f-5ae3f41c3faa"
        },
        "item": {
          "id": "12f18910-063a-4cb1-8bbe-9a49c9905ffe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0ede7b24-0869-415d-9520-9a144468a731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16552fb9-f87f-4ca3-8d92-657df3ec7a2d",
        "cursor": {
          "ref": "46cee860-ae59-43f5-9534-0c1b9d258fd6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "039e84d1-402c-460d-aa7d-16c804d4726b"
        },
        "item": {
          "id": "16552fb9-f87f-4ca3-8d92-657df3ec7a2d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a101fc38-afb2-4966-b13d-5b7d0fa3a285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bffc7a-3326-479d-8f05-1a1cdda77d8b",
        "cursor": {
          "ref": "caeca276-dd3a-4a6a-abad-51ed209a568b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65b95737-be39-4e07-8a11-304a7d4f5776"
        },
        "item": {
          "id": "23bffc7a-3326-479d-8f05-1a1cdda77d8b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b2a799e6-b0cd-409b-bd3c-a52a68c8d62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a918a-2718-4208-ac30-5b91b594ee92",
        "cursor": {
          "ref": "8a85de1b-8a94-492b-b62e-2048ee523fcd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "de993f82-779d-43a6-8a24-aae595b0e844"
        },
        "item": {
          "id": "d60a918a-2718-4208-ac30-5b91b594ee92",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2462cc7e-7cab-45d6-b55c-7b71ab9c0138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d3a527-3ece-4f22-b6c3-2f17226d5f77",
        "cursor": {
          "ref": "28f89b7d-914b-4ba1-a3b4-4fb27e880376",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1e53d29a-d19e-4055-bea3-1c244dce40a7"
        },
        "item": {
          "id": "40d3a527-3ece-4f22-b6c3-2f17226d5f77",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8be284ca-2d59-44d5-89a3-3545b6ce2e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa10a16a-686b-40e8-a48d-b99fd72aaaef",
        "cursor": {
          "ref": "bee395cd-aff2-44ce-9f5e-8c0c30b4a6b2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "14f13fa3-c80c-4096-9f91-30c3cabe11a9"
        },
        "item": {
          "id": "fa10a16a-686b-40e8-a48d-b99fd72aaaef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db9c7522-e5c3-450f-972c-ede0afd55204",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee24a3-aa3f-4565-8157-03590c97f1f3",
        "cursor": {
          "ref": "3e6d6f42-604c-4dfb-a592-f341cc55211e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f564437-2bb1-4d5a-ae50-843631a13fba"
        },
        "item": {
          "id": "45ee24a3-aa3f-4565-8157-03590c97f1f3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1ecbad8c-9fcf-4cf9-9056-a3455299f479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf8229a-4d8a-4885-a756-a776eb2891af",
        "cursor": {
          "ref": "12a7e2e1-554a-4659-b663-561d63fd4de7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e02ee002-7c38-41fd-8687-9125a98f8903"
        },
        "item": {
          "id": "bbf8229a-4d8a-4885-a756-a776eb2891af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b8b0ca32-4e28-4c2e-b0bf-5f133214d3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d118a0d-8c81-4bdc-9e76-c3cb372ed5e9",
        "cursor": {
          "ref": "407c1bf9-ed12-46c2-86ca-e322be281387",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6cb9247-3739-408a-9547-28bf5033f924"
        },
        "item": {
          "id": "6d118a0d-8c81-4bdc-9e76-c3cb372ed5e9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7e9c9a87-f105-4805-8d2a-85b406cabdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51dda9c-ec7a-4d2b-81d3-2301ea98096a",
        "cursor": {
          "ref": "e778eb49-4966-4df0-aba6-a927835368a8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "732da6ec-c3ba-4547-be89-fb4df0dec429"
        },
        "item": {
          "id": "d51dda9c-ec7a-4d2b-81d3-2301ea98096a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "47e28075-4401-49ab-9a1a-4587da1ae8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0e0c9e-c764-483d-916b-51968232dfb7",
        "cursor": {
          "ref": "8cac4d05-a0b8-4906-86f2-6cea46500be5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9faefa49-3697-4dfa-b5a2-5d9b575fe7e5"
        },
        "item": {
          "id": "2a0e0c9e-c764-483d-916b-51968232dfb7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "259ebba7-a02a-4b80-9dab-84cbb3c327a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691bf026-a19b-4515-abc5-88649def36af",
        "cursor": {
          "ref": "9b30ac49-60b1-4915-9f73-a7fee89c53e3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "934ea36a-ec62-4551-8bde-b5eaa9deb0c7"
        },
        "item": {
          "id": "691bf026-a19b-4515-abc5-88649def36af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "03531ddb-773f-421d-9725-54e148d2cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5927858f-88b9-422b-a2ba-3ae86a6f291d",
        "cursor": {
          "ref": "86b6d0c6-305b-41ca-9d91-83ca91f2b5be",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1608ea47-f141-4ff7-8bca-a7855b96ff9e"
        },
        "item": {
          "id": "5927858f-88b9-422b-a2ba-3ae86a6f291d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cb03284a-c55f-4fb9-9d84-c3bd037ecae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5792a3-31c4-4f34-b49c-f588386bd35b",
        "cursor": {
          "ref": "ef7198a7-3d4a-432b-b0f8-cb7c7ae11cef",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dd2a97c9-07d5-44be-b53d-a4fa2657c7c0"
        },
        "item": {
          "id": "fc5792a3-31c4-4f34-b49c-f588386bd35b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e7ba97f-e051-422c-88b0-db284987ee0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35f575-063b-4f68-ab09-2d5a5fbca866",
        "cursor": {
          "ref": "c52e342e-5024-4261-80cd-499687ccaaeb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a9938bc-eb8d-4ab3-9089-9acbb9a171e6"
        },
        "item": {
          "id": "5c35f575-063b-4f68-ab09-2d5a5fbca866",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "79a1ba84-ec04-47d8-935b-3ca69fcaec00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a749c6-9a91-4a50-a320-8bb49b77d382",
        "cursor": {
          "ref": "dce74dee-15d1-426e-a7ac-d4263b5ca720",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "387920b5-afd8-47c6-a05c-ca39f207e466"
        },
        "item": {
          "id": "25a749c6-9a91-4a50-a320-8bb49b77d382",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f3d7e776-de86-44d4-987f-82d4b0400a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f423e-10a1-4719-b9ee-5f95d09ab8da",
        "cursor": {
          "ref": "71f97a64-c83d-4ffd-bf09-37bf7580288b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d5246fc3-7bf9-4cf2-9088-5107d24ace78"
        },
        "item": {
          "id": "b99f423e-10a1-4719-b9ee-5f95d09ab8da",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c909a634-5370-4900-94be-787198cbe327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae20b1f-80cb-43a5-8c01-1aa9a4836bce",
        "cursor": {
          "ref": "c7aec65f-b4e1-4fa5-89cd-6f42d5ec2989",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6059c12-50c8-4e88-96eb-05436c628e79"
        },
        "item": {
          "id": "1ae20b1f-80cb-43a5-8c01-1aa9a4836bce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "61c41231-2f0b-412a-a1b7-231449091dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03094ac1-fbbf-4272-b260-b52c4eb81a59",
        "cursor": {
          "ref": "a50bbed5-0776-48f9-9987-5c0ce2bc1b2a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bcdc1e6d-5e3d-46a0-8214-2b0a3ed16a55"
        },
        "item": {
          "id": "03094ac1-fbbf-4272-b260-b52c4eb81a59",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a16fd356-818d-400e-abf6-37c8f83d135f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a246b93e-3a11-42a4-8f45-1091b7b59028",
        "cursor": {
          "ref": "a0b88d3b-ab26-4cdc-911a-b8fb92f94a84",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f154ca48-1dd2-4ed0-94d1-30828d65b909"
        },
        "item": {
          "id": "a246b93e-3a11-42a4-8f45-1091b7b59028",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc84ef9e-25ae-437a-9e52-b0f388b3498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fff7134-0a70-4e22-92e2-d4b420979782",
        "cursor": {
          "ref": "52a86113-35ac-45f2-a894-65d9e5c83a9b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17fb23bc-0fb9-41cd-a48f-ba793652e99b"
        },
        "item": {
          "id": "7fff7134-0a70-4e22-92e2-d4b420979782",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58c1f1c2-320d-45df-82ff-4ecc73a4c3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a03736c-98c1-4294-b979-882c2b201fb4",
        "cursor": {
          "ref": "216c9303-11fd-4e5d-a9f2-fa8b849ce275",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "20ff5187-50d4-4cd6-85bc-a66acc01ef5e"
        },
        "item": {
          "id": "5a03736c-98c1-4294-b979-882c2b201fb4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79fb50ff-47cc-4f4d-90a1-ca95b72c8b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d7288d-1b42-46cd-ba19-3e3d0afece02",
        "cursor": {
          "ref": "32773325-92e7-4563-b8d3-6e1b5014e3db",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b9ca74ca-f6a7-48ab-b416-58d5eb00a81c"
        },
        "item": {
          "id": "83d7288d-1b42-46cd-ba19-3e3d0afece02",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d25dd7f-9e07-4169-88cc-15eec75e3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca1fecf-de9a-4878-92ee-76f651ec341a",
        "cursor": {
          "ref": "52690423-688e-45bf-87a4-c31be1ce4885",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3a54380-d8e2-4461-a932-070039acf579"
        },
        "item": {
          "id": "aca1fecf-de9a-4878-92ee-76f651ec341a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b5edf12-d48a-4d9a-9674-5d139eee59f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e0ac0b-4813-4ce1-8262-bcc5669dfebd",
        "cursor": {
          "ref": "d0560785-fcd5-43cc-b186-bf103220048c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc9aa36a-ead9-4745-9669-cdd84d59507a"
        },
        "item": {
          "id": "e4e0ac0b-4813-4ce1-8262-bcc5669dfebd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b48477b3-110e-4133-93de-42da57ed1048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76f38b7-eb9a-4203-8f0a-697c4f749e94",
        "cursor": {
          "ref": "44af46b7-90e8-41b0-a7a6-8562bd4413c5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2cce3aed-bcdc-4e7b-892e-1438400a1c73"
        },
        "item": {
          "id": "b76f38b7-eb9a-4203-8f0a-697c4f749e94",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2bd70cb0-3a3c-461a-a754-2708a59ba9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284299d7-751c-4cce-823d-f6309d30dbd2",
        "cursor": {
          "ref": "e33a985d-5ea5-4163-a6fa-59e4ff718270",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27f612f4-7add-4059-86f5-5ee86e6fee1c"
        },
        "item": {
          "id": "284299d7-751c-4cce-823d-f6309d30dbd2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e9fa6072-b097-4f12-8d7a-e7796d5eb3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8f463e-0b20-47e4-89de-244b5c59024e",
        "cursor": {
          "ref": "fdbb563e-1cdf-4803-ab15-8e81ae52449b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4aebf72a-9b19-4256-aa08-01851cc09ad8"
        },
        "item": {
          "id": "5f8f463e-0b20-47e4-89de-244b5c59024e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "933e3abf-7ce6-40dc-bdb1-b1188d4befd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab12ad1-9c68-4886-9589-f2b1d28aa50d",
        "cursor": {
          "ref": "ab74135d-50e9-4fc3-8525-b9bee5fd1ce7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5771eaa-9219-4bce-8937-86dc7b62c010"
        },
        "item": {
          "id": "eab12ad1-9c68-4886-9589-f2b1d28aa50d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3bc7ca1f-9976-4c1e-b958-7dbe27d84785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8842e0b8-13da-4e46-86ff-11e5a1cdfc99",
        "cursor": {
          "ref": "69216a2c-209a-4e3d-bea1-7275c9a72e6c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0f0ec2d0-bba1-4086-839d-2056030a21fb"
        },
        "item": {
          "id": "8842e0b8-13da-4e46-86ff-11e5a1cdfc99",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9cf85416-5d5e-4b41-8e99-ffd45024d3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc27e8c-2eb5-4560-8b7a-0bde33865fed",
        "cursor": {
          "ref": "6aa5bd6d-96bd-4af9-8748-2fc9b546684f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9834273-94ee-4c9f-8767-b1d9dd79e4bd"
        },
        "item": {
          "id": "7cc27e8c-2eb5-4560-8b7a-0bde33865fed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "42994d33-e919-49ed-95b2-0bc4639a1c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25d4b82-e82d-49f1-a94f-40421db846a0",
        "cursor": {
          "ref": "7bb4bcd6-c987-4c0a-aa1d-d714eb0695b8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "898d097f-4816-4050-b5f9-e1558ff08cd4"
        },
        "item": {
          "id": "c25d4b82-e82d-49f1-a94f-40421db846a0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f465107b-6d93-4a16-a1dc-d42e2f38ff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ef8926-2813-4945-87be-59f7f2b78c42",
        "cursor": {
          "ref": "f2e667a6-2b2b-418a-805c-7baf0fd241b8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a94ffbe-afc7-4c7a-bf6f-2b5e03a8cbb7"
        },
        "item": {
          "id": "10ef8926-2813-4945-87be-59f7f2b78c42",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c01911b6-772e-46ab-986e-f656f9cdee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4961e89f-68ca-4fc4-a0a3-d4618c8e8ce7",
        "cursor": {
          "ref": "01859b1f-b9a8-4b8c-805f-f1606e32fd2c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9de26faa-9ec2-4b1f-a758-a745910872e7"
        },
        "item": {
          "id": "4961e89f-68ca-4fc4-a0a3-d4618c8e8ce7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1779d4a1-db32-41e8-947d-edd47f9096fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870d8ac0-0570-4b3a-a926-7889746e4a44",
        "cursor": {
          "ref": "d026c9e8-2eea-4cc2-bbdb-c807002cf829",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c344a8a8-1ef8-4a27-8cef-d9d5101caef2"
        },
        "item": {
          "id": "870d8ac0-0570-4b3a-a926-7889746e4a44",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9c196af9-cae0-4b79-be30-79c41e4b50b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e97e9f-74a3-4aed-beb8-6842634251fa",
        "cursor": {
          "ref": "5201705e-54d5-43a5-b721-c5f7582f0041",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cd945cac-9ccc-4e86-9192-133928fbfdcb"
        },
        "item": {
          "id": "53e97e9f-74a3-4aed-beb8-6842634251fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ef98d8a2-b726-4889-8927-75eec3771d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42238c8a-8d1f-42e9-9708-2dbfd68977ad",
        "cursor": {
          "ref": "9d193125-2135-44e0-8bbb-4472dce6423f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ccd318ca-3202-4be1-a02c-e179b7893981"
        },
        "item": {
          "id": "42238c8a-8d1f-42e9-9708-2dbfd68977ad",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "64f7cf68-790c-405f-ac5d-7018ac769d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee9c657-c1ca-4b06-98bb-a3f7b717c89f",
        "cursor": {
          "ref": "62b30444-569a-4139-abcc-0d39b3ba125c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9cb69593-c245-4d26-aa6f-897980ec2969"
        },
        "item": {
          "id": "4ee9c657-c1ca-4b06-98bb-a3f7b717c89f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68741823-c210-4e2b-9b79-4d379d5ea272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b006c4-e5db-4312-876e-b62493421552",
        "cursor": {
          "ref": "76e07454-958a-4c78-864a-3f49453b6d24",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cc6340c0-9166-422e-87c7-a24e90c0eeda"
        },
        "item": {
          "id": "d6b006c4-e5db-4312-876e-b62493421552",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "45f7ddb0-fb41-4914-b63a-24ae3ad7d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f818a0b-4e49-4713-8e8e-f28e949ccf1d",
        "cursor": {
          "ref": "66ff8083-d0ef-4db3-a4bb-f724e0b549ad",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "77d65ddb-5033-4534-a064-5c14e951c594"
        },
        "item": {
          "id": "8f818a0b-4e49-4713-8e8e-f28e949ccf1d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5ae8e48e-8966-4578-baaa-707778f79f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efafb5e-02c6-4602-86b5-71537a97d1e0",
        "cursor": {
          "ref": "1933aa88-acd8-4c64-8063-51bbead57992",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f0209398-7b1a-4b20-9b46-06350ee0f5fb"
        },
        "item": {
          "id": "9efafb5e-02c6-4602-86b5-71537a97d1e0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "38bd7727-f4ba-4875-a138-73814db99377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4067c1-2268-48b3-b08f-2c257fc833b4",
        "cursor": {
          "ref": "2aeaa560-15d8-4a08-9176-515822e03e6c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6e2a4582-e843-4dde-8252-aace66b13b5b"
        },
        "item": {
          "id": "7e4067c1-2268-48b3-b08f-2c257fc833b4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe0be676-5383-4913-87ba-e0cd33e1703c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0408c47e-8bc5-4d5a-b4c4-f89da150296b",
        "cursor": {
          "ref": "36561d47-c8e8-4c69-8fbd-4e05303f07a2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8fd13438-600f-403e-8f5e-9e630a815f9b"
        },
        "item": {
          "id": "0408c47e-8bc5-4d5a-b4c4-f89da150296b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f71526f9-5635-4db3-813f-6e18424da51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f2994c-5a5a-4a31-8734-19fc0a30c5a4",
        "cursor": {
          "ref": "82be4bdf-d4b3-4bff-aeec-c474133c0da8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d3616faa-74cc-4f00-9048-a2234199a71d"
        },
        "item": {
          "id": "d3f2994c-5a5a-4a31-8734-19fc0a30c5a4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b38bf387-105e-49d3-a91c-4e0e3899ca3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb535aed-2bc1-4124-bc6e-696fde25cb5d",
        "cursor": {
          "ref": "0a4ab93a-0e54-4f03-ab96-04646fa425e4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ccaed2e8-395c-4555-81ce-1e832f69fecb"
        },
        "item": {
          "id": "eb535aed-2bc1-4124-bc6e-696fde25cb5d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06d6f243-6862-4ada-9556-78ecaebb87cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6500a0-36d3-4289-9c35-ad3cdd6a856c",
        "cursor": {
          "ref": "5c6c2f05-3ba4-42b6-807d-b00c9565f612",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4200c45a-d24c-4928-8cc6-8b26732d45ef"
        },
        "item": {
          "id": "be6500a0-36d3-4289-9c35-ad3cdd6a856c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "57016d00-d6d2-4422-9d6f-c33d02ae4aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac02af13-3c9a-40df-85f1-ecd478fe1781",
        "cursor": {
          "ref": "041dc36d-afda-4e41-846b-caccf2394a33",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5032c2de-63fb-4ee9-9fd1-d30805c90607"
        },
        "item": {
          "id": "ac02af13-3c9a-40df-85f1-ecd478fe1781",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e83bb578-eec0-49cd-9a29-39fc8a217118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad954905-0802-4e2f-86ca-0c7344fd1e41",
        "cursor": {
          "ref": "61106952-1fb4-4323-b30c-bbf1cac957f4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0fdc5ea6-df92-4809-b42c-e7a35166f9fb"
        },
        "item": {
          "id": "ad954905-0802-4e2f-86ca-0c7344fd1e41",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "20c77f32-6c05-4aa5-b17c-1880c7bc45cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7f9954-9cde-4b07-987a-5aca1f90cd11",
        "cursor": {
          "ref": "79cdeb01-b006-4d6b-9822-72f87aa5838d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a96d281e-b40c-42ea-a7f2-43b41aeda6ce"
        },
        "item": {
          "id": "2e7f9954-9cde-4b07-987a-5aca1f90cd11",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5109a1cd-3d4d-4ed7-af4e-6577e7ad97cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd00bfc1-cc7b-4330-b2c1-9a3f0bdba368",
        "cursor": {
          "ref": "24e057cd-d312-486b-aa0e-705f4dd0b295",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e3bcc81b-7ebc-4228-a39a-5e8db2e0ce96"
        },
        "item": {
          "id": "dd00bfc1-cc7b-4330-b2c1-9a3f0bdba368",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1ceeefa-2036-4cc8-a55f-ef05f60faa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7281027c-f71c-4bf4-bd2d-e1bee1c58e2b",
        "cursor": {
          "ref": "f673e5d3-9720-4c9c-b2a5-7d7ff08da3d3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e5206cfb-43d5-4127-9de1-ded67a918205"
        },
        "item": {
          "id": "7281027c-f71c-4bf4-bd2d-e1bee1c58e2b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "700bac90-1dd9-4ad5-9550-9cc7c0ee5871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56670213-29c7-44bd-a26b-cd7e4043392d",
        "cursor": {
          "ref": "9c08dcc7-9c7f-4f8e-925a-39db013a4584",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "25238a3d-acbb-4e53-9ae8-3f9d535e0e98"
        },
        "item": {
          "id": "56670213-29c7-44bd-a26b-cd7e4043392d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8e5c7a12-5db0-4e07-b342-27d925f44db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606bdb31-f11d-4835-b910-8366633bd38f",
        "cursor": {
          "ref": "a67c805c-28fd-40fe-9930-4e041523e37a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8ce6fe70-0162-4a57-b1b5-671bb4c4c864"
        },
        "item": {
          "id": "606bdb31-f11d-4835-b910-8366633bd38f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8c22095-3c2a-408b-9e8a-3379f1649369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b00b34-cfdf-47d0-a65f-9375b7304bae",
        "cursor": {
          "ref": "556c9f79-b3f4-48e4-a719-a773c4239ca8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "086ed417-69ff-4412-85d8-1ac71bb53a08"
        },
        "item": {
          "id": "28b00b34-cfdf-47d0-a65f-9375b7304bae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ebb0901f-f44e-4b51-a163-93a6f395da74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a302b1-c2c1-4819-8354-8e48f0ca39d6",
        "cursor": {
          "ref": "fadd669a-19f7-4441-a8e6-b7532b9f0c66",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e95e0d7a-3be6-41bd-88a8-979a7e6f7b8c"
        },
        "item": {
          "id": "23a302b1-c2c1-4819-8354-8e48f0ca39d6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "49a95706-2a69-474b-9914-fb208ef0e285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2c3852-4c35-447c-9a15-5be96e1b390c",
        "cursor": {
          "ref": "678e369f-c500-4aff-aca0-0e4c1a994d21",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41450817-f316-4151-93f1-ad467b34c965"
        },
        "item": {
          "id": "5d2c3852-4c35-447c-9a15-5be96e1b390c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b011ead2-38ef-4b70-9fcd-09627911c140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9270f0db-7841-41f0-9e90-05c64a7fc922",
        "cursor": {
          "ref": "1a191ffd-f265-4ed2-91e5-67a7ab951342",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9173eabc-dbf3-41dc-ae2c-8e533a22aabf"
        },
        "item": {
          "id": "9270f0db-7841-41f0-9e90-05c64a7fc922",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ea087756-5a19-4067-96e3-7580729fd0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501d4c5d-7449-431c-969a-4a1a0ccf0712",
        "cursor": {
          "ref": "30e6b954-ddd5-42a2-bdd0-3c7caba24fdb",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "12ba6194-f90d-4b86-90bd-8cfb4997cadc"
        },
        "item": {
          "id": "501d4c5d-7449-431c-969a-4a1a0ccf0712",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "acd462bc-e2c3-48fc-a1e7-5e2f08ddbed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d23b76b-7c44-4151-934a-af902a03386f",
        "cursor": {
          "ref": "fa3db568-082d-41a6-a5ef-4f9e3b37f3f3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "047ce336-7988-43ed-b89d-ae8836ee95e7"
        },
        "item": {
          "id": "9d23b76b-7c44-4151-934a-af902a03386f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b731e7d4-da17-4d36-88ca-bc7d9c370527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e4383-5a41-4068-8828-8a4559c0820c",
        "cursor": {
          "ref": "b975837f-e44c-4f97-aa12-d8e153a6ac03",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3fd4513c-7941-43cb-8a85-553ac5035681"
        },
        "item": {
          "id": "300e4383-5a41-4068-8828-8a4559c0820c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1aecf5e0-3a3e-42f6-bc26-27dfda7218a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b18ff4e-601e-4395-835e-6ab078ceeb28",
        "cursor": {
          "ref": "22fc0de7-434a-4bb8-bb75-dd3ba70b3c42",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "527f825c-6aba-4714-9e9d-570e46a27a7c"
        },
        "item": {
          "id": "4b18ff4e-601e-4395-835e-6ab078ceeb28",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "570c5d59-e2e3-4268-879a-b71cddcd0324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea251d3-4d43-41be-b03c-1905e2042ae0",
        "cursor": {
          "ref": "75b3a103-bdc0-438c-a216-667e8cc3c9af",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9e965de5-be71-467d-a2d4-9e8b3eeb1c4e"
        },
        "item": {
          "id": "2ea251d3-4d43-41be-b03c-1905e2042ae0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6722a46e-ba6c-4a43-aa90-b63aa2736d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb6c581-ddf6-4ab1-a321-e7cd1a81b7a0",
        "cursor": {
          "ref": "99e181da-98df-4d6c-a6d2-a2e4723ec230",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e94bcd9d-9b7c-48e7-891d-633ba483172e"
        },
        "item": {
          "id": "adb6c581-ddf6-4ab1-a321-e7cd1a81b7a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1fd294cb-3bab-462f-9e17-06379984bb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cce99a-ab71-40af-b3fa-d975351b6a56",
        "cursor": {
          "ref": "72d36b6f-4557-4003-8d2a-0e6365408cc8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3710221f-54f2-41d8-ad7e-ea07b74751e7"
        },
        "item": {
          "id": "a8cce99a-ab71-40af-b3fa-d975351b6a56",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e81a4b8-424e-43a5-87ef-66c38e77fb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75e0982-f3db-43e5-b862-69695382afda",
        "cursor": {
          "ref": "15a5da5c-e35c-4eec-a508-dde687c10639",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da5d9bb3-57d3-40a0-a9b4-1d89263c64f4"
        },
        "item": {
          "id": "e75e0982-f3db-43e5-b862-69695382afda",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6d94fc7c-1696-473d-8700-a2de72fd9ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f84cd9b-dd27-4f67-9d04-4e97e5e70ddb",
        "cursor": {
          "ref": "4c41b996-002e-4772-896e-e9c2853aafa3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e64095c3-ba7c-44a7-bfac-e60a4f32bb3d"
        },
        "item": {
          "id": "8f84cd9b-dd27-4f67-9d04-4e97e5e70ddb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cbf18cec-5906-40cf-8c09-1685751d40fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555594a8-c575-4851-bc27-eff7e5a6cf02",
        "cursor": {
          "ref": "fae51e8a-2e1a-4b12-96b6-6b53b411c180",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "50e2c67e-74d2-4ab1-bbc6-cded06ab26ef"
        },
        "item": {
          "id": "555594a8-c575-4851-bc27-eff7e5a6cf02",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7581835a-1d50-4447-9d8e-fb9ee7d4fb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e9225a-c28e-40ba-a7c8-0b95d170f5e7",
        "cursor": {
          "ref": "6ffbb2f4-80b6-459b-8557-d3fa6bc2014f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "81fda477-5a00-4809-8c4a-99c350c9770b"
        },
        "item": {
          "id": "45e9225a-c28e-40ba-a7c8-0b95d170f5e7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2665ae19-9757-4fd7-bcac-bde010fc2b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0647a0fc-6016-4d7f-81e2-964cd456672c",
        "cursor": {
          "ref": "e4832a98-9261-4144-ae45-bfd0dd8479a9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ccce908-c194-44a8-ae94-ce8969a54f1a"
        },
        "item": {
          "id": "0647a0fc-6016-4d7f-81e2-964cd456672c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98cd0ecc-eae2-421e-8e4c-a068ca75f3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f9a588-ed20-4a2e-8c30-226997764645",
        "cursor": {
          "ref": "ca3039f4-05f9-4bc2-bc34-ca6f3f5a753c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "358a9ae8-662f-49c2-aeac-dfb83b4d6f23"
        },
        "item": {
          "id": "05f9a588-ed20-4a2e-8c30-226997764645",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "15edf098-33a7-4d5a-a9cb-ff92aa99f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b64ac-5044-4f6e-8afd-fd6961e17736",
        "cursor": {
          "ref": "c07807ed-2e18-4db0-a2c9-d83b8c789a0f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4d053c2-387c-4a0c-8a0f-9e8cee9d2d05"
        },
        "item": {
          "id": "5a4b64ac-5044-4f6e-8afd-fd6961e17736",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "67b1e3cb-09ba-4bd5-b67c-98d23187cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f598260-0617-4f11-b44d-d74fd8a32e25",
        "cursor": {
          "ref": "0a9ae1f5-ab61-46af-abac-0058077e972b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2018654-304a-4ed4-aa3d-14b9ab1bc06e"
        },
        "item": {
          "id": "2f598260-0617-4f11-b44d-d74fd8a32e25",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c03b396-634a-4fb0-b650-5db71afb5523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a16517-3d69-4a40-9c40-311f8ea6aa19",
        "cursor": {
          "ref": "99d99a73-496b-47e7-9260-4a4be705257e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "561124b1-39a5-4337-8209-c07be22efd3f"
        },
        "item": {
          "id": "08a16517-3d69-4a40-9c40-311f8ea6aa19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "24199aad-9f4a-48e1-b11d-45f7f6675337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f678a-075a-4056-b2a4-42ee414f103b",
        "cursor": {
          "ref": "5793e7bc-270a-4108-8e04-c40223351138",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "33a98efa-86d8-4103-a4fb-098ea17fd056"
        },
        "item": {
          "id": "475f678a-075a-4056-b2a4-42ee414f103b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d0159794-ac95-49fc-9999-4fd5ce1dbee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82530fa9-278f-4704-816a-d6a4d232bc63",
        "cursor": {
          "ref": "f435d614-2245-4910-a6a0-f375230b1933",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4991eda5-b5c7-49f8-a587-31b63cdff56c"
        },
        "item": {
          "id": "82530fa9-278f-4704-816a-d6a4d232bc63",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a21cffb5-dcfa-4ebb-adc4-5c4851b614e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0045fc5f-c81f-465a-962f-466aab09ef0d",
        "cursor": {
          "ref": "db0e7550-aafe-4e7e-b786-8afa3e6065ce",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ea840f0-aa62-4771-b3fd-e67d5d508b3f"
        },
        "item": {
          "id": "0045fc5f-c81f-465a-962f-466aab09ef0d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ddbde43c-9a04-4e59-98c1-929082616c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fcc803-9c3f-4050-a4c5-c05cbac0928e",
        "cursor": {
          "ref": "c29922fd-541e-4a12-a866-8d7569e66a4a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3150eab2-2cd5-40cb-88da-ab85bf629065"
        },
        "item": {
          "id": "f9fcc803-9c3f-4050-a4c5-c05cbac0928e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bf8c047b-6050-4df1-9fc3-301074cc54d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31024f3d-6a3c-4930-8015-3f28274e7e55",
        "cursor": {
          "ref": "bdd3cd01-36e3-4e78-ac1c-5ff671ffc517",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "514ff586-9007-4a54-b398-6be4150e3d96"
        },
        "item": {
          "id": "31024f3d-6a3c-4930-8015-3f28274e7e55",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c1a7889a-9570-4f24-960a-cb530ef282c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a0ffeb-386c-4e6c-9bc5-08b8fcb7c6f5",
        "cursor": {
          "ref": "bcc9cf5f-5338-480d-b2bc-b54545a2368b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8635a448-63c9-4a6e-90a3-c612359e9d24"
        },
        "item": {
          "id": "53a0ffeb-386c-4e6c-9bc5-08b8fcb7c6f5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a1a946b-21ef-4ba7-812b-056921028832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd099b0-f92d-4e12-b3d7-bf6a8631eaaf",
        "cursor": {
          "ref": "94991181-d7a9-4aef-94db-31ba17836c2c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19c7492e-7d77-4f9c-a9c7-d2ef14127f18"
        },
        "item": {
          "id": "ccd099b0-f92d-4e12-b3d7-bf6a8631eaaf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4163c939-f50f-4296-b1d6-c9f7c8435da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f2b937-9a82-4e33-92fd-a168814ba38c",
        "cursor": {
          "ref": "e05f618f-f0a9-4c35-878d-c73b954e9365",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0b618c0c-ef1c-444c-8bf1-352a9751759d"
        },
        "item": {
          "id": "31f2b937-9a82-4e33-92fd-a168814ba38c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eee4b849-375e-46d6-92ec-d493cf8b9c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dba753d-ce77-44cd-9f8a-26946dd9bf1d",
        "cursor": {
          "ref": "3ba5a7d3-a6d3-44f5-a5c2-a53de701ed33",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aa7d6d24-5358-4121-a257-baedcec6605e"
        },
        "item": {
          "id": "4dba753d-ce77-44cd-9f8a-26946dd9bf1d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b85b60a-dbd7-4fac-bd0c-d9ccd63838f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df13e1-8096-4342-82b4-a4003fb148fa",
        "cursor": {
          "ref": "768e354e-4322-4f94-953b-47a409697f3f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f9990a3e-285f-4aa7-9148-686a338726b1"
        },
        "item": {
          "id": "20df13e1-8096-4342-82b4-a4003fb148fa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9f980e48-2669-4798-a606-d39acd61f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1863c6-9e40-486f-a572-856e376f5054",
        "cursor": {
          "ref": "b9d5511b-c838-4b34-b71b-5175d305b4fc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f50a360d-db03-42e2-9730-69c9f8c87ccf"
        },
        "item": {
          "id": "5a1863c6-9e40-486f-a572-856e376f5054",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27faae17-90cb-484a-8fe3-71cd94ecbc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e63e40-ea19-468f-86ae-5e74f8785cae",
        "cursor": {
          "ref": "1fff98ba-568b-40ff-855a-8a0a08a2c1a2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6466a39d-4c3f-46e7-bac7-06ce3052f78a"
        },
        "item": {
          "id": "a4e63e40-ea19-468f-86ae-5e74f8785cae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6eb87e53-6bf7-405e-ad74-cfb7d8c17dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c7258-ceac-48d3-a20e-8793215bfb27",
        "cursor": {
          "ref": "781c2c15-786f-4dd1-8137-1afb8fafc33d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "90da2bc1-3fac-496e-854c-beedeb615005"
        },
        "item": {
          "id": "964c7258-ceac-48d3-a20e-8793215bfb27",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "13519535-382e-458a-8ba3-c832c0468b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c0f23e-9176-4d31-bafc-68f87beda2fa",
        "cursor": {
          "ref": "11d11301-a4fd-44dc-b6e9-77ab63182b1e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b0bbe532-a316-4b12-ac6e-03e2501d50b7"
        },
        "item": {
          "id": "f9c0f23e-9176-4d31-bafc-68f87beda2fa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aec17064-6633-45c3-a9b8-389e0b4032a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af3e6ae-b60c-479a-817e-d9b66ccd2bf6",
        "cursor": {
          "ref": "e398a637-aa39-4038-b46b-19b130402c4b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a1e8802b-b61b-4e63-80de-23e2a13d7ae2"
        },
        "item": {
          "id": "6af3e6ae-b60c-479a-817e-d9b66ccd2bf6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5ea64ea5-4852-41cc-97ba-d6db3ec67bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18736279-c66b-4ea1-ac21-f48f34e83bdd",
        "cursor": {
          "ref": "95797b99-3e07-4fb8-a414-ffbe47f7eb21",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f1131ace-5c46-401a-921e-a69a2456ddca"
        },
        "item": {
          "id": "18736279-c66b-4ea1-ac21-f48f34e83bdd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "18f4b7f3-fb5c-4504-8080-7186d3bb6591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ada55d-9e34-4fc0-b822-97a25f8c5837",
        "cursor": {
          "ref": "e6baef07-6c7d-4de6-b51a-dec091b8480a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9f40ac3c-1fe8-4339-bfe3-e183cfee3843"
        },
        "item": {
          "id": "11ada55d-9e34-4fc0-b822-97a25f8c5837",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ec50b86d-4077-4e2b-a4ed-f3401c72eb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0844b2f-b1a9-4881-bbca-6d464fa67f12",
        "cursor": {
          "ref": "0800c814-22eb-4115-b6dc-d0a2132a86a7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1a632954-475e-43b1-aca8-e7c8cb318af9"
        },
        "item": {
          "id": "d0844b2f-b1a9-4881-bbca-6d464fa67f12",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "20f852e5-8afe-46b5-a6bb-9971c45a7787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f2b042-4642-4a31-bce9-c8f27a046b5c",
        "cursor": {
          "ref": "e6835407-fea6-474e-ac57-2d7a110f1e34",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d44b4e78-7633-4615-b5a4-460ae56f8da9"
        },
        "item": {
          "id": "20f2b042-4642-4a31-bce9-c8f27a046b5c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "320229f1-d5cc-43f3-80ef-99e62993a466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365de761-dbad-4123-aab0-8423e357f947",
        "cursor": {
          "ref": "c6217d12-c033-4de2-aeef-7153c6cf4480",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b6716e14-5bd9-499f-b30a-0a039268d941"
        },
        "item": {
          "id": "365de761-dbad-4123-aab0-8423e357f947",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "874784fd-8103-445f-9aff-b6b00624bfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd31ff-d5e8-4275-98c5-08c814398bf4",
        "cursor": {
          "ref": "3cec7b16-1a80-45cf-9599-5ce3cf301bcb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8d7495e7-7dd1-41e0-8d9c-f77b8078d9e7"
        },
        "item": {
          "id": "7ccd31ff-d5e8-4275-98c5-08c814398bf4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1f686654-39be-47a3-bac9-9f98950a5c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45d6718-b74d-47c0-afba-dc0304b90ce5",
        "cursor": {
          "ref": "0fcdfafa-4071-449c-893d-2d36b621ab45",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "60b79fd4-8f4a-4f81-ae43-316e7bd4982d"
        },
        "item": {
          "id": "f45d6718-b74d-47c0-afba-dc0304b90ce5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1afda842-e5d7-49a5-8fef-0bc43d3759e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942ef894-1cf8-438a-92cd-42d63aa7937e",
        "cursor": {
          "ref": "ce7fb777-a5c2-4a2d-aab0-4e115dfbbe3b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "26418bff-2cce-4658-a8d2-e0a0b2099eba"
        },
        "item": {
          "id": "942ef894-1cf8-438a-92cd-42d63aa7937e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "044356d9-6138-42b1-a9f7-700bb7daa791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768bb91c-6c68-495d-b560-c8c17bda44ba",
        "cursor": {
          "ref": "f33fb84d-fb2d-43c9-adfd-394b4698d548",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bc8f73ba-7af7-4dcd-96b1-afbff652dba7"
        },
        "item": {
          "id": "768bb91c-6c68-495d-b560-c8c17bda44ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "502ce0ab-c41f-4cc8-8e49-0ce25411972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15756c3-cf96-49f7-a6c8-e0c320a6b80b",
        "cursor": {
          "ref": "e46ccba4-7b1e-464b-8e8a-bdff40a62cf1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5a9c6782-0472-4533-a330-d7effe41b8b7"
        },
        "item": {
          "id": "e15756c3-cf96-49f7-a6c8-e0c320a6b80b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a9a58f15-15e5-46ec-8e19-f6eb0acc301e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b93c78b-bdd8-4cd4-b454-aaca52906c4b",
        "cursor": {
          "ref": "846b9f8e-cc18-460c-af19-21d01ac62897",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "288231ac-681e-403f-8144-466cd0851fb6"
        },
        "item": {
          "id": "8b93c78b-bdd8-4cd4-b454-aaca52906c4b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "42aa9310-94ee-4c9d-80bb-6e921fb6aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284db3cf-4723-4c60-a130-82170e05862c",
        "cursor": {
          "ref": "50a53e72-eb02-4b0b-a96c-9f4bf0c9b9c7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "64a0bcb8-4514-4edf-a348-f9ebda94009f"
        },
        "item": {
          "id": "284db3cf-4723-4c60-a130-82170e05862c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "57b07d2c-5d06-45bd-a34a-e05dd86ef0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d1a2d9-d97d-46b4-8959-c16be0a5873b",
        "cursor": {
          "ref": "e2016b0f-bbc8-4e8f-ac53-29fe07e9191f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2623af55-d2ec-486e-b4de-2ca298483485"
        },
        "item": {
          "id": "e7d1a2d9-d97d-46b4-8959-c16be0a5873b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5e1c80e4-f884-46d0-9678-7c6e05fe7e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1615b-2837-4686-aeb2-26bb792766f0",
        "cursor": {
          "ref": "38e91d5b-538c-46ae-aa37-1cebe8772093",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "04a8f5f7-ca99-4af8-a10f-15fb9488f1fe"
        },
        "item": {
          "id": "f9e1615b-2837-4686-aeb2-26bb792766f0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1f0d73a5-f604-4bcc-b648-4035174204c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c95e7b6-78b8-4239-a660-ffbecabaa7d4",
        "cursor": {
          "ref": "e6e2afa9-3f94-455d-b169-68ac351d46a9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "825e8055-2a75-4997-b7a4-c17123187ea1"
        },
        "item": {
          "id": "4c95e7b6-78b8-4239-a660-ffbecabaa7d4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0bf1ee87-41d5-41f4-b39d-5597e43a3bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53df9792-286c-415a-a005-7cd78ddcafe9",
        "cursor": {
          "ref": "487cbfe0-7196-498f-9b7b-0428c897e5ca",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0e667431-347d-442a-8a33-65ff69ed45ce"
        },
        "item": {
          "id": "53df9792-286c-415a-a005-7cd78ddcafe9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec2786fb-b323-4c8c-96dd-ce02e7bc31c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc0333e-9dbd-4f69-93d4-aeb5c4cc713c",
        "cursor": {
          "ref": "48219489-0f7a-4aef-83cd-e3e2e83863ce",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b62f1695-187c-405f-b5f8-1b96e7d47ecb"
        },
        "item": {
          "id": "afc0333e-9dbd-4f69-93d4-aeb5c4cc713c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc50ece2-b912-4bf2-b73e-1f213734277e",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb1ac08-5cda-4780-be91-433d733d910c",
        "cursor": {
          "ref": "27806de7-904c-4285-a641-479e3183539d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bf576b26-7ab2-4016-a122-231b73f53577"
        },
        "item": {
          "id": "6eb1ac08-5cda-4780-be91-433d733d910c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c0b85e43-9099-4526-b99c-973a505370ee",
          "status": "OK",
          "code": 200,
          "responseTime": 1760,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8cfa16-1edb-4eec-b5ac-bf75febaac41",
        "cursor": {
          "ref": "f42b0808-c4c9-4262-b604-9e7e9165519e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3dd768d0-547e-41ed-b6ba-028dfc56edbc"
        },
        "item": {
          "id": "fb8cfa16-1edb-4eec-b5ac-bf75febaac41",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "aa8bc76e-470b-4412-b33c-0c0840db959e",
          "status": "OK",
          "code": 200,
          "responseTime": 1458,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddb34d8-a837-4d8d-9d07-9e1aa28837a1",
        "cursor": {
          "ref": "5fb657f2-f12e-4a4e-a2b5-08bbdfd8ed5d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "12a82a04-9c07-40e8-bcc3-521affc79947"
        },
        "item": {
          "id": "6ddb34d8-a837-4d8d-9d07-9e1aa28837a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc0a546f-66c4-4a03-866e-012fac398253",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddb34d8-a837-4d8d-9d07-9e1aa28837a1",
        "cursor": {
          "ref": "5fb657f2-f12e-4a4e-a2b5-08bbdfd8ed5d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "12a82a04-9c07-40e8-bcc3-521affc79947"
        },
        "item": {
          "id": "6ddb34d8-a837-4d8d-9d07-9e1aa28837a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc0a546f-66c4-4a03-866e-012fac398253",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2385e96-a6be-4823-9e88-a0fefc915209",
        "cursor": {
          "ref": "aac23fd5-0f3c-426b-b434-c1ecd8298bae",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "32a59135-0748-43c0-a6d3-821dbdaac01d"
        },
        "item": {
          "id": "a2385e96-a6be-4823-9e88-a0fefc915209",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38d69005-f061-4eb9-849d-ce6c0fcd4cef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8177c75-ef89-486b-8fe2-0c2065fd0b08",
        "cursor": {
          "ref": "4f7dc105-bfa7-4138-83fa-e4030ff118dc",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a98dfa39-3151-4d56-be98-709845a931b3"
        },
        "item": {
          "id": "a8177c75-ef89-486b-8fe2-0c2065fd0b08",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "12f47715-b0e4-4945-a274-9b2905331666",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}