{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d7194b89-7842-4223-9c0b-3e518a272774",
        "name": "Clear Cache",
        "item": [
          {
            "id": "984dc617-d3ba-4478-b42e-8804cbf3ead7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccc37092-e01d-41fb-a0b2-b899ca276597",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20313618-7211-4e1f-8a1c-b266b1ed2467"
                }
              }
            ]
          },
          {
            "id": "f386227f-7c69-4144-a34f-8700976fb943",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef2aef45-28ef-466f-9783-e117acf99010",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f747e76-01d7-4d78-91fe-04577fa8b851"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "24ee983f-8729-4ef6-8040-c59b6f8a173d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0ba17076-dcf3-4414-9942-cd25c854c32b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3e9f48c-9d8d-4cc7-a862-b002c503976c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5146a79-f25a-4edd-bd1a-a0b92a879df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "487b2117-5568-499e-9192-5a1e45786a1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "645416ad-cd03-43d6-b223-4c16f50bc876",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9e64719-e549-4baa-9124-0ddf66b44771"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "817306e4-31de-4ff5-9b91-80b154f62aee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3982568-ea63-4fea-b478-ca6ab60b191c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4573550-989a-4ba8-93ee-1567bd81e7eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fa6c9a73-b445-4710-834f-651e653bedf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56f160da-4681-49f1-8250-0a16b48df659",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b9fe6c7-aa82-4e3a-b3d8-40e9615860cf"
            }
          }
        ]
      },
      {
        "id": "b4cf4b4c-b56f-49dd-a7f1-9792ac4cb32e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cef64c19-85fe-4a78-b872-4a795f8df562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e14bc497-20b6-4e56-b048-cdb496b6ba09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e4ef2fe-9b97-499e-9d0a-8dee71b42fc6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f9d765-2004-42f0-8f6c-62fceffd24dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "153b19ea-4f48-4130-beca-dbce24d405d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d14d81c-3342-4a2a-b930-2a7b1ad9def3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc385a0-e32b-4a1d-9466-e856d48ced32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f3af79f-a857-4c94-9534-a14578f39a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6851bf1-b33e-441e-a701-6a909117bab9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d02eb7-e90e-4b17-b374-560fd55c60a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4decbad0-ddd0-434c-a9a3-d360cc96d039"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e32335c2-b78e-4f75-99ee-661cfc5f9a1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81bde40c-4263-4eb6-b2da-bc119c409576",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00c8a8-83bd-4731-b40d-607ecd082785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7724434d-5bb8-4478-9818-5f80090eea03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d48ec23-b540-4cda-818d-03b939a74d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc48dc0f-8220-416a-99d5-b99dd5093e74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "acd36d7e-d5ef-4a1c-85dc-8894824787f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "040afcef-5546-42ab-aac5-62766475c721",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19898a1c-6653-43bc-a9e7-d619bc4da39c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cec778ec-dae7-4bda-ae6d-df21a67d3c57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "916380af-c351-4b5b-8db7-4337565f3f6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "85bc756a-c6d1-41c8-a926-ff84e0bdb076"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49b3796b-06eb-4f70-9e7b-d0110b3003e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15813d84-5e37-4a74-871c-dd4e76453301"
            }
          }
        ]
      },
      {
        "id": "06adede3-de07-42e9-841b-cdea916b596b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "720f3359-d4ef-42ed-8248-08a267c01ac4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51774739-8d23-47cb-9d34-facbe56fa852",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0157e360-8bd3-40d2-84ca-87f637e54408",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c2ae79-46c0-4634-8ba4-3b3a40995941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5265e98-3322-4ac9-bc06-da260d09a139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c806a5a-c6d5-474e-8aff-558a63fd9e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df373659-2aae-48da-b3d5-0a51f0ebaa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada28600-3201-42cf-b049-c2fa6b5c48d4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b62e316-4592-47ae-9fdf-e813f0c535f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230cb6bc-9094-43f5-a51d-1de0c2998239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb069c54-0506-4775-988d-15ebcb80adcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d87e9e1d-ddfa-48d1-ac1a-4d2a6fff5105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12df3fa-82e1-4dd2-a9ea-c94193bfb5cc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672a4c01-ec0b-48e6-aea1-da1305d70f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c801c64b-8909-441f-bd62-cf7180fac623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0c7209-576f-4a3c-ba84-404c0e4c26de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0749caef-bae6-4c22-ae6a-ac98c79cdce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1da23b-d836-47de-be7d-e74e6a6e2a56",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac80716-147d-4047-b8dc-2b7a6d1e44fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873c8e07-3985-40e8-a60a-7798f4e0cbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68febab-5f88-44d4-a28c-5addb6204b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0e4a912-4972-43fc-97fd-74df5f6da262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc77c36c-0edc-4cc6-bb74-1cc90de7117a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf81e32d-00fb-40a2-93c7-515fcb22de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aa1374-f310-45fc-a3c5-1e8f72fbccde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2da9d4-2314-44da-b13f-fda9058570b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56382109-371e-48c1-8295-ea96518cabca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ab3816-de56-4512-ac15-9b7df1a60b1e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3344e1ef-f29e-4395-a7a2-027ac82c1572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e14d4b9-fffa-4e49-967b-2f01f94da381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba9d8d4-72ea-41a0-943b-d0d4054b8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1504f989-8416-444e-885e-7ce3fe45c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0130be78-9ae5-4768-b377-02b833799194",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38d83bc-8d86-4bef-9ba7-727cf64aae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076571c6-4b63-4ce6-b377-d2ab5875de74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7712355b-b5bf-4cbe-8f45-37a5976c92b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0fce9e2-030c-44bf-b21e-5e6bcd0bd69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338a4b84-13c7-4089-aa39-53c5996f9855",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2442c0d-2895-4d1b-b64e-19b748402208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02a7aba-d3d5-4138-b6fa-b8ba4177d338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109ff688-1193-4516-815a-19378b4ecfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc8fbcc8-96a4-42a7-8a8c-285431f9c1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff7092f-2fc7-456f-890f-927b1df95e4e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65af578d-9729-40f4-af04-e45334fa1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e952a9af-26c3-498a-9f97-609bf3c14e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23163390-6a4c-49c7-864f-a9601680e36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9082634-bff5-4145-b005-60cd8cfc393f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b794da2d-228f-4343-9819-35547502483c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16581fd-9537-49b2-9583-2173a6ff5c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815416fe-5806-4520-a3b8-cb074aa6634c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3256ca-1a36-4a66-9ccb-25d2283b5fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f446c0ff-6ed1-4b54-84a6-c62364befde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f52ab-478f-4610-bd5a-7bf6afa5931a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e514a16f-ec39-4ed1-837f-742fda42e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49da952b-cc1a-4d73-9a53-8e40aeb979d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e7a0c8-8312-4531-913c-ae11994f34de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fac17b4-ea0d-4a16-b7f5-831241879e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bd0ff0-ad93-4a58-bd7b-8d9f767ec2c3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655425a-859d-4b75-87c9-3c08ab078e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e87e1f7-abcc-4ce3-be15-3664634c22f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e169e8-5679-41b8-80dc-de935e967aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe73fa7-984f-41ef-bacf-bd1cd6fe566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ce86f9-0a03-4437-9332-d8f80bdc35bd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5849107b-9ff3-4819-889f-e32955d45b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3b9e41-903f-40e6-8081-2efed6ce6ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d903770a-1464-4746-a3a1-879ac93bd477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bcf19ed-1d0f-401f-b302-7e7580d2ec70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb0e45b-0cb9-4664-934c-98fb88c5967e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374743e0-b12e-4e96-b6eb-266cad3c20a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfc5f37-7b87-4c3e-ba21-f4bdf7b5f59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43d1490-a5a0-44b8-a6db-d1f6ffce7c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a93351-f410-4b12-b928-c3b8eea225a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2740954-53d6-4fbe-a399-7e2201167075",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa11784-0d69-4697-b345-5f45e6c86719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd5f2a4-5b2f-4622-9b73-bbf0763eddad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9834c02-4058-4cb7-b91a-374d89ee00e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c73d08c-1d39-45d5-9a4a-40e1b4e063f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616d8902-8be3-4836-8192-43d902dc12fe",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f54be6-da1a-46f5-8fd2-a1489575f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21d3c37-272a-4deb-9559-dff728d01943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc57403b-b1da-441a-a1c3-bc99bfae896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e49d0d25-cfae-4107-a254-e1ebe6991a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbbd130-a877-4f31-802d-bb36fce9151a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98466b3b-8d53-4950-91d8-4dc8dccd09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465c6270-c382-4f6c-9fad-3d4b8eca10f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f531a-9faf-4c14-b675-3c7ba1b98444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41a0a9ad-4be9-44ff-8816-d67d20472d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfd8981-530f-4038-ae31-148d1a83729a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8ce016-0174-4dd9-9c1c-3a30912acdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f9fcf5-37c6-4304-ab52-474a68af7593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6ea76-3b87-4e4a-b102-edbe6bb7ea15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c641b9eb-0c3a-4ebe-919d-774ecd9335b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ab992f-5f9f-406b-82a9-7c5f854a4004",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb90d41-13ca-456b-a25c-e9cc9918834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e90439-655c-4cc8-add2-499d520bebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd8070-281f-4725-ba89-9cc6298b3959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "183e28fc-e81d-4b61-ac57-515433279897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7989ca14-6531-466b-ba37-9d5cd55fc3fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcafc18-9bf9-444b-9750-ff661eceb571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a15291a-d539-4c9b-9fd9-655a3a8e65c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538d6136-b7e1-41a9-ad49-a732b9a922b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "302e5b1b-7e68-43f2-8aa1-54ffefa78c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eceafe5-873e-47d3-88c7-664940f37c13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e176ff5-fe3e-4958-8388-514ef9230cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4280fe-1357-4104-a8e3-fde99dc3d185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac4648-88ce-4a01-a573-b45b3dbc93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e731eb-07aa-468e-8031-9c5e4f23a21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbdc65f-d27e-457c-997e-73a9c50736e6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a8d654-8bd4-445f-94f9-bfb11f469e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3b69c1-cfeb-453d-ae97-78749fedca7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa185be-dd37-44e0-880e-d50d82dd1564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2238f216-1c65-4715-946c-2da8aef33322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883c4422-6e1a-4e16-a460-65a5c4d1c3be",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143d85d3-ca01-461d-8085-34069d3dd6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7077863-02ca-4c3f-8c1a-3cd10c64b4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb88a27-6b24-4e1b-ba2e-8deeab32ee67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29354c36-1b16-469c-8cc2-7b388e0e25e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5963c5db-0925-4a86-9459-ddc5b9ced4f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e94b09-f815-4c7a-be90-e213bbcbd2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f6240c-3e65-4c45-87cf-822e1dfd94e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3451937-1175-4ee4-9534-418284b1be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca86956-b1a1-4150-8af9-72ace5a50a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e25ab06-d42f-41ea-affe-c95a85c6700a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ed2709-0430-4720-bcba-1fdbe346e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383daa87-d1e5-4d09-8d66-c9de4273f364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2d8224-ba65-4233-ba60-3e33097fe885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea53874-7967-4c88-8c2b-40be9607d992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15abf21e-f23d-455e-9fdc-11d7559910e1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd90fa0-0bb6-444c-b8ab-b24c17a60814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44035b41-52a4-4e2d-8b31-9488a2a9a8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36057e-85b8-4fad-9022-1a80c8b7ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e21f62-40c1-40c3-a2a1-8e546eb86087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fca26e3-c2d8-4981-a81f-be9948f46148",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7574f-fdfb-4104-b3ed-ff558dff2d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd187eb-05ee-4734-b66f-12518bd099fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314325d2-3c16-4ba1-80bf-bd8acb88869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d604c5-ce38-49eb-ba10-efd79923e668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388b5db4-4086-4ff3-8fde-6f077d699376",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce44f2-55cf-4611-8c76-7b010c644f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ee83ac-6592-4204-9ac3-fc3fd5fb04ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c663ab-dbf0-49ab-8ac8-0dbeb3edd013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "174fc0ea-489b-4362-8e07-f936112442ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5a593a-12a9-488e-b8b2-efe565dcc490",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1956024-93e7-4610-b95a-d56184847e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035dda97-85bc-4a84-93fc-eb73eeaf2bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54981a5-de9b-4625-8e43-812ae08052d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61946360-4d89-49b7-859f-63dd45a882ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c5a6a-990f-4f19-acd1-af31d8c81455",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05c58b8-4b2a-4f74-afc8-4e051e257c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea552574-7e5f-4a42-90c3-d182442036bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f6cc1e-29f1-4a48-b20a-dde43ad569fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a26ab8-bf7a-41da-bbfd-e4304648c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be83888-d422-4bf4-9ec5-b9a7f96a1388",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc35c99-2c5b-40ab-86bf-6da8a9103d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781e8e1f-f52f-4666-b291-cccec06c08f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf1681a-b55d-436d-8d88-6109fa4b22ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "239d89de-7341-407f-817f-fc7481d35992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439fb1cb-a9e5-44d0-ba48-cf22ccf44f10",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6be746-88d8-419d-9f21-247139bf4970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cba80fa-0db1-4e08-972e-12b547430eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003903e5-837a-4af9-9201-8d7129ab4a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13db2c77-76ae-4578-9635-6a6f33474499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2f92a3-7c14-40bd-9b4b-38cbf1fbaeac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df568a3-9a3b-4c70-ad3e-011268926d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045689a9-0990-4d16-956e-4937c9a0f13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04edb1be-d9b9-4d8c-8e30-dff3c81eab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d9949-0674-4f5a-b6f1-26f4928bbfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcd1e3c-a266-40a2-837b-3f6c91a96a91",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabe50fd-eb63-4963-a8ef-3a4451ea7c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c11b12-5243-4449-b6d5-4b2c23ec3253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe03517-a378-4332-9b22-5b56782c0b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea69afa-d8a5-4423-81da-a1a2d06672e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fbaeb3-14b3-440d-bb07-a5368abfe2b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaec6187-9082-42cb-be47-135c8dea5c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebdb537-4a71-4765-a191-a5bec6f007da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ebc99e-60ad-4e07-9cc8-38ab16a19f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7c16b9b9-33dc-4e9e-beeb-9255de488674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d07a8a2-94c6-4eee-8207-715e413ae0de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfd4c61-4bbe-4a7e-9930-b253fd081836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a13c050a-fc14-4b51-8483-00613fe7a66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4368d584-4477-4beb-9d12-d515b7217e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93ee9b6e-391c-4b9a-bc4e-376cad49d72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53225f3-0b7c-4d1c-8713-03d8dddd5c6b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ef2e5d-3d6f-4d8f-b414-de414f603ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f944e6a-3ecb-4e47-aef2-30cbeab57894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3641fc12-7cf8-4859-8a99-15eb61b6a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "325e5090-627a-4d94-ad29-e706ee2c0006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0984c4aa-9b5b-4343-bfe4-af2659fd4666",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9953b815-13ab-4a67-9829-4bf0264274e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c765b74b-2f28-4cd4-accf-e106ee232f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce68e37d-fbab-421a-a9ce-0750eeac370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a258c12-4b4b-4e81-9d81-5e4488637f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317608ca-253b-4c71-9ee3-9644e857b70f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7578ff-b079-4fd4-ac41-d450b2c72932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc1a8fc-1df0-4875-9094-6ed453209677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ab074-b205-44c7-b5ce-bbdc762dee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "afda281d-2a61-46cf-ad14-5b1e625b75f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564f46d7-7398-4af6-a60c-078d5eaf1528",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66962868-5ff8-4fc6-a7eb-c7716ce2ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efd9ea4-8052-4e65-a42d-f183da57256c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81639d4c-661c-48a2-a7aa-217f8e141f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8dd407-6539-49a4-b99f-8185cc755731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2775f224-7065-4c34-946a-6a27a67f1208",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515f880d-9e19-4cd9-bde3-7d593f37e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db56cb3-c99e-4940-af1f-d4abb38f3fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5b461d-edc7-404d-bde4-feafb4212ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f59ab3-e794-4dff-b3b9-dfa5c1856354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f69cbed-5821-4ec6-ac57-cc42dd5039b5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec5c815-b1a0-4b20-8e70-d006b8380c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5a2ecb-d08c-42d0-888b-24842ff2ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dbe5e0-dcfa-4846-99a5-9ec609d60620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "efd06bc1-660e-4640-93d0-bbe4d54a6dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b20af9-3501-48e5-9bb1-12cc88353884",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34346f6-1a9f-476b-a76e-3932129d7a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49328496-beb4-4f4b-b987-34c9a525742d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a62106-26ab-4edf-a81d-bee460404936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4f0392-08df-4f46-a8d5-e5fd99b1f05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6619f979-3de1-4490-96fe-65fcfb7d59a0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ba22c-24b4-40d5-bcc9-7bb3c7461ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7768b026-9b7b-4aeb-883c-ad14bc0071fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4091754-7a36-4bf0-a807-9f2c15350762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d02c52-2abf-43b1-978c-7c4d8e328866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48acba8a-7347-4bbf-aa94-19de6356e190",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065d3c80-fb2b-4440-8734-e0583a6a9f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98ebe4e-6185-4743-a57a-5febb388146d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7e70a8-63c0-4dae-ae2d-59b3891f8269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1cf7e1-13dc-4b27-a29b-89db22df0a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9066a18-19ca-4b8f-93d6-aeab7725fa12",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e6a6b1-5f05-4b76-8b0f-685549507cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a0e4e8-bfe2-47c2-b93e-2a31bce42155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace0d7f9-016b-4729-8444-8c5d4a754ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a836cd18-cf41-45e2-96f4-f0bb0b59ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74b0344-7187-4090-91ba-4e00a3448034",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bc4300-89fb-4a20-9577-1685fb0ff791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983503da-0d8f-4af8-8be0-f60760864973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3623c077-a8ec-444f-96a5-98881b4d5d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55024df-eecd-48a8-a4d3-99ce5dc17356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd420dd-e48e-4c5c-89a5-26b9e619b0e6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7d4a5-5dd0-4e88-bac7-650a305b2049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63dad8f-3f2e-47ac-92d3-67178ea14bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddb4ee6-1244-46c0-88ca-11c9dae10fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5eb361b-b75f-4a72-9f60-7b3c5c28c0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ac1e5-3643-4652-bb5f-3b2a33cc86de",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a0ca3-3d5b-4f4e-a4cd-25aec0094d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66fb0f1-8d79-4ae9-9e50-c8b51cc30ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ecbbe-d179-48de-811e-20a283b36164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f87439-cade-40d7-866b-5f88ed2c99aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef23c326-4bb4-4c30-8023-09b5b35d70a8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543eb72-58c3-4560-982f-6188389bc523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b85b88-6eeb-47bb-a267-7c675fa127ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67668cf-cf4b-4c90-906a-33d99011c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de507608-5055-42fe-a609-1a95ae722304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13fc3e3-6aff-469e-a8b6-0a89df443ae7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f923ed-e105-49d9-a029-77115b9eae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6b6613-d6a3-416d-a22f-d0d0bcb74bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0ed6e2-42b8-4dc5-8d53-3ef3ed08fa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bafb70c2-b78f-467d-a787-a408079dfd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f047f1-835f-4a8f-b289-c29e4929d745",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc45b474-df49-4496-abf5-7a5b7a9e95d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72a6bca-b39e-4a44-9bd0-cee9cb7ce583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41fc17a-2ef5-4da3-b0cc-00005d2df072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8a961f-212a-4e33-9a97-083a33ca4803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3e380-32ba-4e62-8179-dd7ab183de9f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc72f7f-4bfd-473f-bf9e-5ca94aa356fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3282610c-42a9-4bcb-b8f1-630c22ec4f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983fcb2-802f-44e4-b8f9-014907c334e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedc480e-32e8-40ce-9908-b783fcea0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af75649f-f5dd-4e47-b019-ee07e49f007b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce48f4c3-c3b3-4996-a3fa-6183ab27ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11776248-4f36-4b2b-ba8a-692b94dd43ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ff30fe-b8ee-45e8-94b0-04ebc5b4315f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df082c2d-e4ea-4bdc-a684-9094993b7afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf02fb6e-6be1-4652-99aa-7de409e29784",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae4f93e-6f29-4589-9457-97be80d05141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e4683d-bfdc-4828-b625-4633b3fa83f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f3b13c-238e-43e5-99f4-5d7e7bf0f778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6dcbcb-604f-4403-b4a3-eac484980166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f00ab4-23cf-46c7-ad30-e5b5ce799fce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32250793-945d-4d9f-b70e-5027fda96ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8972ce9-e6a9-4004-9ef5-cd0e9ab69b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735812bd-3b01-4496-a935-67c58a81a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "184505f0-9894-4562-8db5-9ad21cf8fd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede12128-d61d-45f2-bed0-2ca04f8c6aef",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c427f0b7-3109-4972-85d8-953ad297876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cdb87a-6ddd-4741-8026-8a065a8fef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73945381-3854-432a-aed6-190b7ed4d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8b5a4d-486b-4637-ba81-719a7cf40760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3c01fc-e06d-4f9e-83d3-49fb1422bdf6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05650eda-a327-4415-9dee-0a6954a7d5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19afe413-b2a8-45b0-860c-e53a869aaf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c9eccf-f576-4d20-99cb-1d8ae10de5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "93d822d0-bdbc-453a-949d-7b02312a8f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622624ce-d77b-4a8b-8303-961ecf4c7512",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676d3e47-9bed-4d06-b20e-81fcb007d743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a034b3c3-1b73-4f2f-a74f-b392d48faa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7587c6af-10ac-4679-bae5-00c3b0a4d17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81465b7-9d42-4a17-a582-3b8c9cec387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3549e853-93c6-436e-964d-2588bfb2d255",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70265bab-b0bb-4c1a-b204-647bb0ce4cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7a8707-4a57-408b-b53b-2bbfbe559a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e86cc37-46dd-4a5e-a312-8c775db1f205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00482569-f655-4235-b7f0-818af426b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a54fe-53e2-408a-8d3d-4826eda239ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc43142-7eb5-44fb-af79-a87184188c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a6346e-7d38-4967-ab29-9661f32d7243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e641916-1aa2-4d12-bc44-3e3f9b320e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "67766b22-0a9d-46ef-9c6f-1c401748f935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ffee48-25eb-4dba-8039-a36d26adc335",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66f939b-2089-4ede-b2b9-dfa4157b8530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bf5a72-44e7-4aa2-b099-eac4b1c3270c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7de937a-6c1e-4ce2-bbb7-9a8523f5173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6f1374-2dc9-45da-868c-74d47160052c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e3b40a-34f8-4beb-9b2f-51070a2cbcd4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0042029-e121-4123-936c-5551d7e4ff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e5ac8-49e5-4e9e-b1bb-3d3a8d4e3262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4251595-3bd3-412f-b0ef-76643f6546d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "499e8c74-504a-44e1-b290-e6d65ea57ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41920d5-bf26-40d5-9f45-027f5952db85",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8772327-f768-466e-8b78-bfa2e9cda868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0352d629-5c72-4986-bb2a-0da5ebb4f165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2745696-91f7-4eb4-9600-4dc192a6cd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69d93ef-e91d-4dc4-b18b-cffda74b326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a54754-dbf0-44a3-ac5c-3b5120f8d2a0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91dc7d3-936c-4459-a3ee-fd2393c67bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fc75e0-6aaa-4ecc-a6a7-096e8d2aa350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a8e1c-5121-4c70-9caf-65f1fa62f0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c85b638-22b4-4191-81a5-5aa67575bf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8ccedf-c8c6-4ed6-9a6d-9774d3882b36",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff25254-aaa2-4db1-9e63-814220c19d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca548c1-c1e6-448c-a85f-ee220ca7d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c4829-313f-4c93-8ba3-22ab1a680520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "209256e2-1791-4b1c-8050-86d9789c6327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5477660-8e93-426c-bc58-7030505f36ef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d8da37-2b0c-40a4-8360-c027fe65ab07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19523e16-043b-4c24-b2cf-89c263b2d980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e5f342-b0ea-418c-ab4f-d91055044c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f71d842-b337-4a87-b19b-4bab7206279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0847713f-d9fe-4e88-a4bf-8c2b4d54adf8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99e520d-c0be-46b6-bf9f-b9f53c000a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc9befe-4c77-4682-bad1-7e0d10a8b940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d3a87a-9371-47eb-83e4-b60cda430a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43281479-0d79-4d1f-8f46-ef165cfa8018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9267d7f1-db7e-490d-858d-50112e3c472b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f463c55a-b3a0-496b-be07-1247af22ae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fc8ae8-bc88-4b53-9f22-9afa14fcea3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16dbabd-6db1-4745-90ec-b193e9796e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c138a8a1-bcf5-4453-a4ca-9310ce8cd273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16700e5-3552-48d4-8dd3-3d137054bcc2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f371720a-a672-47e4-81be-dd4b3aa58c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f781e618-74f6-42d7-978b-d5daf8bc4cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19f8752-e5e4-477f-8031-764f7ac89f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60da4f4c-8e69-43e1-b78b-a0b9178fa4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88d00c4-c849-4378-9cb9-0d584c8c28d2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675023c9-bd71-4ca7-bbb9-6806ecd11258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c1031-70f9-4e0f-a195-5fefa6cba207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254b931f-be21-4492-b093-25643f8c1e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "014deb19-616a-4891-b1fa-693e59af34a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65563124-b57b-4f39-a345-44ae855780fd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8e462-2d4a-4746-ae3b-3f850e256df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc36550f-e217-4e47-a3bd-2f070f1983a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673cad8b-adf1-4aac-8d04-fbccb189e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43a41f1-784f-40f3-8a48-cda9ddf64968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d95349a-14bc-4968-956a-613bc61dec5c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12248323-a1f8-4ba1-a1f0-ebaa0756fed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911e663e-7a55-4e60-93b7-efb4efe5b02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64a78ce-d322-4e3f-989b-34e39568601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a651ac-f76a-40f9-bab7-ccc11dd6045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bf63b7-2c0b-4c69-8516-9c72bb9b770c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789677e-fe44-4c42-9507-326fb11f3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34620a7c-23db-493f-84eb-6f4e8d2a518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74680446-7545-4841-80aa-14f5cac70132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "568bc3c3-2166-4759-9f65-d2d794ffe141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335451ea-1782-46be-8232-37587112d20e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5402c0d0-9f22-41d4-a153-e16b00fbdabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372ae507-c5e2-4d9b-a3f1-e607e83a3c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5b7bbf-c558-4678-85ac-59641be8385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d85a0e-e2e6-4a9e-aee7-ac1a90e825a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017e847a-331c-44ec-b03d-4a8a435ba0fb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8a8cfd-8409-4332-88a9-553ebf29fbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec64ac8-059d-4c39-942f-f9a00f4a0100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e12c4c1-ed23-4c06-af46-bf0caf53c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28787b0-55df-44ad-ab5c-fd4f3e2f4e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e46cbab-beeb-44af-a0b2-628f7701e0dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd787f-46a0-4455-ae00-556a71ee5599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4b40ef-ff2c-4622-aff0-df97954d3b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dccb63-2332-41af-a1ae-4e9a86b8b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8da6769-f986-4ccf-ada6-7817ea1aebec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f90b985-f010-43b5-89d0-76ce90aaa2f0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5758976-9542-4a3b-a066-3618c6a49372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68fa2ad-0467-4291-8c4b-0b8828ec627a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c57849-88db-421f-8775-ea01e40b3d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a822e90-6ac2-4818-a253-4c02278dcdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61368034-af67-428e-a323-45f64a5c2bc9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d640be6-bc8f-4eec-810e-0c5e1447d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f5658a-8358-46ea-af92-f19a90c94580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bcd9c6-6f2c-46e7-b87c-c3a49c066e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83e12038-5cab-490f-8433-2417a442c25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff34dbff-2d32-4fdf-888e-b8d0d7e4bad4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360b58f1-c3cc-4c8d-8bb1-8c9109419984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2646e87f-3756-44b5-b0f7-2d3fa6963a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06dccb9-ed4b-4f5f-980e-5f52cf9d175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70c8083c-edae-42de-a677-a084241d034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac1b5c-fceb-44df-b30a-f946a65ec0c4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f941c7-bfc3-4ae2-abfb-b4c13254cbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b05fd7-322a-4417-8695-87e9b9feac9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4f9702-dc06-4fc9-aad6-73a4285cf765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c869421-401b-41af-b258-1f70e6c18549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb85084b-366f-4d3c-b545-baeb565659fb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9995f316-a13b-408d-a70f-174ade0489a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3817b077-1796-4b03-a83e-1397b649ff96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d753ce9-9bb3-4887-9454-5df8fb3a9484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f48ad1-d048-41af-98c3-a687eebcdb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c17601-6469-424c-a148-eff13becdc32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e47dd4-46d4-4e50-a7d7-da42e284adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0d592b-ae46-4d20-acda-50e6f2527a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef345984-f8d2-42e9-a508-db83764a4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "641e17f3-8fbf-41bb-a708-d87c34bf224e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d909a05-b5bc-430d-afa1-ba88d90e2542",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f49c083-d73a-4a34-8dac-5aace310944d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef30a6d-b840-4f88-bcff-c654c235f000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d5f912-de84-4467-a271-b62530af34d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2ca546-bc12-457a-8ba1-b98dddf11638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8c1f30-9ac8-4e04-baa5-1bf7448c2905",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaa011c-7af5-4073-8380-37c4698c21c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c38b95-f802-45c7-9a32-3ae7d7da0125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fa8c4e-0684-4db0-b2ac-2b84c4e79039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6141a2e6-a34d-4d25-a988-73a11e3d2e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78121fe3-7d85-41aa-957b-97a5263c6579",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767f6786-b6a8-47ae-88bb-8bee3e4a7f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae177d3f-4a93-45af-8970-bec2fbc28742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019e6491-d4cb-42c1-bd38-7cb17170955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c80a0e-3e38-43d2-bbe9-6b99dd0820af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0dbaa-b299-4ae7-8d2f-6f1eb1773bbf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85286bfa-4220-4b4b-9a3b-881407a425cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ae37e7-f348-4ebb-abf9-8e260cac264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f366d82d-8c57-4423-a674-5879b5c1172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3aa5657-45de-42aa-86a0-84fda685abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef4a6e1-0421-4b41-9469-ab6bce51e449",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d35e137-9446-48fd-8e0d-fc71811c99b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a82f72-453e-45b8-b1fe-afb7c30f6550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dba5f2-1671-4d73-8c80-7bcc5b8adf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d801fe6-e587-4457-86e1-4534b5aa40a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49429cdd-4aec-4a2f-9541-6ad572c884fe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a38361a-0d54-43d6-b582-b8f1c4267512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5675dc44-b008-4509-928b-adb24d588d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7620915a-3a24-48f6-851e-3c9639dcad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd36be6c-bc00-4821-8224-961766d4201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa9060-edb5-4d33-8346-000efaa13a9c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959365b8-baec-4abc-ae51-b2d4f28eba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fedfe4-5d37-420c-9bdf-8b73b66171fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba958ab-f0a7-443e-9367-890f52f48966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4510aafd-5f1d-4b8e-bd50-560ae533dbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4832a4e6-1c33-4667-b753-a5d39a626eeb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d711c1d0-4dde-4f7b-a1f7-3fa676acbae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a2f801-9de6-469d-8f2d-ecb2dda2124b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66667ab4-83d8-4cb8-9882-08750bd2991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6028362f-2470-4935-8a1f-879af6ec783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c10004-3381-45f3-b652-9b883f10bd3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d78605c-c8b3-4ae9-9ebf-0d239927632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "53a2c57d-0089-4b41-9227-48544d779153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c9ea67-2fc2-4438-ad93-f5eac256fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4d28e3-0171-4e2b-b8be-7c9d0ba98622"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf9e9add-77e3-4b88-88c2-305491e8cd58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72042e30-f5a1-43cc-a97c-c5e5c8ec8f10",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4425bb42-d139-4b0f-8ad7-91574c29df25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08686e45-14f2-4ade-9c70-71e07b86f626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27130630-077e-4ff8-b4ef-39426eac0c21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b851cab-f7e4-418e-a480-ad7b6019adc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e86c73-30f0-46fd-b8cc-e3a896f2a488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c87fed-0509-4b4e-bf80-4142ebcb2cce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a48b5055-895c-4432-a66f-1dec881d05fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96efbf96-78ba-4573-a6e7-74971c4508d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77a0a2af-5d6c-41b7-aafa-bb95c9788de1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9233c6a-091a-4243-8987-ca75f5e49314"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f0a0218-9cd5-47d3-abef-4aad716663e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccbaf772-e026-441f-97b6-3b0fcabb0288"
                }
              }
            ]
          },
          {
            "id": "da83bf5b-332a-4f64-966d-d323a8404c10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07045155-4623-4aaa-ab5f-eaba193e1a09",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4be88d09-58ef-4ea6-84cb-01c1c1e6d00a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0d38fb-6000-4a9f-9c34-c5186306de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "51968a0d-7064-45ac-a274-bcc053f479c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1ecf5-3662-4fb9-8cb1-0092ef90d6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878707cd-5d01-4c19-ab87-b10a5658f86a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3da5f160-7df4-4c19-8b26-018e7618305c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0c00848-8aa7-4fd0-be32-86e3eb989bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "188a879a-7aa7-4405-a65a-5b8625556b0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "722f3a3f-696f-4450-b975-717fce002850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82414872-23f4-4de1-8f82-47917aab088d"
                    }
                  }
                ]
              },
              {
                "id": "dbf1c2fb-412b-48a8-90cc-ab7c82c39eee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f94cceaa-f829-4dbd-8241-3f5b05252ebb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "268436d8-f148-4b77-996a-e2ed09dcb81f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f58faee-605f-4a0a-ba43-28eae93004a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4cd8fd97-8291-401b-abf3-57c824842b8d"
                    }
                  }
                ]
              },
              {
                "id": "951dbeab-ed45-41fa-a012-80dea9b13b43",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9a6c888-2560-474f-a4da-246d15d948f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1abe6787-fc65-40ae-9ec6-81d3312bca2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06f36248-5b9c-4145-8675-75ebbaff7c76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e898cb5-3c1f-4db8-8e90-64b16dfd1152"
                    }
                  }
                ]
              },
              {
                "id": "d776edad-9c8c-40b7-ab7c-1abf2a1db8aa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e340ff6-f419-4415-bbfb-7be600b85e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90ad69e0-b995-45e1-af1d-b6bc9013e54f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8ed254d-770a-4d11-875f-9a26e5d8d5b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "872fc6fc-5e2c-4627-9221-3dc38e9de5db"
                    }
                  }
                ]
              },
              {
                "id": "9f8856ae-3384-472d-8326-572adf14fd36",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ca683f3-2da8-47ac-b9bc-5d55135ba36a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39de32bc-817f-4f15-822e-f95e28e86c98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce605b89-8a60-4cc1-a0a3-df4906ef620a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8b17c9f3-0fd1-40ad-8761-3e91e7d562bf"
                    }
                  }
                ]
              },
              {
                "id": "0bbdb278-7063-47f1-b0e1-55071c79afea",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddffa8bd-688b-435b-950d-23c444e1bee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71527aab-1c3a-4d18-8a6d-44639e550472"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4279b0cb-656a-4171-8460-f9d74437a67c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2209eb40-6f11-436d-8551-a4945aa7a698"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa18fe50-57a7-4b0d-806f-75349b9b298e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0f3492a-4ed2-4edd-8d92-75d6b7e59700"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d60d7678-b205-41bc-9498-d07e976404d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa60d2f-b870-4eb6-83eb-c694b5b2f218"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a17acb6b-f661-4112-9ff8-c58ef4e2ec33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ab0d039a-83d4-4152-9ebe-f8f9830f2e0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79386515-9533-4514-bd6c-803a0b9da70f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdbf5201-73c6-4bc6-b993-c0bcd94f1b38"
            }
          }
        ]
      },
      {
        "id": "a2938d00-3853-4968-b1d5-584f72f83a26",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9e826c0f-e94e-4b18-83f7-19e7d7825aa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c513b3f9-4d98-41ea-be98-7352e9301b3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b39c6ec-c01c-4e75-8004-5af8f9697c33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721e06b6-7509-4fb5-abfe-f240387bb9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6319abb4-0c36-4945-83be-7a187223a5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31fff44-7a3b-4f38-a976-bfaa4f4e4735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be164ea-da99-47cf-a024-ec210045db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfea5e8-78c2-4e73-9fca-e03b418eb1b0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e860aac7-c17b-404d-ac58-51deeefc392d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6470ecb8-7d37-4d23-b0e1-710089e8d4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdde4253-3b08-48cf-89ec-69088fca8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c678513d-7162-4021-b885-f08469c4266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98618781-33b6-4deb-99c5-f8d136750271",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a145ca1-7bb3-4cb1-939c-08632969c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07a168e-8d96-49f7-8241-2161e9b44ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfd9499-6298-407e-b44c-1d236f4bb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2a2ab4-49b5-40ad-94da-9d2bcfd73595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72a5345-9990-4fb0-8165-445df807d130",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886576a8-6893-4e2b-9992-083549ff3309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67958564-7b07-47b9-adfb-ac594cba2688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f21691-dd24-4947-8e54-bf80cbe59468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76589384-7d19-4911-90f1-8852e4323bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a761b3ea-646e-45a8-a295-60e9a604e162",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45809e30-8353-4247-9c22-fa0fe4ebbe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec48045b-7338-46d4-b432-4f0c3d5d0670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173bd696-d8d7-4387-959a-88616e3f9713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b76697b8-e6bc-4eb7-9135-7e7366f7514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df087005-8af7-48b0-8707-acfc67ed46b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9bc84-5b83-46eb-9232-92d3eba9ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6488d6f0-d853-403e-b0cf-5998fc6c850b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741ed582-c818-4beb-b9cd-6d34154532e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfa563e-4581-47e9-aabc-39165b6c40d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079547aa-5933-42a6-a8bf-93fc5c76ad46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a135d44-33ff-477c-b7ff-17ef606e4637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547106df-1172-42f1-b9a0-3d20b010a69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c331ac5e-590f-468e-ac0b-ec7f404cfed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b4362b-8ce3-4071-bebe-a7d252426bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942184bf-9995-4073-8b3f-f2781c395461",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4459d3d2-09f2-4398-852e-99b5bf35fd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91b8513-b49e-4926-9a9c-79f637cd828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f238b5-88de-416f-bb12-88cf3ad09131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "797084ea-291e-40cb-a7d5-752860ac0152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2879f7bd-6bbc-4b7d-b460-6eb9acebcf48",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bcfcf9-0ea9-4607-a6fa-89ba3034a3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e5d403-8996-4d53-af2e-d5fc7895a2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c2f583-696c-4db2-a06a-428b825d6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31baab81-e070-42c1-839f-72c277e00527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e7a70b-c308-4081-aae5-b1d042d9e8b6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d26def6-29b8-4ed9-8b5b-a16294564cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f540b9-66b9-45df-8800-cfd5213d7dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24252edc-c6ac-47bf-8649-5b070abfaedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd831a5-c94b-417f-aadb-113a946e7b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fe7d3b-f433-4bc9-a07e-ac8ecebddd77",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbef110-a300-4cb2-8946-054651230f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5316b049-be4c-4348-bb05-90fef5a78d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8458bea-52a2-4930-80db-5fc21f9abcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d8f2ba-ee82-4f28-b283-7cfa33e99632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2718fb-07e4-4a56-9986-b65a311b55ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff166cf-d7ce-4cfb-ac1c-8ea0b9850fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee14244-fd1f-49fe-bea3-644eddea66d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd727b-17e0-48c3-8ecc-2abbe0bc847f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41d0c184-bc74-414b-9cb9-2885233ec926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4116b807-ebed-4b4f-a49b-38e345c8cef1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810e919d-d0fb-48b4-9695-a6d54d2f4dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b61731-921e-4071-a324-0e08339d0fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a97e3de-1130-4dc1-b651-843e56077161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b03eb224-d3bf-44bd-97d1-faa3623de646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b982f216-3424-4b4a-9602-324988c3e2d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2cfe0c-08b4-432f-8100-bb8e5df81788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb94c01-05d2-4177-acd8-ad7f5d3bf017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cee94e9-f259-4b09-86f9-ff093a8cdea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b808c9e2-bba9-453a-9480-bb2ee74403d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fa5435-abad-460c-830b-5f3dc834032f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c317e0-718f-4a31-aab6-61a59126826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aff3a6-8099-42c0-ac0a-803decb3fefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2db6190-c62e-4d50-95a4-d9d22db57903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "328f7bf5-6fcb-41d1-b504-c06897c6b9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300ff30e-cde8-466c-90e1-0464225a6e36",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a642e506-c9f2-495d-ad09-f3a7f9944a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e8097a-0f5a-4459-812c-c29a872e9aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c67288-f549-4777-952b-56257ce7a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8893f307-6399-4b95-adc9-2997cfe6ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329bad24-9569-4835-9e64-18b6f1e5e053",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0694734a-33bc-43cb-a7cf-50919595f239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa984cd8-2749-424a-8b05-0614a81e8073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c57bd-a592-41b8-99e7-a7fc699f0f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e733c3d0-e5cc-4010-99fa-f2d7a92267e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19516a60-0606-4f9f-a340-764a70fc3a8f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2dfa37-37bb-4f79-93e5-ec0c85f43a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be87d10-796b-44cd-a053-069b77546b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f3c38e-b93d-4858-8d29-60aaa406fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4e7875-f61c-478f-ab60-32abf255746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd90e00-a352-4fa3-9560-5cfa041327f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1fad4f-7f67-430d-b135-ddecf3688a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f95805-26dd-4aca-96f8-d45830c6d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d2a37b-14e2-482c-bd8d-cfc37a6c3d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc820cb-8696-4897-a4dc-78feb1d2a5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903cbf69-044e-44b3-abb5-f8dc4b0a37f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d553a9e-7e98-4d3d-a9d2-c28e24fd28ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a0f8f5-a02d-45e5-85ac-fdb44c84d7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062ee39d-491a-4467-b062-4ad987725464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc38533e-f167-4c5c-99fb-572a22fc8224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e7362a-5b1a-4a10-8b22-bcb6fab20418",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e2f335-64e3-411c-aec3-a3d16e14bfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bb9f66-473e-4d59-a7ff-cf8bc7d60c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25fdfa1-4d96-420b-b4e8-6e0deb5ecdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6d369e-ad3e-47fc-b090-c22f66d6568d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5bb337-2d08-4603-804a-7057053d3d36",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b726b75a-9ccd-462c-b49d-5d75499e7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e44f0a3-1e0e-4d89-ad17-bb2c14433d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fb6561-8b43-49e7-b205-2add1b82cbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d3ad1b-702e-4c21-9ccc-59e90cb9157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1325f2e-a855-4699-92d3-7a7469896247",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6659d0d-3fd1-4352-aa71-89aaeb35738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486f9883-ba72-4350-b14f-d8a149fee5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045ba9f6-7b77-4bdb-a20a-bfeedb96a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c765579-92ea-4a5b-b488-216fb61da8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ea02b3-0050-4705-886c-e49153153beb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a4366f-d59b-4022-b8e5-729b19ccd15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14fcd76-4fb1-4601-9298-0a22d7af6919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ce1e3-b282-4ca4-97e9-3a2d4513e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b97f02c-5027-4509-899c-7b6f22cca4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e2789-d8a9-47d8-88bc-687c4dcf7a04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6499a2-b88c-46e2-8612-494214c53a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c6a1d9-137b-4e7d-beb1-f1d0003672d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45119279-dd78-4d77-a450-c66d1288057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa7f037-5580-4aff-915b-d8430aa52999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc43b14-c731-4708-b43f-2a75f203f517",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77815fab-0419-477e-a68f-98454acd8369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d8b9d2-fb5c-4a8d-8b1b-1e9ac32ea4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a929f3-3606-4f35-9abf-0965cf85c452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7078ac04-4371-4ce2-bda1-31ee24123ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30968a7-5a80-46e9-84a6-402f1275a37b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359033b-9d5e-4344-ad82-77d83fe0729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323d5420-e4d5-4756-9a3a-2802ee6f8c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba48dce-fcfb-4242-b07b-3f1c945be104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef2d6c8-2759-4afc-a721-e84877b448d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d78b11-0af8-4abb-8681-d2f9f2ddfcab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63e346e-3948-419b-a272-b84ca637a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd98e2b-8e1b-413c-97af-0222d8919ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb35d1c-a6b0-49ce-9a5c-fa8cedad7eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "717c0cfb-34c9-430a-b060-f7b433bf30e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62388d2-04a4-4f7f-b04f-2dff6ca0e141",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8d3c5-e2ca-4752-9fe6-e6d7a5704dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871d3586-8df9-4f55-a4c5-de2eac41a5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d6252c-0c1d-48d0-a467-d4b38ff6e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70ee930-b6da-4d36-8562-f5231b10dff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810f06e2-7523-4856-8561-53c6ebb83e1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328351ae-cef2-4089-b1db-c616c00f3080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d62d889-789f-4f61-970b-22581e4741e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3740415e-b9ef-49e0-84e6-487274b86704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e323f43b-67ea-4723-b9d4-de87f9528cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25170320-da09-420f-a54d-14ab3abd90d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e7a92a-6017-45b3-a05c-8c477f568853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b1ced3-83e4-4f86-b06f-2057d300c73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6a983f-eae9-4fa6-8da5-500eea4bbba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d4d028-6813-43a3-8487-b570a4d83436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceafc33-287e-4c76-a094-b2f29413f96c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc1d388-3674-46a3-953e-5ff10ead2377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70393754-0928-4512-8349-5dba73363de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd232d0e-a351-4747-af26-79233be914ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "874e2695-2930-41a6-a21a-9705cff3d35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7401f0-0df2-4569-a22b-525d6d4857d4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac470b-59d2-4b04-b898-afbfed7b6fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca2ec6-be08-459e-88e4-3288dd392588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976a2ac9-4f33-47ce-8d9f-ec653a08a109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad68f691-4444-4003-ac28-63740fafe1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f60232b-f718-4e1d-b7d0-3efec228d230",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dabe2b-04f5-45a2-a39a-0992648e22a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d62451-f6d4-4f2b-97ae-3887d946a507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c0a40b-2671-408b-95cc-2d774e6dd087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7856131-6d4f-409e-b61d-4db1561c2ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8427fd-984c-40e7-9dba-a21b7f8650a0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1158655-b60f-4671-98c9-9bdeec42faea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1b2aba-11c6-4ecc-9c6d-944b53bedd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0baecda-3a0c-49b1-9f6f-c649c08c8dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1cf6e1-9e97-406e-951a-737d5a985459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92e4122-eaa6-4477-9cce-851939f88ff0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc2d9ee-0229-450c-8b8d-6abbe949737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd015a9a-7c8a-44af-9373-bab443ea4ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d505ed0-46a0-4aff-9a20-4ed66375b7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfc618d-65c8-444e-80bc-43be827340b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c26591-ddab-481d-aaaa-832de346991e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763d43c8-cb6c-4485-bdd2-cb5e0c0320b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195f4be4-5867-48a8-b400-84e441e3a594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90656459-f50c-41cd-bdd7-ece507b2db69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e145e739-5555-4252-a3cc-624fc259bc3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbf4fa4c-3adc-4485-bbd2-6a504dd12c18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b514e78-04d2-4784-a6c1-e43970ffbf0e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4818abce-09a6-4817-a62d-ce10a2b066e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e620fd95-150e-4932-9441-99686e6df606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa9feb3-917d-4f84-9f1b-4281ad753dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d32d56ea-e6bf-412f-865b-6d897b649944"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5323a0c3-9b1f-445a-ac42-5f30d2d7dd15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c363ed84-4d33-47cc-9145-d5e6a92f993c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca978af0-53cd-4612-b01c-7d27e1e3aab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c42071-3b23-406d-97af-fb36fd814bb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "175fdf24-3909-4bc1-972f-be09b1a81dae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68d2426d-168d-43e9-a40c-b4bcafce5a71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a93d297-a21c-432e-8c24-f720c2908517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2910d14b-4295-4a68-b4e0-f8d18f60c069"
            }
          }
        ]
      },
      {
        "id": "f91f449b-cc55-4ff8-99a9-5ff6014ad1ee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a5142237-e25c-47cc-9384-994b76a70b32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acdaf106-2762-4d10-b10c-bd91e2d5b65e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ff2ff89-d257-426a-ab73-00a871cb53e5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33f2c37-324e-4144-8340-26fd58c6efc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da69f8e-9814-471e-8f1e-413960823d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef2856-b665-4fc2-98f3-4210ddeb6b1d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0452ad9-94af-45b9-b1dc-5f1ac7c6a4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b167805-6ac1-4a35-b4d6-c3069426a0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec20f8-915f-4d82-9843-33e613047bed",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd818482-0c7a-4f09-86cc-eca18b7f835a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eeaa06-5da3-4c66-a6eb-d280c5f98e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaea64d-ebd2-49ce-8a09-f6b2c4ac4a12",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e8f8c8-e22f-4ba9-aef3-452dbad21932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4db7e6-b6c2-4776-9e4f-cd7c65a36784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a85be8d-7162-4ed8-b9fa-f7247f79ea95",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d2b49e-0e91-47bf-9a26-a88274720f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b64437-558c-4176-90b5-9b946caaaef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1007b2-a117-4543-8a36-b962704bda61",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6669dfe1-4484-4ca2-bf9d-dd9454e064b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0053e5-b392-4834-9420-201559fb2ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d615e125-fe07-4b77-b692-5f7129990ae8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2c9810-bdfd-48e6-b0be-b8e6eabb6f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d08ad97-ad34-4da8-9adc-00ddacd2e15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6d70de-a4c9-4773-9337-a954d3d0a1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42b62fd-9c2d-4d87-8808-cfd3bac9c31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd861ffe-b130-42f5-a27a-a53dd644eb04",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c304539c-f3c7-45d4-a20e-2bb1590e0402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754b3bc5-2c37-44c3-90e3-3da6afa87698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ca64f7-9782-424f-a9a1-5399a2a15694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e764edea-0f54-48b1-8b54-a97cacf2ada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb6f57-da95-4704-ba07-50d920c6aeb5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148b73b-4eda-42a5-8c0f-237a9378c75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e54258-0b73-4329-a9ec-e641074410c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c424410-d593-4de3-9777-2d64e5815bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c38d91-6bfc-4903-8b3b-2d5a5b11ad15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4893fc3-78df-4795-a1d4-c67413be14e4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8311898f-b0fe-4b9f-adae-3d65ee1f1a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8effc2c-715a-4c82-821b-3dd013eb954b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f11f75-b533-4cbb-b26b-5e2658c464ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ac6f3d-6b92-4a7a-9219-273e79210309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558443a-e71c-4fa8-b13e-76724b4f7433",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea724268-387b-4677-be7d-8528f1e6e93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3dbf58-12ce-4fa5-b4d2-75ddf79895a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372d9c14-2b4e-431a-8d08-628f7e0acbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3685c916-5a08-46f9-858b-374e4fae44db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babd45b0-508a-4823-ba2c-f8453c3ef82c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad6e4dc-3bfb-4231-8611-b1f160cf9ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62604c7-6f55-4d82-98d0-dc4c1b40678e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd8fa20-4716-4eb3-a8d9-ebe0e6d1bb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64ba7b5-9ce8-4b53-a00f-d618b817d67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6c54b3-09f9-4355-8a0f-86b74df4d77b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d937e1-dca2-4584-b54f-2f1df334ef4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce884cf-1247-4fe9-9f59-233c98956414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d601c6c7-0f18-4532-9266-dbec6aaa80cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d759833-72b4-4c20-b7c0-360f0300d99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6f3e62-8b68-4b84-9ac7-e09aeb1c3059",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d70a67-6bc0-4ecc-a9af-2a3cef143afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "549060a9-8747-48d0-a98b-d44c19f388a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef947f86-f4ae-445d-abf1-dd92d57fa615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa7d089-36ba-46b4-a47d-e251412bbbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eadc85d-cc8b-4c72-b243-d50d28a8d040",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b65ab7-e353-432e-a205-8fcf45587156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c47188a-40f0-49e7-a397-3dc13aafb6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28593c8f-55c8-4fad-a942-6d359793ef91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838b8b64-fb27-441c-8de4-b88d5360dfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58250e5-27d8-43b4-beae-dcb1483bf316",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc5a660-17a9-4624-9e35-6a84d006dc05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cefbd1-c422-4fcd-ba4a-b96a5fb09a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce27aed9-dfe5-473b-9140-2861a45380e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e3bca-d3a4-43a5-9063-8be83b18f89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61cc104-b8fb-4d3e-acc0-f2a76204352d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291091fb-18dd-4e13-bb5f-58dd6219a2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ad144a-56b0-420e-8633-e137e1f81cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ffacf0-34ef-446e-8441-3399b88f0a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06efede0-1d6a-4a73-b22f-3b230dbfd614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d5c3b-7ba0-4eaa-9772-d6862eb9a136",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb841a9e-83b7-4288-a823-bc3336d9d946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de04e55-ca91-4c33-bae1-e39a884a5d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e70ae85-01e9-4a58-8194-fbe0600d0259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9402d4-aa63-4f47-bccd-91084a82920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75be6997-8efd-49a4-8564-7de32f13453a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d86362-6790-4b57-84a1-96b0f6b3416d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06562d6b-262c-4958-ab11-7efc5c221b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842be0d0-fd31-4935-9fd3-59eeb6c08052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870aa651-2bf4-446f-90c4-7527fcc459ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f38b3-ae7e-4209-be48-db7284200b19",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfcc0b0-684b-4a06-a828-f32166e46242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce00a96f-9141-4b04-b780-0d4a8d420902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8555514-5ef7-43a4-a712-373aece6fab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78fef0a-c16b-43a0-8ed8-11a68b0b5bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac4ac8e-e71d-45ef-a942-6b364a6c0605",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa9c06a-d076-4caa-adae-6d861b98ea6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a7cb1c-a0fb-4a56-917d-cca418625ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97533158-7fce-45b1-b9d4-58993bb8a038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f5f99c-ba18-4f9e-a63a-d079a4090ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc5699f-a70a-4afa-8283-5386fe677a38",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9192fc0f-7d6c-436d-8a38-eb68485081f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14af993e-3bff-4b94-b199-f7be89ea7b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fd1ac9-1a07-4eb2-866d-bfb976749efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29d9aea-9409-4a05-8ab8-b383fbb2e1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb400cef-55d5-41ce-8537-90aac8f208b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49197603-237f-408e-adfc-19c932974ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2b72a1-1c5b-41cf-9b48-e1b394824a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1d8175-aefe-40a4-8c90-3f95738633c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a09bc1-8b89-421a-887b-c8adf82edb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e440db3f-9f0e-4a1c-a563-8be89f611d40",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e760778-5859-4acf-8390-d214676b9a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117fcb55-b589-40c7-a94e-23e649987c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb721c9-7dce-4114-87ad-968af7e12028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba35b9-36d2-442c-a062-30c108cd9651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82099028-e4a6-428a-9079-7e4172734eb4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab68e40-be57-4b90-84b0-c9519ba6c599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5e95a8-4626-4fac-a980-4ed210e0703d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f427d9-9f5f-477a-8232-e3114c996f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e7349a-7eec-4ca1-9ba1-b4962bdcc1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5428bd-f54a-4356-8e64-ffb98b89e264",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddfedef-4085-43f9-a96a-57c5990ae5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e53264e-bf2d-413e-ad4b-d152e6baea31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f6281-768b-463c-8dc4-f55b6b5733b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0243961-4b44-4bb4-8c5c-edba424e61e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11586cc5-0470-4fa4-89a9-af92d77baa8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3729bf27-d889-4a32-a53f-eaf6dda5b0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f375f93-981e-4d65-8012-f72f96834519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fc29f7-b314-4809-838b-7bb2722b8455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416e6c31-88b6-48f4-86b7-7c6e87697412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e034094b-effe-478a-9b01-61b5d94506ac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9020b27f-14a5-42a4-8541-99684f91e638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a3229d-3870-402b-b31f-7c860149a99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05a69f9-607b-493b-8968-4e0bdea10d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b629575-378c-45a2-939e-d88f30ebaea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed713c6-e271-4227-8621-cc595fe62c52",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b70421-5e09-4bfe-be12-efd837f080ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e0f93c-6d4c-4d70-a667-c6761a44f6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a1d149-f18c-49d9-bc8b-9d1a5cd30c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3792f020-2fdb-4f0b-a2f0-2f12ae2875f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70713487-de02-45eb-91cc-544705baa4fc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc849ad2-2339-43ee-ae7c-0b74cde807ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15939429-5028-4dd8-90a0-8e08510e5bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5536e7f8-b97c-43da-a563-acd5ba69263b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9e779c-bce8-4c74-a02a-0c5c3d56cdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75690b7-d570-4ece-a171-013fec3b2a15",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a930a4a-cf2a-439b-ac0c-722e613d9eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fff663-4f85-4c18-b347-e9923b43f0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f814ae36-9710-45ac-bdb5-5f4ce0c0a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c503123-7b87-411b-a7d1-79e748373801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c14a3-1c56-4242-9686-33afc7dcc0ed",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ac1b14-4488-4ab5-941c-76cef6643261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751fff7f-b5a7-4185-a2ed-d46c60a9b7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c47c5b-9565-4401-8bff-3b188b16415e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877b52c5-fb11-45eb-8735-be5c6204413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc7b86-c1cd-4065-accf-ba1fb4f6d7d6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad105c29-81e3-468e-9e02-009a258b4224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23da9cf9-3766-4298-a724-dfc6355600ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f87ac0-773f-469d-955e-a5a1b6aee867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67d7e11-67d5-4a4a-97e9-e5735da1ebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe821409-5eb9-434a-97f0-a396e61faf92",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11ec553-27ae-4d38-a2bc-727d76724898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e72990a-5aa4-4261-aebd-46a4ba9f02fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133e573-c8fd-4acb-98ad-3d1659f27d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e478e32-69ad-4134-9240-92bcf061ba65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df48cb7-80d0-4178-849b-f5097a4d6e7a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10443b8a-f950-4a62-8089-c71255117496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619729e9-3e67-4697-a689-f335b8d78ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f33502a-b459-4508-a986-6b990728e94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6188ce22-9818-4ec2-a16c-e4bbbd51c289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e545f54-850c-4fa5-a44a-7034cae08b9a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034cf630-ad40-48fd-bf95-d8b9b85a06d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64dd6d6-f959-4237-b3e5-f353eb211548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44f53ed-97bf-4f94-b832-f7e96884785e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910df5ed-081d-4469-ac63-137fc90b97d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4318c3d-50a8-4e9b-9b60-ba8ec4219366",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0759d6f6-83bf-417c-9ba0-eb3428985a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d144df4-72b6-4580-a088-7f44fe22d5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb0d1aa-3e75-4428-a363-025b22b28dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4bc3d3-07fc-4ca3-8fcf-3bf7d9a9dd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dff203-efd9-463d-ae52-2bd5b30285e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1849c3ae-d897-4df9-8f64-b5f401b1b5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f816467-4881-4492-8b1f-bce026d8774a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699970f7-88cf-47ad-972b-4b6ca0dce1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0da9444-fb50-4c14-8a90-69ddfb27c564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc5f68-f246-4d22-8edb-b4e084abd593",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5281ffa3-de19-4ec1-ac51-2cfe9e514c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcac8b5-3d2f-459e-b3c7-7ab9f0d11c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d0f50-c48f-4eb3-8fee-4986b463187d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d454b365-7dbc-4336-b61d-2224ce82b951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920921b9-720a-4507-a3bd-1d2d440801fd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ea83ab-0cca-4b53-a0d8-3fe8070000de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec549a0-0e77-4b30-9d28-d21a8804fdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f85f3-c6e4-4074-9641-652f918d8957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83fdd70-4f24-49bc-9219-4bd6cdcd7e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6601af2-b59c-4b6a-aa1d-e83357cd2c4a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20420e1f-7811-4fd4-9d41-9cd3840d9edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341420af-6b05-4c42-a4cd-96cf3dcb7871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec7f3e0-47a2-4f47-ae05-00458c60a078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ffe8b5-9a11-4bb2-ab91-771bce1f38cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b679cd4-f05b-4d3e-8065-3431972f59af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05ad852-f758-47f7-812a-2bf3bbb0e812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba00d9a2-2641-406b-805d-9181aab9f8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a1d822-4a0e-4915-b853-4e6303bbffc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569fbefa-f492-43cb-8ab9-7d27e81eb116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aefdb4-2269-4a60-8949-9109d71b0383",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83407e53-0651-4a5b-a174-922dffbbcf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b438af-276c-495a-8886-893b9061609f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577c3e14-82f1-4bdf-a98f-f12aef825107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496fa079-381a-45ab-8da6-7d2f9e7c15a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666dc1f0-4f7f-4104-adb7-be9ddfe44f58",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6128349-cf8a-4517-9c18-bca158d15755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d64130-143a-4465-8592-ad76f11858b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2116da-bdad-4d53-9c5a-45199ccfcca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2644629f-036f-4678-8ed0-9ae964f1144f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1d68db-559b-441a-a52a-1e0a2710fb67",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3e84fa-41b9-4e58-99bb-6e65c6193976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39224765-6032-4812-af07-9c3ffd265000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20d42bd-f745-4709-a0cd-c25358518778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8020162e-4737-4f10-8e46-c1cd8524c0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2500957b-47ba-43d3-b807-e83fe3609e85",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e590ee7-3429-4746-b4a9-ae766090d2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc6dfe1-efd9-4bba-9ce4-a0793c56738f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab78dc17-1666-4af6-ba77-2fc4068dee98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32f61db-4edd-4ac1-b335-07b472fd13b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcc4991-3866-4616-a39a-16db18f75218",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f547c1-a015-4cd3-bcad-9e2271bee7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52f4dc5-1cd5-4d32-b6ea-c380372f3826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b587dfb7-cf8a-4309-824a-9ac929026c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847af33f-14ee-42c1-a1ac-bd093b1c6f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35529aa-4515-4e54-842e-9d060e78453d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5527e36-ea5e-42b9-9673-8d2ff0c8ca28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50650ad5-1491-4c6a-9fac-e9ea4ad93e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57497d9f-24c8-4709-aa97-1cbefc4ad678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c728d7a-801d-4651-b3fb-ec8860368881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795d8e26-200d-4a6f-b206-3edaa4dd5bdb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33a173b-be70-4fc2-ba49-82008eebdfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20c6dc0-04a6-4c93-8fa6-169fc20f2241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60a4680-2865-4e7e-9c47-9fd469480752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ccdde-87bd-431b-9384-d862ea80cc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7547147-49a0-4cd1-8bc2-c37536411a8b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ce4fa5-853c-4885-a8d6-7d46b0b8d5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42061e10-a843-4f1d-83aa-72e7c062d7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa52cb8e-8a5b-43d8-8055-fee481b193e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5150d3-eafb-446e-aaec-d80aa9c28390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90ab8d9-c389-43bb-a1af-d8c150dd4ce7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fab5b46-b4d7-42f7-a318-f734382394e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c66f56-b407-4746-b194-1733e20b0613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f0bb5-5e0c-4005-b162-4af2940c2161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bed4a9-4d5f-422e-97c8-ea500976fb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd720b-dfea-46e0-bea9-4312655826f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9c24c3-3057-418f-bd8d-1c95a48b79d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7590d2e1-946b-48a6-a254-995c271b1398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c22b55-aae7-47ed-a356-6525d51825ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7518717-bb56-41f4-a538-5866355d2d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cf5da6-de66-4a14-b916-6ff1445a84e0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f685e738-09fe-489f-826a-1aecda7d257a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a697cefc-c9ec-477a-a2b1-2286a43dba1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0e4ff4-13cf-478f-98dd-947bdf92757f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6149295c-8268-4c62-a4d6-b7b603aeed97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feef521-b216-43cb-ba4d-b1591dc89b62",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1a47f1-68a8-45d5-9c66-d66253b75cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479baa5d-2d86-45f7-9bc6-c4757975842e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec68a2b-50f9-4417-b076-52cb9bbfc31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40a0654-9554-4ddb-aff4-733a10afde10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790378d0-35ba-4736-b6d9-998a433d92b4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d17041f-b363-428c-b1c3-1b7c3e618405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba082bf-202c-49fe-b492-785888a68103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e286e-1015-478e-8ce1-7cc5a04ece19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41532a38-e7d7-48e4-a734-56262db20a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae72c378-8965-4bc2-8681-729b5ec63adf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bb1446-3497-41fe-a2e4-07c91851219e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1648914-2c30-4e86-81a2-3114bc0cd65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbfedbc-b078-45ba-9862-94f6bee862e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544c5c28-8fff-4ab3-9270-26f4a8ba6feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0459c-7589-4f49-afb3-6b10cc885489",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51849a6f-fd2c-4c0c-a4b5-4a489423bbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9569a38-f7f7-4b04-bf3b-1e1e1604e451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055617f4-e907-4cd3-b1d8-ed1306e3da88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f52246-109f-486c-a29c-8ed46b6dc5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3773d0e2-ecf3-4510-8e1b-2b02349ee847",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ce5795-979b-4690-b7d9-35ed818c2fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d135edfa-5ab8-48f4-b163-676094652ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a48851f-38ca-4411-a592-db09c67a08b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82743ac-ea0c-48ac-82c5-13a1c0333b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1936a74-cdd7-4839-9918-adb5e00f326b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4819462-60e1-4567-bc7d-a810d21ca3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac81a1af-ea00-46d9-aab0-b176d21d08d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5baf6c-8fb4-4bac-bb29-5b5ba819a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463c0733-89f1-41f4-9959-658596488490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870a92c1-68e5-4a54-834a-df199c3b6dba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefe4db0-4391-441a-b808-2af33a782599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99230d41-5154-46ca-a668-5627490c9c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f38168b-01ea-421f-8dc8-fb15d637dbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da26784e-e9fa-45c2-81dc-d2066bd1ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42530c40-f7a6-485c-a59b-01db5d697d4b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb398911-b36f-4d7b-9b18-e933066a8cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb548f8-718f-47d1-8215-240982a5d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b251b92d-d017-4d62-9e69-e6ccd1d07075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07192723-3621-4f4e-b127-a859753bab20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d74046-59bb-451a-b9ae-33192d7e1dea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d73948d-63bf-4932-a017-4e93a1045a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5b9684-421c-45b4-9431-12244c880432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fce73c2-7c2e-47ee-9c3f-c65efbab68c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca15616e-41aa-42d4-9d7a-218dc4c6a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f496c4-e2ad-4ebc-9995-5b330838ae62",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998cc4a9-71ce-4474-a998-fc8918421f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36832b5a-a8c8-4994-ae34-93e86cd5e676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c51a60-63ac-458d-a94d-a5b7163d24ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62df7a4-9297-4fde-9b38-62ca9ddfb699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3d8567-1423-4601-8f6d-8aeb55e44b71",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98616e87-6c68-4166-be29-048ede267fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5b82a2-af9b-47ff-be4d-14dcedd99660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66457943-41a1-42bb-b176-4692647c9e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47564b9a-2e04-4df1-a323-c4d15699efe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a3801b-f0b7-4098-821c-93a53e957fb5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be551e0b-f93f-4f2c-b4d0-a45382de0681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff64083f-952c-47b5-89f9-63c186b50656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b14e9c1-503c-4d1d-8522-a5e3943748dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb449771-5ec2-4c12-a220-6dfed4f1056d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9ed3cb-5ee7-4204-a680-80f33c32ab3a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79a5090-ea5d-4399-b997-7f8cffce52c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1adb2504-4440-4d90-9d98-87969a4a784b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa1241e-fea7-4065-862c-d7342ecb7f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5152f3-0fc4-4e42-906e-12d3982d40f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca611b2-b313-4283-897b-9eda1e43863d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09451745-eed6-4d91-a8f1-07c3d7463618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f76339-aa5c-45b8-9e8a-208dd4f796c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6491ec41-16ef-4dd9-a3f1-181b67eadaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe5a56a-2e41-447b-a1f4-b9c0bf9e3f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b164dd4e-c05c-4b47-a876-c80bda6eda2a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d9a485-f7b8-4231-931f-8c3b6ec70d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f65b10-d18a-47ca-92fc-d74a1ade2041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d049cc8-34ac-48cf-9857-995f045de9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae452ca-42d6-48af-9282-e450062ecf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbad3ccb-ec4f-420b-a4c2-4367b896fa31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb8c1c0-b456-45f1-97ea-de21a1109770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3104a2b9-fcfb-489b-9b6a-be6faf805259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9903c7-3120-4490-aa6e-cce943381cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4042e985-0817-462a-a443-ac8bea644879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888ed5fa-0d4a-49e3-b706-6966cbaefa52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3428668c-bc32-4250-b8c2-1c8e3951c673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3906a701-e1bd-4497-8b91-cbbf9bb81e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c67ba7-5854-4afc-a3d7-2562f175e73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a9c0a4-fcfe-4c7e-bfd4-1e6c55521ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f51a6c-d000-459e-a619-f5e3565d06d0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947eda61-f42b-4485-95da-669ab27d29ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384897e8-6edf-4eb3-8bca-be172b51a32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ad6cc6-c3af-430b-8ee7-538a7f58f261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc72f75-b1db-4762-aa62-2df21517ae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d349fe9-e521-4861-af5d-39c8490671e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246ddfdc-db79-471c-97d1-8d2217692b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc596e66-2a90-49a3-903e-2c774d8bdcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4632019b-3302-4058-84f1-c1c631552d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a5265b-2c4c-4f8c-bc8f-e5f5e040ebfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb68582b-5f3e-4589-b837-2cbc93ee2a83",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835cd51f-f840-41a7-99c1-85bd1484f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96a1d003-750b-4c11-9897-ad98d7b651f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864a3d8b-d0d3-4189-8483-3d7e8ed32abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24cdf13-35f5-4a87-a1ae-3062ea240960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b992e615-6b5b-4795-9433-02adf9047666",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb6228-6d41-4781-b50b-43b3a4a9780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ea04c6-1625-45d0-87da-1e2bebe76ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dc8b44-a02a-4e17-8744-955eda204bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200480a6-e288-41ee-8322-cf3e2cfd7b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65b4008-1b1d-4b66-b310-3ccd52e4fbb8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c21c1f-9137-4808-ad77-00f658873930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f8a459-ea05-4814-86b1-dc154f5dcb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b261859c-bba2-4d15-8e37-150408e1a20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659496f2-0732-457f-a7c9-7ac97b42f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb66d7fd-f24b-40dc-b730-6955f3d9eb96",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ca3e5-f575-4f8b-8dde-4b40f21762e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd183aa0-8f7a-4ce3-a6df-f9339df7931d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93944987-a8d2-4ad5-8348-8b2bf679d9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab15e212-f75c-4ee8-bb28-e66aad7a5eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba1c5e6-0e69-4e22-8b66-a97483dda922",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b9f4e0-1d5d-4839-80cc-79b4098cbc1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c6f315-c6c6-4d4d-8003-1c9037831bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec7643-1f40-4265-be30-c47d263b34b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c676ee6-5b5c-4732-9342-98dc9282af45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377daa95-a305-45ee-a3fb-52a194478527",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba3fe18-b025-456f-8a1a-0abc78f7851a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a60c07-02a5-41f2-992f-ea14abbd616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a05221-afc2-4f93-bf7c-e55f384cefcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36100de-d98c-4f34-a2dc-ca3621b8e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed1add2-3d10-4838-9321-9b5d1180f7c8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c21e287-5a4d-4739-bf13-16b0f7830cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c937f6f7-25ca-4f16-9ded-200dc477d0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43316626-c0c2-485d-aa89-bcf4cafabdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf24a62-63d1-4ffa-b701-dc24ce26a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dea36ca-f078-4cd7-91f2-4c298f0f4c1c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be3d12-e9f6-4f74-bf76-fc430a8764d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36481c9e-6293-416e-80d4-e9aab7afea85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb93287f-0f6c-4e0a-906a-e6a90e980873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2dca93-c2c4-4a00-904b-a940528b4d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a908474-c0cf-498a-ab60-76ed5d3e952d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ece1a-edfa-4c7a-9728-562b6805d86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c406ef09-55ea-4d95-b7bf-3940f5f1d09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7addad4a-710f-47f7-98e7-5df5c51d14ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d9e31a-a060-4737-b3b0-0612d74a1d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bbb144-ca8f-4317-b2a1-9ed3b33031b6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858bb1e4-bafb-4ed9-8a11-f41eb32b1a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343f55a6-15a3-42ee-bc55-c188390a06e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0216435-5deb-4390-8353-d31029248155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d894ef5f-c079-4763-9a88-a86432cc95f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ae3cb6-9983-49f6-b5c5-9f5ffb297235",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb732ad5-bba0-42d2-8c23-612dfe39d84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05a7b79-6b91-40ea-bbb2-2bbd61dfc8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899d47b-95bb-4f10-9bcf-81b5191c1303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090fd823-9864-4807-8ec6-3e2decd28811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb72181-7e03-4f41-b6a2-b4fc34ab6da0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55fb6c9-1cb9-4ee7-b1f6-5be0121e0ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d589cc0-69cc-4b2e-82b5-1ecf2e67a25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585db6a-f6f1-4157-955d-580893f1c9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25923318-e382-4d6e-b7ec-3a9f9803eec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb64d3-9750-4a90-8aab-b612bc6a375f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3fbc00-9b79-43c5-ae3d-b64e9f24da40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe5493b-235e-40a0-8104-0aaf06fb7524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc7b6c8-747e-4aa6-b720-6d0ba5462dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c531b4-bb3f-44ec-b14d-c446ce3c56bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b7185-0e26-411a-8950-40efed7874c4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79008fa7-2afc-4386-a23c-c88cb8b96324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b59e7a9-863d-4e59-a664-62aaf86105a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b5d97-30fe-4106-b9d8-4fa9114e3bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eec3795-dc0e-4efc-a357-f9224c34d84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ea877-c50b-4afa-91c1-84d244c9cc28",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46ec169-b111-44af-bdac-92bc43c1211c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a12791-34af-4175-b614-6e96d0980dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fc3398-59a6-4b08-ad69-616a3a285e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f794080e-09ab-43bb-b199-48ecdf9f344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ba3cbb-f103-4757-bffd-f0b52b2d23a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a42cf37-3531-4dce-bc8a-953c28390a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed9f5e6-39e2-4356-9528-c3e98e24440b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d1a2ea-4406-4659-9960-a66c7c14d907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0884db2-47ad-4888-8287-d573b42ca67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c410fa0-4e9c-410c-8197-790f26a8ab5e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4e7d2-8b7d-4b22-9094-a5d80d5748c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6615756-2510-4ecb-9f9d-1a30bd552b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b98f16a-ff54-4471-9ba1-4165ce5ff9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfa07db-8044-40e4-a5ce-3a1c7473fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373fd7a5-6097-4f2d-8923-5b2058f2548f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253ffaee-4883-4e24-9af4-5215f9fad4cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed1f7d3-a014-4820-b97f-6bd9d77e0e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf42089-69d5-4ebb-ace3-c7f7255aa207",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f37676f-263e-41ec-8051-b67413600594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7936829f-0838-4729-add7-5374a9890675",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ab8b52-5615-422f-acb3-57240ec052f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1150e89b-c563-404b-8002-2409a6c29217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af33ff-6847-4139-afe8-a99412a98647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d04821b-ddfc-415d-86e7-878fafa60383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d198842-acfd-4841-bd33-d4484702f4e7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8b2513-0d5c-4ba6-a197-5c3fa990de25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2d3f53-f25f-4885-9d90-43af9053993f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2026041f-5abe-4367-8f54-656eea9e6ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde2ce44-4a77-42e0-8798-0a84fa5bc497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f91e5d4-fae3-4d07-a7ff-bb368cfed373",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd65a4e6-54b4-4c04-ba59-0f012a9c9657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f86c7b-714c-40ab-b114-86591e10a834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09b348a-f834-427e-8666-a69d57217cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48138abe-19d4-4c94-b520-336b61f00205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2f98fa-3df9-450e-9e6e-d858f303ee1b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545b71ae-4a64-4ec7-9add-3b6239c4a088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676bfb2d-51de-4cdd-b4f7-465e6d1f11fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a075938d-0747-4d64-844d-f0bdeb0ee429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d3e87d-f039-4901-b252-7d889e30bdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f9bb70-9db7-4cf5-9e47-c7dc3e386feb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804e4fec-58be-4b71-ba6b-8636328dab81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be41b21f-14c8-4a3e-8f74-adb63cfa8330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5594fe-a1a8-4867-a3cf-310b81b893f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2e6ac0-5dba-45fd-bd0a-4adeace2ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d94672-294d-478f-a234-3fb82f4bb5d1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a3d104-d96c-4e7d-ac02-d740dedb9315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e97f1a-2dac-4af6-a7db-fde1e866d8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f25e1d-1b5d-4daa-9bd5-aa8bb7ec942f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6475ebbd-ba40-4411-956a-be78a43703b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bffce54-3030-4ada-b54f-2e508d87c9b2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01541bd-c7bd-4f4a-8aa3-1424ff1203c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1313cc39-0269-4b29-a125-073eab199dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5948d56-9eb1-4396-87a0-698b804267a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ef857b-9240-4c6d-8d0f-6a54326ae970"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42f95daa-751c-4e4e-8536-b495712fa38d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a314ff-1105-4953-8628-4e22982797b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7de15f9-efea-45c7-9c46-c39b3a292753",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bed032c2-45ef-4191-9d9c-4ce8bc3fa539"
                    }
                  }
                ]
              },
              {
                "id": "272405ff-13f3-4403-bf91-219e3c07aa12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a23f12a-11b1-4f8f-bf94-449b57957d49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b92976-70d8-4f04-b331-b22cc8fecee7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d523b48-b7ea-4fbd-9e61-d515da627d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e04f3c-35a3-427a-813d-80997e4b95b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c34381ef-cfa4-4790-846e-f7fd60a689ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d067d139-4cbb-4e81-8d3b-731cecc7d644",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87e39fc8-d358-410a-a989-df86a776ef2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f87c221-c328-4d6e-afcf-b7fb89e7e6eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c9c46ee-af94-494a-81c1-394087ba8f7c"
                    }
                  }
                ]
              },
              {
                "id": "a5357a87-b42d-45a6-b4a4-d7f2ede4bc3e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "110392da-514b-46aa-bbc3-a0d18755d884",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff50041a-54a5-45d0-880a-9ff602c51610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0471283-b7bf-4f75-a3eb-77cba8043e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43eb4e7-c70d-4a01-a925-d9c090100f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb82665-4aea-411b-a1bd-9b5ea8e6349e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8ab88571-38db-4881-a422-16410f884d15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7479e478-4f61-4050-a4c8-914427c749d2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c61e55e7-5321-47f6-8f7d-6f308c05df0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7523a015-495a-40a8-8e5f-571949f1dc03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc250005-6c73-4df0-b514-2be6cb870abd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c75abcf-1130-4fb7-8627-e99a0921a657"
                    }
                  }
                ]
              },
              {
                "id": "ec5a7832-3aa7-4091-b626-ecfb89b796c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a9292b-61b0-4e6c-a9ef-c271b57994e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "72897ee0-4687-4957-a2be-faab8932225d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2921a7ff-3ce9-4a1c-ad18-99fa0cfb011c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29988594-c2d4-4256-9537-4513e1d1dadd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee26ffb9-82fe-4852-a48b-c4d6f980a6c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9ceeea3b-cfe2-4904-8af7-d32e463fae1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e1f6ce7-1d78-469e-8ea6-6fdbd392141e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "172b19ca-225e-49c2-9f55-bdcc5ef69724"
            }
          }
        ]
      },
      {
        "id": "4e0509aa-a5e6-4a31-82bc-22d1d81d02f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3d629f6b-2ec3-4576-a06a-942eab21a285",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a3dd79d-6624-4601-8968-812cc113d6b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2f657cd-7431-4ed9-929f-1461e0834989",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9d8af7-dc83-4d32-a0a0-5a72cb5795db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5ce72fe7-c6d2-4df2-bee8-3b7b24d3107d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef825ca-2009-4f20-b1ef-3fa89e06cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c7e6625-661d-46ec-b0bd-47f4c8d4227d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0749750-6ecc-46ec-b08b-4efc9c2c04f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d84f6dab-5bb1-4cc3-b365-0cb9bee224fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4194045a-ebb4-4169-b8fa-a071422e33a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1eaec00-7263-4ec6-8af7-83f436d0527d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65520e6a-c49e-4d77-8f89-b620bdba1c6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f0e8967-9f5d-473d-a90a-c5cef7c6ace9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62e8ee0e-6a7f-4324-8705-b65bb59d58e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffafd299-9d21-4e14-9ea8-21960409168e"
            }
          }
        ]
      },
      {
        "id": "b3aac384-1ca1-4333-8e68-be7c64b4ff9f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d210f47f-55d4-49ed-89cd-f15d2ec25142",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63333bff-0318-4bf5-b3c2-b00e91740af0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f9a0ce2-676f-4565-9af8-82ee3ba03cc4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77ac2f4-53b1-49a4-978a-2fae3299b2eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26007b12-287d-445a-876f-6ff172216048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a2bd6-7549-411b-a761-b40021738368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fae3f6c8-8f12-4974-be96-98425ecce87b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d02e35-993c-46f7-97cf-483873a02907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38b482f6-c8d3-4bf4-9f5b-4fc169d16c0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dd61b3a-a461-419c-8297-20317572c850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83c9a1e5-8136-4418-809e-39b5d39b94aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "825c3a88-1808-46e4-83d5-007e4d3d0cde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91037e77-8ee8-4c3b-a034-8abe5d85a0b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "948009d4-f6ba-44ba-986b-a11b8e7009ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f13ec73b-f088-4423-ace6-efc969476502"
            }
          }
        ]
      },
      {
        "id": "0a325ac6-9e1a-441a-ac3f-73c0aa5da276",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "300aad9f-e600-4a0e-b36a-6f5ead2c6286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14553af2-f3f4-4b33-86f8-8e291dc35598",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99351ae3-6696-440d-8ee0-a9587c844fad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bd2ca1-7e2c-44a0-a553-c8f05785735b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a673d4-0671-40d7-8bcc-6cbcba4bd6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7615262c-b117-454a-80e5-c0cb6b2edb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc5d3d1e-6c3a-44ae-8be1-d18762c84880"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc1897e7-23f7-4de7-b053-7d9078858bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54d737f-8c7e-4f49-8b24-f135b0b7015b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f447381-9cbc-40cb-859f-17f42df72b14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d893fbb-563c-4654-b639-66bdb414725c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f08046fc-c586-4ed7-a4dd-cabe5d9510ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c11751e5-aaaf-46e1-8901-adaab7bc73f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60cf39f0-ac7e-4148-be40-a4681f258c9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9e781e1-c253-48e2-950b-f06e190aba82"
            }
          }
        ]
      },
      {
        "id": "4a1ec72b-437f-469f-91c1-80fcff634617",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2846c8f8-12e4-4f9f-89c3-e72c277c0877",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e62ae084-62df-4ddb-8b53-cb54e7dcd77a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c9b95f86-c6c9-4515-b484-7551d7547a61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f534fe8-c7e7-41c7-a2db-aac3db6e046f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bc4f893-8d03-4757-a202-78a875a78236",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.2103174603174,
      "responseMin": 5,
      "responseMax": 8900,
      "responseSd": 599.4933173210501,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713400481492,
      "completed": 1713400523187
    },
    "executions": [
      {
        "id": "984dc617-d3ba-4478-b42e-8804cbf3ead7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab566f69-eace-46ef-9c2c-79df8725b398",
          "httpRequestId": "d9a05654-9a10-471b-a4c0-f602b85fe8d5"
        },
        "item": {
          "id": "984dc617-d3ba-4478-b42e-8804cbf3ead7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89c74935-e2e7-4e24-9aac-7d2629dc3f1d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "f386227f-7c69-4144-a34f-8700976fb943",
        "cursor": {
          "ref": "cc6f1a21-6f7d-4e0c-b2a7-eefbf0826cb8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8fefeea9-3a62-4dc5-a656-fcd4375b7967"
        },
        "item": {
          "id": "f386227f-7c69-4144-a34f-8700976fb943",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "054c7600-1837-4bb8-ab73-80d963022405",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d3e9f48c-9d8d-4cc7-a862-b002c503976c",
        "cursor": {
          "ref": "c578e062-2b7a-4915-b012-62d87aec7c41",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8ec68cce-ff82-4cb7-9810-51a4fef1d8fb"
        },
        "item": {
          "id": "d3e9f48c-9d8d-4cc7-a862-b002c503976c",
          "name": "did_json"
        },
        "response": {
          "id": "8de06ac3-5ef9-4afc-9cad-ca0da93eb643",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ef2fe-9b97-499e-9d0a-8dee71b42fc6",
        "cursor": {
          "ref": "cc7f95e3-eff9-43b3-b1c9-ca466f3e08b9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62d88ab8-31bb-43b7-8d70-e138bf9c2361"
        },
        "item": {
          "id": "2e4ef2fe-9b97-499e-9d0a-8dee71b42fc6",
          "name": "did:invalid"
        },
        "response": {
          "id": "72797fa3-0c59-4fca-85ff-4353b46eef4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 312,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ef2fe-9b97-499e-9d0a-8dee71b42fc6",
        "cursor": {
          "ref": "cc7f95e3-eff9-43b3-b1c9-ca466f3e08b9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "62d88ab8-31bb-43b7-8d70-e138bf9c2361"
        },
        "item": {
          "id": "2e4ef2fe-9b97-499e-9d0a-8dee71b42fc6",
          "name": "did:invalid"
        },
        "response": {
          "id": "72797fa3-0c59-4fca-85ff-4353b46eef4a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 312,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d14d81c-3342-4a2a-b930-2a7b1ad9def3",
        "cursor": {
          "ref": "25a3c637-65bc-4c1f-8658-c2ac44d8058c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3895fade-cb86-4f95-b1cf-1f2b3516129c"
        },
        "item": {
          "id": "2d14d81c-3342-4a2a-b930-2a7b1ad9def3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ded812bd-85fc-4056-8810-ca5318e12464",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6851bf1-b33e-441e-a701-6a909117bab9",
        "cursor": {
          "ref": "e7dd6c04-be5c-46cc-aa02-690ec0eb8e68",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "01e1977e-0644-44f4-98bf-b70503c82a65"
        },
        "item": {
          "id": "e6851bf1-b33e-441e-a701-6a909117bab9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f374c7b9-d913-48cb-8fc3-2375705467a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bde40c-4263-4eb6-b2da-bc119c409576",
        "cursor": {
          "ref": "a89591b6-7131-4181-93fc-fa6f199326b1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9a0fbe0c-e6ce-4fd3-8482-c71dbcceedec"
        },
        "item": {
          "id": "81bde40c-4263-4eb6-b2da-bc119c409576",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a476677c-f645-4b25-819b-e5e2c7d065b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040afcef-5546-42ab-aac5-62766475c721",
        "cursor": {
          "ref": "23d6e518-7976-48a2-9d2f-4e7a68b73474",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "57b0e12f-c2ac-4a0a-9bf8-cae294bf85a4"
        },
        "item": {
          "id": "040afcef-5546-42ab-aac5-62766475c721",
          "name": "identifiers"
        },
        "response": {
          "id": "19bc03ef-cf1b-4ba8-9722-1b3603880c88",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0157e360-8bd3-40d2-84ca-87f637e54408",
        "cursor": {
          "ref": "fcf02dba-432f-438f-9d9a-3cd6ab5077f4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7b50333b-0883-4388-8a5a-8e6be015f2fc"
        },
        "item": {
          "id": "0157e360-8bd3-40d2-84ca-87f637e54408",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f1a110c6-cc76-4ae4-a4ff-0bc2546c7f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada28600-3201-42cf-b049-c2fa6b5c48d4",
        "cursor": {
          "ref": "dc73cc08-01a7-4d69-91f6-906b8c6710f5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5b265dd-be4c-4f4a-ab4a-dbc7cca2b0ab"
        },
        "item": {
          "id": "ada28600-3201-42cf-b049-c2fa6b5c48d4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bf576da4-8573-45d2-8195-50ec02b07682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12df3fa-82e1-4dd2-a9ea-c94193bfb5cc",
        "cursor": {
          "ref": "4c7b6747-0d33-4f92-b6b9-c26ae76e473c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "68784f6d-0d8c-4fc8-ba61-ba08d7cdd2ef"
        },
        "item": {
          "id": "b12df3fa-82e1-4dd2-a9ea-c94193bfb5cc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a2c6351-a836-418b-ad93-beccad01dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1da23b-d836-47de-be7d-e74e6a6e2a56",
        "cursor": {
          "ref": "a7b29099-7a05-4fc4-8316-f2e531fd75a6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9d78b883-1c08-4321-8849-284b80469198"
        },
        "item": {
          "id": "6c1da23b-d836-47de-be7d-e74e6a6e2a56",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "faff6602-fe28-40a4-ba8d-036b0f9137bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc77c36c-0edc-4cc6-bb74-1cc90de7117a",
        "cursor": {
          "ref": "caf1f9bc-2659-4e05-b09f-62220e7cf698",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "109e6115-7bcb-4f8a-8ab9-0f8c93fb119a"
        },
        "item": {
          "id": "bc77c36c-0edc-4cc6-bb74-1cc90de7117a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1aedb59-9d78-4f78-af38-3159bfdea42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ab3816-de56-4512-ac15-9b7df1a60b1e",
        "cursor": {
          "ref": "6162c9fb-2f74-4792-b804-303a38f243c4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3e4d321b-821e-4183-a20c-2cc97d0ea025"
        },
        "item": {
          "id": "09ab3816-de56-4512-ac15-9b7df1a60b1e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f1779425-a167-40ac-b817-1ff31f4f1c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0130be78-9ae5-4768-b377-02b833799194",
        "cursor": {
          "ref": "3f2f07fd-69ec-4d1a-a1cb-b209a104518e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b6f06a7-0359-4cb1-b91c-060561b0816f"
        },
        "item": {
          "id": "0130be78-9ae5-4768-b377-02b833799194",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d9f87c27-537e-44f3-be51-5436a017286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338a4b84-13c7-4089-aa39-53c5996f9855",
        "cursor": {
          "ref": "508ce013-1147-4a80-a3c5-f04e2920a381",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "86b5d523-ae8e-40fb-8bbf-2d031d250665"
        },
        "item": {
          "id": "338a4b84-13c7-4089-aa39-53c5996f9855",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "23829b65-3258-4a6c-94e1-2e351747701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff7092f-2fc7-456f-890f-927b1df95e4e",
        "cursor": {
          "ref": "358c7831-ac25-47c0-8e23-963c1774ac19",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2d65e077-43c6-45b0-b919-b1cee8fc1eef"
        },
        "item": {
          "id": "4ff7092f-2fc7-456f-890f-927b1df95e4e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cfde64e5-e1cc-4da1-ad40-dae5c2584e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b794da2d-228f-4343-9819-35547502483c",
        "cursor": {
          "ref": "d89f1567-cd2a-42e9-a6d5-831a5f58d995",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d5b91434-fa4a-4f0a-907a-b15e4f961d47"
        },
        "item": {
          "id": "b794da2d-228f-4343-9819-35547502483c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e36de407-7bdb-488e-90df-578b2906224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f52ab-478f-4610-bd5a-7bf6afa5931a",
        "cursor": {
          "ref": "f2af9dea-798f-4eb9-9ab4-35b1b21626f3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3c9c08b2-a547-49f9-a4e9-94fbb1a51e56"
        },
        "item": {
          "id": "dc0f52ab-478f-4610-bd5a-7bf6afa5931a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2171f633-7332-41b1-a0f7-4ab3e9d71465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bd0ff0-ad93-4a58-bd7b-8d9f767ec2c3",
        "cursor": {
          "ref": "db86e55f-d001-4a6b-b922-01d2bae04ac4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c856ac9e-0652-4244-a8ba-9dbe310b0bb3"
        },
        "item": {
          "id": "d6bd0ff0-ad93-4a58-bd7b-8d9f767ec2c3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "451a0331-eac9-4de1-b294-9eeb205a9e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ce86f9-0a03-4437-9332-d8f80bdc35bd",
        "cursor": {
          "ref": "c1825564-dfb7-4828-8f3a-f64d2a31cdc6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "188d8673-1b8f-4d59-9233-42e95fac4020"
        },
        "item": {
          "id": "63ce86f9-0a03-4437-9332-d8f80bdc35bd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "495f115b-b67d-48aa-8b49-0730d9339837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb0e45b-0cb9-4664-934c-98fb88c5967e",
        "cursor": {
          "ref": "24a844c4-b64d-43d2-8dd9-29eef04008fb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "757b7cb0-99a4-4a0d-bfc9-472f1229b7bb"
        },
        "item": {
          "id": "fbb0e45b-0cb9-4664-934c-98fb88c5967e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "94df0fa5-740b-42ae-abc0-97a4a17087bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2740954-53d6-4fbe-a399-7e2201167075",
        "cursor": {
          "ref": "0b1be1bd-837d-4db5-8721-b2e25e0e2689",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6abd5171-6085-4987-af67-55ca454c56f8"
        },
        "item": {
          "id": "a2740954-53d6-4fbe-a399-7e2201167075",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d1f46268-2aa2-4e66-ac1f-dcabaaca78b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616d8902-8be3-4836-8192-43d902dc12fe",
        "cursor": {
          "ref": "7a02ce81-e7ee-4e94-9191-13b984444f0a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "10ba677b-564b-4af4-b020-5c2bf21c1176"
        },
        "item": {
          "id": "616d8902-8be3-4836-8192-43d902dc12fe",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "01ac54ef-aa99-410c-a5b3-bbea9e4866c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbbd130-a877-4f31-802d-bb36fce9151a",
        "cursor": {
          "ref": "08ad1a44-12ea-4e73-ab76-cc0afaf6d80d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "16a1c651-edaf-4c40-b6f9-e773970ed4d2"
        },
        "item": {
          "id": "7dbbd130-a877-4f31-802d-bb36fce9151a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57d146a8-02bb-4d58-b18c-f0dca16676d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfd8981-530f-4038-ae31-148d1a83729a",
        "cursor": {
          "ref": "3cd26d5d-893a-40c5-a364-276c4e9fa7bf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d9ecacd0-966e-4068-9814-2e210f965833"
        },
        "item": {
          "id": "3dfd8981-530f-4038-ae31-148d1a83729a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "109498d3-268a-47fb-b7f1-e82c6d4bea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ab992f-5f9f-406b-82a9-7c5f854a4004",
        "cursor": {
          "ref": "ce7494cb-f211-40d0-957f-a86ecce828a8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "777c9074-c29d-4227-af8b-d794d3d347dd"
        },
        "item": {
          "id": "29ab992f-5f9f-406b-82a9-7c5f854a4004",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4479ab35-0849-42af-8b52-71c56a6d3b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7989ca14-6531-466b-ba37-9d5cd55fc3fb",
        "cursor": {
          "ref": "9754adab-92c8-4bb2-b4fc-eeea41fc1c9a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d9b562e-ff32-48d5-812c-1975e8b3e503"
        },
        "item": {
          "id": "7989ca14-6531-466b-ba37-9d5cd55fc3fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aa26b372-23d6-4c70-bbf0-277a602851a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eceafe5-873e-47d3-88c7-664940f37c13",
        "cursor": {
          "ref": "b9f71d47-d294-43c5-9d25-16cebf1d954b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f87e2c41-7d7b-415d-a44a-e35ac179219e"
        },
        "item": {
          "id": "6eceafe5-873e-47d3-88c7-664940f37c13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "def614b0-a527-496e-b1d0-1ce6b7717afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbdc65f-d27e-457c-997e-73a9c50736e6",
        "cursor": {
          "ref": "e8c75f9e-7688-47c2-9399-437ec7f372b7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ba8c898-9a9e-499a-8c80-a653d235f361"
        },
        "item": {
          "id": "edbdc65f-d27e-457c-997e-73a9c50736e6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "acb0fabe-9cbe-4663-bb38-5ea60e471182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883c4422-6e1a-4e16-a460-65a5c4d1c3be",
        "cursor": {
          "ref": "37ff5b55-2c80-4dac-8942-bffa37d8bf24",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e4586d1-689d-4d67-880b-4e68dae2a9c7"
        },
        "item": {
          "id": "883c4422-6e1a-4e16-a460-65a5c4d1c3be",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8fa7b5dc-f2f5-4c40-b89e-235d1bb409e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5963c5db-0925-4a86-9459-ddc5b9ced4f6",
        "cursor": {
          "ref": "34956ff2-1a4d-426f-a933-d14a1e80c05c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3fa037e1-cbff-4b4d-a78e-fdc6980acb89"
        },
        "item": {
          "id": "5963c5db-0925-4a86-9459-ddc5b9ced4f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3bd08d7c-af97-4e5a-b017-7c7dd152f066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e25ab06-d42f-41ea-affe-c95a85c6700a",
        "cursor": {
          "ref": "f23a084c-330d-42f4-80a0-848fb42f0762",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c1f7bd71-ea08-490a-b97b-5da087a15ddc"
        },
        "item": {
          "id": "9e25ab06-d42f-41ea-affe-c95a85c6700a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c432f870-4f05-44b5-aaeb-3f7b9166810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15abf21e-f23d-455e-9fdc-11d7559910e1",
        "cursor": {
          "ref": "0401bbf5-97ce-45f4-a0f4-ddc59be56fb2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "504ff43e-2808-4c5b-b6eb-eb5037532006"
        },
        "item": {
          "id": "15abf21e-f23d-455e-9fdc-11d7559910e1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "93fbb4bc-0761-4147-b77e-e09f48583d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fca26e3-c2d8-4981-a81f-be9948f46148",
        "cursor": {
          "ref": "2617004e-2191-43e8-8d3c-d4bdb658deb7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "613838a8-3de1-4657-93fd-83e7bb2a1d84"
        },
        "item": {
          "id": "6fca26e3-c2d8-4981-a81f-be9948f46148",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "66123635-b294-4a37-810a-ae9d7ca52b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388b5db4-4086-4ff3-8fde-6f077d699376",
        "cursor": {
          "ref": "f58fdc09-e0df-456b-9cd2-7f8089f5b38f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1ec5a43b-5831-4550-ba6a-fd671cea3a96"
        },
        "item": {
          "id": "388b5db4-4086-4ff3-8fde-6f077d699376",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7af0979b-61dc-4b93-9ae1-d37d589db9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5a593a-12a9-488e-b8b2-efe565dcc490",
        "cursor": {
          "ref": "57ec658f-3007-4082-ba52-99e1db8a0ced",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "854e6722-ff7a-4f97-b542-c390f217db20"
        },
        "item": {
          "id": "8c5a593a-12a9-488e-b8b2-efe565dcc490",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5ea5e99-5996-4f30-aaf2-0f4a97b06896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c5a6a-990f-4f19-acd1-af31d8c81455",
        "cursor": {
          "ref": "1bffe998-b59c-4a75-9c21-c736d472fba6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6438530e-a424-4781-a58c-0fd666a5f8ce"
        },
        "item": {
          "id": "db4c5a6a-990f-4f19-acd1-af31d8c81455",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "687f2264-f5c0-49c1-8911-e64d4adbabfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be83888-d422-4bf4-9ec5-b9a7f96a1388",
        "cursor": {
          "ref": "f846f6cb-efc6-4257-81a2-d4d885e952c1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "92ccaa8c-dd34-4380-87e5-e9368c3475fa"
        },
        "item": {
          "id": "0be83888-d422-4bf4-9ec5-b9a7f96a1388",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "92317566-6f90-4907-8fbc-43e8ab2e4ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439fb1cb-a9e5-44d0-ba48-cf22ccf44f10",
        "cursor": {
          "ref": "c805cc4f-b1f0-42a1-883c-1e75e8614a84",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "84c92649-a3dc-4817-9557-658a4c16a03c"
        },
        "item": {
          "id": "439fb1cb-a9e5-44d0-ba48-cf22ccf44f10",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cfb786ab-4802-4d9f-a253-e3d6a5410e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2f92a3-7c14-40bd-9b4b-38cbf1fbaeac",
        "cursor": {
          "ref": "43125b49-7623-4ffa-bfc5-4ce6d0089669",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7692d88-8d33-47de-9655-07421a03d584"
        },
        "item": {
          "id": "ee2f92a3-7c14-40bd-9b4b-38cbf1fbaeac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ed35667c-234e-4fba-a185-8ee98ba67508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcd1e3c-a266-40a2-837b-3f6c91a96a91",
        "cursor": {
          "ref": "bcab6292-9ea5-465f-b3ef-97f1f2f2e6f9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed4d49af-3e91-4cbc-8e60-1d3b55858a82"
        },
        "item": {
          "id": "dbcd1e3c-a266-40a2-837b-3f6c91a96a91",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d672601d-dccf-4de0-8b54-4b25d3c2ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fbaeb3-14b3-440d-bb07-a5368abfe2b6",
        "cursor": {
          "ref": "3ea405b7-44bc-4966-b9e3-0f2c63e863ef",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "74cd8b17-2f06-4048-ab5e-05e9e071dabd"
        },
        "item": {
          "id": "c8fbaeb3-14b3-440d-bb07-a5368abfe2b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9cbf86a4-adb7-47b9-be54-a5bd3a413ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d07a8a2-94c6-4eee-8207-715e413ae0de",
        "cursor": {
          "ref": "7308235d-451a-4d52-b9c4-0110c9b9fc7d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ebb4f20-3021-4e98-9db0-2e5047fd8470"
        },
        "item": {
          "id": "3d07a8a2-94c6-4eee-8207-715e413ae0de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8c5ec8f9-3a59-448a-a12f-57ef5616253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53225f3-0b7c-4d1c-8713-03d8dddd5c6b",
        "cursor": {
          "ref": "80878999-c502-485e-ac67-dfaf414f34f7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "782cdb28-a6b6-46a8-b7a3-a5561e8fbd82"
        },
        "item": {
          "id": "e53225f3-0b7c-4d1c-8713-03d8dddd5c6b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "724092ca-f491-4bdd-b37e-afb6e98335cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0984c4aa-9b5b-4343-bfe4-af2659fd4666",
        "cursor": {
          "ref": "5f3e7598-ce2e-47d1-ac62-7696213e1ef0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6ae7402a-45e5-4d01-93a8-e08583c54a22"
        },
        "item": {
          "id": "0984c4aa-9b5b-4343-bfe4-af2659fd4666",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2d54d3ca-2cac-4090-8a67-dd3c3f9ee8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317608ca-253b-4c71-9ee3-9644e857b70f",
        "cursor": {
          "ref": "5790089a-98f6-4704-8884-6af110a8e360",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be7ec553-115c-4bc9-9fb3-9c7365c1f3cc"
        },
        "item": {
          "id": "317608ca-253b-4c71-9ee3-9644e857b70f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f1368bf7-4be1-48aa-9fbc-f17791fbd3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564f46d7-7398-4af6-a60c-078d5eaf1528",
        "cursor": {
          "ref": "5360a7c2-8629-42fd-aef4-35acf44b21c1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c7a13e4d-5198-48ad-87e2-7414ea4a814f"
        },
        "item": {
          "id": "564f46d7-7398-4af6-a60c-078d5eaf1528",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "75282783-991c-4d5b-8215-38621e5ca9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2775f224-7065-4c34-946a-6a27a67f1208",
        "cursor": {
          "ref": "e3126a45-37e1-4d72-9455-c21ce7e681c2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "800755d5-9b06-4a5d-b9ab-3046f8a05fc8"
        },
        "item": {
          "id": "2775f224-7065-4c34-946a-6a27a67f1208",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a71193e-cf99-4ed3-9ec5-3bebf75d18c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f69cbed-5821-4ec6-ac57-cc42dd5039b5",
        "cursor": {
          "ref": "ac703373-7af4-4c8f-87d6-61ab0a11f4ce",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "692cb5dd-632e-4d5c-b4fa-644aa797925b"
        },
        "item": {
          "id": "7f69cbed-5821-4ec6-ac57-cc42dd5039b5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2edcc9d1-6742-4365-8aea-fd8f3bd1a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b20af9-3501-48e5-9bb1-12cc88353884",
        "cursor": {
          "ref": "5cedc737-7e5c-4bd5-9096-9cf648fd30f4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6419543-d098-4fcd-a919-b403b7e6e54a"
        },
        "item": {
          "id": "09b20af9-3501-48e5-9bb1-12cc88353884",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5161f3a9-9e4e-4e7f-bbe8-2ba28d7d70c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6619f979-3de1-4490-96fe-65fcfb7d59a0",
        "cursor": {
          "ref": "031328c3-fa55-480c-94d6-1287831beeed",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63f7f212-aa61-4de3-ba05-4b429416ff6b"
        },
        "item": {
          "id": "6619f979-3de1-4490-96fe-65fcfb7d59a0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "62b4c6c6-51c7-4dfb-86e9-8bed2fc24af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48acba8a-7347-4bbf-aa94-19de6356e190",
        "cursor": {
          "ref": "8e7e2f1a-ebf3-4b1d-a34f-cb80c6d291a8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d9ae7ef5-42f8-4258-a4a7-52fa16ee22eb"
        },
        "item": {
          "id": "48acba8a-7347-4bbf-aa94-19de6356e190",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "49a84f53-a844-4070-8bd1-8157df321f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9066a18-19ca-4b8f-93d6-aeab7725fa12",
        "cursor": {
          "ref": "873e8b97-278b-498e-878c-175664927568",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60c38210-f5cc-4822-a349-681d5e033c1f"
        },
        "item": {
          "id": "f9066a18-19ca-4b8f-93d6-aeab7725fa12",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ef62b7f1-884b-45fb-866a-585717933f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74b0344-7187-4090-91ba-4e00a3448034",
        "cursor": {
          "ref": "42ff30df-e093-4b39-affa-7caeef0f20a9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15ee6427-680d-4176-ae8e-7cb60687192b"
        },
        "item": {
          "id": "e74b0344-7187-4090-91ba-4e00a3448034",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "40c94b74-5db4-4573-97c7-9f92a2169206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd420dd-e48e-4c5c-89a5-26b9e619b0e6",
        "cursor": {
          "ref": "0fe1ba08-6db9-446f-8eda-19c7315d9a8b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5cf76fa4-f0e1-4ed3-9899-68afc47efbeb"
        },
        "item": {
          "id": "7bd420dd-e48e-4c5c-89a5-26b9e619b0e6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8a5e226a-4160-43d1-8ded-9f65471206cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ac1e5-3643-4652-bb5f-3b2a33cc86de",
        "cursor": {
          "ref": "bf9d9f9b-a7a6-4bf6-ad4d-d9f562c7f1ab",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "30ea15d3-9b48-402b-be54-bd5e56b6008d"
        },
        "item": {
          "id": "f64ac1e5-3643-4652-bb5f-3b2a33cc86de",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a2edad27-3204-4325-ad49-df9d9787ce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef23c326-4bb4-4c30-8023-09b5b35d70a8",
        "cursor": {
          "ref": "8f27ac43-89c3-4eeb-959c-dcaa775fc83e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6d57a332-df83-46d0-a8d4-71e7aacbf9b6"
        },
        "item": {
          "id": "ef23c326-4bb4-4c30-8023-09b5b35d70a8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2f3a479-6aeb-4171-931d-44ef86c2dcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13fc3e3-6aff-469e-a8b6-0a89df443ae7",
        "cursor": {
          "ref": "d1630d61-56c3-407b-a4c2-8bd7be6868be",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0209af64-a41a-49a4-888f-3ab58219f48e"
        },
        "item": {
          "id": "a13fc3e3-6aff-469e-a8b6-0a89df443ae7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d80fe137-4b32-4856-857c-5468620566e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f047f1-835f-4a8f-b289-c29e4929d745",
        "cursor": {
          "ref": "a14e9453-f6ae-47d1-b411-4e8503235dda",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c08ce59a-e811-41d1-a014-f056eead39cd"
        },
        "item": {
          "id": "10f047f1-835f-4a8f-b289-c29e4929d745",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1de914b5-b5d6-4c6d-acbb-390cd0fecd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3e380-32ba-4e62-8179-dd7ab183de9f",
        "cursor": {
          "ref": "50fea692-e095-4c91-b054-ef866c1e3986",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4c65d9b-7bae-40a6-bb8b-782939e832dd"
        },
        "item": {
          "id": "7ef3e380-32ba-4e62-8179-dd7ab183de9f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6a6dbfea-05b3-4015-992d-9b4d4193caa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af75649f-f5dd-4e47-b019-ee07e49f007b",
        "cursor": {
          "ref": "fb69916b-9f1d-4b7f-92a7-fec18d223d33",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b59f153-b158-49b2-b0b8-96ef8e8389c2"
        },
        "item": {
          "id": "af75649f-f5dd-4e47-b019-ee07e49f007b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "125d8ef2-8648-4b2a-95af-33c0398f66a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf02fb6e-6be1-4652-99aa-7de409e29784",
        "cursor": {
          "ref": "71154053-c671-4bce-baad-0118c00ef328",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d26b1ec8-0097-42ca-9e51-52ed372625b6"
        },
        "item": {
          "id": "bf02fb6e-6be1-4652-99aa-7de409e29784",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7f611cc8-a82a-46f1-b335-f007f19cd6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f00ab4-23cf-46c7-ad30-e5b5ce799fce",
        "cursor": {
          "ref": "67f1ba64-34e0-4d55-bc28-803c371f2708",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d345759-b9b9-4a60-b6b3-bd9336406d9a"
        },
        "item": {
          "id": "02f00ab4-23cf-46c7-ad30-e5b5ce799fce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6810ef64-e9e3-4549-954e-998cdd4dcd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede12128-d61d-45f2-bed0-2ca04f8c6aef",
        "cursor": {
          "ref": "9a90c5e4-dff7-4ef0-93f1-450fb5dff10d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e8f01620-f056-41ef-9274-c54394b340bf"
        },
        "item": {
          "id": "ede12128-d61d-45f2-bed0-2ca04f8c6aef",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "746b27ee-2d1a-4e10-9f7a-2e3efa2efdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3c01fc-e06d-4f9e-83d3-49fb1422bdf6",
        "cursor": {
          "ref": "1a73f62f-3d4c-42f4-bd47-18f773a9e026",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7285a60d-ddc3-4f8c-82f5-929fd527bf7f"
        },
        "item": {
          "id": "cb3c01fc-e06d-4f9e-83d3-49fb1422bdf6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fca91849-0486-4fc2-8568-e5661f305536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622624ce-d77b-4a8b-8303-961ecf4c7512",
        "cursor": {
          "ref": "98e6cf88-e84f-4896-91e2-8558432c343e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6b826deb-4e05-4aaf-8ca9-08358d15ef90"
        },
        "item": {
          "id": "622624ce-d77b-4a8b-8303-961ecf4c7512",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4ca891e-b8a2-4d38-bd30-d49ca42489d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3549e853-93c6-436e-964d-2588bfb2d255",
        "cursor": {
          "ref": "87b0cfd4-4926-4cf2-b09d-e3ca959cc0bb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "94f19453-8a32-483c-aa54-fc7d56b2421d"
        },
        "item": {
          "id": "3549e853-93c6-436e-964d-2588bfb2d255",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ccb03c6b-c677-4019-9b3a-82f97b20ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a54fe-53e2-408a-8d3d-4826eda239ef",
        "cursor": {
          "ref": "f5ea7c13-e305-4251-8665-3255fe5a30ad",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f43ab59d-9107-462f-aba9-5bdfc89f8c86"
        },
        "item": {
          "id": "138a54fe-53e2-408a-8d3d-4826eda239ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3da33929-6ce2-4749-af66-5bded41f3740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ffee48-25eb-4dba-8039-a36d26adc335",
        "cursor": {
          "ref": "b5b63b67-7ea6-47ba-89ab-7f1dfe8d6640",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "15e19f31-e356-48f9-a5d4-ec295363af89"
        },
        "item": {
          "id": "71ffee48-25eb-4dba-8039-a36d26adc335",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "da22986d-7119-4649-8c54-e7c1045b5b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e3b40a-34f8-4beb-9b2f-51070a2cbcd4",
        "cursor": {
          "ref": "b43388ad-bac7-49b6-a434-2bdb7e6a90d1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b14d10b4-4ca3-408d-a808-e18a7bc21d7d"
        },
        "item": {
          "id": "d6e3b40a-34f8-4beb-9b2f-51070a2cbcd4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "97b39b39-101b-456d-95d1-ea1d8aba702f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41920d5-bf26-40d5-9f45-027f5952db85",
        "cursor": {
          "ref": "11da3c84-e625-4ba2-b9ed-cf0da71072c6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "af95af51-91ff-4ff4-a162-86e0206a49f8"
        },
        "item": {
          "id": "f41920d5-bf26-40d5-9f45-027f5952db85",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "04cc253c-9f7d-4553-8715-ba8ae070204c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a54754-dbf0-44a3-ac5c-3b5120f8d2a0",
        "cursor": {
          "ref": "b5aac210-95ac-4eee-a506-5852b977e024",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c9303d6d-4dd6-46a9-bf79-659c42111add"
        },
        "item": {
          "id": "80a54754-dbf0-44a3-ac5c-3b5120f8d2a0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "96adbb1e-1f4e-4902-b209-521fb7cec6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8ccedf-c8c6-4ed6-9a6d-9774d3882b36",
        "cursor": {
          "ref": "da014ed8-a09c-4126-9065-4d553d8801c7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f242ce21-69c3-4ae9-976d-0dbacdd39f99"
        },
        "item": {
          "id": "df8ccedf-c8c6-4ed6-9a6d-9774d3882b36",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4d193b7b-f27d-4933-9bb5-247939ac7be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5477660-8e93-426c-bc58-7030505f36ef",
        "cursor": {
          "ref": "0c75945b-0b1a-4225-b30c-cf297538b89c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24b39f6a-9556-451d-b70e-5f91bc752a5d"
        },
        "item": {
          "id": "f5477660-8e93-426c-bc58-7030505f36ef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "369abbd3-c3fe-4141-80e3-550b751971c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0847713f-d9fe-4e88-a4bf-8c2b4d54adf8",
        "cursor": {
          "ref": "3d1e455f-047b-466f-83c6-37a79deb7b86",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edf30754-eb61-4a60-9686-b20113aabeca"
        },
        "item": {
          "id": "0847713f-d9fe-4e88-a4bf-8c2b4d54adf8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef718164-5705-473d-8974-c62ee264d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9267d7f1-db7e-490d-858d-50112e3c472b",
        "cursor": {
          "ref": "fe29ffdd-4930-4964-9c7c-56ae51002d3a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "18802f57-5552-4713-ba64-c3166ecb6642"
        },
        "item": {
          "id": "9267d7f1-db7e-490d-858d-50112e3c472b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d61818b-7d40-48e8-a03b-6524daf2416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16700e5-3552-48d4-8dd3-3d137054bcc2",
        "cursor": {
          "ref": "bee06adc-342d-4c56-b63b-22779dfef6b5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "daad3468-10ba-4e22-b89d-d62ed64a7ce7"
        },
        "item": {
          "id": "e16700e5-3552-48d4-8dd3-3d137054bcc2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6634dd4c-de53-417d-b90c-88d648c0ae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d00c4-c849-4378-9cb9-0d584c8c28d2",
        "cursor": {
          "ref": "5e194f64-610f-486d-9f1a-498946dcf2a5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b984b365-440e-496b-bcea-de1041f681c5"
        },
        "item": {
          "id": "c88d00c4-c849-4378-9cb9-0d584c8c28d2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f86e59d3-bf52-43be-b029-02ab6c266508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65563124-b57b-4f39-a345-44ae855780fd",
        "cursor": {
          "ref": "cf266980-95de-4e3c-a60b-69637e849b55",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2618d43e-cbc0-4456-b526-c1bc42f636c6"
        },
        "item": {
          "id": "65563124-b57b-4f39-a345-44ae855780fd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "883c9aef-3913-4568-a941-0af84adf8576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d95349a-14bc-4968-956a-613bc61dec5c",
        "cursor": {
          "ref": "bd0b38a4-c9c8-4e55-b199-4ee076535c89",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "11569722-82f5-482a-aa31-379e0ede23a8"
        },
        "item": {
          "id": "3d95349a-14bc-4968-956a-613bc61dec5c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "caed95c2-7619-4806-a904-3aa7db759665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bf63b7-2c0b-4c69-8516-9c72bb9b770c",
        "cursor": {
          "ref": "1fe5faee-bbe9-4317-a7ea-62060e287718",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "79094a96-7f6a-481f-8ce3-2a940f013077"
        },
        "item": {
          "id": "39bf63b7-2c0b-4c69-8516-9c72bb9b770c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b021f565-ab0e-4159-a5ec-274bf3c3f16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335451ea-1782-46be-8232-37587112d20e",
        "cursor": {
          "ref": "fa36bdca-f7b8-49b0-b266-24d6cd3e9204",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "468ca506-88eb-418b-b65f-52dc6efa3339"
        },
        "item": {
          "id": "335451ea-1782-46be-8232-37587112d20e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1285cb3-e5ba-4d9f-b2fa-fb524b06a700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017e847a-331c-44ec-b03d-4a8a435ba0fb",
        "cursor": {
          "ref": "7c641b5f-b9b5-413c-9d62-a52ba732ddac",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dc0b59af-2e45-4534-b7da-65dbb61483dd"
        },
        "item": {
          "id": "017e847a-331c-44ec-b03d-4a8a435ba0fb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "13840317-3f38-4ac1-9a09-6de4a8017438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e46cbab-beeb-44af-a0b2-628f7701e0dd",
        "cursor": {
          "ref": "9774c5e2-432b-4538-83e3-6691e7128fed",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "400f9b52-3dd1-4845-8212-acf27830a908"
        },
        "item": {
          "id": "9e46cbab-beeb-44af-a0b2-628f7701e0dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4b98bdd3-8966-4134-a09a-df88dae1638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f90b985-f010-43b5-89d0-76ce90aaa2f0",
        "cursor": {
          "ref": "b374f74d-d3d3-469c-b903-651e1a7468bf",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7bda46f3-a413-4542-9e16-51fe2c35ca3c"
        },
        "item": {
          "id": "2f90b985-f010-43b5-89d0-76ce90aaa2f0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a2bb360d-bf81-40d4-8fc1-f5cad4391ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61368034-af67-428e-a323-45f64a5c2bc9",
        "cursor": {
          "ref": "6cdc0a00-1cef-4d1f-be08-8726dcfa83ba",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dfccc868-72de-44fc-9aea-94f1600a1d39"
        },
        "item": {
          "id": "61368034-af67-428e-a323-45f64a5c2bc9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5fd37579-d676-4db8-a432-0d87be3fee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff34dbff-2d32-4fdf-888e-b8d0d7e4bad4",
        "cursor": {
          "ref": "b0282a99-16c5-4d9b-9690-32279bf3e722",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed1e38a6-d5a8-41d7-ac15-551925d806b8"
        },
        "item": {
          "id": "ff34dbff-2d32-4fdf-888e-b8d0d7e4bad4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b3bffa96-bc4a-4512-8a43-086d01fe05aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac1b5c-fceb-44df-b30a-f946a65ec0c4",
        "cursor": {
          "ref": "99e84fdc-f227-41b5-9cc1-b8237b7c1680",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "feb94929-e9f6-4b17-a45b-807686a102fc"
        },
        "item": {
          "id": "69ac1b5c-fceb-44df-b30a-f946a65ec0c4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "52f3cc58-65bc-42f7-b9f7-45874c5444d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb85084b-366f-4d3c-b545-baeb565659fb",
        "cursor": {
          "ref": "50ace9bd-70f2-41b3-a339-b93461d633d6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "038643b9-9794-4b56-af73-72a0e736c45b"
        },
        "item": {
          "id": "eb85084b-366f-4d3c-b545-baeb565659fb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "002ebeaf-c8b6-46f8-be1f-4d7f3de4bacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c17601-6469-424c-a148-eff13becdc32",
        "cursor": {
          "ref": "f7c15658-d674-4074-92fa-baaa69dad378",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "298fc966-90c9-4edc-b869-6bf13b9bb983"
        },
        "item": {
          "id": "98c17601-6469-424c-a148-eff13becdc32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0b03caa-d98b-4792-baf7-c391ef5fd9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d909a05-b5bc-430d-afa1-ba88d90e2542",
        "cursor": {
          "ref": "b618077f-4f3e-4038-ab26-ef994f3baedb",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bbb13e2e-4836-4652-aded-d8a01ddbe13d"
        },
        "item": {
          "id": "1d909a05-b5bc-430d-afa1-ba88d90e2542",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a49c1255-7e70-4820-bbf6-758ce25e4430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8c1f30-9ac8-4e04-baa5-1bf7448c2905",
        "cursor": {
          "ref": "6e30f752-7679-4c57-be1e-294d0b7daa65",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9352a573-2e8b-4184-95b8-c411e7625a61"
        },
        "item": {
          "id": "ef8c1f30-9ac8-4e04-baa5-1bf7448c2905",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8f5e73f7-ac88-498b-85bd-7e8e6af5ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78121fe3-7d85-41aa-957b-97a5263c6579",
        "cursor": {
          "ref": "8d8f3327-2bd2-423f-9b83-57f0afdbb827",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "299387c9-f255-408a-a748-c5ef6a22b6b3"
        },
        "item": {
          "id": "78121fe3-7d85-41aa-957b-97a5263c6579",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "24d02084-659e-48f2-8179-1e818123351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0dbaa-b299-4ae7-8d2f-6f1eb1773bbf",
        "cursor": {
          "ref": "664aebdd-ac3c-4724-acc2-c5f5fdf0686e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9c9414cc-7bd3-4544-9b0a-2bfc50b47bdc"
        },
        "item": {
          "id": "bca0dbaa-b299-4ae7-8d2f-6f1eb1773bbf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8058f535-aa8a-4a99-89e1-ae1998dd99b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef4a6e1-0421-4b41-9469-ab6bce51e449",
        "cursor": {
          "ref": "cc92e10b-ca17-4e00-b44b-fe7f65469ed4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2c42ea49-821e-40df-8a0b-2f496497ae9a"
        },
        "item": {
          "id": "1ef4a6e1-0421-4b41-9469-ab6bce51e449",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8de803a4-d200-4eb1-b523-fda9a3db7eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49429cdd-4aec-4a2f-9541-6ad572c884fe",
        "cursor": {
          "ref": "04d426d8-33df-4b79-96ff-326c7469ec96",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f7b27b7f-63b5-4861-8cf2-6acb5cfcffbe"
        },
        "item": {
          "id": "49429cdd-4aec-4a2f-9541-6ad572c884fe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cf87d019-3b58-4b51-a423-3bed765075ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa9060-edb5-4d33-8346-000efaa13a9c",
        "cursor": {
          "ref": "6ffb1de4-29fa-49f5-bd47-9c38cafbd326",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db291b9f-b12d-409a-9f61-08029114cc9b"
        },
        "item": {
          "id": "e7aa9060-edb5-4d33-8346-000efaa13a9c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dea35a64-aead-4ac4-8671-b0fa2d0a087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4832a4e6-1c33-4667-b753-a5d39a626eeb",
        "cursor": {
          "ref": "1739d174-5a00-4670-af23-715342e06da4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e791edaf-661f-4b24-8238-ad17be36c385"
        },
        "item": {
          "id": "4832a4e6-1c33-4667-b753-a5d39a626eeb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "33073784-7447-4bb8-8c82-0b796c75d0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c10004-3381-45f3-b652-9b883f10bd3a",
        "cursor": {
          "ref": "6f5c9c29-31c1-43e2-b2a6-ecd909ca2ba0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "11c3da3e-5e48-439c-b36e-5b58be7aae73"
        },
        "item": {
          "id": "19c10004-3381-45f3-b652-9b883f10bd3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dc7b592a-acd8-45bd-983a-0edfc861e7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72042e30-f5a1-43cc-a97c-c5e5c8ec8f10",
        "cursor": {
          "ref": "851cfd4b-a895-43e9-b5d1-37e07df7db21",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9c740107-6556-49c4-985a-245a799b3111"
        },
        "item": {
          "id": "72042e30-f5a1-43cc-a97c-c5e5c8ec8f10",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "31578eca-0bad-45bd-8d4a-c060cbbb99d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be88d09-58ef-4ea6-84cb-01c1c1e6d00a",
        "cursor": {
          "ref": "8b8ecb7a-292d-49f7-a6f5-f528ad93029d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f78e2442-39b4-45cc-a6c2-9fdb36135546"
        },
        "item": {
          "id": "4be88d09-58ef-4ea6-84cb-01c1c1e6d00a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1c364969-ebb4-4088-b021-7524c8f968b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3da5f160-7df4-4c19-8b26-018e7618305c",
        "cursor": {
          "ref": "963a3aee-baf0-4c92-bb06-7d5274343f3f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0003ec9a-920e-45e7-aff9-fe05e8f9e2e7"
        },
        "item": {
          "id": "3da5f160-7df4-4c19-8b26-018e7618305c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f7468c3b-5d08-4251-9ba3-9e03dda5bcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dbf1c2fb-412b-48a8-90cc-ab7c82c39eee",
        "cursor": {
          "ref": "59fb7001-06e2-49b1-9a39-5b3034b3b2d7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7146d388-d653-46ac-aee8-fb9ba209f4bc"
        },
        "item": {
          "id": "dbf1c2fb-412b-48a8-90cc-ab7c82c39eee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dca4030e-305a-42c9-bf90-060d640b002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "951dbeab-ed45-41fa-a012-80dea9b13b43",
        "cursor": {
          "ref": "3f437995-db6e-48f8-b800-a81e45c62684",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e74c3944-6612-4407-9705-e737c85138d7"
        },
        "item": {
          "id": "951dbeab-ed45-41fa-a012-80dea9b13b43",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fccb7c55-89be-48fb-b58d-8d5ae45bf5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d776edad-9c8c-40b7-ab7c-1abf2a1db8aa",
        "cursor": {
          "ref": "458540f5-e343-402b-822a-b80caba74386",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f290695c-71a6-43b3-b7ad-8d87d9d8c1b2"
        },
        "item": {
          "id": "d776edad-9c8c-40b7-ab7c-1abf2a1db8aa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0beb6b4b-77ac-44a0-a572-24f58493d21e",
          "status": "Created",
          "code": 201,
          "responseTime": 8900,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8856ae-3384-472d-8326-572adf14fd36",
        "cursor": {
          "ref": "726a229a-f5c2-4257-b996-7168dd80cafe",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "faa582da-1208-471b-9060-863947cb566b"
        },
        "item": {
          "id": "9f8856ae-3384-472d-8326-572adf14fd36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0a4bbf4f-c8ad-4d4f-ad70-7e7c6c33a3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0bbdb278-7063-47f1-b0e1-55071c79afea",
        "cursor": {
          "ref": "c2163de4-d887-4936-9d24-0f9dd64a842b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fd551073-19a9-47c3-8eef-f00dc99cb59c"
        },
        "item": {
          "id": "0bbdb278-7063-47f1-b0e1-55071c79afea",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8bedb095-b457-4272-bf01-5c80d64c222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4b39c6ec-c01c-4e75-8004-5af8f9697c33",
        "cursor": {
          "ref": "28ca57cc-bb9f-40df-9207-b35a582c9684",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "afb8af13-3ce1-4770-9915-f8eb9dfc72d1"
        },
        "item": {
          "id": "4b39c6ec-c01c-4e75-8004-5af8f9697c33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c79e6654-ea30-4abb-92d6-6a72d88df7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfea5e8-78c2-4e73-9fca-e03b418eb1b0",
        "cursor": {
          "ref": "f63aa5eb-2f2f-485b-88b1-b01fff6b55fd",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9353ef47-30be-47e2-b11d-7a3028dd0e98"
        },
        "item": {
          "id": "6bfea5e8-78c2-4e73-9fca-e03b418eb1b0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "596dcca7-dc9e-46cf-a198-15817c32cb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98618781-33b6-4deb-99c5-f8d136750271",
        "cursor": {
          "ref": "6f74808e-a5ee-4953-937e-b45665875f21",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bae3bc46-2f26-41ec-8c09-e64d2b583902"
        },
        "item": {
          "id": "98618781-33b6-4deb-99c5-f8d136750271",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9635bcb0-eb5d-45d8-9a85-464827fb792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72a5345-9990-4fb0-8165-445df807d130",
        "cursor": {
          "ref": "a601ee04-8d87-4125-9614-a8471ad9e53e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "efca801e-fb7f-4fbd-b765-24cff77fe8ef"
        },
        "item": {
          "id": "a72a5345-9990-4fb0-8165-445df807d130",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94282e99-fadf-4c0e-b432-00ef3ac5898f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a761b3ea-646e-45a8-a295-60e9a604e162",
        "cursor": {
          "ref": "485f7cdc-21ff-4c53-85ac-1b63939c0296",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b71c05f8-d484-499d-adcf-88bd39191394"
        },
        "item": {
          "id": "a761b3ea-646e-45a8-a295-60e9a604e162",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "877b7f90-2347-4135-94d3-29f3f0c268c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df087005-8af7-48b0-8707-acfc67ed46b0",
        "cursor": {
          "ref": "c4aedc84-3227-4546-89c3-7cc0dd27d526",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a889385-f9c3-42d6-a076-1354fce32a2c"
        },
        "item": {
          "id": "df087005-8af7-48b0-8707-acfc67ed46b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "998c6b09-5f56-4b63-99cb-d5d1919e1af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079547aa-5933-42a6-a8bf-93fc5c76ad46",
        "cursor": {
          "ref": "e7d4be65-65f9-4707-9d08-457a71afa8d5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8b480dfe-64b8-4453-b071-74e0a988f648"
        },
        "item": {
          "id": "079547aa-5933-42a6-a8bf-93fc5c76ad46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e0662e4-dea1-4387-9eae-1a6b4cd3d802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942184bf-9995-4073-8b3f-f2781c395461",
        "cursor": {
          "ref": "5c89a9c7-d4a9-450e-b5e4-ed6d30248776",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f6f6d4f1-b637-467d-9086-9883ade2ab61"
        },
        "item": {
          "id": "942184bf-9995-4073-8b3f-f2781c395461",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09a56e03-795a-4094-932c-e5d190e0d728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2879f7bd-6bbc-4b7d-b460-6eb9acebcf48",
        "cursor": {
          "ref": "27255df4-91ab-44c1-b727-8122594ded5d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab704513-cfb7-4bf2-9731-e64e01c81803"
        },
        "item": {
          "id": "2879f7bd-6bbc-4b7d-b460-6eb9acebcf48",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a83c653f-c072-450e-978c-4e076a7b9b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e7a70b-c308-4081-aae5-b1d042d9e8b6",
        "cursor": {
          "ref": "bdb16b78-b8cb-402d-9bf6-300486228931",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a0134561-7c27-4205-afe3-6ca88405d774"
        },
        "item": {
          "id": "c0e7a70b-c308-4081-aae5-b1d042d9e8b6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a97fbefe-3c02-4bd2-9151-e5feeea0cbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fe7d3b-f433-4bc9-a07e-ac8ecebddd77",
        "cursor": {
          "ref": "758b1844-0e48-4add-99a6-e37ac6261276",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "81df8c5d-b11c-46f9-a687-282ab364f376"
        },
        "item": {
          "id": "d9fe7d3b-f433-4bc9-a07e-ac8ecebddd77",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a8880d3c-6727-4dec-bd6c-4215885a2641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2718fb-07e4-4a56-9986-b65a311b55ee",
        "cursor": {
          "ref": "74291378-9712-4c33-bdd5-74c88c2cd0db",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a19905dc-e953-4f7b-b757-26242d136401"
        },
        "item": {
          "id": "4a2718fb-07e4-4a56-9986-b65a311b55ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83cfed2e-16b3-4504-b42b-0e4f42544838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4116b807-ebed-4b4f-a49b-38e345c8cef1",
        "cursor": {
          "ref": "d344cedb-6bc3-4849-93c0-eb96fb23fb93",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "05480620-2317-4c8f-8825-36c13fd87e31"
        },
        "item": {
          "id": "4116b807-ebed-4b4f-a49b-38e345c8cef1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a3d99c7-dfb4-452a-b059-aea7a0e25f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b982f216-3424-4b4a-9602-324988c3e2d2",
        "cursor": {
          "ref": "47a78de1-5f91-4523-a76b-b662992a839f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5e8871b9-5dea-4283-a2ec-ce5bd9a63efa"
        },
        "item": {
          "id": "b982f216-3424-4b4a-9602-324988c3e2d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fed97a3c-b774-4e1d-a5b0-beeb8c3ae8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fa5435-abad-460c-830b-5f3dc834032f",
        "cursor": {
          "ref": "d5430be0-f70a-4cd9-9e2c-8bb2abe0f7d2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fb65245a-de9f-4cc0-a981-89008d4d03e5"
        },
        "item": {
          "id": "b8fa5435-abad-460c-830b-5f3dc834032f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "131990d7-7a5d-497f-ae0f-f26f39dc9a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300ff30e-cde8-466c-90e1-0464225a6e36",
        "cursor": {
          "ref": "e5848464-ae4a-4ebf-83e9-f57df4098393",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "81b37125-883d-44c2-81e9-211ed845c9e4"
        },
        "item": {
          "id": "300ff30e-cde8-466c-90e1-0464225a6e36",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41bf2cd3-9062-41ac-b093-c4e15c9bf34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329bad24-9569-4835-9e64-18b6f1e5e053",
        "cursor": {
          "ref": "0e7488c0-4803-4bed-850c-3e6689a5cc11",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1b7bc629-fc71-4320-9787-7dd43f788c9a"
        },
        "item": {
          "id": "329bad24-9569-4835-9e64-18b6f1e5e053",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "12492d83-2ab6-468a-9b9c-5ed61197022d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "19516a60-0606-4f9f-a340-764a70fc3a8f",
        "cursor": {
          "ref": "77255f39-3a0a-4598-97a4-2e58555f0629",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7a3212a-653f-4dc3-b9c8-1d7e91ab249e"
        },
        "item": {
          "id": "19516a60-0606-4f9f-a340-764a70fc3a8f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5019c351-7623-462e-b263-5b7851447684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd90e00-a352-4fa3-9560-5cfa041327f7",
        "cursor": {
          "ref": "d4e1d8fe-4e81-4589-aae9-fbd494d83443",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e9de6d40-49d5-4364-bfdb-f3dd0dad105b"
        },
        "item": {
          "id": "ecd90e00-a352-4fa3-9560-5cfa041327f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4c6af7be-dccd-409e-b536-daafb0689e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903cbf69-044e-44b3-abb5-f8dc4b0a37f9",
        "cursor": {
          "ref": "94b40552-f646-485e-af7d-02e70d90efd2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d445bb96-4186-42a6-95c2-2c36d3ce552b"
        },
        "item": {
          "id": "903cbf69-044e-44b3-abb5-f8dc4b0a37f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "135b7836-724e-4378-a73b-ae51c56b03e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e7362a-5b1a-4a10-8b22-bcb6fab20418",
        "cursor": {
          "ref": "6a8dd202-65e3-413f-b838-6db1b902cd91",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c3c4582c-f7ee-40e4-b63b-4f3cf646c0c4"
        },
        "item": {
          "id": "32e7362a-5b1a-4a10-8b22-bcb6fab20418",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23789881-2d44-4840-8aa0-94b846a1057a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5bb337-2d08-4603-804a-7057053d3d36",
        "cursor": {
          "ref": "e4bca049-188d-428c-b4cc-724900a28161",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b07c04c6-6c53-44e2-9444-e31b3a1c0ace"
        },
        "item": {
          "id": "6b5bb337-2d08-4603-804a-7057053d3d36",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cdd4269-4947-455e-a346-9ecb3b699aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1325f2e-a855-4699-92d3-7a7469896247",
        "cursor": {
          "ref": "eeff39e2-641a-422e-8f7f-b3a714026170",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4e89b80a-eba0-49e0-840b-f13a1a1ea7d0"
        },
        "item": {
          "id": "b1325f2e-a855-4699-92d3-7a7469896247",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9a7807d4-1219-42fa-b970-b5ed079d8cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ea02b3-0050-4705-886c-e49153153beb",
        "cursor": {
          "ref": "6e6352fa-b113-4783-94a6-0a40d5e8e0f7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ba44e09b-0b32-457c-bb7b-35db4fcffd55"
        },
        "item": {
          "id": "90ea02b3-0050-4705-886c-e49153153beb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "53506450-f9f7-4225-8f64-2d9d6c7d91e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e2789-d8a9-47d8-88bc-687c4dcf7a04",
        "cursor": {
          "ref": "2e7f200b-829c-4b7e-a411-2c21321c542f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f2565c83-4c20-40b0-bad9-20498c0f4b21"
        },
        "item": {
          "id": "d89e2789-d8a9-47d8-88bc-687c4dcf7a04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3976cbba-975e-47db-aa09-f3131558c489",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0fc43b14-c731-4708-b43f-2a75f203f517",
        "cursor": {
          "ref": "da30b19e-d4d2-416c-a7d1-ad4907789e3b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cbd234f7-654f-4da8-87b1-33b825953265"
        },
        "item": {
          "id": "0fc43b14-c731-4708-b43f-2a75f203f517",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a29546ba-5e0b-4d0c-884e-a2f6b5396dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30968a7-5a80-46e9-84a6-402f1275a37b",
        "cursor": {
          "ref": "609a957c-744f-4190-933a-30c3e930d1f9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a95c89bd-ce38-41e7-895a-a808c9c35fbb"
        },
        "item": {
          "id": "c30968a7-5a80-46e9-84a6-402f1275a37b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afd0fbed-132d-4acb-95ce-52847431267b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d78b11-0af8-4abb-8681-d2f9f2ddfcab",
        "cursor": {
          "ref": "8a062f08-2d4a-4097-8861-cc39465c4adf",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0f439a2-1ffe-44bc-8fe4-81749662598e"
        },
        "item": {
          "id": "a7d78b11-0af8-4abb-8681-d2f9f2ddfcab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "971e8abb-c3e5-4bd7-9b95-8002f53b3c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62388d2-04a4-4f7f-b04f-2dff6ca0e141",
        "cursor": {
          "ref": "f37d1203-d3c4-429f-b9ce-8499729827a7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4175574d-59be-4c4e-a530-5aff33da5263"
        },
        "item": {
          "id": "c62388d2-04a4-4f7f-b04f-2dff6ca0e141",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea91e8f4-f41c-48c8-9be7-bdecf0f1c4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810f06e2-7523-4856-8561-53c6ebb83e1a",
        "cursor": {
          "ref": "c087dbfa-0d27-4b3a-adac-08df34233e95",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "847bbee9-d91f-4cfe-91ae-b9b362df4c68"
        },
        "item": {
          "id": "810f06e2-7523-4856-8561-53c6ebb83e1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da1a9c8d-7c79-4c81-8135-b65aa23fb732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25170320-da09-420f-a54d-14ab3abd90d2",
        "cursor": {
          "ref": "dfd30ae5-f970-4366-a6ea-f6064c64ee4f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c3fd04b6-ed74-429b-b62b-7644141375d2"
        },
        "item": {
          "id": "25170320-da09-420f-a54d-14ab3abd90d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca4bcc87-12be-42c9-b89f-a2aec97b8147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceafc33-287e-4c76-a094-b2f29413f96c",
        "cursor": {
          "ref": "d9b330f3-3840-40cd-b6de-ce95f6f2d276",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88ba8f28-05a1-40b7-a392-a18d5e7a6cb2"
        },
        "item": {
          "id": "3ceafc33-287e-4c76-a094-b2f29413f96c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3ddc128f-4f6a-47ab-868d-22317368cf62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "dd7401f0-0df2-4569-a22b-525d6d4857d4",
        "cursor": {
          "ref": "d2e6b8ba-3bf5-409c-a8f3-7a18f3448a5f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "10ea43fd-7b10-4997-aadc-b8d52d694602"
        },
        "item": {
          "id": "dd7401f0-0df2-4569-a22b-525d6d4857d4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dae2f6c6-843a-44ce-bf43-4b338d90b27e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6f60232b-f718-4e1d-b7d0-3efec228d230",
        "cursor": {
          "ref": "6c7ade2d-910a-47a6-8a78-fef02f341460",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "af0b8a1e-3e83-4fa1-b69e-7673efca21e2"
        },
        "item": {
          "id": "6f60232b-f718-4e1d-b7d0-3efec228d230",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d4383407-5247-4043-9b1d-b76a5d4747f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "fc8427fd-984c-40e7-9dba-a21b7f8650a0",
        "cursor": {
          "ref": "b7939eca-db12-490c-8295-cfbb8a833e7d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5d4a118e-90c8-4381-91cc-cf60e1e826ed"
        },
        "item": {
          "id": "fc8427fd-984c-40e7-9dba-a21b7f8650a0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "105b5952-6ab0-4938-95fd-a58f0beee692",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e92e4122-eaa6-4477-9cce-851939f88ff0",
        "cursor": {
          "ref": "38ad6ca9-15e5-4952-bf55-a471a7a00b25",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a723d691-c63c-4fca-8299-00c45b1df7e9"
        },
        "item": {
          "id": "e92e4122-eaa6-4477-9cce-851939f88ff0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "52b7be3c-6271-4845-8eca-0652bd05ce2a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "73c26591-ddab-481d-aaaa-832de346991e",
        "cursor": {
          "ref": "9f32ae7a-0a8b-4874-b505-3766571601c2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7122e18e-44ba-4080-b272-5d80a41eb94b"
        },
        "item": {
          "id": "73c26591-ddab-481d-aaaa-832de346991e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9572ecfe-2bec-4eda-8043-615318a94a70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6b514e78-04d2-4784-a6c1-e43970ffbf0e",
        "cursor": {
          "ref": "591c133f-36ae-454c-a01e-a22b1f027673",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "222c216a-fd08-4d2b-a70e-98f089d7366d"
        },
        "item": {
          "id": "6b514e78-04d2-4784-a6c1-e43970ffbf0e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3b7e1e5e-0010-4b3c-b258-03e4c838e90e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2ff89-d257-426a-ab73-00a871cb53e5",
        "cursor": {
          "ref": "6b9fd9d5-fa1f-495a-ac7c-638e04151c74",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "832ba0fc-9e0a-4262-afb5-36980525012e"
        },
        "item": {
          "id": "9ff2ff89-d257-426a-ab73-00a871cb53e5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6e76d735-ed47-4827-a8ab-3f4e39ba886e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef2856-b665-4fc2-98f3-4210ddeb6b1d",
        "cursor": {
          "ref": "2d9b00d7-b615-4e8d-a301-25826539d7a1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cf4b05b1-24c2-4aa7-a746-3455c14934e8"
        },
        "item": {
          "id": "62ef2856-b665-4fc2-98f3-4210ddeb6b1d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "116c08f7-d84d-4bf0-8330-4ddf18881e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec20f8-915f-4d82-9843-33e613047bed",
        "cursor": {
          "ref": "88f97ef2-3f13-458e-a05d-db165d5053ef",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d5365362-4c3d-4dbc-9a8c-58844bb456f9"
        },
        "item": {
          "id": "b1ec20f8-915f-4d82-9843-33e613047bed",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d26c2260-1b08-4ef5-89a2-adaa918774d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaea64d-ebd2-49ce-8a09-f6b2c4ac4a12",
        "cursor": {
          "ref": "4f9d833a-7a42-45f9-9531-e78e192bec98",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "051674f3-a301-4daa-abf1-d211b88074bb"
        },
        "item": {
          "id": "bcaea64d-ebd2-49ce-8a09-f6b2c4ac4a12",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a2b5603d-73c2-4b7d-8806-602e5ddc7590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a85be8d-7162-4ed8-b9fa-f7247f79ea95",
        "cursor": {
          "ref": "447352da-546a-45ab-9556-f70bf8563220",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6278ff3d-2292-404d-a52e-64edc6571910"
        },
        "item": {
          "id": "0a85be8d-7162-4ed8-b9fa-f7247f79ea95",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e211081-4228-41c7-a56a-08654b022e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1007b2-a117-4543-8a36-b962704bda61",
        "cursor": {
          "ref": "d5b9c77b-d541-414e-a7a8-3392c5e0b7aa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b3d4003a-7b32-4e36-b959-b11d12ecb3de"
        },
        "item": {
          "id": "8d1007b2-a117-4543-8a36-b962704bda61",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97bd1ef9-b376-49b4-a0b5-fa87ecfa2a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d615e125-fe07-4b77-b692-5f7129990ae8",
        "cursor": {
          "ref": "bc935892-bab3-4f0b-a305-f3c9257180d7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "402d9429-4d0b-47ce-b878-3bab8b98bf61"
        },
        "item": {
          "id": "d615e125-fe07-4b77-b692-5f7129990ae8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e8a07d5-ef48-4c42-957f-534eb9cb4b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd861ffe-b130-42f5-a27a-a53dd644eb04",
        "cursor": {
          "ref": "1baac0fc-b4d6-4559-bc62-2b0a4a285e70",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d9272be4-01d7-472a-b275-3f93a6d56182"
        },
        "item": {
          "id": "bd861ffe-b130-42f5-a27a-a53dd644eb04",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e12f8c13-8bea-41bf-bdbd-0e5912253f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb6f57-da95-4704-ba07-50d920c6aeb5",
        "cursor": {
          "ref": "4bba92fe-1653-4399-a583-48237aa53fef",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e559a73c-e3d3-497e-842a-bc0c07fed5d5"
        },
        "item": {
          "id": "d8fb6f57-da95-4704-ba07-50d920c6aeb5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fafce522-6c65-4ca5-877b-eed4ff591728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4893fc3-78df-4795-a1d4-c67413be14e4",
        "cursor": {
          "ref": "e89554a8-7bcc-4d35-a090-613636a52830",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a96016b-4422-4589-b8cd-7c4db04b9853"
        },
        "item": {
          "id": "e4893fc3-78df-4795-a1d4-c67413be14e4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a2e7bdcf-6692-4301-bd95-578e3d9dd80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558443a-e71c-4fa8-b13e-76724b4f7433",
        "cursor": {
          "ref": "ec505c2c-3ec6-4e85-9092-49c5e8722d44",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aa24dcb8-81b8-4e02-a906-ea4bebfc718d"
        },
        "item": {
          "id": "2558443a-e71c-4fa8-b13e-76724b4f7433",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a50beee0-244b-419e-8ffd-91a60db05cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babd45b0-508a-4823-ba2c-f8453c3ef82c",
        "cursor": {
          "ref": "d963f5d7-a44b-48fc-9958-4643fac2b19a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0ae11310-bc79-4470-9369-d41f3e9b0d6d"
        },
        "item": {
          "id": "babd45b0-508a-4823-ba2c-f8453c3ef82c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "48255174-4133-4081-98c9-602055ea445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c54b3-09f9-4355-8a0f-86b74df4d77b",
        "cursor": {
          "ref": "e9bdb178-5fdb-4246-be3e-3112e21d8549",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f6afd069-ce2e-4621-b069-6a40f5ad40e4"
        },
        "item": {
          "id": "6d6c54b3-09f9-4355-8a0f-86b74df4d77b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "542b2a10-b020-4de3-8fff-ad227926f6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6f3e62-8b68-4b84-9ac7-e09aeb1c3059",
        "cursor": {
          "ref": "352cea2a-f665-484f-bb87-5395aac83311",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15806ee8-84fc-4cc8-86a8-18cfe5f92e2b"
        },
        "item": {
          "id": "ea6f3e62-8b68-4b84-9ac7-e09aeb1c3059",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5166a1a2-6465-402d-99d3-4fd57602e0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eadc85d-cc8b-4c72-b243-d50d28a8d040",
        "cursor": {
          "ref": "111fddd5-b8c8-4e52-b18b-7cac5789e4ca",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8bda31e1-694a-4829-bb63-c3c123bde5d2"
        },
        "item": {
          "id": "2eadc85d-cc8b-4c72-b243-d50d28a8d040",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0e99c4b-e99a-481f-ab25-c6c8df3ab7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58250e5-27d8-43b4-beae-dcb1483bf316",
        "cursor": {
          "ref": "acbf60a4-6262-4210-82f6-f6dc38041862",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b20df503-425d-4b83-8bf2-04368fd7d069"
        },
        "item": {
          "id": "c58250e5-27d8-43b4-beae-dcb1483bf316",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2a858656-a66a-488a-9222-bed4be24911b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61cc104-b8fb-4d3e-acc0-f2a76204352d",
        "cursor": {
          "ref": "b229a1c9-3750-425d-adf4-0f7f15c13c6f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c294005d-6066-4747-9691-5f59d59f6efa"
        },
        "item": {
          "id": "e61cc104-b8fb-4d3e-acc0-f2a76204352d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d69c58f8-2447-4df7-8c7f-3709eb9c3d0f",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "818d5c3b-7ba0-4eaa-9772-d6862eb9a136",
        "cursor": {
          "ref": "3b8e2acc-2436-4092-8168-593454a8170c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3fec1e27-dced-40cc-8837-d6ef20359956"
        },
        "item": {
          "id": "818d5c3b-7ba0-4eaa-9772-d6862eb9a136",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "58967c90-4f0f-49c6-8345-6d70439f385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75be6997-8efd-49a4-8564-7de32f13453a",
        "cursor": {
          "ref": "40da0172-8e08-4e77-b511-2e9df5c47ede",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8ee07225-83bd-4c94-90c3-54033ff216c3"
        },
        "item": {
          "id": "75be6997-8efd-49a4-8564-7de32f13453a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d54e591c-0fb5-4ce2-a1d5-184621eda1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f38b3-ae7e-4209-be48-db7284200b19",
        "cursor": {
          "ref": "25131a4c-b777-453b-8620-b7ddef536011",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49c4cfb0-7706-4d41-b2ba-f7939fb2c854"
        },
        "item": {
          "id": "fb1f38b3-ae7e-4209-be48-db7284200b19",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b84b54c8-9f94-4dd2-978c-17344ffe62db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac4ac8e-e71d-45ef-a942-6b364a6c0605",
        "cursor": {
          "ref": "5faed3dc-6042-40f6-ab17-dc36faa5242a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36ce24e1-7a5b-4d81-a03d-18997ec1f0cc"
        },
        "item": {
          "id": "aac4ac8e-e71d-45ef-a942-6b364a6c0605",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "96b5206a-8781-430d-8872-bda64125c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc5699f-a70a-4afa-8283-5386fe677a38",
        "cursor": {
          "ref": "f912e440-d91a-4002-afc9-a94c401dc351",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "04f38d15-5868-4c2f-8f6d-81763efd3226"
        },
        "item": {
          "id": "ecc5699f-a70a-4afa-8283-5386fe677a38",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "35bbf523-9518-40c8-b1b8-1df8d9f0ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb400cef-55d5-41ce-8537-90aac8f208b3",
        "cursor": {
          "ref": "8a18cf09-3dab-4cdb-8cf7-582011e10aa4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3324d49b-5879-4c7a-82ed-f1b346429a3a"
        },
        "item": {
          "id": "bb400cef-55d5-41ce-8537-90aac8f208b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bf1ce4ed-597a-4a78-bd5d-86d974a81544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e440db3f-9f0e-4a1c-a563-8be89f611d40",
        "cursor": {
          "ref": "df719656-4810-4ed3-9926-571d9bb2ba9f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d5f36f0b-e2f8-4893-b9f3-1c2a7667a7e6"
        },
        "item": {
          "id": "e440db3f-9f0e-4a1c-a563-8be89f611d40",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "79678207-0fe1-4ebd-a2eb-c4fd78f4d368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82099028-e4a6-428a-9079-7e4172734eb4",
        "cursor": {
          "ref": "d7a43478-7759-421c-ba1c-b3431c32dba0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c46d1e1f-ad5d-4f24-bab5-125808d08c70"
        },
        "item": {
          "id": "82099028-e4a6-428a-9079-7e4172734eb4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4a4b3974-4f83-4c19-8d03-347fde6cc2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5428bd-f54a-4356-8e64-ffb98b89e264",
        "cursor": {
          "ref": "bcaf9627-0e15-4091-8833-745ae5b08b61",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "369bf4b0-a4bd-4fec-a3e4-c81b45d548ad"
        },
        "item": {
          "id": "6c5428bd-f54a-4356-8e64-ffb98b89e264",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7bc92d14-f1f3-48c9-b9e5-7bd6251a7705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11586cc5-0470-4fa4-89a9-af92d77baa8b",
        "cursor": {
          "ref": "c8b89061-939f-434c-8136-6d3c30b2bc5b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "41706cb9-3c5b-465f-948f-ceebd3d6c0e1"
        },
        "item": {
          "id": "11586cc5-0470-4fa4-89a9-af92d77baa8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "190c5135-b91e-46cb-8f3e-f913c24f60b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e034094b-effe-478a-9b01-61b5d94506ac",
        "cursor": {
          "ref": "4962135f-1635-44dc-b28c-889fdcc79e40",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eed29865-569a-421c-a795-c80158a02d66"
        },
        "item": {
          "id": "e034094b-effe-478a-9b01-61b5d94506ac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "539ef086-e3ed-49f9-a077-cc3ddae801d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed713c6-e271-4227-8621-cc595fe62c52",
        "cursor": {
          "ref": "7d3b3ffe-e2de-422f-ac36-ec4cecebb4a0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b90d61c5-3e93-461f-aac0-c349e8df48b2"
        },
        "item": {
          "id": "7ed713c6-e271-4227-8621-cc595fe62c52",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0433071b-1202-4bf4-8856-a7298fa63102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70713487-de02-45eb-91cc-544705baa4fc",
        "cursor": {
          "ref": "e05c352c-35ca-4526-909a-8f483ba3a4b7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0fc44d7e-4715-48a3-8083-7a4b08be6d0b"
        },
        "item": {
          "id": "70713487-de02-45eb-91cc-544705baa4fc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8a0e7b3-644c-40cf-971b-6cc2a74cc600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75690b7-d570-4ece-a171-013fec3b2a15",
        "cursor": {
          "ref": "7ee16dab-0c76-4d56-8cc5-20271824376a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "39ed4f0a-d011-45c0-977d-0e420481c6ee"
        },
        "item": {
          "id": "c75690b7-d570-4ece-a171-013fec3b2a15",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4cb899bc-6747-4adc-86b0-9387386da54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c14a3-1c56-4242-9686-33afc7dcc0ed",
        "cursor": {
          "ref": "f59917da-3e85-40cc-a6fa-6c289e365fe4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "200bf346-9268-4cfc-bce6-42f8c26b08b6"
        },
        "item": {
          "id": "905c14a3-1c56-4242-9686-33afc7dcc0ed",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a35bea5-a62b-4151-8d22-4bd3b08a0144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc7b86-c1cd-4065-accf-ba1fb4f6d7d6",
        "cursor": {
          "ref": "c0454ce0-0075-4a01-ba96-a29ef0879ef9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "45f25bb6-c53a-4fbc-903b-a1b3a9c5b5c1"
        },
        "item": {
          "id": "94bc7b86-c1cd-4065-accf-ba1fb4f6d7d6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c6be4e5f-f4e2-43d2-a7ab-0b075147423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe821409-5eb9-434a-97f0-a396e61faf92",
        "cursor": {
          "ref": "74544ce4-5a8f-4cf9-9dd8-5e449b4b44e9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b25ddef9-fee6-4576-af96-055b3bc456cc"
        },
        "item": {
          "id": "fe821409-5eb9-434a-97f0-a396e61faf92",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0fc07eff-8cd4-4281-93fa-e6c39f3205e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df48cb7-80d0-4178-849b-f5097a4d6e7a",
        "cursor": {
          "ref": "045b59dc-91a2-4d90-86af-f7ba91e3edd4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "59c5bf46-3c44-47be-98e7-cd997a5707f5"
        },
        "item": {
          "id": "6df48cb7-80d0-4178-849b-f5097a4d6e7a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "23320d2f-28fd-47ea-9e74-4842251c2580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e545f54-850c-4fa5-a44a-7034cae08b9a",
        "cursor": {
          "ref": "a3577cbc-5ba5-466c-9f14-8f7e19cf7086",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fb4ca2f5-712d-412c-bbdb-35c7354cb615"
        },
        "item": {
          "id": "9e545f54-850c-4fa5-a44a-7034cae08b9a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "30fec3d6-1b95-4c8e-a58d-b724f9af667b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4318c3d-50a8-4e9b-9b60-ba8ec4219366",
        "cursor": {
          "ref": "7790cebb-ce8e-484c-b6c9-0ee92565c143",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fedc63af-1905-4707-b581-c030d3f09392"
        },
        "item": {
          "id": "b4318c3d-50a8-4e9b-9b60-ba8ec4219366",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "40cca34f-e59c-4718-8981-11b7e0a6b904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dff203-efd9-463d-ae52-2bd5b30285e3",
        "cursor": {
          "ref": "a027cf35-e7ad-4dd0-bf0a-5d4a50d2821f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a2289aae-6a85-41b3-8b4f-62ad85f3bb3c"
        },
        "item": {
          "id": "33dff203-efd9-463d-ae52-2bd5b30285e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a2e5ce1c-fe0e-4aa6-8a70-3e97401e2e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc5f68-f246-4d22-8edb-b4e084abd593",
        "cursor": {
          "ref": "bc314e83-ecb2-48a7-a6b8-afc4a0696cf2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0f1ecf6a-b62c-4fff-be31-c13cbc4019c5"
        },
        "item": {
          "id": "fafc5f68-f246-4d22-8edb-b4e084abd593",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c42318f7-0ce0-4673-b3c2-47e9bb7b6e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920921b9-720a-4507-a3bd-1d2d440801fd",
        "cursor": {
          "ref": "459ac79f-a358-4e20-a7e7-3edefbb87a27",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0dbeb501-5377-44b7-8ff4-15f0d585be2b"
        },
        "item": {
          "id": "920921b9-720a-4507-a3bd-1d2d440801fd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "165e8932-6fcf-4dae-870b-58a129d4d0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6601af2-b59c-4b6a-aa1d-e83357cd2c4a",
        "cursor": {
          "ref": "e9e6a068-796e-4286-9a39-96caa719e8e5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d348b2e7-46af-4600-8e73-b1e44be2257e"
        },
        "item": {
          "id": "b6601af2-b59c-4b6a-aa1d-e83357cd2c4a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "331ece16-fe7d-4751-bd80-c79d4dd2b476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b679cd4-f05b-4d3e-8065-3431972f59af",
        "cursor": {
          "ref": "c2845d47-b41d-42de-8be1-5f9b99726a37",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "23c5cf2e-54ce-47c1-8990-446f75b22a7f"
        },
        "item": {
          "id": "4b679cd4-f05b-4d3e-8065-3431972f59af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "77e75e8c-ae2d-4f7f-b986-b8f12a4da0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aefdb4-2269-4a60-8949-9109d71b0383",
        "cursor": {
          "ref": "fa1a59ef-d274-4fa1-a0fe-0053dc7a743d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "938f654d-341c-4ef7-93ba-1a1a1a190a54"
        },
        "item": {
          "id": "80aefdb4-2269-4a60-8949-9109d71b0383",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "901d2662-785b-457c-b992-ba928759289a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666dc1f0-4f7f-4104-adb7-be9ddfe44f58",
        "cursor": {
          "ref": "697ca893-98ed-4f70-aef7-efc8169e07be",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3756222b-02eb-4989-a084-40d3c26b48f0"
        },
        "item": {
          "id": "666dc1f0-4f7f-4104-adb7-be9ddfe44f58",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "97363415-4d2e-4049-961c-e16fa89e356c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1d68db-559b-441a-a52a-1e0a2710fb67",
        "cursor": {
          "ref": "40435916-518d-4399-9852-6466af22db3d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0f2ade85-66f2-483a-bb00-e98844e2cb2c"
        },
        "item": {
          "id": "4f1d68db-559b-441a-a52a-1e0a2710fb67",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73f8a8e5-9242-45a9-8373-deb2a311a3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2500957b-47ba-43d3-b807-e83fe3609e85",
        "cursor": {
          "ref": "d7ff1baf-958b-4a4a-bac7-a065cb1f7ea2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "323b1878-958d-47b7-ac5e-97f2a22261ff"
        },
        "item": {
          "id": "2500957b-47ba-43d3-b807-e83fe3609e85",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "34674203-0b07-4acf-95d7-3cce2ade397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcc4991-3866-4616-a39a-16db18f75218",
        "cursor": {
          "ref": "dca13153-d934-4cce-963d-f7450aa0826d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1029f03b-1785-451b-a0f4-cdd65e55b4d1"
        },
        "item": {
          "id": "fbcc4991-3866-4616-a39a-16db18f75218",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7851a01e-fe95-4cd6-81de-00f5fda4ea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35529aa-4515-4e54-842e-9d060e78453d",
        "cursor": {
          "ref": "2693f2cf-2176-47f3-bc78-123bfc5b4144",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b84f3871-8886-41c8-9acd-1b0b48b3f9b7"
        },
        "item": {
          "id": "d35529aa-4515-4e54-842e-9d060e78453d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "49095630-96e5-4d14-9251-98f05d0f3310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d8e26-200d-4a6f-b206-3edaa4dd5bdb",
        "cursor": {
          "ref": "e89b5023-52c8-4f56-961c-360a982c5527",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "61e90deb-977c-4742-997e-4400967fba0b"
        },
        "item": {
          "id": "795d8e26-200d-4a6f-b206-3edaa4dd5bdb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4f6b3166-7605-4826-a978-5515957602f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7547147-49a0-4cd1-8bc2-c37536411a8b",
        "cursor": {
          "ref": "0d099138-8170-47b4-b768-55fa43b9515f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9e035fe8-5beb-404d-9e71-1c65b341eee8"
        },
        "item": {
          "id": "e7547147-49a0-4cd1-8bc2-c37536411a8b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5e3b52d1-53e2-4fae-ad0a-53a5a092b8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ab8d9-c389-43bb-a1af-d8c150dd4ce7",
        "cursor": {
          "ref": "d4983f05-3f18-472c-8bc0-3cb3fef3e7e5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "04521aa4-2f7b-48c5-ba63-90276fc6389e"
        },
        "item": {
          "id": "d90ab8d9-c389-43bb-a1af-d8c150dd4ce7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e9de2c85-4042-46e1-bc9b-d857c1fc64dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd720b-dfea-46e0-bea9-4312655826f4",
        "cursor": {
          "ref": "a015dfb4-0f5e-4db1-a476-919f2cb3f091",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a03441db-c888-41ab-a12a-0ae37bec6918"
        },
        "item": {
          "id": "fdfd720b-dfea-46e0-bea9-4312655826f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6914fca7-bccf-4a0e-b48f-193b74a5b62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cf5da6-de66-4a14-b916-6ff1445a84e0",
        "cursor": {
          "ref": "919dfe3a-eb5d-41ae-8450-746b11a816a2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bfd2d2fc-7b01-44fc-acab-f8580075e786"
        },
        "item": {
          "id": "74cf5da6-de66-4a14-b916-6ff1445a84e0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e3b83736-1f39-42ed-b924-29f0894610a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feef521-b216-43cb-ba4d-b1591dc89b62",
        "cursor": {
          "ref": "5206b552-b694-4cd9-bd65-904649a0b0bd",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cc493fe-6285-4d6f-bc64-11e8597270b6"
        },
        "item": {
          "id": "1feef521-b216-43cb-ba4d-b1591dc89b62",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4c044023-cc45-4e0e-8b65-cbec5d982f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790378d0-35ba-4736-b6d9-998a433d92b4",
        "cursor": {
          "ref": "b2fe7f1f-b801-46bc-abdf-07921625c47a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4d7222e3-9c2a-4351-a642-b6bb44411f16"
        },
        "item": {
          "id": "790378d0-35ba-4736-b6d9-998a433d92b4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fef490d0-8080-4bd3-875f-f07bf457f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae72c378-8965-4bc2-8681-729b5ec63adf",
        "cursor": {
          "ref": "78291125-24b4-49e9-8b68-d9361037c740",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "28273d4c-f778-4a6f-9428-398ca1cd8ccf"
        },
        "item": {
          "id": "ae72c378-8965-4bc2-8681-729b5ec63adf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85514f58-11e1-4750-93eb-dfc21afc73e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0459c-7589-4f49-afb3-6b10cc885489",
        "cursor": {
          "ref": "9b9aa5bc-9793-4989-980a-354c85d9f80d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "220d8b2b-7f8c-485e-9d23-fea132ad0acf"
        },
        "item": {
          "id": "43c0459c-7589-4f49-afb3-6b10cc885489",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b675a90e-073a-48e6-8b61-e2292f4b54f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3773d0e2-ecf3-4510-8e1b-2b02349ee847",
        "cursor": {
          "ref": "f8846d74-c349-49c2-8f17-3463209fc5c6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9211dca0-8223-4085-9752-0cce215ea72e"
        },
        "item": {
          "id": "3773d0e2-ecf3-4510-8e1b-2b02349ee847",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c8ea3b6e-3763-4e17-bde1-8ec1f0780a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1936a74-cdd7-4839-9918-adb5e00f326b",
        "cursor": {
          "ref": "162c9e56-760d-405b-8945-4738bb10e020",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca87cd6b-50c1-43f7-be96-b3ab92de41ec"
        },
        "item": {
          "id": "d1936a74-cdd7-4839-9918-adb5e00f326b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f1d415d5-8178-45bc-a3d2-a8d912f7848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870a92c1-68e5-4a54-834a-df199c3b6dba",
        "cursor": {
          "ref": "ef44e66b-33fc-4862-8277-9d0a5647321c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "25a13a7c-67d0-4a98-a730-9644d3a5dcdd"
        },
        "item": {
          "id": "870a92c1-68e5-4a54-834a-df199c3b6dba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "afb75d3d-f160-45d7-9c1c-29136066d6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42530c40-f7a6-485c-a59b-01db5d697d4b",
        "cursor": {
          "ref": "33e88557-8f71-44fa-ab5d-85e294e20218",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5e948961-8050-4a5c-9c62-665f30214805"
        },
        "item": {
          "id": "42530c40-f7a6-485c-a59b-01db5d697d4b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b89dc1bc-95a7-4901-920f-037a02a07c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d74046-59bb-451a-b9ae-33192d7e1dea",
        "cursor": {
          "ref": "8825eff9-cf40-410a-ac2c-a7992cf814d3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b83f8b32-72d0-42b7-a278-5cc765af77cb"
        },
        "item": {
          "id": "00d74046-59bb-451a-b9ae-33192d7e1dea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "931dfe74-c91f-4185-b03c-ea1ee45cde13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f496c4-e2ad-4ebc-9995-5b330838ae62",
        "cursor": {
          "ref": "7cee689b-1032-4be9-90ff-03336adb017c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d4d948eb-d30d-4270-8d5e-e34aa9004dd3"
        },
        "item": {
          "id": "70f496c4-e2ad-4ebc-9995-5b330838ae62",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37a79d37-db7f-4d48-9b58-f5719d3bc347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3d8567-1423-4601-8f6d-8aeb55e44b71",
        "cursor": {
          "ref": "35368706-52d2-4d23-af6f-c6f9d1df6db3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "23506ab1-cdd7-46b5-bdb2-ce51eaa22d31"
        },
        "item": {
          "id": "7d3d8567-1423-4601-8f6d-8aeb55e44b71",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6423a48a-d790-4b71-bea2-597da0b43dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a3801b-f0b7-4098-821c-93a53e957fb5",
        "cursor": {
          "ref": "f94f68b0-fb13-4ada-a16d-3078704de586",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0fe1e892-ffdf-4de8-9201-b47ddf185196"
        },
        "item": {
          "id": "52a3801b-f0b7-4098-821c-93a53e957fb5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "90e6c200-6f07-4b38-8ff0-1efa9442558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9ed3cb-5ee7-4204-a680-80f33c32ab3a",
        "cursor": {
          "ref": "e5c30782-efb9-46e3-b75c-ae1cf6206a87",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a60bd0e5-3ef8-4a72-a16e-41f5b0228954"
        },
        "item": {
          "id": "3d9ed3cb-5ee7-4204-a680-80f33c32ab3a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "93b6e161-2c0d-4f03-930b-3ba2f46412e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca611b2-b313-4283-897b-9eda1e43863d",
        "cursor": {
          "ref": "e6a2438d-5c2d-4d03-b693-cc07641dc281",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca282f6c-ad91-4e28-8e96-ecb79173a255"
        },
        "item": {
          "id": "cca611b2-b313-4283-897b-9eda1e43863d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e33db877-c1ca-4462-9332-af09b22e321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b164dd4e-c05c-4b47-a876-c80bda6eda2a",
        "cursor": {
          "ref": "eb16dcdc-3d71-42be-a8d6-e67914d80a2c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c6b32bad-291b-4b59-9c1d-f0a16efa0e2a"
        },
        "item": {
          "id": "b164dd4e-c05c-4b47-a876-c80bda6eda2a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94d0d1e8-7105-409f-b38f-f7867d7a2c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbad3ccb-ec4f-420b-a4c2-4367b896fa31",
        "cursor": {
          "ref": "5b79f239-74c5-42e9-bc5f-f615e8b15a41",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cd45033e-d14d-489d-b614-7b740b39bbeb"
        },
        "item": {
          "id": "cbad3ccb-ec4f-420b-a4c2-4367b896fa31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e5186a9f-fc56-4bcd-8a5c-2d50aa29b1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888ed5fa-0d4a-49e3-b706-6966cbaefa52",
        "cursor": {
          "ref": "59f67ea3-57ed-4181-b385-9bebfc0e9f16",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b427da6f-4bcc-4774-a69a-b0567c84f794"
        },
        "item": {
          "id": "888ed5fa-0d4a-49e3-b706-6966cbaefa52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d455ccb0-5a2a-4953-b421-4ed3c180e6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f51a6c-d000-459e-a619-f5e3565d06d0",
        "cursor": {
          "ref": "d421d42d-f671-4f5e-9e12-d5522510d2a4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e295e174-30cc-491a-89a3-af0af0fa4f63"
        },
        "item": {
          "id": "72f51a6c-d000-459e-a619-f5e3565d06d0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "776e750d-6ae0-4370-a77c-e7e85ef346fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d349fe9-e521-4861-af5d-39c8490671e7",
        "cursor": {
          "ref": "e0c20875-5ee1-4d29-a493-910de252ff7b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9ce9a594-3eed-4ae3-8886-4b103e44869f"
        },
        "item": {
          "id": "3d349fe9-e521-4861-af5d-39c8490671e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6425c809-d0ec-44b5-ae89-0c3e744a34c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb68582b-5f3e-4589-b837-2cbc93ee2a83",
        "cursor": {
          "ref": "e616e726-3126-4e07-a581-38dbc9daeb47",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "83f260b8-be10-491d-8e5e-4b78126d8438"
        },
        "item": {
          "id": "cb68582b-5f3e-4589-b837-2cbc93ee2a83",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "99608b9b-b306-410a-8c12-066b69236073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b992e615-6b5b-4795-9433-02adf9047666",
        "cursor": {
          "ref": "4e3ba854-fb20-476b-a3fd-f46834e6a75e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6e8287e8-737f-484e-8e8e-0007666a4399"
        },
        "item": {
          "id": "b992e615-6b5b-4795-9433-02adf9047666",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f86cc459-db9f-4f24-816e-1294d80255a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65b4008-1b1d-4b66-b310-3ccd52e4fbb8",
        "cursor": {
          "ref": "9846844e-c423-484c-b472-5349113e9b39",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4da23e20-e3f6-4243-b3c4-c6a081250a96"
        },
        "item": {
          "id": "f65b4008-1b1d-4b66-b310-3ccd52e4fbb8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ffda9f67-3ecc-43c5-b6b3-cb61d4ae045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb66d7fd-f24b-40dc-b730-6955f3d9eb96",
        "cursor": {
          "ref": "8e5829f9-3be8-46ad-8bde-5a9edc425fe6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "338e4465-abb2-4c5b-900d-4cd46e147980"
        },
        "item": {
          "id": "bb66d7fd-f24b-40dc-b730-6955f3d9eb96",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c9623bbc-1dfe-4334-8009-801e4068d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba1c5e6-0e69-4e22-8b66-a97483dda922",
        "cursor": {
          "ref": "468a6412-6868-44a7-993a-eaf784e7ee22",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aea96899-b1ab-4065-bd87-f909e91dc4b1"
        },
        "item": {
          "id": "aba1c5e6-0e69-4e22-8b66-a97483dda922",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "70f9f25e-e28b-4570-8cb6-dc3af6b0bd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377daa95-a305-45ee-a3fb-52a194478527",
        "cursor": {
          "ref": "932f355a-46d4-49ea-8cd4-6d8b4a69d36e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0c443ba5-ac71-45b0-8448-7b9d9f6c3672"
        },
        "item": {
          "id": "377daa95-a305-45ee-a3fb-52a194478527",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1404ff16-d5d2-49d0-80ab-bde84ac7596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed1add2-3d10-4838-9321-9b5d1180f7c8",
        "cursor": {
          "ref": "20009f59-0e7a-43b8-803c-2c272bf69318",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "040124e5-3668-442e-8343-fa20c892e129"
        },
        "item": {
          "id": "aed1add2-3d10-4838-9321-9b5d1180f7c8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ad579f40-38d9-4e03-8535-0b3e2ee48e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea36ca-f078-4cd7-91f2-4c298f0f4c1c",
        "cursor": {
          "ref": "8b725558-4e8b-41e4-8b25-c23a904a5798",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14883190-a801-44f6-b097-273e37498578"
        },
        "item": {
          "id": "4dea36ca-f078-4cd7-91f2-4c298f0f4c1c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bc1cfb4-d8d9-4c28-8593-8dd92fb1d76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a908474-c0cf-498a-ab60-76ed5d3e952d",
        "cursor": {
          "ref": "7d2532f6-65e8-4eb3-a143-229ce6798dd1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "73cff5ba-1758-4988-8c22-e00cc42fb85b"
        },
        "item": {
          "id": "2a908474-c0cf-498a-ab60-76ed5d3e952d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38a84c31-333a-475f-8e09-32a62c4ea91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bbb144-ca8f-4317-b2a1-9ed3b33031b6",
        "cursor": {
          "ref": "b9305d20-01c0-4731-8e2c-cab297702b7e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9e7b63e5-8ddf-4923-8a4c-ef84508d592a"
        },
        "item": {
          "id": "c0bbb144-ca8f-4317-b2a1-9ed3b33031b6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e4e78047-84d5-488f-89ab-24b7c72fe94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ae3cb6-9983-49f6-b5c5-9f5ffb297235",
        "cursor": {
          "ref": "894b5865-a43e-4ecd-b97d-9b0c7612ea7d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36144b06-68b7-42a1-adda-8f125878e57f"
        },
        "item": {
          "id": "56ae3cb6-9983-49f6-b5c5-9f5ffb297235",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1a74fe39-a135-4765-9ced-3610a158a43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb72181-7e03-4f41-b6a2-b4fc34ab6da0",
        "cursor": {
          "ref": "f63e3934-73e2-4d97-ac7a-12eb8b8bea53",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "abe454a2-5db3-4275-8fce-5160c183a850"
        },
        "item": {
          "id": "dfb72181-7e03-4f41-b6a2-b4fc34ab6da0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "42717636-2096-41c8-85a8-3752a675d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb64d3-9750-4a90-8aab-b612bc6a375f",
        "cursor": {
          "ref": "02292be0-cb8b-401a-b9b5-3062847b2412",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cd44dc09-3ebe-4310-bcd4-ae3ba13913de"
        },
        "item": {
          "id": "99eb64d3-9750-4a90-8aab-b612bc6a375f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "99fbcc0c-212a-4f9f-bc45-39e1f0e879b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b7185-0e26-411a-8950-40efed7874c4",
        "cursor": {
          "ref": "e0252142-c03a-4ff1-b301-525e7ec9798a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5da0a621-906e-4148-90fb-4bccb0f3e071"
        },
        "item": {
          "id": "438b7185-0e26-411a-8950-40efed7874c4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "212658c9-859d-4c5d-91b7-0183f9b47b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ea877-c50b-4afa-91c1-84d244c9cc28",
        "cursor": {
          "ref": "e84bb8d2-dea9-4ec7-a142-aa54217138cc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "60fdacf3-55b9-4acd-8110-ad8375efcb58"
        },
        "item": {
          "id": "fa0ea877-c50b-4afa-91c1-84d244c9cc28",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fa3cdb41-3e1a-4b6c-86b4-d456ac84af6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ba3cbb-f103-4757-bffd-f0b52b2d23a2",
        "cursor": {
          "ref": "8c99c4ad-35eb-47db-9be2-f92f8af9dff8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "38ef844a-18ac-4a32-ad6d-a79fe6fe60d1"
        },
        "item": {
          "id": "96ba3cbb-f103-4757-bffd-f0b52b2d23a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ec7d963-ea03-4f82-99c0-c55c46e78546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c410fa0-4e9c-410c-8197-790f26a8ab5e",
        "cursor": {
          "ref": "b82df2fb-62f9-448d-b071-f711b29de191",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "32e71553-e93f-400c-9446-f0555d1fab62"
        },
        "item": {
          "id": "8c410fa0-4e9c-410c-8197-790f26a8ab5e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c8fafccf-5f18-475d-aaf8-e3e1e7b490f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373fd7a5-6097-4f2d-8923-5b2058f2548f",
        "cursor": {
          "ref": "29fe22d3-4856-4a4e-a7b4-f68757c475fc",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a052d01-8988-41be-8ab7-f1896e6bca2a"
        },
        "item": {
          "id": "373fd7a5-6097-4f2d-8923-5b2058f2548f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc8d2428-6a08-46e7-86f5-fa8218d5401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7936829f-0838-4729-add7-5374a9890675",
        "cursor": {
          "ref": "a9e21a90-4ae5-4bec-a417-3e4bfa240471",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "76b2d936-1746-4fa4-9c9d-b557c1ddd8ba"
        },
        "item": {
          "id": "7936829f-0838-4729-add7-5374a9890675",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4bce9f3f-dafe-453a-a645-8e29f19f4a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d198842-acfd-4841-bd33-d4484702f4e7",
        "cursor": {
          "ref": "a3a0776f-f94b-44e4-abb1-520e110eaa63",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1c7036b6-68c7-4d50-8814-4b5c749895c7"
        },
        "item": {
          "id": "5d198842-acfd-4841-bd33-d4484702f4e7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d690d95a-1791-49b7-bc39-4e4610c5d3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f91e5d4-fae3-4d07-a7ff-bb368cfed373",
        "cursor": {
          "ref": "c63407e8-d553-4a03-a6fc-08d4c6b83475",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bcd1e812-3ce6-45dc-97c8-896fdae9b730"
        },
        "item": {
          "id": "8f91e5d4-fae3-4d07-a7ff-bb368cfed373",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "45ed847f-8dc8-49b3-b5ca-079f4daa7f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f98fa-3df9-450e-9e6e-d858f303ee1b",
        "cursor": {
          "ref": "0ace37fe-7d19-4ad1-a169-b78bfd269e1d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4112a8d6-9f08-482e-a5ec-51ffcec0202c"
        },
        "item": {
          "id": "cc2f98fa-3df9-450e-9e6e-d858f303ee1b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4551323a-82cb-4271-ad92-2338946aa6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f9bb70-9db7-4cf5-9e47-c7dc3e386feb",
        "cursor": {
          "ref": "8a02ebf0-bd6b-4c19-a864-c3bf66ceb833",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f3877ebb-604d-43da-9b5f-1a8bf95795a2"
        },
        "item": {
          "id": "78f9bb70-9db7-4cf5-9e47-c7dc3e386feb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7a3f947a-bdaf-4c16-926a-17dfb5cf104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d94672-294d-478f-a234-3fb82f4bb5d1",
        "cursor": {
          "ref": "3fb2fad2-8f4c-4636-a7b9-0dbc81333f4f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7d5060e-2060-419f-ace5-809878e385cb"
        },
        "item": {
          "id": "12d94672-294d-478f-a234-3fb82f4bb5d1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f92e5f93-8984-4f42-aa78-1b1c1c87a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bffce54-3030-4ada-b54f-2e508d87c9b2",
        "cursor": {
          "ref": "4843d1eb-9f4b-49b4-ae77-aea3dec10e1b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0ed7e8c1-8171-4c2a-aa5b-dd46bcd0d02d"
        },
        "item": {
          "id": "5bffce54-3030-4ada-b54f-2e508d87c9b2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3fecdef3-35ef-4418-a0a7-bd31163e0333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a23f12a-11b1-4f8f-bf94-449b57957d49",
        "cursor": {
          "ref": "b81af7b7-ce66-46a4-bd89-3becfd219735",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "14dde413-7c41-4154-bc97-a66f55869445"
        },
        "item": {
          "id": "3a23f12a-11b1-4f8f-bf94-449b57957d49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0391d3ff-9685-4966-a3b2-b4f3389bb9f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110392da-514b-46aa-bbc3-a0d18755d884",
        "cursor": {
          "ref": "39b80ea1-b7dc-4e92-8e9f-b07043c941c3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "adee7262-05fa-4fda-a943-7a9270b321ed"
        },
        "item": {
          "id": "110392da-514b-46aa-bbc3-a0d18755d884",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "167a25a4-dbb3-4b2b-a911-36a9e44e4f01",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7479e478-4f61-4050-a4c8-914427c749d2",
        "cursor": {
          "ref": "65891770-3bec-46cd-95d1-612dc969b3ea",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "06f93cf9-6ac8-4265-8c4c-436d2edb1ea0"
        },
        "item": {
          "id": "7479e478-4f61-4050-a4c8-914427c749d2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "75b2e3b6-a03f-4568-8217-a5ffafe1e317",
          "status": "OK",
          "code": 200,
          "responseTime": 2599,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a7832-3aa7-4091-b626-ecfb89b796c8",
        "cursor": {
          "ref": "9d96dfd8-9875-4387-8127-8303043d3372",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c56bb8a3-69f6-4f6b-a051-5a715c3c4bd1"
        },
        "item": {
          "id": "ec5a7832-3aa7-4091-b626-ecfb89b796c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "41dde33a-18a6-40d3-baa7-36206deaa2bf",
          "status": "OK",
          "code": 200,
          "responseTime": 2394,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f657cd-7431-4ed9-929f-1461e0834989",
        "cursor": {
          "ref": "243bf30e-8f12-45c9-b3e4-0d88f4abba85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e53a8fc9-1aa9-42ed-bc75-91b13c8e4aac"
        },
        "item": {
          "id": "c2f657cd-7431-4ed9-929f-1461e0834989",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60600fb2-5cb7-4544-8bab-6e4b4b34ed71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f657cd-7431-4ed9-929f-1461e0834989",
        "cursor": {
          "ref": "243bf30e-8f12-45c9-b3e4-0d88f4abba85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e53a8fc9-1aa9-42ed-bc75-91b13c8e4aac"
        },
        "item": {
          "id": "c2f657cd-7431-4ed9-929f-1461e0834989",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "60600fb2-5cb7-4544-8bab-6e4b4b34ed71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a0ce2-676f-4565-9af8-82ee3ba03cc4",
        "cursor": {
          "ref": "b887127f-2ce9-47f9-bde1-d4e7a8684134",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bccd0f65-c5d1-4a59-96d1-63b2cb8d66e8"
        },
        "item": {
          "id": "3f9a0ce2-676f-4565-9af8-82ee3ba03cc4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f128a338-3241-4631-87d0-effe2f0b49d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99351ae3-6696-440d-8ee0-a9587c844fad",
        "cursor": {
          "ref": "1d41142f-b80b-4fea-8611-76995bf6209c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c68e1c92-5878-4a36-9489-f8075f9b1066"
        },
        "item": {
          "id": "99351ae3-6696-440d-8ee0-a9587c844fad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d20b8a2-2e98-441b-8a67-d25d6c4b2a45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}